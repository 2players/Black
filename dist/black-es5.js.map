{"version":3,"sources":["MathEx.js","Helpers.js","Vector.js","Matrix.js","Rectangle.js","Circle.js","Line.js","Polygon.js","Curve.js","Assert.js","MessageDispatcher.js","Time.js","System.js","Viewport.js","Component.js","GameObject.js","Texture.js","AtlasTexture.js","Asset.js","TextureAsset.js","JSONAsset.js","AtlasTextureAsset.js","AssetManager.js","BlendMode.js","NullDriver.js","CanvasDriver.js","DOMDriver.js","DisplayObject.js","TextInfo.js","Sprite.js","TextField.js","Device.js","Scatter.js","FloatScatter.js","VectorScatter.js","CurveScatter.js","Action.js","Acceleration.js","AlphaOverLife.js","ScaleOverLife.js","RotationOverLife.js","TextureOverLife.js","Initializer.js","Life.js","Mass.js","Scale.js","Velocity.js","Position.js","Rotation.js","RandomTexture.js","EmitterState.js","Particle.js","Emitter.js","Key.js","KeyInfo.js","Input.js","InputComponent.js","FPSComponent.js","MRComponent.js","Ease.js","Interpolation.js","Tween.js","Animation.js","AnimationController.js","Black.js"],"names":["Math","randomBetween","a","b","floor","random","clamp","value","min","max","lerp","t","lerpp","PI_Q","PI","PI2","DEG2RAD","RAD2DEG","Vector","x","y","vector","sqrt","scalar","sum","lengthSqr","epsilon","Number","EPSILON","abs","rotation","subtract","setRotation","add","cos","toFixed","sin","set","acos","dot","length","angle","vectorMin","vectorMax","outVector","undefined","__cache","Matrix","c","d","tx","ty","_matrix","Float32Array","m","dx","dy","a0","a1","a2","a3","a4","a5","theta","scale","sx","sy","bv","b0","b1","b2","b3","b4","b5","a11","c11","tx11","rect","outRect","Rectangle","minX","MAX_VALUE","maxX","minY","maxY","xx","yy","tmpVector","points","width","height","i","transformXY","aa","ab","ac","ad","atx","aty","det","skewX","atan2","skewY","delta","r_rotation","r_skewX","r_skewY","r_scaleX","r_scaleY","r_x","r_y","v","matrix","copyTo","w","h","right","bottom","toUnion","clone","x0","x1","y0","y1","volume","cacheRight","cacheBottom","left","top","Line","topLeft","topRight","bottomRight","bottomLeft","Circle","r","circle","contains","distance","start","end","line","equals","normalize","multyplier","multiplyScalar","start1","end1","start2","end2","denominator","numerator1","numerator2","directionX","directionY","nearest","nearestDistance","dt","pow","x2","y2","__isInBoundsXY","Polygon","vertices","lines","bounds","center","refresh","polygon","len","push","polygonVertices","thisVertices","intersectionLine","intersects","thisLines","thisLen","polygonLines","polygonLen","j","intersectsCircle","rectangle","rectangleLines","rectangleLen","containsXY","point","perimeter","path","path2","split","Curve","mPoints","mLookup","mBaked","mStep","mEachT","__initPoints","__refreshEachT","__refreshCache","res","concat","slice","lookup","getFullLength","pointsLen","getLength","step","eachT","eachLength","s","ceil","p","copyFrom","minT","maxT","bezier","mPointsLen","label","startX","startY","cpStartX","cpStartY","cpEndX","cpEndY","endX","endY","u","tt","uu","uuu","ttt","p0","p1","p2","p3","Assert","is","message","logOnFail","console","error","throwOnFail","Error","MessageDispatcher","mListeners","name","callback","context","filterIx","indexOf","pureName","substring","pathMask","mGlobalHandlers","hasOwnProperty","dispatchers","splice","__parseMessage","isGameObject","GameObject","mDirection","params","__invoke","__invokeGlobal","mOrigin","root","mSibblings","__sendGlobal","__sendBubbles","sender","toTop","list","current","parent","dispatcher","origin","numChildren","child","getChildAt","mName","mPathMask","inPath","__checkPath","mTarget","call","RegExp","join","test","info","result","Message","mSender","mComponentMask","charAt","ixAt","ixHash","substr","mCanceled","Time","mTime","mDeltaTime","mScale","System","component","Viewport","containerElement","mContainerElement","size","getBoundingClientRect","mSize","window","addEventListener","__onResize","post","Component","mId","ID","gameObject","mAdded","removeComponent","mComponents","mChildren","mX","mY","mScaleX","mScaleY","mPivotX","mPivotY","mRotation","mBounds","mLocalTransform","mWorldTransform","mDirty","DirtyFlag","DIRTY","mParent","mTag","mIndex","gameObjectsAndOrComponents","gooc","addChild","addComponent","addChildAt","index","setChildIndex","removeFromParent","__setParent","Black","instance","onChildrenAdded","setTransformDirty","ix","dispose","removeChild","removeChildAt","hadRoot","onChildrenRemoved","onComponentAdded","onRemoved","onComponentRemoved","typeName","onFixedUpdate","k","__fixedUpdate","onUpdate","__update","onPostUpdate","__postUpdate","video","time","parentAlpha","parentBlendMode","onRender","__render","space","includeChildren","worldTransformation","prepend","invert","onGetLocalBounds","transformRect","expand","getBounds","scaleX","scaleY","anchorX","anchorY","zero","localPoint","transformVector","globalPoint","worldTransformationInversed","ax","ay","gen","ctx","iter","apply","it","done","next","seconds","setTimeout","cb","bind","on","flag","forEach","setDirty","LOCAL","WORLD","append","localTransformation","depth","currentWidth","currentHeight","old","onTagUpdated","inv","obj","intersectsWith","inside","tag","mTagCache","type","f","node","action","find","Texture","nativeTexture","region","untrimmedRect","mTexture","mRegion","mIsSubtexture","__ID","naturalWidth","naturalHeight","mTrimmed","mUntrimmedRect","mIsLoaded","string","imgElement","Image","src","canvas","quality","toDataURL","getTextureFromCanvas","MISSING_IMAGE_CACHE","AtlasTexture","texture","jsonObject","native","mMeta","mSubTextures","__parseJson","o","NEGATIVE_HALF_PI","key","frames","data","warn","nameMask","outTextures","out","names","re","sort","__naturalComparer","NUMBER_GROUPS","String","bb","parseFloat","toLowerCase","Asset","url","mUrl","mData","mMimeType","mResponseType","mExtension","getExtension","mRequest","XMLHttpRequest","overrideMimeType","responseType","open","onreadystatechange","readyState","status","responseText","onLoaded","send","TextureAsset","mImageElement","onload","JSONAsset","mimeType","JSON","parse","AtlasTextureAsset","imageUrl","dataUrl","dataAsset","onJsonLoaded","load","AssetManager","mDefaultPath","mTotalLoaded","mIsAllLoaded","mLoadingProgress","mQueue","mTextures","mAtlases","mJsons","item","COMPLETE","onAssetLoaded","msg","constructor","PROGRESS","getTexture","default","BlendMode","AUTO","NORMAL","ADD","MULTIPLY","SCREEN","OVERLAY","DARKEN","LIGHTEN","COLOR_DODGE","COLOR_BURN","HARD_LIGHT","SOFT_LIGHT","DIFFERENCE","EXCLUSION","HUE","SATURATE","COLOR","LUMINOSITY","NullDriver","mGlobalBlendMode","mClientWidth","mClientHeight","mTransform","mGlobalAlpha","mMeasureElement","document","createElement","style","position","appendChild","viewport","clientWidth","clientHeight","text","textWidth","textHeight","color","parsedColor","toString","el","innerHTML","whiteSpace","fontSize","fontFamily","fontStyle","fontWeight","weight","offsetWidth","strokeThickness","offsetHeight","CanvasDriver","mCtx","__createCanvas","cvs","id","getContext","setTransform","ox","oy","drawImage","beginPath","clip","font","fillStyle","hexColorToString","align","textBaseline","fillText","lineWidth","strokeStyle","strokeColor","strokeText","closePath","clearRect","clear","save","restore","globalAlpha","blendMode","globalCompositeOperation","DOMDriver","mCache","mCounter","mPixelated","mCurrentObject","__initCSS","imgRendering","sSprite","getElementsByTagName","sSpritePixelated","sText","sViewport","className","parentNode","fromCanvasAsImage","oldTransform","__popElement","__updateElementCommon","__updateImageElement","__updateTextElement","transform","webkitTransform","opacity","backgroundImage","isSubTexture","vBackgroundPosition","backgroundPosition","textAlign","webkitTextStrokeColor","webkitTextStrokeWidth","DisplayObject","mAlpha","mVisible","TextInfo","FontStyle","FontWeight","FontAlign","LEFT","ITALIC","BOLD","SUPERBOLD","RIGHT","CENTER","Sprite","tmpBlendMode","globalBlendMode","getComponent","InputComponent","touchable","TextField","mText","mNeedInvalidate","mCacheBounds","mFieldWidth","mFieldHeight","mTextWidth","mTextHeight","mStyle","mAutoSize","__validate","drawText","strokeCorrection","driver","vSize","measureText","Device","mInstance","mPixelRatio","getDevicePixelRatio","screen","systemXDPI","logicalXDPI","devicePixelRatio","userAgent","navigator","vendor","opera","hasEvent","maxTouchPoints","Scatter","FloatScatter","ease","mMin","mMax","VectorScatter","FloatCurveScatter","mCurve","baked","interpolate","VectorCurveScatter","Action","emmiter","particle","Acceleration","vectorScatter","scatter","getValue","AlphaOverLife","floatScatter","alpha","getValueAt","energy","ScaleOverLife","RotationOverLife","TextureOverLife","textureIndex","Initializer","Life","life","Mass","mass","Scale","Velocity","vx","vy","Position","Rotation","RandomTexture","EmitterState","PENDING","EMITTING","FINISHED","Particle","reset","age","Emitter","mParticles","mRecycled","mInitializers","mActions","mSpace","mIsLocal","mMaxParticles","mEmitCount","mEmitNumRepeats","mEmitNumRepeatsLeft","mEmitDuration","mEmitDurationLeft","mEmitInterval","mEmitIntervalLeft","mEmitDelay","mEmitDelayLeft","mNextUpdateAt","mState","__tmpLocal","__tmpWorld","uptime","firstEmit","initializer","localTransform","worldTransform","identity","plength","tw","th","updateNextTick","__create","alength","preUpdate","update","postUpdate","amount","minv","pop","initer","initialize","transformDirectionXY","Key","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","DIGIT_0","DIGIT_1","DIGIT_2","DIGIT_3","DIGIT_4","DIGIT_5","DIGIT_6","DIGIT_7","DIGIT_8","DIGIT_9","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_MULTIPLY","NUMPAD_ADD","NUMPAD_SUBTRACT","NUMPAD_DECIMAL","NUMPAD_DIVIDE","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","PAUSE_BREAK","CAPS_LOCK","ESCAPE","PAGE_UP","PAGE_DOWN","END","HOME","INSERT","DELETE","LEFT_WINDOW","RIGHT_WINDOW","CONTEXT_MENU","NUM_LOCK","SCROLL_LOCK","SEMI_COLON","EQUAL_SIGN","COMMA","DASH","PERIOD","FORWARD_SLASH","BACKQUOTE","BRAKET_LEFT","BACK_SLASH","BRAKET_RIGHT","SINGLE_QUOTE","KeyInfo","nativeEvent","keyCode","code","char","shiftKey","altKey","ctrlKey","Input","mPointerPosition","mDom","mEventList","mKeyEventList","__initListeners","mMouseQueue","mKeyQueue","mPressedKeys","mIsPointerDown","mInputListeners","PointerEvent","mPointerEventList","isTouch","isMobile","mTouchEventList","mMouseEventList","__onPointerEvent","e","__onKeyEvent","preventDefault","__getTouchPos","__getPointerPos","evt","clientX","clientY","touch","changedTouches","pageX","pageY","array","__sortListeners","cs","findComponents","__addListener","pointerPos","fnName","mInputEventsLookup","currentComponent","log","POINTER_DOWN","POINTER_UP","pIx","mKeyEventsLookup","POINTER_MOVE","POINTER_CANCEL","POINTER_ENTER","POINTER_LEAVE","FPSComponent","txtFPS","FPS","MRComponent","mWidth","mHeight","mInvScale","mAspect","setSize","updateLayout","Ease","bounceOut","bounceIn","Interpolation","fn","n","bn","fc","__factorial","v0","v1","t2","t3","Tween","values","duration","properties","mValues","mDuration","mProperties","mIsPlaying","mIsPaused","mStartTime","mPausedTime","mValuesStart","mElapsed","mInterpolation","linear","mDelay","mRepeatTimes","mInitiated","mStarted","mReverse","mRemoveOnComplete","mPlayOnAdded","mEase","smootherStep","__start","__resume","stop","remove","times","Infinity","tween","play","Array","isArray","Animation","controller","fps","loop","mController","mFrames","mCurrentFrame","mNextFrameAt","mFPS","mFrameDuration","mLoop","mPaused","mStopped","mCompleted","diff","AnimationController","mAnimations","mCurrentAnim","textures","anim","sprite","pause","newTexture","containerElementId","rootClass","videoDriverName","css","mContainerElementId","getElementById","mVideoName","mStageWidth","mStageHeight","mSimulationTimestep","mUptime","mFrameAccum","mLastFrameTimeMs","mCurrentTime","mLastFpsUpdate","mFramesThisSecond","mNumUpdateSteps","mMinFrameDelay","mSystems","mIsRunning","mIsStarted","mIsPanic","mLastFrameUpdateTime","mLastFrameRenderTime","mRAFHandle","mViewport","mVideo","mUnpausing","mPauseOnHide","mPauseOnBlur","mRootClass","mRoot","addSystem","onblur","__onVisbilityChange","event","onfocus","onpagehide","onpageshow","hidden","system","__bootViewport","__bootSystems","__bootVideo","__bootStage","onAdded","self","requestAnimationFrame","timestamp","cancelAnimationFrame","__internalFixedUpdate","__internalUpdate","__internalPostUpdate","beginFrame","endFrame","oldTag","newTag","arr","timestep"],"mappings":"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","file":"black-es5.js","sourcesContent":["/**\r\n * randomBetween\r\n *\r\n * @param {number} a\r\n * @param {number} b\r\n *\r\n * @return {number}\r\n */\r\nMath.randomBetween = function (a, b) {\r\n  return Math.floor(Math.random() * (b - a + 1) + a);\r\n};\r\n\r\n\r\n/**\r\n * clamp\r\n *\r\n * @param {number} value\r\n * @param {number} min\r\n * @param {number} max\r\n *\r\n * @return {number}\r\n */\r\nMath.clamp = function (value, min, max) {\r\n  return (value < min) ? min : (value > max) ? max : value;\r\n};\r\n\r\n\r\n/**\r\n * lerp\r\n *\r\n * @param {number} a\r\n * @param {number} b\r\n * @param {number} t\r\n *\r\n * @return {number}\r\n */\r\nMath.lerp = function (a, b, t) {\r\n  return a + t * (b - a);\r\n};\r\n\r\n\r\n/**\r\n * lerpp\r\n *\r\n * @param {number} a\r\n * @param {number} b\r\n * @param {number} t\r\n *\r\n * @return {number}\r\n */\r\nMath.lerpp = function (a, b, t) {\r\n  return (1 - t) * a + t * b;\r\n};\r\n\r\n/** @const\r\n *  @type {number}\r\n */\r\nMath.PI_Q = Math.PI / 4;\r\n\r\n/** @const\r\n *  @type {number}\r\n */\r\nMath.PI2 = Math.PI * 2;\r\n\r\n/** @const\r\n *  @type {number}\r\n */\r\nMath.DEG2RAD = 0.01745329251994329576923690768489;\r\n\r\n/** @const\r\n *  @type {number}\r\n */\r\nMath.RAD2DEG = 57.295779513082320876798154814105;\r\n// \r\n//\r\n//\r\n// /**\r\n//  * fsin - Fast sin\r\n//  *\r\n//  * @param {number} x\r\n//  *\r\n//  * @return {number}\r\n//  */\r\n// Math.fsin = function(x) {\r\n//   if (x === 0)\r\n//     return 0;\r\n//\r\n//   // modulo to range of -PI..PI\r\n//   const width = 3.14159265 - -3.14159265;\r\n//   const offsetValue = x - -3.14159265;\r\n//   x = (offsetValue - (Math.floor(offsetValue / width) * width)) + -3.14159265;\r\n//\r\n//   return x < 0 ? 1.27323954 * x + 0.405284735 * x * x : 1.27323954 * x - 0.405284735 * x * x;\r\n// }\r\n//\r\n//\r\n// /**\r\n//  * fcos - Fast cos\r\n//  *\r\n//  * @param {number} x\r\n//  *\r\n//  * @return {number}\r\n//  */\r\n// Math.fcos = function(x) {\r\n//   x += 1.57079632;\r\n//\r\n//   // modulo to range of -PI..PI\r\n//   const width = 3.14159265 - -3.14159265;\r\n//   const offsetValue = x - -3.14159265;\r\n//   x = (offsetValue - (Math.floor(offsetValue / width) * width)) + -3.14159265;\r\n//\r\n//   return x < 0 ? 1.27323954 * x + 0.405284735 * x * x : 1.27323954 * x - 0.405284735 * x * x;\r\n// }\r\n","// function assert(title, condition) {\r\n//   if (condition)\r\n//     console.log('%s %c[  OK  ]', title + ' ' + '.'.repeat(88 - title.length), 'color:green;')\r\n//   else\r\n//     console.log('%s %c[FAILED]', title + ' ' + '.'.repeat(88 - title.length), 'color:red;')\r\n// }\r\n//\r\n// function perfTest(testName, fn, ctx, count = 1000) {\r\n//   let startTime = new Date().getTime();\r\n//\r\n//   for (var i = 0; i < count; i++)\r\n//     fn.apply(ctx);\r\n//     //fn();\r\n//\r\n//   return (new Date().getTime() - startTime);\r\n// }\r\n//\r\n// function perfCompare(testsName, fn1, fn2, ctx, count = 1000) {\r\n//   let t1 = perfTest(testsName, fn1, ctx, count);\r\n//   let t2 = perfTest(testsName, fn2, ctx, count);\r\n//\r\n//   let c1 = 'color:green;'\r\n//   let c2 = 'color:red;'\r\n//\r\n//   if (t1 > t2) {\r\n//     c1 = c2;\r\n//     c2 = 'color:green;'\r\n//   }\r\n//\r\n//   console.log('%s:%c %dms %cvs%c %dms', testsName, c1, t1, 'color:black;', c2, t2);\r\n// }\r\n//\r\n// function assertf(title, func) {\r\n//   const r = func();\r\n//\r\n//   const statuses = ['[  OK  ]', '[FAILED]'];\r\n//   const colors = ['color:green;', 'color:red;'];\r\n//\r\n//   console.log('%s %c%s', title + ' ' + '.'.repeat(88 - title.length), r ? colors[0] : colors[1], r ? statuses[0] : statuses[1]);\r\n// }\r\n","\r\nclass Vector {\r\n  /**\r\n   * @param  {number=} x = 0 description\r\n   * @param  {number=} y = 0 description\r\n   */\r\n  constructor(x = 0, y = 0) {\r\n    /** @type {number} */\r\n    this.x = x;\r\n\r\n    /** @type {number} */\r\n    this.y = y;\r\n  }\r\n\r\n  /**\r\n   * set - Description\r\n   *\r\n   * @param {number=} [x=0] Description\r\n   * @param {number=} [y=0] Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  set(x = 0, y = 0) {\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * add - Description\r\n   *\r\n   * @param {Vector} vector Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  add(vector) {\r\n    this.x += vector.x;\r\n    this.y += vector.y;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * subtract - Description\r\n   *\r\n   * @param {Vector} vector Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  subtract(vector) {\r\n    this.x -= vector.x;\r\n    this.y -= vector.y;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * distance - Description\r\n   *\r\n   * @param {Vector} vector Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  distance(vector) {\r\n    let x = this.x - vector.x;\r\n    let y = this.y - vector.y;\r\n\r\n    return Math.sqrt((x * x) + (y * y));\r\n  }\r\n\r\n  /**\r\n   * multiply - Description\r\n   *\r\n   * @param {Vector} vector Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  multiply(vector) {\r\n    this.x *= vector.x;\r\n    this.y *= vector.y;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * multiplyScalar - Description\r\n   *\r\n   * @param {number} scalar Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  multiplyScalar(scalar) {\r\n    this.x *= scalar;\r\n    this.y *= scalar;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * dot - Description\r\n   *\r\n   * @param {Vector} vector Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  dot(vector) {\r\n    return this.x * vector.x + this.y * vector.y;\r\n  }\r\n\r\n  /**\r\n   * length - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  length() {\r\n    let x = this.x;\r\n    let y = this.y;\r\n\r\n    return Math.sqrt(x * x + y * y);\r\n  }\r\n\r\n  /**\r\n   * lengthSqr - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  lengthSqr() {\r\n    let x = this.x;\r\n    let y = this.y;\r\n\r\n    return x * x + y * y;\r\n  }\r\n\r\n  normalize() {\r\n    let sum = this.lengthSqr();\r\n\r\n    if (sum > 0) {\r\n      sum = Math.sqrt(sum);\r\n      this.x /= sum;\r\n      this.y /= sum;\r\n    } else {\r\n      this.x = 0;\r\n      this.y = 0;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * clamp - Description\r\n   *\r\n   * @param {number} min Description\r\n   * @param {number} max Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  clamp(min, max) {\r\n    this.x = Math.clamp(this.x, min, max);\r\n    this.y = Math.clamp(this.y, min, max);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * lerp - Description\r\n   *\r\n   * @param {Vector} vector Description\r\n   * @param {number} t      Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  lerp(vector, t) {\r\n    this.x = Math.lerp(this.x, vector.x, t);\r\n    this.y = Math.lerp(this.y, vector.y, t);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * copyTo - Description\r\n   *\r\n   * @param {Vector} vector Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  copyTo(vector) {\r\n    vector.x = this.x;\r\n    vector.y = this.y;\r\n\r\n    return vector;\r\n  }\r\n\r\n  /**\r\n   * copyFrom - Description\r\n   *\r\n   * @param {Vector} vector Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  copyFrom(vector) {\r\n    this.x = vector.x;\r\n    this.y = vector.y;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * clone - Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  clone() {\r\n    return new Vector(this.x, this.y);\r\n  }\r\n\r\n  /**\r\n   * equals - Description\r\n   *\r\n   * @param {Vector} vector Description\r\n   * @param {number=} epsilon Description\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  equals(vector, epsilon = Number.EPSILON) {\r\n    return vector !== null && (Math.abs(vector.x - this.x) < epsilon) && (Math.abs(vector.y - this.y) < epsilon);\r\n  }\r\n\r\n  /**\r\n   * isEmpty - Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  isEmpty() {\r\n    return this.x === 0 && this.y === 0;\r\n  }\r\n\r\n  /**\r\n   * setRotationFrom - Rotates this vector around specified point.\r\n   *\r\n   * @param {Vector} vector Center vector.\r\n   * @param {number} rotation Angle in radians.\r\n   *\r\n   * @return {Vector} This rotated vector.\r\n   */\r\n  setRotationFrom(vector, rotation) {\r\n    return this\r\n      .subtract(vector)\r\n      .setRotation(rotation)\r\n      .add(vector);\r\n  }\r\n\r\n  /**\r\n   * setRotation - Rotates this vector around zero vector\r\n   *\r\n   * @param {number} rotation Angle in radians\r\n   *\r\n   * @return {Vector} This rotated vector.\r\n   */\r\n  setRotation(rotation) {\r\n    let cos = Math.cos(rotation).toFixed(15);\r\n    let sin = Math.sin(rotation).toFixed(15);\r\n\r\n    return this.set(this.x * cos - this.y * sin, this.x * sin + this.y * cos);\r\n  }\r\n\r\n  /**\r\n   * theta - Calculates angle in radians within this and specified vectors.\r\n   *\r\n   * @return {number} Angle in radians.\r\n   */\r\n  theta(vector) {\r\n    return Math.acos(this.dot(vector) / this.length() / vector.length());\r\n  }\r\n\r\n  /**\r\n   * perp - Rotates this vector to normal.\r\n   *\r\n   * @return {Vector} This vector.\r\n   */\r\n  perp() {\r\n    return this.set(this.y, -this.x);\r\n  }\r\n\r\n  /**\r\n   * fromAngle - Description\r\n   *\r\n   * @param {number=} [angle=0] Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  static fromAngle(angle = 0) {\r\n    return new Vector(Math.cos(angle), Math.sin(angle));\r\n  }\r\n\r\n  /**\r\n   * randomRange\r\n   *\r\n   * @param {Vector} vectorMin\r\n   * @param {Vector} vectorMax\r\n   * @param {Vector=} outVector\r\n   *\r\n   * @return {Vector}\r\n   */\r\n  static randomRange(vectorMin, vectorMax, outVector = undefined) {\r\n    outVector = outVector || new Vector();\r\n\r\n    outVector.x = Math.random() * (vectorMax.x - vectorMin.x) + vectorMin.x;\r\n    outVector.y = Math.random() * (vectorMax.y - vectorMin.y) + vectorMin.y;\r\n\r\n    return outVector;\r\n  }\r\n\r\n}\r\n\r\n/** @type {Vector}\r\n * @nocollapse\r\n */\r\nVector.__cache = new Vector();\r\n","\r\nclass Matrix {\r\n  /**\r\n   * @param  {number} a = 1  description\r\n   * @param  {number} b = 0  description\r\n   * @param  {number} c = 0  description\r\n   * @param  {number} d = 1  description\r\n   * @param  {number} tx = 0 description\r\n   * @param  {number} ty = 0 description\r\n   * @return {number}        description\r\n   */\r\n  constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n    /** @type {Float32Array} */\r\n    this._matrix = new Float32Array(6);\r\n\r\n    this.set(a, b, c, d, tx, ty);\r\n  }\r\n\r\n  /**\r\n\r\n   * @param  {number} a  description\r\n   * @param  {number} b  description\r\n   * @param  {number} c  description\r\n   * @param  {number} d  description\r\n   * @param  {number} tx description\r\n   * @param  {number} ty description\r\n   * @return {Matrix}    description\r\n   */\r\n  set(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n    let m = this._matrix;\r\n\r\n    m[0] = a;\r\n    m[1] = b;\r\n    m[2] = c;\r\n    m[3] = d;\r\n    m[4] = tx;\r\n    m[5] = ty;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * translate - Description\r\n   *\r\n   * @param {number} dx Description\r\n   * @param {number} dy Description\r\n   *\r\n   * @return {Matrix} Description\r\n   */\r\n  translate(dx, dy) {\r\n    let a = this._matrix;\r\n\r\n    let /** @type {number} */ a0 = a[0]; // a\r\n    let /** @type {number} */ a1 = a[1]; // b\r\n    let /** @type {number} */ a2 = a[2]; // c\r\n    let /** @type {number} */ a3 = a[3]; // d\r\n    let /** @type {number} */ a4 = a[4]; // tx\r\n    let /** @type {number} */ a5 = a[5]; // ty\r\n\r\n    this._matrix[4] += dx;\r\n    this._matrix[5] += dy;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * setTranslation - Description\r\n   *\r\n   * @param {number} x Description\r\n   * @param {number} y Description\r\n   *\r\n   * @return {Matrix} Description\r\n   */\r\n  setTranslation(x, y) {\r\n    this._matrix[4] = x;\r\n    this._matrix[5] = y;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param  {number} theta     description\r\n   * @param  {number} scale = 1 description\r\n   */\r\n  setRotation(theta, scale = 1) {\r\n    let m = this._matrix;\r\n    m[0] = Math.cos(theta) * scale;\r\n    m[2] = Math.sin(theta) * scale;\r\n    m[1] = -m[2];\r\n    m[3] = m[0];\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * rotate - angle\r\n   *\r\n   * @param  {number} angle description\r\n   * @return {Matrix}       description\r\n   */\r\n  rotate(angle) {\r\n    let a = this._matrix;\r\n    let cos = Math.cos(angle);\r\n    let sin = Math.sin(angle);\r\n    let a0 = a[0];\r\n    let a2 = a[2];\r\n    let a4 = a[4];\r\n\r\n    a[0] = a0 * cos - a[1] * sin;\r\n    a[1] = a0 * sin + a[1] * cos;\r\n    a[2] = a2 * cos - a[3] * sin;\r\n    a[3] = a2 * sin + a[3] * cos;\r\n    a[4] = a4 * cos - a[5] * sin;\r\n    a[5] = a4 * sin + a[5] * cos;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * scale - Description\r\n   *\r\n   * @param {number} sx Description\r\n   * @param {number} sy Description\r\n   *\r\n   * @return {Matrix} Description\r\n   */\r\n  scale(sx, sy) {\r\n    let a = this._matrix;\r\n    let /** @type {number} */ a0 = a[0]; // a\r\n    let /** @type {number} */ a1 = a[1]; // b\r\n    let /** @type {number} */ a2 = a[2]; // c\r\n    let /** @type {number} */ a3 = a[3]; // d\r\n    let /** @type {number} */ a4 = a[4]; // tx\r\n    let /** @type {number} */ a5 = a[5]; // ty\r\n\r\n    this._matrix[0] = a0 * sx;\r\n    this._matrix[1] = a1 * sx;\r\n    this._matrix[2] = a2 * sy;\r\n    this._matrix[3] = a3 * sy;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * identity - Description\r\n   *\r\n   * @return {Matrix} Description\r\n   */\r\n  identity() {\r\n    return this.set(1, 0, 0, 1, 0, 0);\r\n  }\r\n\r\n  /**\r\n   * Same as concat in flash\r\n   * @param  {Matrix} b description\r\n   * @return {Matrix}   description\r\n   */\r\n  prepend(b) {\r\n    let a = this._matrix;\r\n    let bv = b._matrix;\r\n\r\n    let /** @type {number} */ a0 = a[0]; // a\r\n    let /** @type {number} */ a1 = a[1]; // b\r\n    let /** @type {number} */ a2 = a[2]; // c\r\n    let /** @type {number} */ a3 = a[3]; // d\r\n    let /** @type {number} */ a4 = a[4]; // tx\r\n    let /** @type {number} */ a5 = a[5]; // ty\r\n\r\n    let /** @type {number} */ b0 = bv[0]; // a\r\n    let /** @type {number} */ b1 = bv[1]; // b\r\n    let /** @type {number} */ b2 = bv[2]; // c\r\n    let /** @type {number} */ b3 = bv[3]; // d\r\n    let /** @type {number} */ b4 = bv[4]; // tx\r\n    let /** @type {number} */ b5 = bv[5]; // ty\r\n\r\n    let a11 = (a0 * b0 + a1 * b2);\r\n    a[1] = a0 * b1 + a1 * b3;\r\n    a[0] = a11;\r\n\r\n    let c11 = (a2 * b0 + a3 * b2);\r\n    a[3] = a2 * b1 + a3 * b3;\r\n    a[2] = c11;\r\n\r\n    let tx11 = (a4 * b0 + a5 * b2 + b4);\r\n    a[5] = a4 * b1 + a5 * b3 + b5;\r\n    a[4] = tx11;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param  {Matrix} b description\r\n   * @return {Matrix}   description\r\n   */\r\n  append(b) {\r\n    let a = this._matrix;\r\n    let bv = b._matrix;\r\n\r\n    let /** @type {number} */ a0 = a[0];\r\n    let /** @type {number} */ a1 = a[1];\r\n    let /** @type {number} */ a2 = a[2];\r\n    let /** @type {number} */ a3 = a[3];\r\n    let /** @type {number} */ a4 = a[4];\r\n    let /** @type {number} */ a5 = a[5];\r\n    let /** @type {number} */ b0 = bv[0];\r\n    let /** @type {number} */ b1 = bv[1];\r\n    let /** @type {number} */ b2 = bv[2];\r\n    let /** @type {number} */ b3 = bv[3];\r\n    let /** @type {number} */ b4 = bv[4];\r\n    let /** @type {number} */ b5 = bv[5];\r\n\r\n    a[0] = a0 * b0 + a2 * b1;\r\n    a[1] = a1 * b0 + a3 * b1;\r\n    a[2] = a0 * b2 + a2 * b3;\r\n    a[3] = a1 * b2 + a3 * b3;\r\n    a[4] = a0 * b4 + a2 * b5 + a4;\r\n    a[5] = a1 * b4 + a3 * b5 + a5;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @param  {number} x         description\r\n   * @param  {number} y         description\r\n   * @param  {Vector=} outVector description\r\n   * @return {Vector}           description\r\n   */\r\n  transformXY(x, y, outVector) {\r\n    outVector = outVector || new Vector();\r\n    let m = this._matrix;\r\n\r\n    outVector.x = m[0] * x + m[2] * y + m[4];\r\n    outVector.y = m[1] * x + m[3] * y + m[5];\r\n\r\n    return outVector;\r\n  }\r\n\r\n  /**\r\n   * @param  {number} x         description\r\n   * @param  {number} y         description\r\n   * @param  {Vector=} outVector description\r\n   * @return {Vector}           description\r\n   */\r\n  transformDirectionXY(x, y, outVector) {\r\n    let m = this._matrix;\r\n    outVector = outVector || new Vector();\r\n\r\n    outVector.x = m[0] * x + m[2] * y;\r\n    outVector.y = m[1] * x + m[3] * y;\r\n\r\n    return outVector;\r\n  }\r\n\r\n  /**\r\n   * transformVector - transforms vector by current matrix object.\r\n   *\r\n   * @param  {Vector} vector    description\r\n   * @param  {Vector=} outVector description\r\n   * @return {Vector}           description\r\n   */\r\n  transformVector(vector, outVector) {\r\n    outVector = outVector || new Vector();\r\n    let m = this._matrix;\r\n\r\n    outVector.x = m[0] * vector.x + m[2] * vector.y + m[4];\r\n    outVector.y = m[1] * vector.x + m[3] * vector.y + m[5];\r\n\r\n    return outVector;\r\n  }\r\n\r\n  /**\r\n   * transformRect - transforms rectangle by current matrix object.\r\n   *\r\n   * @param  {Rectangle} rect    description\r\n   * @param  {Rectangle|null} outRect description\r\n   * @return {Rectangle}         description\r\n   */\r\n  transformRect(rect, outRect) {\r\n    outRect = outRect || new Rectangle();\r\n\r\n    let minX = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    let xx = 0;\r\n    let yy = 0;\r\n    let tmpVector = new Vector();\r\n\r\n    // TODO: fix dirty hack. rewrite to use rect\r\n    //let points = [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height];\r\n\r\n    /** @type {Array<number>} */\r\n    let points = [rect.x, rect.y, rect.x + rect.width, rect.y, rect.x, rect.y + rect.height, rect.x + rect.width, rect.y + rect.height];\r\n\r\n    for (var i = 0; i < points.length; i += 2) {\r\n      xx = points[i];\r\n      yy = points[i + 1];\r\n\r\n      this.transformXY(xx, yy, tmpVector);\r\n\r\n      if (minX > tmpVector.x)\r\n        minX = tmpVector.x;\r\n      if (maxX < tmpVector.x)\r\n        maxX = tmpVector.x;\r\n      if (minY > tmpVector.y)\r\n        minY = tmpVector.y;\r\n      if (maxY < tmpVector.y)\r\n        maxY = tmpVector.y;\r\n    }\r\n\r\n    outRect.set(minX, minY, maxX - minX, maxY - minY);\r\n    return outRect;\r\n  }\r\n\r\n  /**\r\n   * invert - inverts current matrix.\r\n   *\r\n   * @return {Matrix}  description\r\n   */\r\n  invert() {\r\n    let a = this._matrix;\r\n\r\n    let aa = a[0];\r\n    let ab = a[1];\r\n    let ac = a[2];\r\n    let ad = a[3];\r\n    let atx = a[4];\r\n    let aty = a[5];\r\n\r\n    let det = aa * ad - ab * ac;\r\n    if (det === 0) {\r\n      a[0] = a[1] = a[2] = a[3] = 0;\r\n      a[4] = -atx;\r\n      a[5] = -aty;\r\n      return this;\r\n    }\r\n    det = 1.0 / det;\r\n\r\n    a[0] = ad * det;\r\n    a[1] = -ab * det;\r\n    a[2] = -ac * det;\r\n    a[3] = aa * det;\r\n    a[4] = (ac * aty - ad * atx) * det;\r\n    a[5] = (ab * atx - aa * aty) * det;\r\n\r\n    return this;\r\n  }\r\n\r\n  // NOTE: remove or finish\r\n  __decompose() {\r\n    let m = this._matrix;\r\n    let a = m[0];\r\n    let b = m[1];\r\n    let c = m[2];\r\n    let d = m[3];\r\n    let tx = m[4];\r\n    let ty = m[5];\r\n\r\n    let skewX = -Math.atan2(-c, d);\r\n    let skewY = Math.atan2(b, a);\r\n\r\n    let delta = Math.abs(skewX + skewY);\r\n\r\n    let r_rotation = 0\r\n    let r_skewX = 0;\r\n    let r_skewY = 0;\r\n    let r_scaleX = 0;\r\n    let r_scaleY = 0;\r\n    let r_x = 0;\r\n    let r_y = 0;\r\n\r\n    if (delta < 0.00001) {\r\n      r_rotation = skewY;\r\n\r\n      if (a < 0 && d >= 0)\r\n        r_rotation += (r_rotation <= 0) ? Math.PI : -Math.PI;\r\n    } else {\r\n      r_skewX = skewX;\r\n      r_skewY = skewY;\r\n    }\r\n\r\n    r_scaleX = Math.sqrt((a * a) + (b * b));\r\n    r_scaleY = Math.sqrt((c * c) + (d * d));\r\n\r\n    r_x = tx;\r\n    r_y = ty;\r\n\r\n    return [r_x, r_y, r_rotation, r_scaleX, r_scaleY, r_skewX, r_skewY];\r\n  }\r\n\r\n  /**\r\n   * clone - clones the current matrix and returns new cloned object.\r\n   *\r\n   * @return {Matrix}  description\r\n   */\r\n  clone() {\r\n    let m = new Matrix();\r\n    let v = this._matrix;\r\n    m.set(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n    return m;\r\n  }\r\n\r\n  /**\r\n   * copyTo - copies\r\n   *\r\n   * @param  {Matrix} matrix description\r\n   * @return {Matrix}        description\r\n   */\r\n  copyTo(matrix) {\r\n    let a = this._matrix;\r\n    let b = matrix._matrix;\r\n\r\n    b[0] = a[0];\r\n    b[1] = a[1];\r\n    b[2] = a[2];\r\n    b[3] = a[3];\r\n    b[4] = a[4];\r\n    b[5] = a[5];\r\n\r\n    return matrix;\r\n  }\r\n\r\n  /**\r\n   * copyFrom - description\r\n   *\r\n   * @param  {Matrix} matrix description\r\n   * @return {Matrix}        description\r\n   */\r\n  copyFrom(matrix) {\r\n    return matrix.copyTo(this);\r\n  }\r\n\r\n  /**\r\n   * equals - description\r\n   *\r\n   * @param  {Matrix} matrix                   description\r\n   * @param  {number} epsilon = Number.EPSILON description\r\n   * @return {boolean}                          description\r\n   */\r\n  equals(matrix, epsilon = Number.EPSILON) {\r\n    let a = this._matrix;\r\n    let b = matrix._matrix;\r\n    if (!matrix)\r\n      return false;\r\n\r\n    return (Math.abs(a[0] - b[0]) < epsilon) && (Math.abs(a[1] - b[1]) < epsilon) && (Math.abs(a[2] - b[2]) < epsilon) &&\r\n      (Math.abs(a[3] - b[3]) < epsilon) && (Math.abs(a[4] - b[4]) < epsilon) && (Math.abs(a[5] - b[5]) < epsilon);\r\n  }\r\n\r\n  /**\r\n   * get - description\r\n   *\r\n   * @return {Float32Array}  description\r\n   */\r\n  get value() {\r\n    return this._matrix;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @type {Matrix}\r\n * @nocollapse\r\n */\r\nMatrix.__cache = new Matrix();\r\n","\r\nclass Rectangle {\r\n  /**\r\n   * @param  {number=} y = 0 description\r\n   * @param  {number=} x = 0 description\r\n   * @param  {number=} w = 0 description\r\n   * @param  {number=} h = 0 description\r\n   */\r\n  constructor(x = 0, y = 0, w = 0, h = 0) {\r\n    /** @type {number} */\r\n    this.x = x;\r\n\r\n    /** @type {number} */\r\n    this.y = y;\r\n\r\n    /** @type {number} */\r\n    this.width = w;\r\n\r\n    /** @type {number} */\r\n    this.height = h;\r\n  }\r\n\r\n  /**\r\n   * set - Description\r\n   *\r\n   * @param {number} x Description\r\n   * @param {number} y Description\r\n   * @param {number} w Description\r\n   * @param {number} h Description\r\n   *\r\n   * @return {Rectangle} Description\r\n   */\r\n  set(x, y, w, h) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = w;\r\n    this.height = h;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * copyFrom - Description\r\n   *\r\n   * @param {Rectangle} rect Description\r\n   *\r\n   * @return {Rectangle} Description\r\n   */\r\n  copyFrom(rect) {\r\n    this.x = rect.x;\r\n    this.y = rect.y;\r\n    this.width = rect.width;\r\n    this.height = rect.height;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * copyTo - Description\r\n   *\r\n   * @param {Rectangle} rect Description\r\n   *\r\n   * @return {Rectangle} Description\r\n   */\r\n  copyTo(rect) {\r\n    rect.x = this.x;\r\n    rect.y = this.y;\r\n    rect.width = this.width;\r\n    rect.height = this.height;\r\n\r\n    return rect;\r\n  }\r\n\r\n\r\n  /**\r\n   * left - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get left() {\r\n    return this.x;\r\n  }\r\n\r\n  /**\r\n   * left - Description\r\n   *\r\n   * @param {number} left Left x position.\r\n   */\r\n  set left(left) {\r\n    this.x = left;\r\n  }\r\n\r\n  /**\r\n   * right - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get right() {\r\n    return this.x + this.width;\r\n  }\r\n\r\n  /**\r\n   * right - Description\r\n   *\r\n   * @param {number} right Right x position.\r\n   */\r\n  set right(right) {\r\n    this.x = right - this.width;\r\n  }\r\n\r\n  /**\r\n   * top - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get top() {\r\n    return this.y;\r\n  }\r\n\r\n  /**\r\n   * top - Description\r\n   *\r\n   * @param {number} top Top y position.\r\n   */\r\n  set top(top) {\r\n    this.y = top;\r\n  }\r\n\r\n  /**\r\n   * bottom - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get bottom() {\r\n    return this.y + this.height;\r\n  }\r\n\r\n  /**\r\n   * bottom - Description\r\n   *\r\n   * @param {number} bottom Bottom y position.\r\n   */\r\n  set bottom(bottom) {\r\n    this.y = bottom - this.height;\r\n  }\r\n\r\n  /**\r\n   * topLeft - Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  get topLeft() {\r\n    return new Vector(this.x, this.y);\r\n  }\r\n\r\n  /**\r\n   * topLeft - Description\r\n   *\r\n   * @param {Vector} vector Top left position.\r\n   */\r\n  set topLeft(vector) {\r\n    this.left = vector.x;\r\n    this.top = vector.y;\r\n  }\r\n\r\n  /**\r\n   * topRight - Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  get topRight() {\r\n    return new Vector(this.right, this.y);\r\n  }\r\n\r\n  /**\r\n   * topRight - Description\r\n   *\r\n   * @param {Vector} vector Top right position.\r\n   */\r\n  set topRight(vector) {\r\n    this.right = vector.x;\r\n    this.top = vector.y;\r\n  }\r\n\r\n  /**\r\n   * bottomRight - Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  get bottomRight() {\r\n    return new Vector(this.right, this.bottom);\r\n  }\r\n\r\n  /**\r\n   * bottomRight - Description\r\n   *\r\n   * @param {Vector} vector Right bottom position.\r\n   */\r\n  set bottomRight(vector) {\r\n    this.right = vector.x;\r\n    this.bottom = vector.y;\r\n  }\r\n\r\n  /**\r\n   * bottomLeft - Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  get bottomLeft() {\r\n    return new Vector(this.right, this.bottom);\r\n  }\r\n\r\n  /**\r\n   * bottomLeft - Description\r\n   *\r\n   * @param {Vector} vector Left bottom position.\r\n   */\r\n  set bottomLeft(vector) {\r\n    this.left = vector.x;\r\n    this.bottom = vector.y;\r\n  }\r\n\r\n  /**\r\n   * size - Description\r\n   *\r\n   * @param {Vector=} outVector Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  size(outVector = undefined) {\r\n    outVector = outVector || new Vector();\r\n    return outVector.set(this.width, this.height);\r\n  }\r\n\r\n  /**\r\n   * zero - Description\r\n   *\r\n   * @return {Rectangle} Description\r\n   */\r\n  zero() {\r\n    return this.set(0, 0, 0, 0);\r\n  }\r\n\r\n\r\n  /**\r\n   * equals - Description\r\n   *\r\n   * @param {Rectangle} rect Description\r\n   * @param {number=} epsilon Description\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  equals(rect, epsilon = Number.EPSILON) {\r\n    return rect !== null && (Math.abs(this.x - rect.x) < epsilon) && (Math.abs(this.y - rect.y) < epsilon) &&\r\n           (Math.abs(this.width - rect.width) < epsilon) && (Math.abs(this.height - rect.height) < epsilon);\r\n  }\r\n\r\n\r\n  /**\r\n   * containsXY - Description\r\n   *\r\n   * @param {number} x Description\r\n   * @param {number} y Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  containsXY(x, y) {\r\n    return x >= this.x && x <= this.right && y >= this.y && y <= this.bottom;\r\n  }\r\n\r\n\r\n  /**\r\n   * contains - Description\r\n   *\r\n   * @param {Rectangle} rect Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  contains(rect) {\r\n    return rect.x >= this.x && rect.y >= this.y && rect.right <= this.right && rect.bottom <= this.bottom;\r\n  }\r\n\r\n  /**\r\n   * intersects - Description\r\n   *\r\n   * @param {Rectangle} rect Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  intersects(rect) {\r\n    return rect.right > this.x && rect.bottom > this.y &&\r\n           rect.x < this.right && rect.y < this.bottom;\r\n  }\r\n\r\n\r\n  /**\r\n   * union - Description\r\n   *\r\n   * @param {Rectangle} toUnion Description\r\n   *\r\n   * @return {Rectangle} Description\r\n   */\r\n  union(toUnion) {\r\n    if (this.width === 0 || this.height === 0)\r\n      return toUnion.clone();\r\n    else if (toUnion.width === 0 || toUnion.height === 0)\r\n      return this.clone();\r\n\r\n    let x0 = this.x > toUnion.x ? toUnion.x : this.x;\r\n    let x1 = this.right < toUnion.right ? toUnion.right : this.right;\r\n    let y0 = this.y > toUnion.y ? toUnion.y : this.y;\r\n    let y1 = this.bottom < toUnion.bottom ? toUnion.bottom : this.bottom;\r\n\r\n    return new Rectangle(x0, y0, x1 - x0, y1 - y0);\r\n  }\r\n\r\n\r\n  /**\r\n   * volume - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get volume() {\r\n    return this.width * this.height;\r\n  }\r\n\r\n\r\n  /**\r\n   * expand - Description\r\n   *\r\n   * @param {number} x      Description\r\n   * @param {number} y      Description\r\n   * @param {number} width  Description\r\n   * @param {number} height Description\r\n   *\r\n   * @return {Rectangle} Description\r\n   */\r\n  expand(x, y, width, height) {\r\n    if (this.volume === 0)\r\n      return this.set(x, y, width, height);\r\n\r\n    let cacheRight = this.right;\r\n\t\tlet cacheBottom = this.bottom;\r\n\r\n    if (this.x > x) {\r\n      this.x = x;\r\n      this.width = cacheRight - x;\r\n    }\r\n\r\n    if (this.y > y) {\r\n      this.y = y;\r\n      this.height = cacheBottom - y;\r\n    }\r\n\r\n    if (cacheRight < x + width)\r\n      this.width = x + width - this.x;\r\n\r\n\t\tif (cacheBottom < y + height)\r\n      this.height = y + height - this.y;\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /**\r\n   * inflate - Description\r\n   *\r\n   * @param {number=} [x=0] Description\r\n   * @param {number=} [y=0] Description\r\n   *\r\n   * @return {Rectangle} Description\r\n   */\r\n  inflate(x = 0, y = 0) {\r\n    this.x -= x;\r\n    this.y -= y;\r\n    this.width += 2 * x;\r\n    this.height += 2 * y;\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /**\r\n   * clone - Description\r\n   *\r\n   * @return {Rectangle} Description\r\n   */\r\n  clone() {\r\n    return new Rectangle(this.x, this.y, this.width, this.height);\r\n  }\r\n\r\n  /**\r\n   * perimeter - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get perimeter() {\r\n    return 2 * (this.width + this.height);\r\n  }\r\n\r\n\r\n  /**\r\n   * center - Description\r\n   *\r\n   * @param {Vector=} outVector Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  center(outVector = undefined) {\r\n    outVector = outVector || new Vector();\r\n    return outVector.set(this.x + this.width * 0.5, this.y + this.height * 0.5);\r\n  }\r\n\r\n  /**\r\n   * scale - Scales this rectangle.\r\n   *\r\n   * @param {number} x Width multiplier.\r\n   * @param {number} y Height multiplier.\r\n   *\r\n   * @return {Rectangle} This rectangle.\r\n   */\r\n  scale(x, y) {\r\n    this.width *= x;\r\n    this.height *= y;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * isEmpty - Checks rectangle has area.\r\n   *\r\n   * @return {boolean} True if has.\r\n   */\r\n  isEmpty() {\r\n    return this.width === 0 && this.height === 0;\r\n  }\r\n\r\n  get lines() { // todo\r\n    return [\r\n      new Line(this.topLeft, this.topRight),\r\n      new Line(this.topRight, this.bottomRight),\r\n      new Line(this.bottomRight, this.bottomLeft),\r\n      new Line(this.bottomLeft, this.topLeft)\r\n    ];\r\n  }\r\n\r\n\r\n}\r\n\r\n/** @type {Rectangle}\r\n  * @nocollapse\r\n  */\r\nRectangle.__cache = new Rectangle();\r\n","\r\nclass Circle {\r\n  /**\r\n   * @param  {number=} x = 0 Position x.\r\n   * @param  {number=} y = 0 Position y.\r\n   * @param  {number=} r = 1 Radius.\r\n   */\r\n  constructor(x = 0, y = 0, r = 1) {\r\n    /** @type {number} */\r\n    this.x = x;\r\n\r\n    /** @type {number} */\r\n    this.y = y;\r\n\r\n    /** @type {number} */\r\n    this.r = r;\r\n  }\r\n\r\n  /**\r\n   * set - Sets new circle properties\r\n   *\r\n   * @param {number} x Position x.\r\n   * @param {number} y Position y.\r\n   * @param {number} r Radius.\r\n   *\r\n   * @return {Circle} This circle.\r\n   */\r\n  set(x, y, r) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.r = r;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * clone - Clones this circle.\r\n   *\r\n   * @return {Circle} Created circle.\r\n   */\r\n  clone() {\r\n    return new Circle(this.x, this.y, this.r);\r\n  }\r\n\r\n  /**\r\n   * copyTo - Copy this properties to another circle.\r\n   *\r\n   * @param {Circle} circle Object to copy to.\r\n   *\r\n   * @return {Circle} Passed circle.\r\n   */\r\n  copyTo(circle) {\r\n    return circle.set(this.x, this.y, this.r);\r\n  }\r\n\r\n  /**\r\n   * copyFrom - Copy another circle properties to this.\r\n   *\r\n   * @param {Circle} circle Object to copy from.\r\n   *\r\n   * @return {Circle} This circle.\r\n   */\r\n  copyFrom(circle) {\r\n    return this.set(circle.x, circle.y, circle.r);\r\n  }\r\n\r\n  /**\r\n   * equals - Shows whether circles are identical.\r\n   *\r\n   * @param {Circle} circle Object to comparison.\r\n   * @param {number=} epsilon Compare precision.\r\n   *\r\n   * @return {boolean} True if circles are identical.\r\n   */\r\n  equals(circle, epsilon = Number.EPSILON) {\r\n    return circle !== null && (Math.abs(this.x - circle.x) < epsilon) && (Math.abs(this.y - circle.y) < epsilon) &&\r\n      (Math.abs(this.r - circle.r) < epsilon);\r\n  }\r\n\r\n  /**\r\n   * containsXY - Shows whether point is in circle.\r\n   *\r\n   * @param {number} x Point position x.\r\n   * @param {number} y Point position y.\r\n   *\r\n   * @return {boolean} True if circle contains point.\r\n   */\r\n  containsXY(x, y) {\r\n    return this.contains(new Vector(x, y));\r\n  }\r\n\r\n  /**\r\n   * contains - Shows whether point is in circle.\r\n   *\r\n   * @param {Vector} vector Point to check.\r\n   *\r\n   * @return {boolean} True if circle contains point.\r\n   */\r\n  contains(vector) {\r\n    return new Vector(this.x, this.y).subtract(vector).length() <= this.r;\r\n  }\r\n\r\n  /**\r\n   * left - Finds left X position.\r\n   *\r\n   * @return {number} Left X position.\r\n   */\r\n  get left() {\r\n    return this.x - this.r;\r\n  }\r\n\r\n  /**\r\n   * right - Finds right X position.\r\n   *\r\n   * @return {number} Right X position.\r\n   */\r\n  get right() {\r\n    return this.x + this.r;\r\n  }\r\n\r\n  /**\r\n   * top - Finds top Y position.\r\n   *\r\n   * @return {number} Top Y position.\r\n   */\r\n  get top() {\r\n    return this.y - this.r;\r\n  }\r\n\r\n  /**\r\n   * bottom - Finds bottom Y position.\r\n   *\r\n   * @return {number} Bottom Y position.\r\n   */\r\n  get bottom() {\r\n    return this.y + this.r;\r\n  }\r\n\r\n  /**\r\n   * topPoint - Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  get topPoint() {\r\n    return new Vector(this.x, this.top);\r\n  }\r\n\r\n  /**\r\n   * bottomPoint - Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  get bottomPoint() {\r\n    return new Vector(this.x, this.bottom);\r\n  }\r\n\r\n  /**\r\n   * zero - Description\r\n   *\r\n   * @return {Circle} Description\r\n   */\r\n  zero() {\r\n    return this.set(0, 0, 0);\r\n  }\r\n\r\n  /**\r\n   * intersects - Shows whether this circle intersects another.\r\n   *\r\n   * @param {Circle} circle Circle to check.\r\n   *\r\n   * @return {boolean} True if intersects.\r\n   */\r\n  intersects(circle) {\r\n    let d = new Vector(this.x, this.y).distance(new Vector(circle.x, circle.y));\r\n    return d <= this.r + circle.r && d >= this.r - circle.r;\r\n  }\r\n\r\n  /**\r\n   * collide - Shows whether this circle collide with another.\r\n   *\r\n   * @param {Circle} circle Circle to check.\r\n   *\r\n   * @return {boolean} True if collide.\r\n   */\r\n  collide(circle) {\r\n    let d = new Vector(this.x, this.y).distance(new Vector(circle.x, circle.y));\r\n    return d <= this.r + circle.r;\r\n  }\r\n\r\n  /**\r\n   * overlap - Shows whether this circle overlap another.\r\n   *\r\n   * @param {Circle} circle Circle to check.\r\n   *\r\n   * @return {boolean} True if overlap.\r\n   */\r\n  overlap(circle) {\r\n    if (this.r < circle.r) {\r\n      return false;\r\n    }\r\n\r\n    let d = new Vector(this.x, this.y).distance(new Vector(circle.x, circle.y));\r\n    return d <= this.r - circle.r;\r\n  }\r\n\r\n  /**\r\n   * volume - Area of this circle.\r\n   *\r\n   * @return {number} area.\r\n   */\r\n  get volume() {\r\n    return Math.PI * this.r * this.r;\r\n  }\r\n\r\n  /**\r\n   * perimeter - Perimeter of this circle.\r\n   *\r\n   * @return {number} perimeter.\r\n   */\r\n  get perimeter() {\r\n    return 2 * Math.PI * this.r;\r\n  }\r\n\r\n  /**\r\n   * center - Represents center as vector.\r\n   *\r\n   * @param {Vector=} outVector Object for result.\r\n   *\r\n   * @return {Vector} Center point.\r\n   */\r\n  center(outVector = undefined) {\r\n    outVector = outVector || new Vector();\r\n    return outVector.set(this.x, this.y);\r\n  }\r\n\r\n}\r\n\r\n/** @type {Circle}\r\n * @nocollapse\r\n */\r\nCircle.__cache = new Circle();\r\n","\r\nclass Line {\r\n  /**\r\n   * @param  {Vector} start Start point.\r\n   * @param  {Vector} end End point.\r\n   */\r\n  constructor(start, end) {\r\n    /** @type {Vector} */\r\n    this.start = start;\r\n\r\n    /** @type {Vector} */\r\n    this.end = end;\r\n  }\r\n\r\n  /**\r\n   * set - Sets new line properties\r\n   *\r\n   * @param  {Vector} start Start point.\r\n   * @param  {Vector} end End point.\r\n   *\r\n   * @return {Line} This circle.\r\n   */\r\n  set(start, end) {\r\n    this.start = start;\r\n    this.end = end;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * clone - Clones this line.\r\n   *\r\n   * @return {Line} Created line.\r\n   */\r\n  clone() {\r\n    return new Line(this.start.clone(), this.end.clone());\r\n  }\r\n\r\n  /**\r\n   * copyTo - Copy this properties to another line.\r\n   *\r\n   * @param {Line} line Object to copy to.\r\n   *\r\n   * @return {Line} Passed line.\r\n   */\r\n  copyTo(line) {\r\n    return line.set(this.start.clone(), this.end.clone());\r\n  }\r\n\r\n  /**\r\n   * copyFrom - Copy another line properties to this.\r\n   *\r\n   * @param {Line} line Object to copy from.\r\n   *\r\n   * @return {Line} This circle.\r\n   */\r\n  copyFrom(line) {\r\n    return this.set(line.start.clone(), line.end.clone());\r\n  }\r\n\r\n  /**\r\n   * equals - Shows whether lines are identical.\r\n   *\r\n   * @param {Line} line Object to comparison.\r\n   * @param {number=} epsilon Compare precision.\r\n   *\r\n   * @return {boolean} True if lines are identical.\r\n   */\r\n  equals(line, epsilon = Number.EPSILON) {\r\n    return (this.start.equals(line.start, epsilon) && this.end.equals(line.end, epsilon)) ||\r\n      (this.start.equals(line.end, epsilon) && this.end.equals(line.start, epsilon));\r\n  }\r\n\r\n  /**\r\n   * left - Finds left X position.\r\n   *\r\n   * @return {number} Left X position.\r\n   */\r\n  get left() {\r\n    return Math.min(this.start.x, this.end.x);\r\n  }\r\n\r\n\r\n  /**\r\n   * right - Finds right X position.\r\n   *\r\n   * @return {number} Right X position.\r\n   */\r\n  get right() {\r\n    return Math.max(this.start.x, this.end.x);\r\n  }\r\n\r\n  /**\r\n   * top - Finds top Y position.\r\n   *\r\n   * @return {number} Top Y position.\r\n   */\r\n  get top() {\r\n    return Math.min(this.start.y, this.end.y);\r\n  }\r\n\r\n  /**\r\n   * bottom - Finds bottom Y position.\r\n   *\r\n   * @return {number} Bottom Y position.\r\n   */\r\n  get bottom() {\r\n    return Math.max(this.start.y, this.end.y);\r\n  }\r\n\r\n  /**\r\n   * reverse - Replace line start and end points.\r\n   *\r\n   * @return {Line} This line.\r\n   */\r\n  reverse() {\r\n    let start = this.start;\r\n    this.start = this.end;\r\n    this.end = start;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * normalize - Change line's length to one. Moves end point.\r\n   *\r\n   * @return {Line} This line.\r\n   */\r\n  normalize() {\r\n    this.end\r\n      .subtract(this.start)\r\n      .normalize()\r\n      .add(this.start);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * scale - Change line's length to scaled. Moves end point.\r\n   *\r\n   * @return {Line} This line.\r\n   */\r\n  scale(multyplier) {\r\n    this.end\r\n      .subtract(this.start)\r\n      .multiplyScalar(multyplier)\r\n      .add(this.start);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * zero - Description\r\n   *\r\n   * @return {Line} Description\r\n   */\r\n  zero() {\r\n    return this.set(new Vector(), new Vector());\r\n  }\r\n\r\n  /**\r\n   * length - Length of this line.\r\n   *\r\n   * @return {number} length.\r\n   */\r\n  length() {\r\n    return this.start.distance(this.end);\r\n  }\r\n\r\n  /**\r\n   * center - Represents center as vector.\r\n   *\r\n   * @param {Vector=} outVector Object for result.\r\n   *\r\n   * @return {Vector} Center point.\r\n   */\r\n  center(outVector = undefined) {\r\n    outVector = outVector || new Vector();\r\n    return outVector.set((this.start.x + this.end.x) / 2, (this.start.y + this.end.y) / 2);\r\n  }\r\n\r\n\r\n  /**\r\n   * type - Description\r\n   *\r\n   * @return {string} Description\r\n   */\r\n  get type() {\r\n    return 'Line';\r\n  }\r\n\r\n  /**\r\n   * containsXY - Shows whether point is on line.\r\n   *\r\n   * @param {number} x Point position x.\r\n   * @param {number} y Point position y.\r\n   *\r\n   * @return {boolean} True if line contains point.\r\n   */\r\n  containsXY(x, y) {\r\n    return this.contains(new Vector(x, y));\r\n  }\r\n\r\n  /**\r\n   * contains - Shows whether point is on line.\r\n   *\r\n   * @param {Vector} vector Point to check.\r\n   *\r\n   * @return {boolean} True if line contains point.\r\n   */\r\n  contains(vector) {\r\n    return this.start.distance(vector) + this.end.distance(vector) === this.length();\r\n  }\r\n\r\n  /**\r\n   * intersects - Shows whether this line intersects another.\r\n   *\r\n   * @param {Line} line Line to check.\r\n   *\r\n   * @return {boolean} True if intersects.\r\n   */\r\n  intersects(line) {\r\n    let start1 = this.start;\r\n    let end1 = this.end;\r\n    let start2 = line.start;\r\n    let end2 = line.end;\r\n\r\n    let denominator = ((end2.y - start2.y) * (end1.x - start1.x)) - ((end2.x - start2.x) * (end1.y - start1.y));\r\n\r\n    if (denominator === 0) {\r\n      return false;\r\n    }\r\n\r\n    let a = start1.y - start2.y;\r\n    let b = start1.x - start2.x;\r\n    let numerator1 = ((end2.x - start2.x) * a) - ((end2.y - start2.y) * b);\r\n    let numerator2 = ((end1.x - start1.x) * a) - ((end1.y - start1.y) * b);\r\n    a = numerator1 / denominator;\r\n    b = numerator2 / denominator;\r\n\r\n    return a >= 0 && a <= 1 && b > 0 && b < 1;\r\n  }\r\n\r\n  /**\r\n   * intersects - Shows whether this line intersects circle.\r\n   *\r\n   * @param {Circle} circle Circle to check.\r\n   *\r\n   * @return {boolean} True if intersects.\r\n   */\r\n  intersectsCircle(circle) {\r\n    let start = this.start;\r\n    let end = this.end;\r\n\r\n    if (circle.contains(start) || circle.contains(end)) {\r\n      return true;\r\n    }\r\n\r\n    let distance = start.distance(end);\r\n    let directionX = (end.x - start.x) / distance;\r\n    let directionY = (end.y - start.y) / distance;\r\n\r\n    let t = directionX * (circle.x - start.x) + directionY * (circle.y - start.y);\r\n\r\n    let nearest = new Vector((t * directionX) + start.x, (t * directionY) + start.y);\r\n    let nearestDistance = nearest.distance(new Vector(circle.x, circle.y));\r\n\r\n    if (nearestDistance < circle.r) {\r\n      let dt = Math.sqrt(Math.pow(circle.r, 2) - Math.pow(nearestDistance, 2));\r\n\r\n      let x1 = ((t - dt) * directionX + start.x).toFixed(15);\r\n      let y1 = ((t - dt) * directionY + start.y).toFixed(15);\r\n      let x2 = ((t + dt) * directionX + start.x).toFixed(15);\r\n      let y2 = ((t + dt) * directionY + start.y).toFixed(15);\r\n\r\n      return this.__isInBoundsXY(x1, y1) || this.__isInBoundsXY(x2, y2);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  __isInBoundsXY(x, y) {\r\n    let x1 = this.start.x;\r\n    let y1 = this.start.y;\r\n    let x2 = this.end.x;\r\n    let y2 = this.end.y;\r\n    \r\n    return x > Math.min(x1, x2) && x < Math.max(x1, x2) && y > Math.min(y1, y2) && y < Math.max(y1, y2);\r\n  }\r\n\r\n}\r\n\r\n/** @type {Line}\r\n * @nocollapse\r\n */\r\nLine.__cache = new Line(new Vector(), new Vector());\r\n","\r\nclass Polygon {\r\n\r\n  /**\r\n   * @param  {Array<Vector>} vertices = [] Array of vertex points;\r\n   */\r\n  constructor(vertices = []) {\r\n\r\n    /** @type {Array<Vector>} */\r\n    this.vertices = vertices;\r\n\r\n    /** @type {Array<Line>} */\r\n    this.lines = [];\r\n\r\n    /** @type {Rectangle} */\r\n    this.bounds = new Rectangle();\r\n\r\n    /** @type {Vector} */\r\n    this.center = new Vector();\r\n\r\n    this.refresh();\r\n  }\r\n\r\n  /**\r\n   * set - Sets new vertices.\r\n   *\r\n   * @param {Array<Vector>} vertices New points.\r\n   *\r\n   * @return {Polygon} This polygon.\r\n   */\r\n  set(vertices) {\r\n    this.vertices = vertices;\r\n    this.refresh();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * copyTo - Copy this properties to another polygon.\r\n   *\r\n   * @param {Polygon} polygon Object to copy to.\r\n   *\r\n   * @return {Polygon} Passed polygon.\r\n   */\r\n  copyTo(polygon) {\r\n    let len = this.vertices.length;\r\n    let vertices = [];\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      vertices.push(this.vertices[i].clone());\r\n    }\r\n\r\n    return polygon.set(vertices);\r\n  }\r\n\r\n  /**\r\n   * copyFrom - Copy another polygon properties to this.\r\n   *\r\n   * @param {Polygon} polygon Object to copy from.\r\n   *\r\n   * @return {Polygon} This polygon.\r\n   */\r\n  copyFrom(polygon) {\r\n    let polygonVertices = polygon.vertices;\r\n    let len = polygonVertices.length;\r\n    let vertices = [];\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      vertices.push(polygonVertices[i].clone());\r\n    }\r\n\r\n    return this.set(vertices);\r\n  }\r\n\r\n  /**\r\n   * clone - Clones this polygon.\r\n   *\r\n   * @return {Polygon} Created polygon.\r\n   */\r\n  clone() {\r\n    let thisVertices = this.vertices;\r\n    let len = thisVertices.length;\r\n    let vertices = [];\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      vertices.push(thisVertices[i].clone());\r\n    }\r\n\r\n    return new Polygon(vertices);\r\n  }\r\n\r\n  get width() {\r\n    return this.bounds.width;\r\n  }\r\n\r\n  get height() {\r\n    return this.bounds.height;\r\n  }\r\n\r\n  /**\r\n   * containsXY - Shows whether point is in polygon.\r\n   *\r\n   * @param {number} x Point position x.\r\n   * @param {number} y Point position y.\r\n   *\r\n   * @return {boolean} True if polygon contains point.\r\n   */\r\n  containsXY(x, y) {\r\n    return this.contains(new Vector(x, y));\r\n  }\r\n\r\n  /**\r\n   * contains - Shows whether point is in polygon.\r\n   *\r\n   * @param {Vector} vector Point to check.\r\n   *\r\n   * @return {boolean} True if polygon contains point.\r\n   */\r\n  contains(vector) {\r\n    let center = this.center;\r\n    let lines = this.lines;\r\n    let len = lines.length;\r\n\r\n    if (center.equals(vector)) {\r\n      return true;\r\n    }\r\n\r\n    let intersectionLine = new Line(vector, center.clone());\r\n    let intersects = 0;\r\n    intersectionLine.scale((this.width + this.height) / intersectionLine.length());\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      intersects += lines[i].intersects(intersectionLine) ? 1 : 0;\r\n    }\r\n\r\n    return intersects % 2 !== 0;\r\n  }\r\n\r\n  /**\r\n   * perimeter - Perimeter of this polygon.\r\n   *\r\n   * @return {number} perimeter.\r\n   */\r\n  get perimeter() {\r\n    let thisLines = this.lines;\r\n    let len = thisLines.length;\r\n    let perimeter = 0;\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      perimeter += thisLines[i].length();\r\n    }\r\n\r\n    return perimeter;\r\n  }\r\n\r\n  /**\r\n   * collide - Checks collides between two polygons.\r\n   *\r\n   * @param {Polygon} polygon Object to check.\r\n   *\r\n   * @return {boolean} True if polygon collides with another polygon.\r\n   */\r\n  collide(polygon) {\r\n    if (!this.bounds.intersects(polygon.bounds)) {\r\n      return false;\r\n    }\r\n\r\n    let thisLines = this.lines;\r\n    let thisLen = thisLines.length;\r\n    let polygonLines = polygon.lines;\r\n    let polygonLen = polygonLines.length;\r\n\r\n    for (let i = 0; i < thisLen; i++) {\r\n      for (let j = 0; j < polygonLen; j++) {\r\n        if (thisLines[i].intersects(polygonLines[j])) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * collideCircle - Checks collides between this polygon and circle.\r\n   *\r\n   * @param {Circle} circle Object to check.\r\n   *\r\n   * @return {boolean} True if polygon collides with circle.\r\n   */\r\n  collideCircle(circle) {\r\n    let bounds = this.bounds;\r\n    let lines = this.lines;\r\n\r\n    if (bounds.left > circle.right || bounds.right < circle.left || bounds.top > circle.bottom || bounds.bottom < circle.top) {\r\n      return false;\r\n    }\r\n\r\n    let len = lines.length;\r\n    for (let i = 0; i < len; i++) {\r\n      if (lines[i].intersectsCircle(circle)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * collideRectangle - Checks collides between this polygon and rectangle.\r\n   *\r\n   * @param {Rectangle} rectangle Object to check.\r\n   *\r\n   * @return {boolean} True if polygon collides with rectangle.\r\n   */\r\n  collideRectangle(rectangle) {\r\n    if (!this.bounds.intersects(rectangle)) {\r\n      return false;\r\n    }\r\n\r\n    let thisLines = this.lines;\r\n    let thisLen = thisLines.length;\r\n    let rectangleLines = rectangle.lines;\r\n    let rectangleLen = rectangleLines.length;\r\n\r\n    for (let i = 0; i < thisLen; i++) {\r\n      for (let j = 0; j < rectangleLen; j++) {\r\n        if (thisLines[i].intersects(rectangleLines[j])) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * overlap - Checks overlaps between this polygon and another.\r\n   *\r\n   * @param {Polygon} polygon Object to check.\r\n   *\r\n   * @return {boolean} True if polygon overlaps second.\r\n   */\r\n  overlap(polygon) {\r\n    if (this.bounds.width < polygon.bounds.width || this.bounds.height < polygon.bounds.height) {\r\n      return false;\r\n    }\r\n\r\n    if (!this.contains(polygon.center)) {\r\n      return false;\r\n    }\r\n\r\n    let thisLines = this.lines;\r\n    let thisLen = thisLines.length;\r\n    let polygonLines = polygon.lines;\r\n    let polygonLen = polygonLines.length;\r\n\r\n    for (let i = 0; i < thisLen; i++) {\r\n      for (let j = 0; j < polygonLen; j++) {\r\n        if (thisLines[i].intersects(polygonLines[j])) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * overlapCircle - Checks overlaps between this polygon and circle.\r\n   *\r\n   * @param {Circle} circle Object to check.\r\n   *\r\n   * @return {boolean} True if polygon overlaps circle.\r\n   */\r\n  overlapCircle(circle) {\r\n    if (!this.containsXY(circle.x, circle.y)) {\r\n      return false;\r\n    }\r\n\r\n    let thisLines = this.lines;\r\n    let len = thisLines.length;\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      if (thisLines[i].intersectsCircle(circle)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * overlapRectangle - Checks overlaps between this polygon and rectangle.\r\n   *\r\n   * @param {Rectangle} rectangle Object to check.\r\n   *\r\n   * @return {boolean} True if polygon overlaps rectangle.\r\n   */\r\n  overlapRectangle(rectangle) {\r\n    if (!this.contains(rectangle.center())) {\r\n      return false;\r\n    }\r\n\r\n    let thisLines = this.lines;\r\n    let thisLen = thisLines.length;\r\n    let rectangleLines = rectangle.lines;\r\n    let rectangleLen = rectangleLines.length;\r\n\r\n    for (let i = 0; i < thisLen; i++) {\r\n      for (let j = 0; j < rectangleLen; j++) {\r\n        if (thisLines[i].intersects(rectangleLines[j])) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * refresh - ReCalc center, bounds, and edges of this polygon.\r\n   *\r\n   * @return {Polygon} This polygon.\r\n   */\r\n  refresh() {\r\n    let center = this.center;\r\n    let bounds = this.bounds;\r\n    let vertices = this.vertices;\r\n    let lines = this.lines = [];\r\n    center.set(0, 0);\r\n\r\n    // bounds\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      let vector = vertices[i];\r\n      center.add(vector);\r\n\r\n      // bounds\r\n      let {\r\n        x,\r\n        y\r\n      } = vector;\r\n      maxX = x > maxX ? x : maxX;\r\n      maxY = y > maxY ? y : maxY;\r\n      minX = x < minX ? x : minX;\r\n      minY = y < minY ? y : minY;\r\n\r\n      lines.push(new Line(vector, vertices[i + 1] || vertices[0]));\r\n    }\r\n\r\n    center.multiplyScalar(1 / vertices.length);\r\n    bounds.set(minX, minY, maxX - minX, maxY - minY);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * refreshCenter - ReCalc center of this polygon.\r\n   *\r\n   * @return {Polygon} This polygon.\r\n   */\r\n  refreshCenter() {\r\n    let center = this.center;\r\n    let vertices = this.vertices;\r\n    let len = vertices.length;\r\n    center.set(0, 0);\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      center.add(vertices[i]);\r\n    }\r\n\r\n    center.multiplyScalar(1 / vertices.length);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * refreshBounds - ReCalc bounds of this polygon.\r\n   *\r\n   * @return {Polygon} This polygon.\r\n   */\r\n  refreshBounds() {\r\n    let bounds = this.bounds;\r\n    let vertices = this.vertices;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let len = vertices.length;\r\n    let x;\r\n    let y;\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      x = vertices[i].x;\r\n      y = vertices[i].y;\r\n      maxX = x > maxX ? x : maxX;\r\n      maxY = y > maxY ? y : maxY;\r\n      minX = x < minX ? x : minX;\r\n      minY = y < minY ? y : minY;\r\n    }\r\n\r\n    bounds.set(minX, minY, maxX - minX, maxY - minY);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * refreshLines - ReCalc edges of this polygon.\r\n   *\r\n   * @return {Polygon} This polygon.\r\n   */\r\n  refreshLines() {\r\n    let vertices = this.vertices;\r\n    let lines = this.lines = [];\r\n\r\n    for (let i = 0; i < vertices.length; i += 2) {\r\n      lines.push(new Line(vertices[i], vertices[i + 1] || vertices[0]));\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * fromPath - Creates instance of Polygon.\r\n   *\r\n   * @param {string} path Numbers x y divided with space.\r\n   *\r\n   * @return {Polygon} Created polygon.\r\n   */\r\n  static fromPath(path) {\r\n    let vertices = [];\r\n    let path2 = path.split(' ');\r\n\r\n    for (let i = 0; i < path2.length; i += 2) {\r\n      vertices.push(new Vector(Number(path2[i]), Number(path2[i + 1])));\r\n    }\r\n\r\n    return new Polygon(vertices);\r\n  }\r\n\r\n  /**\r\n   * setRotation - Sets rotation. Rotate this polygon around it center.\r\n   *\r\n   * @param {number} rotation Angle in radians.\r\n   *\r\n   * @return {Polygon} This polygon.\r\n   */\r\n  setRotation(rotation) {\r\n    let center = this.center;\r\n    let vertices = this.vertices;\r\n    let cos = Math.cos(rotation).toFixed(15);\r\n    let sin = Math.sin(rotation).toFixed(15);\r\n\r\n    for (let i = 0, len = vertices.length; i < len; i++) {\r\n      let vector = vertices[i];\r\n      vector\r\n        .subtract(center)\r\n        .set(vector.x * cos - vector.y * sin, vector.x * sin + vector.y * cos)\r\n        .add(center);\r\n    }\r\n\r\n    return this.refresh();\r\n  }\r\n\r\n  /**\r\n   * setTranslation - Translates this polygon to specified position.\r\n   *\r\n   * @param {Vector} point Translation vector.\r\n   *\r\n   * @return {Polygon} This vertices.\r\n   */\r\n  setTranslation(point) {\r\n    let center = this.center;\r\n    let vertices = this.vertices;\r\n    let len = vertices.length;\r\n    point.subtract(center);\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      vertices[i].add(point);\r\n    }\r\n\r\n    return this.refresh();\r\n  }\r\n\r\n}\r\n\r\n/** @type {Polygon}\r\n * @nocollapse\r\n */\r\nPolygon.__cache = new Polygon();\r\n","\r\nclass Curve {\r\n  constructor() {\r\n\r\n    /** @private @type {Array<number>} */\r\n    this.mPoints = [];\r\n\r\n    /** @private @type {Array<Vector>} */\r\n    this.mLookup = null;\r\n\r\n    /** @private @type {boolean} */\r\n    this.mBaked = false;\r\n\r\n    /** @private @type {number} */\r\n    this.mStep = 1 / 60;\r\n\r\n    /** @private @type {Array<number>} */\r\n    this.mEachT = [];\r\n  }\r\n\r\n  /**\r\n   * set - Sets new points coordinates.\r\n   *\r\n   * @param  {...number} points Coordinates: startX, startY, cpStartX, cpStartY, cpEndX, cpEndY, endX/start2X, endY/start2Y, cp2StartX, cp2StartX... 8 or 14 or 20...\r\n   *\r\n   * @return {Curve} This curve.\r\n   */\r\n  set(...points) {\r\n    this.mPoints = this.__initPoints(points);\r\n    this.__refreshEachT();\r\n\r\n    if (this.mBaked)\r\n      this.__refreshCache();\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /**\r\n   * baked - Returns true or false depending on baked is enabled or not.\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  get baked() {\r\n    return this.mBaked;\r\n  }\r\n\r\n  /**\r\n   * baked - Enables or disables interpolation from cache (lookup).\r\n   *\r\n   * @param  {boolean} label\r\n   */\r\n  set baked(label) {\r\n    this.mBaked = label;\r\n\r\n    if (!this.mLookup && this.mPoints) {\r\n      this.__refreshCache();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * __initPoints - Wides points array. Sets first point for next bezier same as last of previous.\r\n   *\r\n   * @param  {Array<number>} points Array of points coordinates.\r\n   *\r\n   * @return {Array<number>} Points coordinates array.\r\n   */\r\n  __initPoints(points) {\r\n    let res = [];\r\n\r\n    for (let i = 6; i < points.length; i += 6) {\r\n      res = res.concat(points.slice(i - 6, i + 2));\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * __refreshCache - Refresh cache (lookup) for fast interpolations.\r\n   *\r\n   * @return {Curve} This curve.\r\n   */\r\n  __refreshCache() {\r\n    let lookup = this.mLookup = [];\r\n    let getFullLength = this.getFullLength();\r\n    let points = this.mPoints;\r\n    let pointsLen = points.length;\r\n\r\n    for (let i = 0; i < pointsLen; i += 8) {\r\n      let length = Curve.getLength(...points.slice(i, i + 8));\r\n      let step = this.mStep * getFullLength / length;\r\n\r\n      for (let t = step; t < 1; t += step)\r\n        lookup.push(Curve.lerp(t, ...points.slice(i, i + 8)));\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /**\r\n   * __refreshEachT - Refresh local interpolation kof for each bezier in curve.\r\n   *\r\n   * @return {Curve} This curve.\r\n   */\r\n  __refreshEachT() {\r\n    let points = this.mPoints;\r\n    let eachT = this.mEachT = [];\r\n    let pointsLen = points.length;\r\n    let eachLength = [];\r\n\r\n    for (let i = 0; i < pointsLen; i += 8)\r\n      eachLength.push(Curve.getLength(...points.slice(i, i + 8)));\r\n\r\n    let length = this.getFullLength();\r\n    let s = 0;\r\n    for (let i = 0; i < pointsLen; i += 8) {\r\n      s += eachLength[i / 8];\r\n      eachT.push(s / length);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * lerp - Interpolates single bezier on t position.\r\n   *\r\n   * @param  {number} t Interpolation position (0...1).\r\n   * @param  {number} startX\r\n   * @param  {number} startY\r\n   * @param  {number} cpStartX\r\n   * @param  {number} cpStartY\r\n   * @param  {number} cpEndX\r\n   * @param  {number} cpEndY\r\n   * @param  {number} endX\r\n   * @param  {number} endY\r\n   * @param  {Vector=} outVector\r\n   *\r\n   * @return {Vector} Position on bezier.\r\n   */\r\n  static lerp(t, startX, startY, cpStartX, cpStartY, cpEndX, cpEndY, endX, endY, outVector) {\r\n    let u = 1 - t;\r\n    let tt = t * t;\r\n    let uu = u * u;\r\n    let uuu = uu * u;\r\n    let ttt = tt * t;\r\n\r\n    let p = outVector || new Vector();\r\n    p.set(startX, startY);\r\n    p.x *= uuu;\r\n    p.y *= uuu;\r\n\r\n    // first\r\n    p.x += 3 * uu * t * cpStartX;\r\n    p.y += 3 * uu * t * cpStartY;\r\n\r\n    // second\r\n    p.x += 3 * u * tt * cpEndX;\r\n    p.y += 3 * u * tt * cpEndY;\r\n\r\n    // third\r\n    p.x += ttt * endX;\r\n    p.y += ttt * endY;\r\n\r\n    return p;\r\n  }\r\n\r\n  /**\r\n   * interpolate - Interpolates across whole curve.\r\n   *\r\n   * @param  {number} t Interpolation position (0...1).\r\n   * @param  {Vector=} outVector\r\n   *\r\n   * @return {Vector} Position on curve.\r\n   */\r\n  interpolate(t, outVector) {\r\n    let res = outVector || new Vector();\r\n    let lookup = this.mLookup;\r\n\r\n    if (this.mBaked) {\r\n      let i = Math.ceil((lookup.length - 1) * t);\r\n      let p = lookup[i];\r\n      res.copyFrom(p);\r\n\r\n      return res;\r\n    }\r\n\r\n    // not backed\r\n    let { mEachT, mPoints } = this;\r\n    let i = 0;\r\n\r\n    while (mEachT[i] < t)\r\n      i++;\r\n\r\n    let minT = mEachT[i - 1] || 0;\r\n    let maxT = mEachT[i];\r\n    let bezier = mPoints.slice(i * 8, i * 8 + 8);\r\n\r\n    return Curve.lerp((t - minT) / (maxT - minT), ...bezier, res);\r\n  }\r\n\r\n  /**\r\n   * length - Returns single bezier length.\r\n   *\r\n   * @param  {...number} points Coordinates: startX, startY, cpStartX, cpStartY, cpEndX, cpEndY, endX, endY\r\n   *\r\n   * @return {number} Length.\r\n   */\r\n  static getLength(...points) {\r\n    let p0 = new Vector(points[0], points[1]);\r\n    let p1 = new Vector(points[2], points[3]);\r\n    let p2 = new Vector(points[4], points[5]);\r\n    let p3 = new Vector(points[6], points[7]);\r\n\r\n    return (p3.distance(p0) + p0.distance(p1) + p1.distance(p2) + p2.distance(p3)) / 2;\r\n  }\r\n\r\n  /**\r\n   * getFullLength - Returns this curve length.\r\n   *\r\n   * @return {number} Length.\r\n   */\r\n  getFullLength() {\r\n    let points = this.mPoints;\r\n    let mPointsLen = points.length;\r\n    let res = 0;\r\n\r\n    for (let i = 0; i < mPointsLen; i += 8)\r\n      res += Curve.getLength(...points.slice(i, i + 8));\r\n\r\n    return res;\r\n  }\r\n}\r\n\r\n/** @type {Curve}\r\n * @nocollapse\r\n */\r\nCurve.__cache = new Curve();\r\n","\r\nclass Assert {\r\n  constructor() {\r\n    Assert.is(false, 'Static class');\r\n  }\r\n\r\n  static is(value, message) {\r\n    if (value === true)\r\n      return;\r\n\r\n    if (Assert.logOnFail)\r\n      console.error('[ASSERT]', message);\r\n\r\n    if (Assert.throwOnFail)\r\n      throw new Error(message);\r\n  }\r\n}\r\n\r\nAssert.throwOnFail = false;\r\nAssert.logOnFail = true;\r\n","/**\r\n * MessageDispatcher - Description\r\n * @unrestricted\r\n */\r\n\r\nclass MessageDispatcher {\r\n  constructor() {\r\n    // object of arrays\r\n\r\n    /** @type {Object<string, Array>} */\r\n    this.mListeners = null;\r\n  }\r\n\r\n  /**\r\n   * on - Listens to message by given name\r\n   *\r\n   * @param {string} name           Name of a message to listen\r\n   * @param {Function} callback       The callback function\r\n   * @param {Object=} [context=null] The context for callback function\r\n   *\r\n   * @return {void}\r\n   */\r\n  on(name, callback, context = null) {\r\n    Assert.is(name !== null, 'name cannot be null.');\r\n    Assert.is(callback !== null, 'callback cannot be null.');\r\n\r\n    // TODO: refactor, expore dispatching provider\r\n    let filterIx = name.indexOf('@') ;\r\n    if (filterIx !== -1) {\r\n      // global handler\r\n\r\n      let pureName = name.substring(0, filterIx);\r\n      let pathMask = name.substring(filterIx + 1);\r\n\r\n      //console.log(pureName, pathMask);\r\n\r\n      if (MessageDispatcher.mGlobalHandlers.hasOwnProperty(pureName) === false)\r\n        MessageDispatcher.mGlobalHandlers[pureName] = [];\r\n\r\n      let dispatchers = (MessageDispatcher.mGlobalHandlers[pureName]);\r\n      for (let i = 0; i < dispatchers.length; i++)\r\n        if (dispatchers[i].callback === callback)\r\n          return;\r\n\r\n      dispatchers.push({\r\n        callback: callback,\r\n        context: context,\r\n        pathMask: pathMask\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.mListeners === null)\r\n      this.mListeners = {};\r\n\r\n    if (this.mListeners.hasOwnProperty(name) === false)\r\n      this.mListeners[name] = [];\r\n\r\n    let dispatchers = /** @type {Array<{callback: Function, context}>} */ (this.mListeners[name]);\r\n\r\n    for (let i = 0; i < dispatchers.length; i++)\r\n      if (dispatchers[i].callback === callback)\r\n        return;\r\n\r\n    dispatchers.push({\r\n      callback: callback,\r\n      context: context\r\n    });\r\n  }\r\n\r\n  /**\r\n   * removeOn - Description\r\n   *\r\n   * @param {string} name            Description\r\n   * @param {Function=} [callback=null] Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  removeOn(name, callback = null) {\r\n    if (name === null || name.length === 0)\r\n      throw new Error('Name cannot be null.');\r\n\r\n    if (this.mListeners === null)\r\n      return;\r\n\r\n    let dispatchers = /** @type {Array<{callback: Function, context}>} */ (this.mListeners[name]);\r\n\r\n    if (dispatchers === undefined)\r\n      return;\r\n\r\n    if (callback === null) {\r\n      dispatchers.splice(0, dispatchers.length);\r\n      return;\r\n    }\r\n\r\n    for (let i = dispatchers.length; i--;) {\r\n      if (dispatchers[i].callback === callback) {\r\n        dispatchers.splice(i, 1);\r\n        return;\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * post - Sends message with given pattern and params\r\n   *\r\n   * @param {string}  name   The name of a message\r\n   * @param {...*} params A list of params to send\r\n   *\r\n   * @return {void}\r\n   */\r\n  post(name, ...params) {\r\n    // TODO: add wildcard support and name mask annotation support\r\n    Assert.is(name !== null, 'name cannot be null.');\r\n    // if (name === null || name.length === 0)\r\n    //   throw new Error('Name cannot be null.');\r\n\r\n    let message = this.__parseMessage(this, name);\r\n\r\n    // TODO: o'really 62?\r\n    let isGameObject = this instanceof GameObject;\r\n    if (message.mDirection !== 'none' && isGameObject === false)\r\n      throw new Error('Dispatching not direct messages are not allowed on non Game Objects.');\r\n\r\n    if (message.mDirection === 'none') {\r\n      this.__invoke(this, message, ...params);\r\n      this.__invokeGlobal(this, message, ...params);\r\n    } else if (message.mDirection === 'down') {\r\n      message.mOrigin = ( /** @type {GameObject} */ (this)).root;\r\n\r\n      if (message.mSibblings === true) {\r\n        this.__sendGlobal(this, message, null, ...params);\r\n        message.mOrigin.__invokeGlobal(this, message, ...params);\r\n      }\r\n      else\r\n        this.__sendBubbles(this, message, false, ...params);\r\n    } else if (message.mDirection === 'up') {\r\n      this.__sendBubbles(this, message, true, ...params);\r\n    } else {\r\n      throw new Error('Unknown message type.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * __sendBubbles - Description\r\n   *\r\n   * @param {*}  sender  Description\r\n   * @param {string}  message Description\r\n   * @param {boolean}  toTop   Description\r\n   * @param {...*} params  Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  __sendBubbles(sender, message, toTop, ...params) {\r\n    message.mOrigin = toTop === true ? this : ( /** @type {GameObject} */ (this)).root;\r\n\r\n    let list = [this];\r\n\r\n    let current = /** @type {GameObject} */ (this);\r\n    while (current.parent !== null) {\r\n      list.push(current.parent);\r\n      current = current.parent;\r\n    }\r\n\r\n    if (toTop) {\r\n      for (let i = 0; i < list.length; i++) {\r\n        let dispatcher = /** @type {GameObject} */ (list[i]);\r\n        dispatcher.__invoke(sender, message, ...params);\r\n      }\r\n    } else {\r\n      for (let i = list.length - 1; i >= 0; i--) {\r\n        let dispatcher = /** @type {GameObject} */ (list[i]);\r\n        dispatcher.__invoke(sender, message, ...params);\r\n      }\r\n    }\r\n\r\n    message.sender.__invokeGlobal(message.sender, message, ...params);\r\n  }\r\n\r\n  /**\r\n   * __sendGlobal - Description\r\n   *\r\n   * @param {*}  sender  Description\r\n   * @param {Message}  message Description\r\n   * @param {GameObject=}  origin  Description\r\n   * @param {...*} params  Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  __sendGlobal(sender, message, origin, ...params) {\r\n    if (origin === null)\r\n      origin = /** @type {GameObject} */ (message.mOrigin);\r\n\r\n    origin.__invoke(sender, message, ...params);\r\n\r\n    for (let i = 0; i < origin.numChildren; i++) {\r\n      let child = origin.getChildAt(i);\r\n      child.__sendGlobal(sender, message, child, ...params);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {*}  sender\r\n   * @param {Message}  message\r\n   * @param {...*} params\r\n   *\r\n   * @return {void}\r\n   */\r\n  __invoke(sender, message, ...params) {\r\n    if (this.mListeners === null)\r\n      return;\r\n\r\n    let dispatchers = /** @type {Array<{callback: Function, context}>} */ (this.mListeners[message.mName]);\r\n\r\n    if (dispatchers === undefined || dispatchers.length === 0)\r\n      return;\r\n\r\n    if (message.mPathMask !== null) {\r\n      let inPath = this.__checkPath(this.path, message.mPathMask);\r\n      if (!inPath)\r\n        return;\r\n    }\r\n\r\n    // no path filter found - just invoke it\r\n    let clone = dispatchers.slice(0);\r\n\r\n    for (let i = 0; i < clone.length; i++) {\r\n      let dispatcher = /** @type {{callback: Function, context: *}} */ (clone[i]);\r\n      message.mTarget = this;\r\n      dispatcher.callback.call(dispatcher.context, message, ...params);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {*}  sender\r\n   * @param {Message}  message\r\n   * @param {...*} params\r\n   *\r\n   * @return {void}\r\n   */\r\n  __invokeGlobal(sender, message, ...params) {\r\n    let dispatchers = MessageDispatcher.mGlobalHandlers[message.mName];\r\n\r\n    if (dispatchers === undefined || dispatchers.length === 0)\r\n      return;\r\n\r\n    let clone = dispatchers.slice(0);\r\n\r\n    for (let i = 0; i < clone.length; i++) {\r\n      let dispatcher = /** @type {{callback: Function, context: *}} */ (clone[i]);\r\n\r\n      if (!this.__checkPath(sender.path, dispatcher.pathMask))\r\n        continue;\r\n\r\n      message.mTarget = this;\r\n      dispatcher.callback.call(dispatcher.context, message, ...params);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param {string} path\r\n   * @param {string} pattern\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  __checkPath(path, pathMask) {\r\n    if (path == null || pathMask == null)\r\n      return false;\r\n\r\n    if (path === pathMask)\r\n      return true;\r\n\r\n    if (pathMask.indexOf('*') === -1)\r\n      return path === pathMask;\r\n    else\r\n      return new RegExp(\"^\" + pathMask.split(\"*\").join(\".*\") + \"$\").test(path);\r\n  }\r\n\r\n  // TODO: parse exception path'ses like: ~tatata@@@omg####imnotidiout###@@~~\r\n  /**\r\n   * __parseMessage - Description\r\n   *\r\n   * @param {*} sender Description\r\n   * @param {string} info   Description\r\n   *\r\n   * @return {Message} Description\r\n   */\r\n  __parseMessage(sender, info) {\r\n    // TODO: make message pool... this type of objects shall not be\r\n    // but dont forget to take care about cancel property\r\n\r\n    // EXAMPLES:\r\n    //  this.post('clicked', data); // Sends to all listeners of this\r\n    //  this.post('~clicked', data); // Sends to all listeners of this and to each parent of this object\r\n    //  this.post('clicked@mySprite'); // From top to bottom looking for mySprite\r\n    //  this.post('~clicked@mySprite'); // From this to top over each parent looks for mySprite\r\n    //  this.post('clicked@mySprite#ColliderComponent'); // message to a component with type of ColliderComponent\r\n    //  this.post('~clicked@mySprite#ColliderComponent');\r\n\r\n    // DIRECTIONS\r\n    // clicked - none, direct\r\n    // ~clicked - up, bubbling\r\n    // clicked@ - down starting from root, with no filter to everyone\r\n    // clicked@mySpriter - down with 'mySprite' filter\r\n    // ~clicked@ - inversed bubbling starting from the root, ending at this\r\n\r\n    let result = new Message();\r\n    result.mSender = sender;\r\n    result.mDirection = 'none';\r\n    result.mSibblings = true;\r\n    result.mPathMask = null;\r\n    result.mComponentMask = null;\r\n\r\n    if (info.charAt(0) === '~') {\r\n      result.mSibblings = false;\r\n      result.mDirection = 'up';\r\n    }\r\n\r\n    let ixAt = info.indexOf('@');\r\n    let ixHash = info.indexOf('#');\r\n\r\n    if (ixAt === -1 && ixHash === -1) {\r\n      result.mSibblings = false;\r\n      result.mName = info.substr(result.mDirection === 'up' ? 1 : 0);\r\n      return result;\r\n    }\r\n\r\n    result.mDirection = 'down';\r\n\r\n    if (ixHash === -1) { // we got no hash but we have a dog\r\n      result.mName = info.substring(result.mSibblings ? 0 : 1, ixAt);\r\n\r\n      if (info.length === ixAt + 1)\r\n        result.mPathMask = null;\r\n      else\r\n        result.mPathMask = info.substring(ixAt + 1);\r\n\r\n      return result;\r\n    } else {\r\n      if (ixAt !== -1) {\r\n        result.mPathMask = info.substring(ixAt + 1, ixHash);\r\n        result.mName = info.substring(result.mSibblings ? 0 : 1, ixAt);\r\n      } else {\r\n        result.mName = info.substring(result.mSibblings ? 0 : 1, ixHash);\r\n      }\r\n\r\n      if (info.length === ixHash + 1)\r\n        result.mComponentMask = null;\r\n      else\r\n        result.mComponentMask = info.substring(ixHash + 1);\r\n\r\n      return result;\r\n    }\r\n  }\r\n}\r\n\r\nMessageDispatcher.mGlobalHandlers = {};\r\n\r\n\r\nclass Message {\r\n  constructor() {\r\n    /** @private @type {*} */\r\n    this.mSender = null;\r\n\r\n    /** @private @type {string} */\r\n    this.mName;\r\n\r\n    /** @private @type {string|null} */\r\n    this.mPathMask = null;\r\n\r\n    /** @private @type {string|null} */\r\n    this.mComponentMask = null;\r\n\r\n    /** @private @type {string} */\r\n    this.mDirection = 'none';\r\n\r\n    /** @private @type {boolean} */\r\n    this.mSibblings = false;\r\n\r\n    /** @private @type {Object} */\r\n    this.mOrigin = null;\r\n\r\n    /** @private @type {Object} */\r\n    this.mTarget = null;\r\n\r\n    /** @private @type {boolean} */\r\n    this.mCanceled = false;\r\n  }\r\n\r\n  /**\r\n   * sender - Who send the message\r\n   *\r\n   * @return {*} Description\r\n   */\r\n  get sender() {\r\n    return this.mSender;\r\n  }\r\n\r\n  /**\r\n   * name - The name of the message\r\n   *\r\n   * @return {string}\r\n   */\r\n  get name() {\r\n    return this.mName;\r\n  }\r\n\r\n  /**\r\n   * direction - direction in what message was sent. Can be 'none', 'up' and 'down'.\r\n   *\r\n   * @return {string}\r\n   */\r\n  get direction() {\r\n    return this.mDirection;\r\n  }\r\n\r\n  /**\r\n   * sibblings - Indicates if sibblings should be included into dispatching process.\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  get sibblings() {\r\n    return this.mSibblings;\r\n  }\r\n\r\n  /**\r\n   * pathMask - The GameObject.name mask string if was used.\r\n   *\r\n   * @return {string|null} Description\r\n   */\r\n  get pathMask() {\r\n    return this.mPathMask;\r\n  }\r\n\r\n  /**\r\n   * componentMask - Component mask string if was used.\r\n   *\r\n   * @return {string|null}\r\n   */\r\n  get componentMask() {\r\n    return this.mComponentMask;\r\n  }\r\n\r\n  /**\r\n   * origin - The original sender of a message.\r\n   *\r\n   * @return {*|null}\r\n   */\r\n  get origin() {\r\n    return this.mOrigin;\r\n  }\r\n\r\n  /**\r\n   * target - The destination object for this message.\r\n   *\r\n   * @return {*|null}\r\n   */\r\n  get target() {\r\n    return this.mTarget;\r\n  }\r\n\r\n  /**\r\n   * cancel - Stops propagation of the message.\r\n   *\r\n   * @return {void}\r\n   */\r\n  cancel() {\r\n    this.mCanceled = true;\r\n  }\r\n\r\n  /**\r\n   * canceled - True/False if\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  get canceled() {\r\n    return this.mCanceled;\r\n  }\r\n\r\n  static get PROGRESS() {\r\n    return 'progress';\r\n  }\r\n  static get COMPLETE() {\r\n    return 'complete';\r\n  }\r\n}\r\n","\r\nclass Time {\r\n  constructor() {\r\n  }\r\n\r\n  static get time(){\r\n    return Time.mTime;\r\n  }\r\n\r\n  static get dt() {\r\n    return Time.mDeltaTime;\r\n  }\r\n\r\n  static get scale() {\r\n    return Time.mScale;\r\n  }\r\n\r\n  static set scale(value) {\r\n    Assert.is(value >= 0, 'Time.scale must be >= 0.');\r\n\r\n    Time.mScale = value;\r\n  }\r\n}\r\n\r\n/** @type {number} */\r\nTime.mTime = 0;\r\n\r\n/** @type {number} */\r\nTime.mDeltaTime = 0;\r\n\r\n/** @type {number} */\r\nTime.mScale = 1;\r\n","\r\nclass System extends MessageDispatcher {\r\n  constructor(){\r\n    super();\r\n  }\r\n\r\n\r\n  /**\r\n   * onFixedUpdate - Description\r\n   *\r\n   * @param {number} dt Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onFixedUpdate(dt){\r\n  }\r\n\r\n\r\n  /**\r\n   * onUpdate - Description\r\n   *\r\n   * @param {number} dt Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onUpdate(dt, t){\r\n  }\r\n\r\n  /**\r\n   * onPostUpdate - Description\r\n   *\r\n   * @param {number} dt Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onPostUpdate(dt, t){\r\n  }\r\n\r\n\r\n  /**\r\n   * onChildrenAdded - Description\r\n   *\r\n   * @param {GameObject} child Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onChildrenAdded(child){\r\n  }\r\n\r\n\r\n  /**\r\n   * onChildrenRemoved - Description\r\n   *\r\n   * @param {GameObject} child Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onChildrenRemoved(child){\r\n  }\r\n\r\n\r\n  /**\r\n   * onComponentAdded - Description\r\n   *\r\n   * @param {GameObject} child     Description\r\n   * @param {Component} component Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onComponentAdded(child, component)\r\n  {}\r\n\r\n\r\n  /**\r\n   * onComponentRemoved - Description\r\n   *\r\n   * @param {GameObject} child     Description\r\n   * @param {Component} component Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onComponentRemoved(child, component)\r\n  {}\r\n}\r\n","\r\nclass Viewport extends MessageDispatcher {\r\n  /**\r\n   * constructor - Description\r\n   *\r\n   * @param {HTMLElement} containerElement Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  constructor(containerElement) {\r\n    super();\r\n\r\n    /** @type {HTMLElement} */\r\n    this.mContainerElement = containerElement;\r\n\r\n    let size = this.mContainerElement.getBoundingClientRect();\r\n\r\n    /** @type {Rectangle} */\r\n    this.mSize = new Rectangle(size.left, size.top, size.width, size.height);\r\n\r\n    window.addEventListener('resize', x=> this.__onResize());\r\n  }\r\n\r\n  __onResize() {\r\n    let size = this.mContainerElement.getBoundingClientRect();\r\n    this.mSize = new Rectangle(size.left, size.top, size.width, size.height);\r\n\r\n    this.post('resize', this.mSize);\r\n  }\r\n\r\n  /**\r\n   * size - Description\r\n   *\r\n   * @return {Rectangle} Description\r\n   */\r\n  get size(){\r\n    return this.mSize;\r\n  }\r\n\r\n  /**\r\n   * nativeDOM - Description\r\n   *\r\n   * @return {Element} Description\r\n   */\r\n  get nativeDOM(){\r\n    return this.mContainerElement;\r\n  }\r\n\r\n  // TODO: dispose, remove resize event\r\n}\r\n","/**\r\n * Component - Description\r\n * @unrestricted\r\n * @extends MessageDispatcher\r\n */\r\n\r\nclass Component extends MessageDispatcher {\r\n  /**\r\n   * constructor - description\r\n   *\r\n   * @return {void}          description\r\n   */\r\n  constructor() {\r\n    super();\r\n\r\n    /** @type {number} */\r\n    this.mId = ++GameObject.ID;\r\n\r\n    /** @type {GameObject|null} */\r\n    this.gameObject = null;\r\n\r\n    /** @type {boolean} */\r\n    this.mAdded = false;\r\n  }\r\n\r\n  /**\r\n   * onAdded - description\r\n   *\r\n   * @param  {GameObject} gameObject description\r\n   * @return {void}            description\r\n   */\r\n  onAdded(gameObject) {}\r\n\r\n  /**\r\n   * onRemoved - description\r\n   *\r\n   * @param  {GameObject} gameObject description\r\n   * @return {void}            description\r\n   */\r\n  onRemoved(gameObject) {}\r\n\r\n  /**\r\n   * onFixedUpdate - description\r\n   *\r\n   * @param  {number} dt description\r\n   * @return {void}    description\r\n   */\r\n  onFixedUpdate(dt) {}\r\n\r\n  /**\r\n   * onUpdate - description\r\n   *\r\n   * @param  {number} dt description\r\n   * @return {void}    description\r\n   */\r\n  onUpdate(dt) {}\r\n\r\n  /**\r\n   * onUpdate - description\r\n   *\r\n   * @param  {number} dt description\r\n   * @return {void}    description\r\n   */\r\n  onPostUpdate(dt) {}\r\n\r\n  // TODO: finish\r\n  dispose() {}\r\n\r\n  // TODO: finish\r\n  removeFromParent() {\r\n    if (this.gameObject === null)\r\n      return;\r\n\r\n    this.gameObject.removeComponent(this);\r\n  }\r\n}\r\n\r\n\r\n/** @type {number}\r\n * @nocollapse\r\n */\r\nComponent.ID = 0;\r\n","/**\r\n * GameObject - Base class for all black game objects.\r\n * @unrestricted\r\n * @extends MessageDispatcher\r\n */\r\n\r\nclass GameObject extends MessageDispatcher {\r\n  constructor() {\r\n    super();\r\n\r\n    /** @type {number} */\r\n    this.mId = ++GameObject.ID;\r\n\r\n    /** @type {string|null} */\r\n    this.mName = null;\r\n\r\n    /** @type {Array<Component>} */\r\n    this.mComponents = [];\r\n\r\n    /** @type {Array<GameObject>} */\r\n    this.mChildren = [];\r\n\r\n    /** @type {number} */\r\n    this.mX = 0;\r\n\r\n    /** @type {number} */\r\n    this.mY = 0;\r\n\r\n    /** @type {number} */\r\n    this.mScaleX = 1;\r\n\r\n    /** @type {number} */\r\n    this.mScaleY = 1;\r\n\r\n    /** @type {number} */\r\n    this.mPivotX = 0;\r\n\r\n    /** @type {number} */\r\n    this.mPivotY = 0;\r\n\r\n    /** @type {number} */\r\n    this.mRotation = 0;\r\n\r\n    /** @type {Rectangle} */\r\n    this.mBounds = null;\r\n\r\n    /** @type {Matrix} */\r\n    this.mLocalTransform = new Matrix();\r\n\r\n    /** @type {Matrix} */\r\n    this.mWorldTransform = new Matrix();\r\n\r\n    /** @type {DirtyFlag} */\r\n    this.mDirty = DirtyFlag.DIRTY;\r\n\r\n    /** @type {GameObject} */\r\n    this.mParent = null;\r\n\r\n    /** @type {string|null} */\r\n    this.mTag = null;\r\n\r\n    /** @type {number} */\r\n    this.mIndex = 0;\r\n\r\n    /** @type {boolean} */\r\n    this.mAdded = false;\r\n  }\r\n\r\n  /**\r\n   * id - Unique object id.\r\n   *\r\n   * @returns {number} Unique object id.\r\n   */\r\n  get id() {\r\n    return this.mId;\r\n  }\r\n\r\n  /**\r\n   * onAdded - This method called each time object added to stage.\r\n   *\r\n   * @return {void}\r\n   */\r\n  onAdded() { }\r\n\r\n  /**\r\n   * onRemoved - Called when object is removed from stage.\r\n   *\r\n   * @return {void}\r\n   */\r\n  onRemoved() {}\r\n\r\n\r\n  /**\r\n   * add - Sugar method for adding child GameObjects or Components.\r\n   *\r\n   * @param {...GameObject|...Component} gameObjectsAndOrComponents A GameObject or Component to add.\r\n   *\r\n   * @return {Array<GameObject|Component>} The passed GameObject or Component.\r\n   */\r\n  add(...gameObjectsAndOrComponents) {\r\n    for (let i = 0; i < gameObjectsAndOrComponents.length; i++) {\r\n      let gooc = gameObjectsAndOrComponents[i];\r\n\r\n      if (gooc instanceof GameObject)\r\n        this.addChild(/* @type {!GameObject} */ (gooc));\r\n      else\r\n        this.addComponent(/* @type {!Component} */ (gooc));\r\n    }\r\n\r\n    return gameObjectsAndOrComponents;\r\n  }\r\n\r\n  /**\r\n   * Adds a child GameObject instance to this GameObject instance. The child is added to the top of all other children in this GameObject instance.\r\n   *\r\n   * @param  {GameObject} child The GameObject instance to add as a child of this GameObject instance.\r\n   * @return {GameObject}\r\n   */\r\n  addChild(child) {\r\n    return this.addChildAt(child, this.mChildren.length);\r\n  }\r\n\r\n  /**\r\n   * Adds a child GameObject instance to this GameObject instance. The child is added to the top of all other children in this GameObject instance.\r\n   *\r\n   * @param  {GameObject} child The GameObject instance to add as a child of this GameObject instance.\r\n   * @param  {number=} index = 0 The index position to which the child is added.\r\n   * @return {GameObject} The GameObject instance that you pass in the child parameter.\r\n   */\r\n  addChildAt(child, index = 0) {\r\n    let numChildren = this.mChildren.length;\r\n\r\n    if (index < 0 || index > numChildren)\r\n      throw new Error('Child index is out of bounds.');\r\n\r\n    if (child.mParent === this)\r\n      return this.setChildIndex(child, index);\r\n\r\n    // this operation should be atomic. since __setParent can throw exception.\r\n    this.mChildren.splice(index, 1, child);\r\n\r\n    child.removeFromParent();\r\n    child.__setParent(this);\r\n\r\n    if (this.root !== null)\r\n      Black.instance.onChildrenAdded(child);\r\n\r\n    return child;\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {GameObject} value Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  __setParent(value) {\r\n    let p = value;\r\n\r\n    while (p !== null && p !== this)\r\n      p = p.mParent;\r\n\r\n    if (p === this)\r\n      throw new Error('Object cannot be a child to itself.');\r\n\r\n    this.mParent = value;\r\n    this.setTransformDirty();\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * setChildIndex - Sets the index (layer) of the specified GameObject to the specified index (layer).\r\n   *\r\n   * @param {GameObject} child The GameObject instance to change index for.\r\n   * @param {number} index Desired index.\r\n   *\r\n   * @returns {GameObject} The GameObject instance that you pass in the child parameter.\r\n   */\r\n  setChildIndex(child, index) {\r\n    let ix = this.mChildren.indexOf(child);\r\n\r\n    if (ix < 0)\r\n      throw new Error('Child is not a child of this object.');\r\n\r\n    if (ix === index)\r\n      return child;\r\n\r\n    this.mChildren.splice(ix, 1);\r\n    this.mChildren.splice(index, 1, child);\r\n    this.setTransformDirty();\r\n\r\n    return child;\r\n  }\r\n\r\n  /**\r\n   * removeFromParent - Removes this GameObject instance from its parent.\r\n   *\r\n   * @param {boolean} [dispose=false]\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  removeFromParent(dispose = false) {\r\n    if (this.mParent)\r\n      this.mParent.removeChild(this);\r\n\r\n    if (dispose)\r\n      this.dispose();\r\n\r\n    this.setTransformDirty();\r\n  }\r\n\r\n  /**\r\n   * removeChild - Removes specified GameObjects instance.\r\n   *\r\n   * @param {GameObject} child GameObject instance to remove.\r\n   * @param {boolean} [dispose=false]\r\n   *\r\n   * @return {GameObject} The GameObject instance that you pass in the child parameter.\r\n   */\r\n  removeChild(child, dispose) {\r\n    let ix = this.mChildren.indexOf(child);\r\n\r\n    if (ix < 0)\r\n      return null;\r\n\r\n    return this.removeChildAt(ix);\r\n  }\r\n\r\n\r\n  /**\r\n   * getChildByName\r\n   *\r\n   * @param {string} name\r\n   *\r\n   * @return {GameObject|null}\r\n   */\r\n  getChildByName(name) {\r\n    for (var i = 0; i < this.mChildren.length; i++) {\r\n      if (this.mChildren[i].name === name)\r\n        return this.mChildren[i];\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * removeChildAt - Removes GameObjects instance from specified index.\r\n   *\r\n   * @param {number} index Description\r\n   * @param {boolean} [dispose=false]\r\n   *\r\n   * @return {GameObject} The removed GameObject instance.\r\n   */\r\n  removeChildAt(index, dispose) {\r\n    if (index < 0 || index > this.numChildren)\r\n      throw new Error('Child index is out of bounds.');\r\n\r\n    let hadRoot = this.root !== null;\r\n\r\n    let child = this.mChildren[index];\r\n    child.__setParent(null);\r\n\r\n    this.mChildren.splice(index, 1);\r\n\r\n    if (hadRoot)\r\n      Black.instance.onChildrenRemoved(child);\r\n\r\n    if (dispose)\r\n      child.dispose();\r\n\r\n    this.setTransformDirty();\r\n\r\n    return child;\r\n  }\r\n\r\n  /**\r\n   * getChildAt - Returns GameObject at specified index.\r\n   *\r\n   * @param {number} index The index of child GameObject.\r\n   *\r\n   * @return {GameObject} The GameObject at specified index.\r\n   */\r\n  getChildAt(index) {\r\n    return this.mChildren[index];\r\n  }\r\n\r\n  /**\r\n   * addComponent - Adds Component instance to the end of the list,\r\n   *\r\n   * @param  {Component} instances Component instance or instances.\r\n   * @return {Component} The Component instance you pass in the instances parameter.\r\n   */\r\n  addComponent(component) {\r\n    let instance = component;\r\n\r\n    if (instance.gameObject)\r\n      throw new Error('Component cannot be added to two game objects at the same time.');\r\n\r\n    this.mComponents.push(instance);\r\n    instance.gameObject = this;\r\n\r\n    if (this.root !== null)\r\n      Black.instance.onComponentAdded(this, instance);\r\n\r\n    return instance;\r\n  }\r\n\r\n  /**\r\n   * removeComponent - Description\r\n   *\r\n   * @param {Component} instance Description\r\n   *\r\n   * @return {Component|null} Description\r\n   */\r\n  removeComponent(instance) {\r\n    if (!instance)\r\n      return null;\r\n\r\n    let index = this.mComponents.indexOf(instance);\r\n    if (index > -1)\r\n      this.mComponents.splice(index, 1);\r\n\r\n    // detach game object after or before?\r\n    instance.gameObject = null;\r\n    instance.onRemoved(this);\r\n\r\n    if (this.root !== null)\r\n      Black.instance.onComponentRemoved(this, instance);\r\n\r\n    return instance;\r\n  }\r\n\r\n  /**\r\n   * getComponent\r\n   *\r\n   * @param {*} typeName\r\n   *\r\n   * @return {Component|null}\r\n   */\r\n  getComponent(typeName) {\r\n    for (let i = 0; i < this.mComponents.length; i++) {\r\n      let c = this.mComponents[i];\r\n      if (c instanceof typeName)\r\n        return c;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n\r\n  /**\r\n   * numComponenets - Returns number of component's\r\n   *\r\n   * @return {number}\r\n   */\r\n  get numComponenets() {\r\n    return this.mComponents.length;\r\n  }\r\n\r\n\r\n  /**\r\n   * getComponentAt - Retrives Component at given index.\r\n   *\r\n   * @param {number} index\r\n   *\r\n   * @return {Component|null}\r\n   */\r\n  getComponentAt(index) {\r\n    if (index >= 0 && index < this.mComponents.length)\r\n      return this.mComponents[index];\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * localTransformation - Description\r\n   *\r\n   * @return {Matrix} Description\r\n   */\r\n  get localTransformation() {\r\n    if (this.mDirty & DirtyFlag.LOCAL) {\r\n      this.mDirty ^= DirtyFlag.LOCAL;\r\n\r\n      if (this.mRotation === 0) {\r\n        let tx = this.mX - this.mPivotX * this.mScaleX;\r\n        let ty = this.mY - this.mPivotY * this.mScaleY;\r\n        return this.mLocalTransform.set(this.mScaleX, 0, 0, this.mScaleY, tx, ty);\r\n      } else {\r\n        let cos = Math.cos(this.mRotation);\r\n        let sin = Math.sin(this.mRotation);\r\n        let a = this.mScaleX * cos;\r\n        let b = this.mScaleX * sin;\r\n        let c = this.mScaleY * -sin;\r\n        let d = this.mScaleY * cos;\r\n        let tx = this.mX - this.mPivotX * a - this.mPivotY * c;\r\n        let ty = this.mY - this.mPivotX * b - this.mPivotY * d;\r\n        return this.mLocalTransform.set(a, b, c, d, tx, ty);\r\n      }\r\n    }\r\n\r\n    return this.mLocalTransform;\r\n  }\r\n\r\n  /**\r\n   * worldTransformation - returns cloned Matrix object which represents object orientation in world space.\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get worldTransformation() {\r\n    if (this.mDirty & DirtyFlag.WORLD) {\r\n      this.mDirty ^= DirtyFlag.WORLD;\r\n\r\n      if (this.mParent)\r\n        this.mParent.worldTransformation.copyTo(this.mWorldTransform).append(this.localTransformation);\r\n      else\r\n        this.localTransformation.copyTo(this.mWorldTransform);\r\n    }\r\n\r\n    return this.mWorldTransform.clone();\r\n  }\r\n\r\n  /**\r\n   * worldTransformationInversed - Description\r\n   *\r\n   * @return {Matrix} Description\r\n   */\r\n  get worldTransformationInversed() {\r\n    // TODO: optimize, cache\r\n    return this.worldTransformation.clone().invert();\r\n  }\r\n\r\n  /**\r\n   * __fixedUpdate - Description\r\n   *\r\n   * @param {number} dt Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  __fixedUpdate(dt) {\r\n    this.onFixedUpdate(dt);\r\n\r\n    for (let k = 0; k < this.mComponents.length; k++) {\r\n      let c = this.mComponents[k];\r\n      c.gameObject = this;\r\n      c.onFixedUpdate(dt);\r\n    }\r\n\r\n    for (let i = 0; i < this.mChildren.length; i++)\r\n      this.mChildren[i].__fixedUpdate(dt);\r\n  }\r\n\r\n  /**\r\n   * __update - Description\r\n   *\r\n   * @param {number} dt Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  __update(dt) {\r\n    this.onUpdate(dt);\r\n\r\n    for (let k = 0; k < this.mComponents.length; k++) {\r\n      let c = this.mComponents[k];\r\n      c.gameObject = this;\r\n      c.onUpdate(dt);\r\n    }\r\n\r\n    for (let i = 0; i < this.mChildren.length; i++)\r\n      this.mChildren[i].__update(dt);\r\n  }\r\n\r\n  /**\r\n   * __update - Description\r\n   *\r\n   * @param {number} dt Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  __postUpdate(dt) {\r\n    this.onPostUpdate(dt);\r\n\r\n    for (let k = 0; k < this.mComponents.length; k++) {\r\n      let c = this.mComponents[k];\r\n      c.gameObject = this;\r\n      c.onPostUpdate(dt);\r\n    }\r\n\r\n    for (let i = 0; i < this.mChildren.length; i++) {\r\n      this.mChildren[i].__postUpdate(dt);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onFixedUpdate - Description\r\n   *\r\n   * @param {number} dt Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onFixedUpdate(dt) {}\r\n\r\n  /**\r\n   * onUpdate - Description\r\n   *\r\n   * @param {number} dt Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onUpdate(dt) {}\r\n\r\n  /**\r\n   * onUpdate - Description\r\n   *\r\n   * @param {number} dt Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onPostUpdate(dt) {}\r\n\r\n  /**\r\n   * __render - Description\r\n   *\r\n   * @param {NullDriver} video           Description\r\n   * @param {number} time            Description\r\n   * @param {number} parentAlpha     Description\r\n   * @param {string} parentBlendMode Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  __render(video, time, parentAlpha, parentBlendMode) {\r\n    this.onRender(video, time);\r\n\r\n    let child = null;\r\n    for (let i = 0; i < this.mChildren.length; i++) {\r\n      child = this.mChildren[i];\r\n      child.__render(video, time, parentAlpha, parentBlendMode);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onRender - Description\r\n   *\r\n   * @param {NullDriver} video Description\r\n   * @param {number} time  Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onRender(video, time) {}\r\n\r\n  /**\r\n   * onGetLocalBounds - Override this method if you need to specify GameObject size. Should be always be a local coordinates.\r\n   *\r\n   * @protected\r\n   * @param {Rectangle=} outRect Description\r\n   *\r\n   * @return {Rectangle} bounds in local space withoout taking care about transformation matrix\r\n   */\r\n  onGetLocalBounds(outRect = undefined) {\r\n    outRect = outRect || new Rectangle();\r\n    return outRect.set(0, 0, 0, 0);\r\n  }\r\n\r\n  /**\r\n   * getBounds - Returns world bounds of this object and all children if specified (true by default).\r\n   * object.getBounds() - relative to world.\r\n   * object.getBounds(object) - local bounds.\r\n   * object.getBounds(object.parent) - relative to parent.\r\n   * object.getBounds(objectB) - relative to objectB space.\r\n   *\r\n   * @param {GameObject} [space=undefined]\r\n   * @param {boolean} [includeChildren=true]\r\n   * @param {Rectangle=} [outRect=null]\r\n   *\r\n   * @return {Rectangle} returns bounds of the object and all childrens\r\n   */\r\n  getBounds(space = undefined, includeChildren = true, outRect = undefined) {\r\n    outRect = outRect || new Rectangle();\r\n\r\n    let matrix = this.worldTransformation;\r\n\r\n    // TODO: optimize, check if space == null, space == this, space == parent\r\n    // TODO: use wtInversed instead\r\n    if (space != null) {\r\n      matrix = this.worldTransformation.clone();\r\n      matrix.prepend(space.worldTransformation.clone().invert());\r\n    }\r\n\r\n    let bounds = new Rectangle();\r\n    this.onGetLocalBounds(bounds);\r\n\r\n    matrix.transformRect(bounds, bounds);\r\n    outRect.expand(bounds.x, bounds.y, bounds.width, bounds.height);\r\n\r\n    if (includeChildren)\r\n      for (let i = 0; i < this.numChildren; i++)\r\n        this.getChildAt(i).getBounds(space, includeChildren, outRect);\r\n\r\n    return outRect;\r\n  }\r\n\r\n  /**\r\n   * setTransform -\r\n   *\r\n   * @param {number} [x=0]      x-cord\r\n   * @param {number} [y=0]      y-cord\r\n   * @param {number} [r=0]      rotation\r\n   * @param {number} [scaleX=1] scale-x\r\n   * @param {number} [scaleY=1] scale-y\r\n   * @param {number} [anchorX=0] anchor-x\r\n   * @param {number} [anchorY=0] anchor-y\r\n   * @param {number} [includeChildren=true] include children when adjusting pivot?\r\n   *\r\n   * @return {GameObject}\r\n   */\r\n  setTransform(x = 0, y = 0, r = 0, scaleX = 1, scaleY = 1, anchorX = 0, anchorY = 0, includeChildren = true) {\r\n    this.mX = x;\r\n    this.mY = y;\r\n    this.mRotation = r;\r\n    this.mScaleX = scaleX;\r\n    this.mScaleY = scaleY;\r\n\r\n    this.getBounds(this, includeChildren, Rectangle.__cache.zero());\r\n    this.mPivotX = Rectangle.__cache.width * anchorX;\r\n    this.mPivotY = Rectangle.__cache.height * anchorY;\r\n\r\n    this.setTransformDirty();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * localToGlobal - Description\r\n   *\r\n   * @param {Vector} localPoint       Description\r\n   * @param {Vector|null} [outVector=null] Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  localToGlobal(localPoint, outVector = null) {\r\n    return this.worldTransformation.transformVector(localPoint, outVector);\r\n  }\r\n\r\n  /**\r\n   * globalToLocal - Description\r\n   *\r\n   * @param {Vector} localPoint       Description\r\n   * @param {Vector|null} [outVector=null] Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  globalToLocal(globalPoint, outVector = null) {\r\n    return this.worldTransformationInversed.transformVector(globalPoint, outVector);\r\n  }\r\n\r\n  /*:--- PROPERTIES ---:*/\r\n\r\n  /**\r\n   * numChildren - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get numChildren() {\r\n    return this.mChildren.length;\r\n  }\r\n\r\n  /**\r\n   * name - Description\r\n   *\r\n   * @return {string|null} Description\r\n   */\r\n  get name() {\r\n    return this.mName;\r\n  }\r\n\r\n  /**\r\n   * name - Description\r\n   *\r\n   * @param {string|null} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set name(value) {\r\n    this.mName = value;\r\n  }\r\n\r\n  /**\r\n   * x - Gets the x coordinate of the GameoObject instance relative to the local coordinates of the parent GameoObject.\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get x() {\r\n    return this.mX;\r\n  }\r\n\r\n  /**\r\n   * x - Sets the x coordinate of the GameoObject instance relative to the local coordinates of the parent GameoObject.\r\n   *\r\n   * @param {number} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set x(value) {\r\n    if (this.mX == value)\r\n      return;\r\n\r\n    this.mX = value;\r\n    this.setTransformDirty();\r\n  }\r\n\r\n  /**\r\n   * y - Gets the y coordinate of the GameoObject instance relative to the local coordinates of the parent GameoObject.\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get y() {\r\n    return this.mY;\r\n  }\r\n\r\n  /**\r\n   * y - Sets the y coordinate of the GameoObject instance relative to the local coordinates of the parent GameoObject.\r\n   *\r\n   * @param {number} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set y(value) {\r\n    if (this.mY == value)\r\n      return;\r\n\r\n    this.mY = value;\r\n    this.setTransformDirty();\r\n  }\r\n\r\n  /**\r\n   * pivotX - Description\r\n   * @export\r\n   * @return {number} Description\r\n   */\r\n  get pivotX() {\r\n    return this.mPivotX;\r\n  }\r\n\r\n  /**\r\n   * pivotX - Description\r\n   *\r\n   * @export\r\n   * @param {number} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set pivotX(value) {\r\n    if (this.mPivotX == value)\r\n      return;\r\n\r\n    this.mPivotX = value;\r\n    this.setTransformDirty();\r\n  }\r\n\r\n  /**\r\n   * pivotY - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get pivotY() {\r\n    return this.mPivotY;\r\n  }\r\n\r\n  /**\r\n   * pivotY - Description\r\n   *\r\n   * @param {number} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set pivotY(value) {\r\n    if (this.mPivotY == value)\r\n      return;\r\n\r\n    this.mPivotY = value;\r\n    this.setTransformDirty();\r\n  }\r\n\r\n  /**\r\n   * alignPivot\r\n   *\r\n   * @param {number}  [px=0.5]\r\n   * @param {number}  [py=0.5]\r\n   * @param {boolean} [includeChildren=true]\r\n   *\r\n   * @return {GameObject}\r\n   */\r\n  alignPivot(ax = 0.5, ay = 0.5, includeChildren = true) {\r\n    this.getBounds(this, includeChildren, Rectangle.__cache.zero());\r\n\r\n    this.mPivotX = Rectangle.__cache.width * ax;\r\n    this.mPivotY = Rectangle.__cache.height * ay;\r\n    this.setTransformDirty();\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * scaleX - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get scaleX() {\r\n    return this.mScaleX;\r\n  }\r\n\r\n  /**\r\n   * scaleX - Description\r\n   *\r\n   * @param {number} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set scaleX(value) {\r\n    if (this.mScaleX == value)\r\n      return;\r\n\r\n    this.mScaleX = value;\r\n    this.setTransformDirty();\r\n  }\r\n\r\n  /**\r\n   * scaleY - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get scaleY() {\r\n    return this.mScaleY;\r\n  }\r\n\r\n  /**\r\n   * scaleY - Description\r\n   *\r\n   * @param {number} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set scaleY(value) {\r\n    if (this.mScaleY == value)\r\n      return;\r\n\r\n    this.mScaleY = value;\r\n    this.setTransformDirty();\r\n  }\r\n\r\n  /**\r\n   * rotation - returns current rotation\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get rotation() {\r\n    return this.mRotation;\r\n  }\r\n\r\n  /**\r\n   * rotation - Description\r\n   *\r\n   * @param {number} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set rotation(value) {\r\n    if (this.mRotation == value)\r\n      return;\r\n\r\n    this.mRotation = value;\r\n    this.setTransformDirty();\r\n  }\r\n\r\n  /**\r\n   * parent - Description\r\n   *\r\n   * @return {GameObject} Description\r\n   */\r\n  get parent() {\r\n    return this.mParent;\r\n  }\r\n\r\n  /**\r\n   * root - Description\r\n   *\r\n   * @return {GameObject|null} Description\r\n   */\r\n  get root() {\r\n    let current = this;\r\n\r\n    if (current === Black.instance.root)\r\n      return current;\r\n\r\n    while (current.mParent) {\r\n      if (current === Black.instance.root)\r\n        return current;\r\n      else if (current.mParent === Black.instance.root)\r\n        return Black.instance.root;\r\n      else\r\n        current = current.mParent;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * depth - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get depth() {\r\n    if (this.mParent)\r\n      return this.mParent.depth + 1;\r\n    else\r\n      return 0;\r\n  }\r\n\r\n  /**\r\n   * index - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get index() {\r\n    return this.mIndex;\r\n  }\r\n\r\n  /**\r\n   * width - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get width() {\r\n    return this.getBounds(this.mParent).width;\r\n  }\r\n\r\n  /**\r\n   * width - Description\r\n   *\r\n   * @param {number} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set width(value) {\r\n    this.scaleX = 1;\r\n    const currentWidth = this.width;\r\n\r\n    if (currentWidth != 0.0)\r\n      this.scaleX = value / currentWidth;\r\n  }\r\n\r\n  /**\r\n   * height - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get height() {\r\n    return this.getBounds(this.mParent).height;\r\n  }\r\n\r\n  /**\r\n   * height - Description\r\n   *\r\n   * @param {number} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set height(value) {\r\n    this.scaleY = 1;\r\n    const currentHeight = this.height;\r\n\r\n    if (currentHeight != 0)\r\n      this.scaleY = value / currentHeight;\r\n  }\r\n\r\n\r\n  /**\r\n   * localWidth - returns height in local space without children.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get localWidth() {\r\n    return this.getBounds(this, false).width;\r\n  }\r\n\r\n\r\n  /**\r\n   * localHeight - returns height in local space without children.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get localHeight() {\r\n    return this.getBounds(this, false).height;\r\n  }\r\n\r\n  // TODO: precache\r\n  /**\r\n   * path - Description\r\n   *\r\n   * @return {string} Description\r\n   */\r\n  get path() {\r\n    if (this.mParent !== null)\r\n      return this.mParent.path + '/' + this.mName;\r\n\r\n    return this.mName;\r\n  }\r\n\r\n  /**\r\n   * tag - Description\r\n   *\r\n   * @return {string|null} Description\r\n   */\r\n  get tag() {\r\n    return this.mTag;\r\n  }\r\n\r\n  /**\r\n   * tag - Description\r\n   *\r\n   * @param {string|null} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set tag(value) {\r\n    if (this.mTag === value)\r\n      return;\r\n\r\n    /** @type {string|null} */\r\n    let old = this.mTag;\r\n    this.mTag = value;\r\n\r\n    if (this.mAdded)\r\n      Black.instance.onTagUpdated(this, old, value);\r\n  }\r\n\r\n\r\n  /**\r\n   * co - Starts coroutine.\r\n   *\r\n   * @param {Function} gen\r\n   * @param {*=} [ctx=null]\r\n   *\r\n   * @return {Generator}\r\n   */\r\n  spawn(gen, ctx = null) {\r\n    var iter = gen.apply(ctx == null ? this : ctx);\r\n\r\n    function step(it) {\r\n      if (it.done)\r\n        return;\r\n\r\n      if (typeof it.value === 'function')\r\n        it.value(x => step(iter.next(x)));\r\n      else\r\n        step(iter.next(it.value));\r\n    }\r\n\r\n    step(iter.next());\r\n    return iter;\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {number} [seconds=1]\r\n   *\r\n   * @return {function(*):*}\r\n   */\r\n  wait(seconds = 1) {\r\n    return cb => setTimeout(cb.bind(this, seconds * 1000), seconds * 1000);\r\n  }\r\n\r\n\r\n  /**\r\n   * waitMessage - Waits for a speceific message\r\n   *\r\n   * @param {string} message The name of the message to wait for\r\n   *\r\n   * @return {function(?):?} Description\r\n   */\r\n  waitMessage(message) {\r\n    return cb => this.on(message, cb.bind(this));\r\n  }\r\n\r\n\r\n  /**\r\n   * setDirty\r\n   *\r\n   * @param {DirtyFlag} flag\r\n   * @param {boolean} [includeChildren=true] Description\r\n   *\r\n   * @return {void}\r\n   */\r\n  setDirty(flag, includeChildren = true) {\r\n    if (includeChildren) {\r\n      GameObject.forEach(this, x=> {\r\n        x.mDirty |= flag;\r\n      });\r\n    } else {\r\n      this.mDirty |= flag;\r\n    }\r\n  }\r\n\r\n  setTransformDirty() {\r\n    this.setDirty(DirtyFlag.LOCAL, false);\r\n    this.setDirty(DirtyFlag.WORLD, true);\r\n  }\r\n\r\n  /**\r\n   * dispose\r\n   *\r\n   * @return {void}\r\n   */\r\n  dispose() {\r\n  }\r\n\r\n  // TODO: rename method\r\n  /**\r\n   * getBoundsWithPoints - Description\r\n   *\r\n   * @param {Array<number>} points              Description\r\n   * @param {Matrix} worldTransformation Description\r\n   * @param {Rectangle=} outRect             Description\r\n   *\r\n   * @return {Rectangle} Description\r\n   */\r\n  static getBoundsWithPoints(points, worldTransformation, outRect) {\r\n    outRect = outRect || new Rectangle();\r\n\r\n    let minX = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    let xx = 0;\r\n    let yy = 0;\r\n    let tmpVector = new Vector();\r\n\r\n    for (let i = 0; i < points.length; i += 2) {\r\n      worldTransformation.transformXY(points[i], points[i + 1], tmpVector);\r\n\r\n      if (minX > tmpVector.x)\r\n        minX = tmpVector.x;\r\n\r\n      if (maxX < tmpVector.x)\r\n        maxX = tmpVector.x;\r\n\r\n      if (minY > tmpVector.y)\r\n        minY = tmpVector.y;\r\n\r\n      if (maxY < tmpVector.y)\r\n        maxY = tmpVector.y;\r\n    }\r\n\r\n    outRect.set(minX, minY, maxX - minX, maxY - minY);\r\n    return outRect;\r\n  }\r\n\r\n  /**\r\n   * intersects - Description\r\n   *\r\n   * @param {GameObject} gameObject Description\r\n   * @param {Vector} point      Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  static intersects(gameObject, point) {\r\n    let tmpVector = new Vector();\r\n    let inv = gameObject.worldTransformation.invert();\r\n\r\n    inv.transformVector(point, tmpVector);\r\n\r\n    let rect = gameObject.getBounds(gameObject, false);\r\n    return rect.containsXY(tmpVector.x, tmpVector.y);\r\n  }\r\n\r\n  /**\r\n   * intersectsAt - Description\r\n   *\r\n   * @param {GameObject} gameObject Description\r\n   * @param {Vector} point      Description\r\n   * @param {Vector=} outVector  Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  static intersectsAt(gameObject, point, outVector = undefined) {\r\n    outVector = outVector || new Vector();\r\n\r\n    let tmpVector = Vector.__cache;\r\n    let inv = gameObject.worldTransformationInversed;\r\n\r\n    inv.transformVector(point, tmpVector);\r\n\r\n    let rect = gameObject.getBounds(gameObject, false);\r\n    let contains = rect.containsXY(tmpVector.x, tmpVector.y);\r\n\r\n    if (!contains)\r\n      return false;\r\n\r\n    outVector.x = tmpVector.x - rect.x;\r\n    outVector.y = tmpVector.y - rect.y;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * intersectsWith - Description\r\n   *\r\n   * @param {GameObject} gameObject Description\r\n   * @param {Vector} point      Description\r\n   *\r\n   * @return {GameObject|null} returns object or null\r\n   */\r\n  static intersectsWith(gameObject, point) {\r\n    let obj = null;\r\n    for (let i = gameObject.numChildren - 1; i >= 0; --i) {\r\n      let child = gameObject.mChildren[i];\r\n\r\n      obj = GameObject.intersectsWith(child, point);\r\n      if (obj != null)\r\n        return obj;\r\n\r\n      let inside = GameObject.intersects(child, point);\r\n      if (inside) {\r\n        obj = child;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (obj === null && GameObject.intersects(gameObject, point)) {\r\n      return gameObject;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * findWithTag - Description\r\n   *\r\n   * @param {string} tag Description\r\n   *\r\n   * @return {Array<GameObject>|null} Description\r\n   */\r\n  static findWithTag(tag) {\r\n    if (Black.instance.mTagCache.hasOwnProperty(tag) === false)\r\n      return null;\r\n\r\n    return Black.instance.mTagCache[tag];\r\n  }\r\n\r\n  /**\r\n   * findComponents - Returns a list of Components\r\n   *\r\n   * @param {GameObject} gameObject\r\n   * @param {function (new:Component)} type\r\n   *\r\n   * @return {Array<Component>}\r\n   */\r\n  static findComponents(gameObject, type) {\r\n    Assert.is(gameObject !== null, 'gameObject cannot be null.');\r\n    Assert.is(type !== null, 'type cannot be null.');\r\n\r\n    /** @type {Array<Component>} */\r\n    let list = [];\r\n\r\n    /** @type {function(GameObject, function(new:Component)):void} */\r\n    let f = function(gameObject, type) {\r\n      for (let i = 0; i < gameObject.mComponents.length; i++) {\r\n        let c = gameObject.mComponents[i];\r\n        if (c instanceof type)\r\n          list.push(c);\r\n      }\r\n\r\n      for (let i = 0; i < gameObject.mChildren.length; i++)\r\n        f(gameObject.mChildren[i], type);\r\n    };\r\n\r\n    f(gameObject, type);\r\n\r\n    return list;\r\n  }\r\n\r\n  /**\r\n   * forEach - Runs action accross all object mathing the name.\r\n   *\r\n   * @param {GameObject} node   Description\r\n   * @param {function(GameObject)} action Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  static forEach(node, action) {\r\n    if (node == null)\r\n      node = Black.instance.root;\r\n\r\n    action(node);\r\n\r\n    for (let i = 0; i < node.numChildren; i++)\r\n      GameObject.forEach(node.getChildAt(i), action);\r\n  }\r\n\r\n\r\n  /**\r\n   * find - Finds object by its name.\r\n   *\r\n   * @param {string} name Description\r\n   * @param {GameObject} node Description\r\n   *\r\n   * @return {GameObject} Description\r\n   */\r\n  static find(name, node) {\r\n    if (node == null)\r\n      node = Black.instance.root;\r\n\r\n    if (node.name === name)\r\n      return node;\r\n\r\n    for (let i = 0; i < node.numChildren; i++) {\r\n      let r = GameObject.find(name, node.getChildAt(i));\r\n      if (r != null)\r\n        return r;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\n/** @type {number}\r\n * @nocollapse\r\n */\r\nGameObject.ID = 0;\r\n\r\n/**\r\n * @enum {number}\r\n */\r\n\r\nvar DirtyFlag = {\r\n  LOCAL: 1,\r\n  WORLD: 2,\r\n  DIRTY: 0xffffff\r\n};\r\n","// TODO:\r\n// [_] Do not handle is loaded or not.\r\n// Texture shall not be responsible for loading itself.\r\n// We have TextureAsset for it.\r\n// native size - always the size of physical texture\r\n// source size - the original size of a texture to\r\n//\r\n\r\n\r\nclass Texture {\r\n  /**\r\n   * @param  {Image} nativeTexture description\r\n   * @param  {Rectangle=} region = undefined description\r\n   * @param  {Rectangle=} untrimmedRect = undefined description\r\n   */\r\n  constructor(nativeTexture, region, untrimmedRect) {\r\n    /** @type {Image} */\r\n    this.mTexture = nativeTexture;\r\n\r\n    /** @type {Rectangle} */\r\n    this.mRegion;\r\n\r\n    /** @type {boolean} */\r\n    this.mIsSubtexture = false;\r\n\r\n    /** @type {number} */\r\n    this.mId = ++Texture.__ID;\r\n\r\n    if (region === undefined) {\r\n      this.mRegion = new Rectangle(0, 0, nativeTexture.naturalWidth, nativeTexture.naturalHeight);\r\n    } else {\r\n      this.mRegion = /** @type {Rectangle} */ (region);\r\n      this.mIsSubtexture = true;\r\n    }\r\n\r\n    /** @type {boolean} */\r\n    this.mTrimmed = untrimmedRect !== undefined;\r\n\r\n    if (this.mTrimmed === false)\r\n      untrimmedRect = new Rectangle(0, 0, this.mRegion.width, this.mRegion.height);\r\n\r\n    /** @type {Rectangle} */\r\n    this.mUntrimmedRect = /** @type {Rectangle} */ (untrimmedRect);\r\n\r\n    /** @type {boolean} */\r\n    this.mIsLoaded = true;\r\n  }\r\n\r\n  /**\r\n   * id - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get id() {\r\n    return this.mId;\r\n  }\r\n\r\n  /**\r\n   * isTrimmed - Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  get isTrimmed() {\r\n    return this.mTrimmed;\r\n  }\r\n\r\n  /**\r\n   * isSubTexture - Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  get isSubTexture() {\r\n    return this.mIsSubtexture;\r\n  }\r\n\r\n  // TODO: if we update texture we have to nofity everything, send signal\r\n  // update(nativeTexture = null, region = null, source = null, crop = null){\r\n  // }\r\n\r\n  // render width\r\n  // render height\r\n  // croppedWidth, croppedHeight\r\n  // width, height\r\n  //\r\n\r\n  /**\r\n   * untrimmedRect - Description\r\n   *\r\n   * @return {Rectangle} Description\r\n   */\r\n  get untrimmedRect() {\r\n    return this.mUntrimmedRect;\r\n  }\r\n\r\n  /**\r\n   * width - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get width() {\r\n    if (this.mRegion)\r\n      return this.mRegion.width;\r\n\r\n    return this.mTexture.naturalWidth;\r\n  }\r\n\r\n  /**\r\n   * height - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get height() {\r\n    if (this.mRegion)\r\n      return this.mRegion.height;\r\n\r\n    return this.mTexture.naturalHeight;\r\n  }\r\n\r\n  /**\r\n   * region - Description\r\n   *\r\n   * @return {Rectangle} Description\r\n   */\r\n  get region() {\r\n    return this.mRegion;\r\n  }\r\n\r\n  /**\r\n   * native - Description\r\n   *\r\n   * @return {Image} Description\r\n   */\r\n  get native() {\r\n    return this.mTexture;\r\n  }\r\n\r\n  /**\r\n   * isLoaded - Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  get isLoaded() {\r\n    return this.mIsLoaded;\r\n  }\r\n\r\n  /**\r\n   * type - Description\r\n   *\r\n   * @return {string} Description\r\n   */\r\n  get type() {\r\n    return 'Texture';\r\n  }\r\n\r\n  /**\r\n   * baseType - Description\r\n   *\r\n   * @return {string} Description\r\n   */\r\n  get baseType() {\r\n    return 'Texture';\r\n  }\r\n\r\n  /**\r\n   * dispose - Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  dispose() {\r\n    this.mTexture = null;\r\n  }\r\n\r\n  /**\r\n   * fromBase64String - Description\r\n   *\r\n   * @param {string} string Description\r\n   *\r\n   * @return {Texture} Description\r\n   */\r\n  static fromBase64String(string) {\r\n    let imgElement = new Image();\r\n    imgElement.src = string;\r\n    return new Texture(imgElement);\r\n  }\r\n\r\n\r\n  /**\r\n   * fromCanvasAsImage - Description\r\n   *\r\n   * @param {HTMLElement}   canvas           Description\r\n   * @param {string} [type=image/png] Description\r\n   * @param {number} [quality=1]      Description\r\n   *\r\n   * @return {Texture} Description\r\n   */\r\n  static fromCanvasAsImage(canvas, type = 'image/png', quality = 1) {\r\n    let imgElement = new Image();\r\n    imgElement.src = canvas.toDataURL(type, quality);\r\n\r\n    return new Texture(imgElement);\r\n  }\r\n\r\n\r\n  /**\r\n   * fromCanvas - Description\r\n   *\r\n   * @param {HTMLElement} canvas Description\r\n   *\r\n   * @return {Texture} Description\r\n   */\r\n  static fromCanvas(canvas) {\r\n    return Black.instance.video.getTextureFromCanvas(canvas);\r\n  }\r\n}\r\n\r\n/** @type {number}\r\n * @nocollapse\r\n */\r\nTexture.__ID = 0;\r\n\r\n/** @type {Image|null}\r\n * @nocollapse\r\n */\r\nTexture.MISSING_IMAGE_CACHE = null;\r\n","\r\nclass AtlasTexture extends Texture {\r\n  /**\r\n   * constructor - Creates an Texture Atlas\r\n   *\r\n   * @param {Texture} texture A base texture object.\r\n   * @param {{meta: *, frames: *}} jsonObject\r\n   *\r\n   * @return {void}\r\n   */\r\n  constructor(texture, jsonObject) {\r\n    super(texture.native);\r\n\r\n    /** @type {Object} */\r\n    this.mMeta = {};\r\n\r\n    /** @dict */\r\n    this.mSubTextures = {}; // dictionary\r\n\r\n    this.__parseJson(jsonObject);\r\n  }\r\n\r\n  /**\r\n   * __parseJson\r\n   *\r\n   * @param  {{meta: *, frames: *}} o\r\n   * @return {void}\r\n   */\r\n  __parseJson(o) {\r\n    const NEGATIVE_HALF_PI = -(Math.PI / 2);\r\n\r\n    // if (o.meta.format)\r\n    //   this.mMeta.format = o.meta.format;\r\n    //\r\n    // if (o.meta.scale)\r\n    //   this.mMeta.scale = parseFloat(o.meta.scale);\r\n\r\n    for (let key in o.frames) {\r\n      let data = /** @type {Array<number>} */ (o.frames[key]);\r\n\r\n      let region = new Rectangle(data[0], data[1], data[2], data[3]);\r\n      let untrimmedRect = new Rectangle(data[4], data[5], data[6], data[7]);\r\n\r\n      this.mSubTextures[key] = new Texture(this.native, region, untrimmedRect);\r\n    }\r\n  }\r\n\r\n  // addRegion(name, region, frame) {}\r\n  //\r\n  // removeRegion() {}\r\n\r\n  /**\r\n   * getTexture - Returns the textures by a given name.\r\n   *\r\n   * @param {string} name\r\n   *\r\n   * @return {Texture} The Texture or null;\r\n   */\r\n  getTexture(name) {\r\n    /** @type {Texture} */\r\n    let t = this.mSubTextures[name];\r\n    if (t === undefined)\r\n      console.warn('Texture \\'%s\\' was not found in cache.', name);\r\n\r\n    return /** @type {Texture} */ (t);\r\n  }\r\n\r\n  /**\r\n   * getTextures - Returns list of Textures.\r\n   *\r\n   * @param {string|null} [nameMask=null] The mask to filter by.\r\n   * @param {Array<Texture>|null} outTextures\r\n   *\r\n   * @return {Array<Texture>} The list of found textures.\r\n   */\r\n  getTextures(nameMask = null, outTextures = null) {\r\n    let out = outTextures || [];\r\n    if (nameMask === null) {\r\n      for (let key in this.mSubTextures)\r\n        out.push(this.mSubTextures[key]);\r\n\r\n      return /** @type {Array<Texture>} */ (out);\r\n    }\r\n\r\n    let names = [];\r\n\r\n    // TODO: make helper wild function\r\n    let re = new RegExp(\"^\" + nameMask.split(\"*\").join(\".*\") + \"$\");\r\n    for (let key in this.mSubTextures)\r\n      if (re.test(key))\r\n        names.push(key);\r\n\r\n    names.sort(this.__naturalComparer);\r\n\r\n    for (let i = 0; i < names.length; i++)\r\n      out.push(this.mSubTextures[names[i]]);\r\n\r\n    return out;\r\n  }\r\n\r\n  /**\r\n   * @param {*} a\r\n   * @param {*} b\r\n   *\r\n   * @return {number}\r\n   */\r\n  __naturalComparer(a, b) {\r\n    const NUMBER_GROUPS = /(-?\\d*\\.?\\d+)/g;\r\n    let aa = String(a).split(NUMBER_GROUPS);\r\n    let bb = String(b).split(NUMBER_GROUPS);\r\n    let min = Math.min(aa.length, bb.length);\r\n\r\n    for (let i = 0; i < min; i++) {\r\n      let x = parseFloat(aa[i]) || aa[i].toLowerCase();\r\n      let y = parseFloat(bb[i]) || bb[i].toLowerCase();\r\n\r\n      if (x < y)\r\n        return -1;\r\n      else if (x > y)\r\n        return 1;\r\n    }\r\n\r\n    return 0;\r\n  };\r\n\r\n  //dispose() {}\r\n}\r\n","// TODO: handle errors\r\n// TODO: v2: parallel loading?\r\n//\r\n//\r\n\r\nclass Asset extends MessageDispatcher {\r\n  /**\r\n   * @param  {string} name description\r\n   * @param  {string} url  description\r\n   */\r\n  constructor(name, url) {\r\n    super();\r\n\r\n    /** @type {string} */\r\n    this.mName = name;\r\n\r\n    /** @type {string} */\r\n    this.mUrl = url;\r\n\r\n    /** @type {*|null} */\r\n    this.mData = null;\r\n\r\n    /** @type {boolean} */\r\n    this.mIsLoaded = false;\r\n\r\n    /** @type {string|undefined} */\r\n    this.mMimeType = undefined;\r\n\r\n    /** @type {string} */\r\n    this.mResponseType = '';\r\n\r\n    /** @type {string} */\r\n    this.mExtension = this.getExtension(url);\r\n\r\n    /** @type {XMLHttpRequest|null} */\r\n    this.mRequest = null;\r\n  }\r\n\r\n  /**\r\n   * load\r\n   *\r\n   * @return {void}\r\n   */\r\n  load() {\r\n    //console.log('Asset: loading asset \\'%s\\' from \\'%s\\'', this.mName, this.mUrl);\r\n\r\n    this.mRequest = new XMLHttpRequest();\r\n    //this.mRequest.onprogress = (pe) => this.onProgressChanged(pe);\r\n\r\n    if (this.mRequest.overrideMimeType && this.mMimeType)\r\n      this.mRequest.overrideMimeType(this.mMimeType);\r\n\r\n    this.mRequest.responseType = this.mResponseType;\r\n    this.mRequest.open(\"GET\", this.mUrl, true);\r\n    this.mRequest.onreadystatechange = () => {\r\n      if (this.mRequest.readyState === 4) {\r\n        if ((this.mRequest.status === 200) || ((this.mRequest.status === 0) && this.mRequest.responseText))\r\n          this.onLoaded();\r\n        else\r\n          throw new Error('Error loading ' + this.mUrl + \" (\" + this.mRequest.status + \":\"+ this.mRequest.responseText + \")\"); //TODO handle errors\r\n      }\r\n    };\r\n\r\n    this.mRequest.send(null);\r\n  }\r\n\r\n\r\n  /**\r\n   * onLoaded\r\n   *\r\n   * @return {void}\r\n   */\r\n  onLoaded() {\r\n    this.mIsLoaded = true;\r\n    this.post('complete');\r\n  }\r\n\r\n  /**\r\n   * name\r\n   *\r\n   * @return {string}\r\n   */\r\n  get name() {\r\n    return this.mName;\r\n  }\r\n\r\n  /**\r\n   * data\r\n   *\r\n   * @return {*}\r\n   */\r\n  get data() {\r\n    return this.mData;\r\n  }\r\n\r\n  /**\r\n   * isLoaded\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  get isLoaded() {\r\n    return this.mIsLoaded;\r\n  }\r\n\r\n  // TODO: finish\r\n  dispose() {}\r\n\r\n  /**\r\n   * getExtension\r\n   *\r\n   * @param {string} url\r\n   *\r\n   * @return {string}\r\n   */\r\n  getExtension(url) {\r\n    if (url.indexOf(\".\") === -1)\r\n      return '';\r\n\r\n    return url.substring(url.indexOf(\".\")).toLowerCase();\r\n  }\r\n}\r\n","\r\nclass TextureAsset extends Asset {\r\n  /**\r\n   * constructor - Description\r\n   *\r\n   * @param {string} name Description\r\n   * @param {string} url  Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  constructor(name, url) {\r\n    super(name, url);\r\n\r\n    /** @type {Image} */\r\n    this.mImageElement = new Image();\r\n  }\r\n\r\n  /**\r\n   * onLoaded - Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onLoaded() {\r\n    //console.log('TextureAsset: \\'%s\\' loaded', this.mName);\r\n\r\n    this.mData = new Texture(this.mImageElement);\r\n\r\n    super.onLoaded();\r\n  }\r\n\r\n  /**\r\n   * load - Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  load() {\r\n    this.mImageElement.src = this.mUrl;\r\n    this.mImageElement.onload = () => {\r\n      this.onLoaded();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * type - Description\r\n   *\r\n   * @return {string} Description\r\n   */\r\n  get type() {\r\n    return \"TextureAsset\";\r\n  }\r\n}\r\n","\r\nclass JSONAsset extends Asset {\r\n  /**\r\n   * constructor\r\n   *\r\n   * @param {string} name\r\n   * @param {string} url\r\n   *\r\n   * @return {void}\r\n   */\r\n  constructor(name, url) {\r\n    super(name, url);\r\n    this.mimeType = \"application/json\";\r\n  }\r\n\r\n  /**\r\n   * onLoaded\r\n   *\r\n   * @return {void}\r\n   */\r\n  onLoaded(){\r\n    this.mData = JSON.parse(/** @type {string} */ (this.mRequest.responseText) );\r\n    super.onLoaded();\r\n  }\r\n}\r\n","\r\nclass AtlasTextureAsset extends Asset {\r\n  /**\r\n   * constructor\r\n   *\r\n   * @param {string} name\r\n   * @param {string} imageUrl\r\n   * @param {string} dataUrl\r\n   *\r\n   * @return {void}\r\n   */\r\n  constructor(name, imageUrl, dataUrl) {\r\n    super(name, imageUrl);\r\n\r\n    /** @type {Image} */\r\n    this.mImageElement = new Image();\r\n\r\n    /** @type {JSONAsset} */\r\n    this.dataAsset = new JSONAsset(name, dataUrl);\r\n    this.dataAsset.on('complete', this.onJsonLoaded, this);\r\n  }\r\n\r\n  onJsonLoaded() {\r\n    this.mImageElement.src = this.mUrl;\r\n    this.mImageElement.onload = () => {\r\n      this.onLoaded();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onLoaded\r\n   *\r\n   * @return {void}\r\n   */\r\n  onLoaded() {\r\n    this.mData = new AtlasTexture(new Texture(this.mImageElement), /** @type {{meta: *, frames: *}} */ (this.dataAsset.data));\r\n\r\n    super.onLoaded();\r\n  }\r\n\r\n  /**\r\n   * load\r\n   * @override\r\n   *\r\n   * @return {void}\r\n   */\r\n  load() {\r\n    this.dataAsset.load();\r\n  }\r\n}\r\n","/*\r\nTODO:\r\n  1. propper error handling\r\n  2. max parallel downloads\r\n  3. check for name dublicates\r\n  4. load progress\r\n*/\r\n\r\n\r\nclass AssetManager extends MessageDispatcher {\r\n  constructor() {\r\n    super();\r\n\r\n    /** @type {string} */\r\n    this.mDefaultPath = '';\r\n\r\n    /** @type {number} */\r\n    this.mTotalLoaded = 0;\r\n\r\n    /** @type {boolean} */\r\n    this.mIsAllLoaded = false;\r\n\r\n    /** @type {number} */\r\n    this.mLoadingProgress = 0;\r\n\r\n    /** @type {Array<Asset>} */\r\n    this.mQueue = [];\r\n\r\n    /** @dict */\r\n    this.mTextures = {};\r\n\r\n    /** @dict */\r\n    this.mAtlases = {};\r\n\r\n    /** @dict */\r\n    this.mJsons = {};\r\n  }\r\n\r\n  enqueueImage(name, url) {\r\n    this.mQueue.push(new TextureAsset(name, this.mDefaultPath + url));\r\n  }\r\n\r\n  enqueueAtlas(name, imageUrl, dataUrl) {\r\n    this.mQueue.push(new AtlasTextureAsset(name, this.mDefaultPath + imageUrl, this.mDefaultPath + dataUrl));\r\n  }\r\n\r\n  enqueueJson(name, url) {\r\n    this.mQueue.push(new JSONAsset(name, this.mDefaultPath + url));\r\n  }\r\n\r\n  /**\r\n   * loadQueue\r\n   *\r\n   * @return {void}\r\n   */\r\n  loadQueue() {\r\n    for (let i = 0; i < this.mQueue.length; i++) {\r\n      let item = this.mQueue[i];\r\n\r\n      item.on(Message.COMPLETE, this.onAssetLoaded, this);\r\n      item.load();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * onAssetLoaded\r\n   *\r\n   * @param {Message} msg\r\n   *\r\n   * @return {void}\r\n   */\r\n  onAssetLoaded(msg) {\r\n    this.mTotalLoaded++;\r\n    this.mLoadingProgress = this.mTotalLoaded / this.mQueue.length;\r\n\r\n    let item = msg.sender;\r\n\r\n    // TODO: rework this\r\n    // TODO: check for dups\r\n    if (item.constructor === TextureAsset)\r\n      this.mTextures[item.name] = item.data;\r\n    else if (item.constructor === AtlasTextureAsset)\r\n      this.mAtlases[item.name] = item.data;\r\n    else if (item.constructor === JSONAsset)\r\n      this.mJsons[item.name] = item.data;\r\n    else\r\n      console.error('Unable to handle asset type.', item);\r\n\r\n    this.post(Message.PROGRESS, this.mLoadingProgress);\r\n\r\n    if (this.mTotalLoaded === this.mQueue.length) {\r\n      this.mQueue.splice(0, this.mQueue.length);\r\n\r\n      this.mIsAllLoaded = true;\r\n      this.post(Message.COMPLETE);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * getTexture\r\n   *\r\n   * @param {string} name\r\n   *\r\n   * @return {Texture|null}\r\n   */\r\n  getTexture(name) {\r\n    /** @type {Texture} */\r\n    let t = this.mTextures[name];\r\n\r\n    if (t != null)\r\n      return t;\r\n\r\n    for (let key in this.mAtlases) {\r\n      t = this.mAtlases[key].getTexture(name);\r\n      if (t != null)\r\n        return t;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {string} name\r\n   *\r\n   * @return {AtlasTexture}\r\n   */\r\n  getAtlas(name) {\r\n    return this.mAtlases[name];\r\n  }\r\n\r\n  /**\r\n   * defaultPath\r\n   *\r\n   * @return {string}\r\n   */\r\n  get defaultPath() {\r\n    return this.mDefaultPath;\r\n  }\r\n\r\n  /**\r\n   * defaultPath\r\n   *\r\n   * @param {string} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set defaultPath(value) {\r\n    this.mDefaultPath = value;\r\n  }\r\n\r\n  /**\r\n   * isAllLoaded\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  get isAllLoaded() {\r\n    return this.mIsAllLoaded;\r\n  }\r\n}\r\n\r\n/** @type {AssetManager} */\r\nAssetManager.default = new AssetManager();\r\n","/**\r\n * A blend mode enum.\r\n * @enum {string}\r\n */\r\n\r\nvar BlendMode = {\r\n  AUTO: 'auto',\r\n  NORMAL: 'source-over',\r\n  ADD: 'lighter',\r\n  MULTIPLY: 'multiply',\r\n  SCREEN: 'screen',\r\n  OVERLAY: 'overlay',\r\n  DARKEN: 'darken',\r\n  LIGHTEN: 'lighten',\r\n  COLOR_DODGE: 'color-dodge',\r\n  COLOR_BURN: 'color-burn',\r\n  HARD_LIGHT: 'hard-light',\r\n  SOFT_LIGHT: 'soft-light',\r\n  DIFFERENCE: 'difference',\r\n  EXCLUSION: 'exclusion',\r\n  HUE: 'hue',\r\n  SATURATE: 'saturate',\r\n  COLOR: 'color',\r\n  LUMINOSITY: 'luminosity'\r\n};\r\n","\r\nclass NullDriver {\r\n  /**\r\n   * @param  {HTMLElement} containerElement description\r\n   * @param  {number} width            description\r\n   * @param  {number} height           description\r\n   */\r\n  constructor(containerElement, width, height) {\r\n    /** @type {string} */\r\n    this.mGlobalBlendMode = 'auto';\r\n\r\n    /** @type {HTMLElement} */\r\n    this.mContainerElement = /** @type {HTMLElement} */ (containerElement);\r\n\r\n    /** @type {number} */\r\n    this.mClientWidth = width;\r\n\r\n    /** @type {number} */\r\n    this.mClientHeight = height;\r\n\r\n    /** @type {Matrix} */\r\n    this.mTransform = new Matrix();\r\n\r\n    /** @type {number} */\r\n    this.mGlobalAlpha = 1;\r\n\r\n    /** @type {HTMLElement} */\r\n    this.mMeasureElement = /** @type {HTMLElement} */ (document.createElement('span'));\r\n    this.mMeasureElement.style.position = 'absolute';\r\n    this.mContainerElement.appendChild(this.mMeasureElement);\r\n\r\n    Black.instance.viewport.on('resize', this.__onResize, this);\r\n  }\r\n\r\n  __onResize(msg, rect) {\r\n    let w = this.mContainerElement.clientWidth;\r\n    let h = this.mContainerElement.clientHeight;\r\n\r\n    this.mClientWidth = w;\r\n    this.mClientHeight = h;\r\n  }\r\n\r\n  /**\r\n   * start - Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  start() {}\r\n\r\n  beginFrame() {}\r\n\r\n  endFrame() {}\r\n\r\n\r\n  /**\r\n   * getTextureFromCanvas - Description\r\n   *\r\n   * @param {HTMLElement} canvas Description\r\n   *\r\n   * @return {Texture|null} Description\r\n   */\r\n  getTextureFromCanvas(canvas){\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * setTransform - Description\r\n   *\r\n   * @param {Matrix} m Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  setTransform(m) {\r\n    this.mTransform = m;\r\n  }\r\n\r\n  /**\r\n   * globalAlpha - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get globalAlpha() {\r\n    return this.mGlobalAlpha;\r\n  }\r\n\r\n  /**\r\n   * globalAlpha - Description\r\n   *\r\n   * @param {number} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set globalAlpha(value) {\r\n    this.mGlobalAlpha = value;\r\n  }\r\n\r\n  /**\r\n   * mGlobalBlendMode - Description\r\n   *\r\n   * @return {string} Description\r\n   */\r\n  get globalBlendMode() {\r\n    return this.mGlobalBlendMode;\r\n  }\r\n\r\n  /**\r\n   * globalBlendMode - Description\r\n   *\r\n   * @param {string} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set globalBlendMode(value) {\r\n    this.mGlobalBlendMode = value;\r\n  }\r\n\r\n  /**\r\n   * drawImage - description\r\n   *\r\n   * @param  {Texture} texture description\r\n   */\r\n  drawImage(texture) {}\r\n\r\n  /**\r\n   * drawText\r\n   *\r\n   * @param {string} text\r\n   * @param {TextInfo} style\r\n   * @param {Rectangle} bounds\r\n   * @param {number} textWidth\r\n   * @param {number} textHeight\r\n   *\r\n   * @return {void}\r\n   */\r\n  drawText(text, style, bounds, textWidth, textHeight) {}\r\n\r\n  clear() {}\r\n\r\n  /**\r\n   * save - Description\r\n   *\r\n   * @param {GameObject|null} gameObject Used for internal binding.\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  save(gameObject) {}\r\n\r\n  restore() {}\r\n\r\n  hexColorToString(color) {\r\n    let parsedColor = color.toString(16);\r\n    return '#000000'.substring(0, 7 - parsedColor.length) + parsedColor;\r\n  }\r\n\r\n  /**\r\n   * measureText - Description\r\n   *\r\n   * @param {string} text  Description\r\n   * @param {TextInfo} style Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  measureText(text, style) {\r\n    let el = this.mMeasureElement;\r\n    el.innerHTML = text;\r\n    el.style.whiteSpace = 'pre';\r\n    el.style.fontSize = style.size + 'px';\r\n    el.style.fontFamily = style.name;\r\n    el.style.fontStyle = style.style;\r\n    el.style.fontWeight = style.weight;\r\n\r\n    let v = new Vector(el.offsetWidth + style.strokeThickness, el.offsetHeight + style.strokeThickness);\r\n    el.innerHTML = '';\r\n\r\n    return v;\r\n  }\r\n}\r\n","\r\nclass CanvasDriver extends NullDriver {\r\n  /**\r\n   * @param  {HTMLElement} containerElement description\r\n   * @param  {number} width            description\r\n   * @param  {number} height           description\r\n   */\r\n  constructor(containerElement, width, height) {\r\n    super(containerElement, width, height);\r\n\r\n    /** @type {CanvasRenderingContext2D|null} */\r\n    this.mCtx = null;\r\n\r\n    this.mGlobalAlpha = 1;\r\n    this.mGlobalBlendMode = BlendMode.NORMAL;\r\n\r\n    this.__createCanvas();\r\n  }\r\n\r\n  /**\r\n   * __createCanvas\r\n   *\r\n   * @return {void}\r\n   */\r\n  __createCanvas() {\r\n    let cvs = /** @type {HTMLCanvasElement} */ (document.createElement(\"canvas\"));\r\n    cvs.id = \"canvas\";\r\n    this.mContainerElement.appendChild(cvs);\r\n\r\n    this.mCtx = /** @type {CanvasRenderingContext2D} */ (cvs.getContext('2d'));\r\n    this.mCtx.canvas.width = this.mClientWidth;\r\n    this.mCtx.canvas.height = this.mClientHeight;\r\n  }\r\n\r\n  __onResize(msg, rect) {\r\n    super.__onResize(msg, rect);\r\n\r\n    this.mCtx.canvas.width = this.mClientWidth;\r\n    this.mCtx.canvas.height = this.mClientHeight;\r\n  }\r\n\r\n  /**\r\n   * setTransform\r\n   *\r\n   * @param {Matrix} m\r\n   *\r\n   * @return {void}\r\n   */\r\n  setTransform(m) {\r\n    super.setTransform(m);\r\n\r\n    let v = m.value;\r\n    this.mCtx.setTransform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n  }\r\n\r\n\r\n  /**\r\n   * globalAlpha\r\n   *\r\n   * @param {number} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set globalAlpha(value) {\r\n    this.mGlobalAlpha = value;\r\n    this.mCtx.globalAlpha = value;\r\n  }\r\n\r\n\r\n  /**\r\n   * globalBlendMode\r\n   *\r\n   * @param {string} blendMode\r\n   *\r\n   * @return {void}\r\n   */\r\n  set globalBlendMode(blendMode) {\r\n    if (blendMode === BlendMode.AUTO)\r\n      return;\r\n\r\n    this.mGlobalBlendMode = blendMode;\r\n    this.mCtx.globalCompositeOperation = blendMode;\r\n  }\r\n\r\n  /**\r\n   * drawImage\r\n   *\r\n   * @param {Texture} texture\r\n   *\r\n   * @return {void}\r\n   */\r\n  drawImage(texture) {\r\n    let w = texture.width;\r\n    let h = texture.height;\r\n    let ox = texture.untrimmedRect.x;\r\n    let oy = texture.untrimmedRect.y;\r\n\r\n    this.mCtx.drawImage(texture.native, texture.region.x, texture.region.y, w, h, ox, oy, w, h);\r\n  }\r\n\r\n  /**\r\n   * drawText\r\n   *\r\n   * @override\r\n   * @param {string} text\r\n   * @param {TextInfo} style\r\n   * @param {Rectangle} bounds\r\n   * @param {number} textWidth\r\n   * @param {number} textHeight\r\n   *\r\n   * @return {void}\r\n   */\r\n  drawText(text, style, bounds, textWidth, textHeight) {\r\n    this.mCtx.beginPath();\r\n    this.mCtx.rect(bounds.x, bounds.y, bounds.width, bounds.height);\r\n    this.mCtx.clip();\r\n\r\n    this.mCtx.font = `${style.style} ${style.weight} ${style.size}px \"${style.name}\"`;\r\n    this.mCtx.fillStyle = this.hexColorToString(style.color);\r\n\r\n    let x = 0;\r\n    if (style.align === 'center')\r\n      x = (bounds.width * 0.5) - textWidth * 0.5;\r\n\r\n    else if (style.align === 'right')\r\n      x = bounds.width - textWidth;\r\n\r\n    this.mCtx.textBaseline = 'top';\r\n    this.mCtx.fillText(text, x, 0);\r\n\r\n    if (style.strokeThickness > 0) {\r\n      this.mCtx.lineWidth = style.strokeThickness;\r\n      this.mCtx.strokeStyle = this.hexColorToString(style.strokeColor);\r\n      this.mCtx.strokeText(text, x, 0);\r\n    }\r\n    this.mCtx.closePath();\r\n  }\r\n\r\n  /**\r\n   * clear\r\n   *\r\n   * @return {void}\r\n   */\r\n  clear() {\r\n    this.mCtx.clearRect(0, 0, this.mCtx.canvas.width, this.mCtx.canvas.height);\r\n  }\r\n\r\n  /**\r\n   * beginFrame\r\n   *\r\n   * @return {void}\r\n   */\r\n  beginFrame() {\r\n    super.beginFrame();\r\n\r\n    this.clear();\r\n    this.mCtx.save();\r\n  }\r\n\r\n  /**\r\n   * endFrame\r\n   *\r\n   * @return {void}\r\n   */\r\n  endFrame() {\r\n    super.endFrame();\r\n\r\n    this.mCtx.restore();\r\n  }\r\n\r\n  /**\r\n   * getTextureFromCanvas - Description\r\n   *\r\n   * @param {HTMLElement} canvas Description\r\n   *\r\n   * @return {Texture|null} Description\r\n   */\r\n  getTextureFromCanvas(canvas) {\r\n    return new Texture(canvas, new Rectangle(0, 0, canvas.width, canvas.height));\r\n  }\r\n\r\n  /**\r\n   * save\r\n   *\r\n   * @override\r\n   * @param {GameObject|null} gameObject Used for internal binding.\r\n   *\r\n   * @return {void}\r\n   */\r\n  save(gameObject) {\r\n    this.mCtx.save();\r\n  }\r\n\r\n  /**\r\n   * restore\r\n   *\r\n   * @return {void}\r\n   */\r\n  restore() {\r\n    this.mCtx.restore();\r\n  }\r\n}\r\n","\r\nclass DOMDriver extends NullDriver {\r\n  /**\r\n   * @param  {HTMLElement} containerElement description\r\n   * @param  {number} width            description\r\n   * @param  {number} height           description\r\n   */\r\n  constructor(containerElement, width, height) {\r\n    super(containerElement, width, height);\r\n\r\n    /** @type {number} */\r\n    this.mGlobalAlpha = 1;\r\n\r\n    /** @type {Array<Element>} */\r\n    this.mCache = [];\r\n\r\n    /** @type {number} */\r\n    this.mCounter = 0;\r\n\r\n    /** @type {boolean} */\r\n    this.mPixelated = true;\r\n\r\n    /** @type {GameObject|null} */\r\n    this.mCurrentObject = null;\r\n    this.__initCSS();\r\n  }\r\n\r\n  /**\r\n   * save - Description\r\n   *\r\n   * @override\r\n   * @param {GameObject|null} gameObject Used for internal binding.\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  save(gameObject) {\r\n    this.mCurrentObject = gameObject;\r\n  }\r\n\r\n  /**\r\n   * __initCSS - description\r\n   *\r\n   * @return {void}  description\r\n   */\r\n  __initCSS() {\r\n    let imgRendering = 'image-rendering:optimizeSpeed; image-rendering:optimize-contrast; image-rendering:crisp-edges; image-rendering:pixelated';\r\n\r\n    let sSprite = document.createElement('style');\r\n    sSprite.type = 'text/css';\r\n    sSprite.innerHTML = '.sprite { position: absolute; background-repeat: no-repeat; cursor: default !important; -webkit-transform-origin: 0px 0px;}';\r\n    document.getElementsByTagName('head')[0].appendChild(sSprite);\r\n\r\n    let sSpritePixelated = document.createElement('style');\r\n    sSpritePixelated.type = 'text/css';\r\n    sSpritePixelated.innerHTML = '.sprite-p { position: absolute; background-repeat: no-repeat; cursor: default !important; -webkit-transform-origin: 0px 0px; ' + imgRendering + '}';\r\n    document.getElementsByTagName('head')[0].appendChild(sSpritePixelated);\r\n\r\n    let sText = document.createElement('style');\r\n    sText.type = 'text/css';\r\n    sText.innerHTML = '.text { position: absolute; white-space: pre; overflow: hidden; cursor: default !important; -webkit-transform-origin: 0px 0px;}';\r\n    document.getElementsByTagName('head')[0].appendChild(sText);\r\n\r\n    let sViewport = document.createElement('style');\r\n    sViewport.type = 'text/css';\r\n    sViewport.innerHTML = '.viewport { width: 100%; height: 100%; position: relative; overflow: hidden; cursor: default; }';\r\n    document.getElementsByTagName('head')[0].appendChild(sViewport);\r\n\r\n    this.mContainerElement.className = 'viewport';\r\n  }\r\n\r\n  /**\r\n   * beginFrame - description\r\n   *\r\n   * @return {void}  description\r\n   */\r\n  beginFrame() {\r\n    this.mCounter = 0;\r\n  }\r\n\r\n  /**\r\n   * endFrame - description\r\n   *\r\n   * @return {void}  description\r\n   */\r\n  endFrame() {\r\n    if (this.mCounter === this.mCache.length)\r\n      return;\r\n\r\n    //TODO: cleanup unused divs\r\n    //TODO: remove them instead of hiding\r\n    for (let i = this.mCounter; i < this.mCache.length; i++) {\r\n      let el = this.mCache[i];\r\n\r\n      el.parentNode.removeChild(el);\r\n    }\r\n\r\n    this.mCache.splice(this.mCounter);\r\n  }\r\n\r\n  /**\r\n   * getTextureFromCanvas - Description\r\n   *\r\n   * @param {HTMLElement} canvas Description\r\n   *\r\n   * @return {Texture|null} Description\r\n   */\r\n  getTextureFromCanvas(canvas) {\r\n    return Texture.fromCanvasAsImage(canvas);\r\n  }\r\n\r\n  /**\r\n   * drawImage - description\r\n   *\r\n   * @param  {Texture} texture description\r\n   * @return {void}         description\r\n   */\r\n  drawImage(texture) {\r\n    /** @type {Matrix|null} */\r\n    let oldTransform = this.mTransform;\r\n\r\n    if (texture.untrimmedRect.x !== 0 || texture.untrimmedRect.y !== 0) {\r\n      Matrix.__cache.set(1, 0, 0, 1, texture.untrimmedRect.x, texture.untrimmedRect.y);\r\n      this.mTransform.append(Matrix.__cache);\r\n    }\r\n\r\n    let el = this.__popElement(this.mPixelated ? 'sprite-p' : 'sprite');\r\n    this.__updateElementCommon(el);\r\n    this.__updateImageElement(el, texture);\r\n\r\n    this.mTransform = oldTransform;\r\n  }\r\n\r\n  /**\r\n   * drawText - description\r\n   *\r\n   * @override\r\n   * @param {string} text\r\n   * @param {TextInfo} style\r\n   * @param {Rectangle} bounds\r\n   * @param {number} textWidth\r\n   * @param {number} textHeight\r\n   *\r\n   * @return {void}                      description\r\n   */\r\n  drawText(text, style, bounds, textWidth, textHeight) {\r\n    let el = this.__popElement('text');\r\n    this.__updateElementCommon(el);\r\n\r\n    // TODO: check this type. review the code.\r\n    this.__updateTextElement( /** @type {HTMLElement} */ (el), text, style, bounds);\r\n  }\r\n\r\n  /**\r\n   * __popElement - Description\r\n   *\r\n   * @param {string} className Description\r\n   *\r\n   * @return {Element} Description\r\n   */\r\n  __popElement(className) {\r\n    this.mCounter++;\r\n\r\n    if (this.mCounter <= this.mCache.length)\r\n      return this.mCache[this.mCounter - 1];\r\n\r\n    let el = document.createElement('div');\r\n    el.className = className;\r\n    this.mContainerElement.appendChild(el);\r\n\r\n    this.mCache.push(el);\r\n    return (el);\r\n  }\r\n\r\n  /**\r\n   * __updateElementCommon - Description\r\n   *\r\n   * @param {Element} el Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  __updateElementCommon(el) {\r\n    let v = this.mTransform.value;\r\n\r\n    // TODO: slow, rework\r\n    // NOTE: toFixed(0) is faster then toFixed(6)\r\n    let transform = `matrix(${v[0].toFixed(6)}, ${v[1].toFixed(6)}, ${v[2].toFixed(6)}, ${v[3].toFixed(6)}, ${v[4].toFixed(6)}, ${v[5].toFixed(6)})`;\r\n    //let transform = `matrix(${v[0]}, ${v[1]}, ${v[2]}, ${v[3]}, ${v[4]}, ${v[5]})`;\r\n\r\n    //console.log(el.style.transform, transform);\r\n    if (el.style.webkitTransform !== transform)\r\n      el.style.webkitTransform = transform;\r\n\r\n    //el.style.transform = transform;\r\n\r\n    //if (el.style.opacity != this.mGlobalAlpha)\r\n    el.style.opacity = this.mGlobalAlpha; // would be faster to not compare string and int\r\n\r\n    //if (el.style.backgroundImage !== '') {\r\n    //el.style.backgroundImage = '';\r\n    //console.log('reset img');\r\n    //}\r\n\r\n    // if (el.style.width !== null)\r\n    //   el.style.width = null;\r\n    //\r\n    // if (el.style.height !== null)\r\n    //   el.style.height = null;\r\n\r\n    // if (el.style.display === 'none')\r\n    //   el.style.display = 'block';\r\n  }\r\n\r\n  /**\r\n   * __updateImageElement - description\r\n   *\r\n   * @param  {Element} el      description\r\n   * @param  {Texture} texture description\r\n   * @return {void}         description\r\n   */\r\n  __updateImageElement(el, texture) {\r\n    if (texture) {\r\n      let url = 'url(' + texture.native.src + ')';\r\n\r\n      if (el.style.backgroundImage !== url)\r\n        el.style.backgroundImage = url;\r\n\r\n      if (texture.isSubTexture) {\r\n        let vBackgroundPosition = `${-texture.region.x}px ${-texture.region.y}px`;\r\n\r\n        if (el.style.backgroundPosition !== vBackgroundPosition)\r\n          el.style.backgroundPosition = vBackgroundPosition;\r\n      }\r\n    } else {\r\n      el.style.backgroundImage = 'none';\r\n    }\r\n\r\n    if (el.style.width != texture.width + 'px')\r\n      el.style.width = texture.width + 'px';\r\n\r\n    if (el.style.height != texture.height + 'px')\r\n      el.style.height = texture.height + 'px';\r\n\r\n    if (el.innerHTML !== '')\r\n      el.innerHTML = '';\r\n  }\r\n\r\n  /**\r\n   * __updateTextElement - Description\r\n   *\r\n   * @param {HTMLElement} el     Description\r\n   * @param {string} text   Description\r\n   * @param {TextInfo} style  Description\r\n   * @param {Rectangle} bounds Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  __updateTextElement(el, text, style, bounds) {\r\n    el.innerHTML = text;\r\n    el.style.fontSize = style.size + 'px';\r\n\r\n    if (el.style.width !== bounds.width + 'px')\r\n      el.style.width = bounds.width + 'px';\r\n\r\n    if (el.style.height !== bounds.height + 'px')\r\n      el.style.height = bounds.height + 'px';\r\n\r\n    if (el.style.fontFamily !== style.name)\r\n      el.style.fontFamily = style.name;\r\n\r\n    let color = this.hexColorToString(style.color);\r\n\r\n    if (el.style.color != color)\r\n      el.style.color = color;\r\n\r\n    if (el.style.fontStyle !== style.style)\r\n      el.style.fontStyle = style.style;\r\n\r\n    if (el.style.fontWeight != style.weight)\r\n      el.style.fontWeight = style.weight;\r\n\r\n    if (el.style.textAlign !== style.align)\r\n      el.style.textAlign = style.align;\r\n\r\n    if (style.strokeThickness > 0) {\r\n      let strokeColor = this.hexColorToString(style.strokeColor);\r\n\r\n      if (el.style.webkitTextStrokeColor != strokeColor)\r\n        el.style.webkitTextStrokeColor = strokeColor;\r\n\r\n      if (el.style.webkitTextStrokeWidth != style.strokeThickness + 'px') {\r\n        el.style.webkitTextStrokeWidth = style.strokeThickness + 'px';\r\n      }\r\n    }\r\n\r\n    if (el.style.backgroundImage !== 'none')\r\n      el.style.backgroundImage = 'none';\r\n  }\r\n}\r\n","\r\nclass DisplayObject extends GameObject {\r\n  constructor() {\r\n    super();\r\n\r\n    /** @type {number} */\r\n    this.mAlpha = 1;\r\n\r\n    /** @type {string} */\r\n    this.blendMode = BlendMode.AUTO;\r\n\r\n    /** @type {boolean} */\r\n    this.mVisible = true;\r\n  }\r\n\r\n  /**\r\n   * __render - Description\r\n   *\r\n   * @param {NullDriver} video           Description\r\n   * @param {number} time            Description\r\n   * @param {number} parentAlpha     Description\r\n   * @param {string} parentBlendMode Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  __render(video, time, parentAlpha, parentBlendMode) {\r\n    if (this.mVisible === false)\r\n      return;\r\n\r\n    this.onRender(video, time);\r\n\r\n    let child = null;\r\n    for (var i = 0; i < this.mChildren.length; i++) {\r\n      child = this.mChildren[i];\r\n      child.__render(video, time, parentAlpha, parentBlendMode);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * alpha - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get alpha() {\r\n    return this.mAlpha;\r\n  }\r\n\r\n  /**\r\n   * alpha - Description\r\n   *\r\n   * @param {number} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set alpha(value) {\r\n    this.mAlpha = Math.clamp(value, 0, 1);\r\n  }\r\n\r\n\r\n  /**\r\n   * visible - Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  get visible() {\r\n    return this.mVisible;\r\n  }\r\n\r\n\r\n  /**\r\n   * visible - Description\r\n   *\r\n   * @param {boolean} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set visible(value) {\r\n    this.mVisible = value;\r\n  }\r\n}\r\n","\r\nclass TextInfo {\r\n  /**\r\n   * @param  {string=} name = 'sans-serif' description\r\n   * @param  {number=} color = '0x000000' description\r\n   * @param  {number=} size = '14' description\r\n   * @param  {TextInfo.FontStyle=} style = 'normal' description\r\n   * @param  {TextInfo.FontWeight=} weight = '400' description\r\n   * @param  {TextInfo.FontAlign=} align = 'left' description\r\n   * @param  {number=} strokeThickness = '0' description\r\n   * @param  {number=} strokeColor = '0xffffff' description\r\n   */\r\n  constructor(name = 'sans-serif', color = 0x000000, size = 14, style = TextInfo.FontStyle.NORMAL, weight = TextInfo.FontWeight.NORMAL, align = TextInfo.FontAlign.LEFT, strokeThickness = 0, strokeColor = 0xffffff) {\r\n\r\n    /** @type {string} */\r\n    this.name = name;\r\n\r\n    /** @type {number} */\r\n    this.size = size;\r\n\r\n    /** @type {number} */\r\n    this.color = color;\r\n\r\n    /** @type {TextInfo.FontStyle} */\r\n    this.style = style;\r\n\r\n    /** @type {TextInfo.FontWeight} */\r\n    this.weight = weight;\r\n\r\n    /** @type {TextInfo.FontAlign} */\r\n    this.align = align;\r\n\r\n    /** @type {number} */\r\n    this.strokeThickness = strokeThickness;\r\n\r\n    /** @type {number} */\r\n    this.strokeColor = strokeColor;\r\n  }\r\n}\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nTextInfo.FontStyle = {\r\n  NORMAL: 'normal',\r\n  ITALIC: 'italic'\r\n};\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nTextInfo.FontWeight = {\r\n  NORMAL: '400',\r\n  BOLD: '700',\r\n  SUPERBOLD: '800'\r\n};\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nTextInfo.FontAlign = {\r\n  LEFT: 'left',\r\n  RIGHT: 'right',\r\n  CENTER: 'center'\r\n};\r\n","\r\nclass Sprite extends DisplayObject {\r\n\r\n  /**\r\n   * constructor - Creates a new Sprite object instance.\r\n   *\r\n   * @param {Texture|string|null} texture The Texture instance or null.\r\n   */\r\n  constructor(texture = null) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Texture|null} */\r\n    this.mTexture = null;\r\n\r\n    if (texture !== null && texture.constructor === String)\r\n      this.mTexture = AssetManager.default.getTexture(/** @type {string} */ (texture));\r\n    else\r\n      this.mTexture = /** @type {Texture} */ (texture);\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @private\r\n   * @param {NullDriver} video\r\n   * @param {number} time\r\n   * @param {number} parentAlpha\r\n   * @param {string} parentBlendMode\r\n   *\r\n   * @return {void}\r\n   */\r\n  __render(video, time, parentAlpha, parentBlendMode) {\r\n    if (this.mAlpha <= 0 || this.mVisible === false)\r\n      return;\r\n\r\n    let tmpBlendMode = BlendMode.AUTO;\r\n\r\n    if (this.mTexture !== null) {\r\n      video.save(this);\r\n      video.setTransform(this.worldTransformation);\r\n      video.globalAlpha = parentAlpha * this.mAlpha;\r\n      video.globalBlendMode = tmpBlendMode = this.blendMode === BlendMode.AUTO ? parentBlendMode : this.blendMode;\r\n      video.drawImage(this.mTexture);\r\n      video.restore();\r\n    }\r\n\r\n    super.__render(video, time, parentAlpha * this.mAlpha, tmpBlendMode);\r\n  }\r\n\r\n  /**\r\n   * onGetLocalBounds - Returns a rectangle that completely encloses the object in local coordinate system.\r\n   *\r\n   * @override\r\n   * @protected\r\n   * @param {Rectangle=} outRect Description\r\n   *\r\n   * @return {Rectangle} The new Rectangle or outRect with .\r\n   */\r\n  onGetLocalBounds(outRect = undefined) {\r\n    outRect = outRect || new Rectangle();\r\n\r\n    if (!this.mTexture)\r\n      return outRect;\r\n\r\n    return outRect.set(0, 0, this.mTexture.untrimmedRect.width, this.mTexture.untrimmedRect.height);\r\n  }\r\n\r\n  /**\r\n   * texture - Returns the current Texture on this sprite.\r\n   *\r\n   * @return {Texture|null} The current texture set on this Sprite or null.\r\n   */\r\n  get texture() {\r\n    return this.mTexture;\r\n  }\r\n\r\n  /**\r\n   * texture - Sets the Texture on this sprite.\r\n   *\r\n   * @param {Texture|null} texture Texture to apply on.\r\n   *\r\n   * @return {void}\r\n   */\r\n  set texture(texture) {\r\n    if (this.mTexture === texture)\r\n      return;\r\n\r\n    this.mTexture = texture;\r\n  }\r\n\r\n  set touchable(value) {\r\n    let c = this.getComponent(InputComponent);\r\n\r\n    if (value === true) {\r\n      if (c === null)\r\n        this.addComponent(new InputComponent());\r\n      else\r\n        c.touchable = true;\r\n    } else {\r\n      if (c !== null)\r\n        this.removeComponent(c);\r\n    }\r\n  }\r\n\r\n  get touchable() {\r\n    let c = this.getComponent(InputComponent);\r\n    return c !== null && c.touchable === true;\r\n  }\r\n}\r\n","\r\nclass TextField extends DisplayObject {\r\n  /**\r\n   * @param  {string=} text = ''            description\r\n   * @param  {number=} size = 14        description\r\n   * @param  {string=} name = \"sans-serif\" description\r\n   * @param {TextInfo=} style\r\n   */\r\n  constructor(text = '', size = 14, name = 'sans-serif', style = undefined) {\r\n    super();\r\n\r\n    /** @private @type {string} */\r\n    this.mText = text;\r\n\r\n    /** @private @type {boolean} */\r\n    this.mNeedInvalidate = true;\r\n\r\n    /** @private @type {Rectangle} */\r\n    this.mCacheBounds = new Rectangle();\r\n\r\n    /** @private @type {number} */\r\n    this.mFieldWidth = 0;\r\n\r\n    /** @private @type {number} */\r\n    this.mFieldHeight = 0;\r\n\r\n    /** @private @type {number} */\r\n    this.mTextWidth = 0;\r\n\r\n    /** @private @type {number} */\r\n    this.mTextHeight = 0;\r\n\r\n    /** @private @type {TextInfo} */\r\n    this.mStyle = style || new TextInfo();\r\n\r\n    /** @private @type {string} */\r\n    this.mStyle.name = name || style.name;\r\n\r\n    /** @private @type {number} */\r\n    this.mStyle.size = size || style.size;\r\n\r\n    /** @public @type {boolean} */\r\n    this.mAutoSize = true;\r\n\r\n    this.__validate(this.mCacheBounds);\r\n  }\r\n\r\n  /**\r\n   * __render - Description\r\n   * @private @override\r\n   * @param {NullDriver} video           Description\r\n   * @param {number} time            Description\r\n   * @param {number} parentAlpha     Description\r\n   * @param {string} parentBlendMode Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  __render(video, time, parentAlpha, parentBlendMode) {\r\n    if (this.mAlpha <= 0 || this.mVisible === false)\r\n      return;\r\n\r\n    this.__validate(this.mCacheBounds);\r\n\r\n    let tmpBlendMode = BlendMode.AUTO;\r\n\r\n    video.save(this);\r\n    video.setTransform(this.worldTransformation);\r\n    video.globalAlpha = parentAlpha * this.mAlpha;\r\n    video.globalBlendMode = tmpBlendMode = this.blendMode === BlendMode.AUTO ? parentBlendMode : this.blendMode;\r\n    video.drawText(this.mText, this.mStyle, this.mCacheBounds, this.mTextWidth, this.mTextHeight);\r\n    video.restore();\r\n\r\n    super.__render(video, time, parentAlpha * this.mAlpha, tmpBlendMode);\r\n  }\r\n\r\n  /**\r\n   * onGetLocalBounds - Description\r\n   *\r\n   * @protected @override\r\n   * @param {Rectangle=} outRect Description\r\n   *\r\n   * @return {Rectangle} bounds in local space withoout taking care about transformation matrix\r\n   */\r\n  onGetLocalBounds(outRect = undefined) {\r\n    outRect = outRect || new Rectangle();\r\n    return this.__validate(outRect);\r\n  }\r\n\r\n\r\n  /**\r\n   * __validate - Description\r\n   *\r\n   * @private\r\n   * @param {Rectangle} outRect Description\r\n   *\r\n   * @return {Rectangle} bounds in local space withoout taking care about transformation matrix\r\n   */\r\n  __validate(outRect) {\r\n    let strokeCorrection = 0 - this.mStyle.strokeThickness * 0.5;\r\n    if (this.mNeedInvalidate === false)\r\n      return outRect.set(strokeCorrection, strokeCorrection, this.mFieldWidth, this.mFieldHeight);\r\n\r\n    let driver = Black.instance.video;\r\n    let vSize = driver.measureText(this.mText, this.mStyle);\r\n    this.mTextWidth = vSize.x;\r\n    this.mTextHeight = vSize.y;\r\n\r\n    if (this.mAutoSize) {\r\n      this.mFieldWidth = this.mTextWidth;\r\n      this.mFieldHeight = this.mTextHeight;\r\n    }\r\n\r\n    this.mNeedInvalidate = false;\r\n    return outRect.set(strokeCorrection, strokeCorrection, this.mFieldWidth, this.mFieldHeight);\r\n  }\r\n\r\n\r\n  /**\r\n   * size - Description\r\n   *\r\n   * @public\r\n   * @return {number} Description\r\n   */\r\n  get size() {\r\n    return this.mStyle.size;\r\n  }\r\n\r\n  /**\r\n   * size - Description\r\n   *\r\n   * @param {number} value Description\r\n   * @public\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set size(value) {\r\n    this.mStyle.size = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  /**\r\n   * font - Description\r\n   *\r\n   * @public\r\n   * @return {string} Description\r\n   */\r\n  get font() {\r\n      return this.mStyle.name;\r\n    }\r\n    /**\r\n     * font - Description\r\n     *\r\n     * @param {string} value Description\r\n     * @public\r\n     *\r\n     * @return {void} Description\r\n     */\r\n\r\n  set font(value) {\r\n    this.mStyle.name = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  /**\r\n   * color - Description\r\n   *\r\n   * @public\r\n   * @return {number} Description\r\n   */\r\n  get color() {\r\n    return this.mStyle.color;\r\n  }\r\n\r\n  /**\r\n   * color - Description\r\n   *\r\n   * @param {number} value Description\r\n   * @public\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set color(value) {\r\n    this.mStyle.color = value;\r\n  }\r\n\r\n  /**\r\n   * style - Description\r\n   *\r\n   * @public\r\n   * @return {TextInfo.FontStyle} Description\r\n   */\r\n  get style() {\r\n    return this.mStyle.style;\r\n  }\r\n\r\n  /**\r\n   * style - Description\r\n   *\r\n   * @param {TextInfo.FontStyle} value Description\r\n   * @public\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set style(value) {\r\n    this.mStyle.style = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  /**\r\n   * weight - Description\r\n   *\r\n   * @public\r\n   * @return {TextInfo.FontWeight} Description\r\n   */\r\n  get weight() {\r\n    return this.mStyle.weight;\r\n  }\r\n\r\n  /**\r\n   * weight - Description\r\n   *\r\n   * @param {TextInfo.FontWeight} value Description\r\n   * @public\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set weight(value) {\r\n    this.mStyle.weight = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  /**\r\n   * align - Description\r\n   *\r\n   * @public\r\n   * @return {TextInfo.FontAlign} Description\r\n   */\r\n  get align() {\r\n    return this.mStyle.align;\r\n  }\r\n\r\n  /**\r\n   * align - Description\r\n   *\r\n   * @param {TextInfo.FontAlign} value Description\r\n   * @public\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set align(value) {\r\n    this.mStyle.align = value;\r\n  }\r\n\r\n  /**\r\n   * strokeColor - Description\r\n   *\r\n   * @public\r\n   * @return {number} Description\r\n   */\r\n  get strokeColor() {\r\n    return this.mStyle.strokeColor;\r\n  }\r\n\r\n  /**\r\n   * strokeColor - Description\r\n   *\r\n   * @param {number} value Description\r\n   * @public\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set strokeColor(value) {\r\n    this.mStyle.strokeColor = value;\r\n  }\r\n\r\n  /**\r\n   * strokeThickness - Description\r\n   *\r\n   * @public\r\n   * @return {number} Description\r\n   */\r\n  get strokeThickness() {\r\n    return this.mStyle.strokeThickness;\r\n  }\r\n\r\n  //noinspection JSAnnotator\r\n  /**\r\n   * strokeThickness - Description\r\n   * @public\r\n   *\r\n   * @param {number} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set strokeThickness(value) {\r\n    if (value === this.mStyle.strokeThickness)\r\n      return;\r\n\r\n    this.mStyle.strokeThickness = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  /**\r\n   * fieldWidth - Description\r\n   *\r\n   * @public\r\n   * @return {number} Description\r\n   */\r\n  get fieldWidth() {\r\n    return this.mFieldWidth;\r\n  }\r\n\r\n  /**\r\n   * fieldWidth - Description\r\n   *\r\n   * @param {number} value Description\r\n   * @public\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set fieldWidth(value) {\r\n    if (this.mAutoSize || value === this.mFieldWidth)\r\n      return;\r\n\r\n    this.mFieldWidth = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  /**\r\n   * fieldHeight - Description\r\n   *\r\n   * @public\r\n   * @return {number} Description\r\n   */\r\n  get fieldHeight() {\r\n    return this.mFieldHeight;\r\n  }\r\n\r\n\r\n  /**\r\n   * fieldHeight - Description\r\n   *\r\n   * @param {number} value Description\r\n   * @public\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set fieldHeight(value) {\r\n    if (this.mAutoSize || value === this.mFieldHeight)\r\n      return;\r\n\r\n    this.mFieldHeight = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  /**\r\n   * @public text - Description\r\n   *\r\n   * @return {string} Description\r\n   */\r\n  get text() {\r\n    return this.mText;\r\n  }\r\n\r\n  /**\r\n   * text - Description\r\n   *\r\n   * @param {string} value Description\r\n   * @public\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set text(value) {\r\n    if (this.mText === value)\r\n      return;\r\n\r\n    this.mText = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  /**\r\n   * autoSize - Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  get autoSize() {\r\n    return this.mAutoSize;\r\n  }\r\n\r\n  /**\r\n   * autoSize - Description\r\n   *\r\n   * @param {boolean} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set autoSize(value) {\r\n    if (this.mAutoSize === value)\r\n      return;\r\n\r\n    this.mAutoSize = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n}\r\n","\r\nclass Device {\r\n  constructor() {\r\n    /** @type {Device} */\r\n    this.constructor.mInstance = this;\r\n\r\n    /** @type {number} */\r\n    this.mPixelRatio = 0;\r\n\r\n    /** @type {number} */\r\n    Device.mInstance.mPixelRatio = Device.getDevicePixelRatio();\r\n  }\r\n\r\n  /**\r\n   * @return {string}\r\n   */\r\n  static get os() {\r\n    var userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n\r\n    if (/windows phone/i.test(userAgent))\r\n      return 'Windows Phone';\r\n\r\n    if (/android/i.test(userAgent))\r\n      return 'Android';\r\n\r\n    if (/iPad|iPhone|iPod/.test(userAgent)/* && !window.MSStream*/)\r\n      return 'iOS';\r\n\r\n    return 'unknown';\r\n  }\r\n\r\n  /**\r\n   * isTouch - Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  static get isTouch() {\r\n    let hasEvent = 'ontouchstart' in window;\r\n    if (hasEvent)\r\n      return true;\r\n\r\n    if (navigator.maxTouchPoints > 0)\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * isMobile - Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  static get isMobile() {\r\n    return /Mobi/.test(navigator.userAgent);\r\n  }\r\n\r\n  /**\r\n   * pixelRatio - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static get pixelRatio() {\r\n    return Device.mInstance.mPixelRatio;\r\n  }\r\n\r\n  /**\r\n   * getDevicePixelRatio - Description\r\n   *\r\n   * @suppress {missingProperties}\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static getDevicePixelRatio() {\r\n    if (window.screen.systemXDPI !== undefined && window.screen.logicalXDPI !== undefined && window.screen.systemXDPI > window.screen.logicalXDPI)\r\n      return window.screen.systemXDPI / window.screen.logicalXDPI;\r\n    else if (window.devicePixelRatio !== undefined)\r\n      return window.devicePixelRatio;\r\n\r\n    return 1;\r\n  }\r\n\r\n}\r\n\r\n/** @type {Device}\r\n * @nocollapse\r\n */\r\nDevice.mInstance = null;\r\n","\r\nclass Scatter {\r\n  constructor() {}\r\n\r\n  /**\r\n   * getValue\r\n   *\r\n   * @return {*}\r\n   */\r\n  getValue() {}\r\n\r\n\r\n  /**\r\n   * getValueAt\r\n   *\r\n   * @param {number} t\r\n   *\r\n   * @return {*}\r\n   */\r\n  getValueAt(t) {}\r\n}\r\n","\r\nclass FloatScatter extends Scatter {\r\n  constructor(min, max = undefined, ease = null) {\r\n    super();\r\n\r\n    this.mMin = min;\r\n    this.mMax = max == null ? min : max;\r\n    this.ease = ease;\r\n  }\r\n\r\n\r\n  /**\r\n   * getValue\r\n   *\r\n   * @return {number}\r\n   */\r\n  getValue() {\r\n    return Math.random() * (this.mMax - this.mMin) + this.mMin;\r\n  }\r\n\r\n\r\n  /**\r\n   * getValueAt\r\n   *\r\n   * @param {number} t\r\n   *\r\n   * @return {number}\r\n   */\r\n  getValueAt(t) {\r\n    if (this.ease !== null)\r\n      t = this.ease(t);\r\n\r\n    return this.mMin + t * (this.mMax - this.mMin);\r\n  }\r\n}\r\n","\r\nclass VectorScatter extends Scatter {\r\n  constructor(minX, minY, maxX, maxY) {\r\n    super();\r\n\r\n    this.minX = minX;\r\n    this.minY = minY;\r\n\r\n    this.maxX = maxX;\r\n    this.maxY = maxY;\r\n  }\r\n\r\n\r\n  /**\r\n   * getValue\r\n   *\r\n   * @return {Vector}\r\n   */\r\n  getValue() {\r\n    let outVector = new Vector();\r\n    outVector.x = Math.random() * (this.maxX - this.minX) + this.minX;\r\n    outVector.y = Math.random() * (this.maxY - this.minY) + this.minY;\r\n    return outVector;\r\n  }\r\n\r\n\r\n  /**\r\n   * getValueAt\r\n   *\r\n   * @param {number} t\r\n   *\r\n   * @return {Vector}\r\n   */\r\n  getValueAt(t) {\r\n    let outVector = new Vector();\r\n    outVector.x = this.minX + t * (this.maxX - this.minX);\r\n    outVector.y = this.minY + t * (this.maxY - this.minY);\r\n    return outVector;\r\n  }\r\n}\r\n","\r\nclass FloatCurveScatter extends Scatter {\r\n  /**\r\n   * @param {...number} points Coordinates: startX, startY, cpStartX, cpStartY, cpEndX, cpEndY, endX/start2X, endY/start2Y, cp2StartX, cp2StartX... 8 or 14 or 20...\r\n   */\r\n  constructor(...points) {\r\n    super();\r\n\r\n    this.mCurve = new Curve();\r\n    this.mCurve.baked = true;\r\n    this.mCurve.set(...points);\r\n\r\n    this.mCache = new Vector();\r\n  }\r\n\r\n  getValue() {\r\n    let t = Math.random();\r\n    this.mCurve.interpolate(t, this.mCache);\r\n    return this.mCache.y;\r\n  }\r\n\r\n  getValueAt(t) {\r\n    this.mCurve.interpolate(t, this.mCache);\r\n    return this.mCache.y;\r\n  }\r\n}\r\n\r\n\r\nclass VectorCurveScatter extends Scatter {\r\n  /**\r\n   * @param {...number} points Coordinates: startX, startY, cpStartX, cpStartY, cpEndX, cpEndY, endX/start2X, endY/start2Y, cp2StartX, cp2StartX... 8 or 14 or 20...\r\n   */\r\n  constructor(...points) {\r\n    super();\r\n\r\n    this.mCurve = new Curve();\r\n    this.mCurve.baked = true;\r\n    this.mCurve.set(...points);\r\n\r\n    this.mCache = new Vector();\r\n  }\r\n\r\n\r\n  getValue() {\r\n    let t = Math.random();\r\n    this.mCurve.interpolate(t, this.mCache);\r\n    return this.mCache;\r\n  }\r\n\r\n\r\n  getValueAt(t) {\r\n    this.mCurve.interpolate(t, this.mCache);\r\n    return this.mCache;\r\n  }\r\n}\r\n","\r\nclass Action {\r\n\r\n  /**\r\n   * preUpdate - Description\r\n   *\r\n   * @param {number} dt Description\r\n   * @param {number} t  Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  preUpdate(dt, t) {}\r\n\r\n\r\n  /**\r\n   * @param {Emitter} emmiter\r\n   * @param {Particle} particle\r\n   * @param {number} dt\r\n   * @param {number} t\r\n   *\r\n   * @return {void}\r\n   */\r\n  update(emmiter, particle, dt, t) {}\r\n\r\n\r\n  /**\r\n   * postUpdate\r\n   *\r\n   * @param {number} dt\r\n   * @param {number} t\r\n   *\r\n   * @return {void}\r\n   */\r\n  postUpdate(dt, t) {}\r\n}\r\n","/**\r\n * @extends Action\r\n */\r\n\r\nclass Acceleration extends Action {\r\n  constructor(vectorScatter) {\r\n    super();\r\n\r\n    this.scatter = vectorScatter;\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @param {Emitter} emmiter\r\n   * @param {Particle} particle\r\n   * @param {number} dt\r\n   * @param {number} t\r\n   *\r\n   * @return {void}\r\n   */\r\n  update(emmiter, particle, dt, t) {\r\n    let v = this.scatter.getValue();\r\n\r\n    particle.ax += v.x;\r\n    particle.ay += v.y;\r\n  }\r\n}\r\n","/**\r\n * @extends Action\r\n */\r\n\r\nclass AlphaOverLife extends Action {\r\n  constructor(floatScatter) {\r\n    super();\r\n\r\n    this.scatter = floatScatter;\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @param {Emitter} emmiter\r\n   * @param {Particle} particle\r\n   * @param {number} dt\r\n   * @param {number} t\r\n   *\r\n   * @return {void}\r\n   */\r\n  update(emmiter, particle, dt, t) {\r\n    particle.alpha = this.scatter.getValueAt(particle.energy);\r\n  }\r\n}\r\n","/**\r\n * @extends Action\r\n */\r\n\r\nclass ScaleOverLife extends Action {\r\n  constructor(floatScatter) {\r\n    super();\r\n\r\n    this.scatter = floatScatter;\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @param {Emitter} emmiter\r\n   * @param {Particle} particle\r\n   * @param {number} dt\r\n   * @param {number} t\r\n   *\r\n   * @return {void}\r\n   */\r\n  update(emmiter, particle, dt, t) {\r\n    particle.scale = this.scatter.getValueAt(particle.energy);\r\n  }\r\n}\r\n","/**\r\n * @extends Action\r\n */\r\n\r\nclass RotationOverLife extends Action {\r\n  constructor(floatScatter) {\r\n    super();\r\n\r\n    this.scatter = floatScatter;\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @param {Emitter} emmiter\r\n   * @param {Particle} particle\r\n   * @param {number} dt\r\n   * @param {number} t\r\n   *\r\n   * @return {void}\r\n   */\r\n  update(emmiter, particle, dt, t) {\r\n    particle.r = this.scatter.getValueAt(particle.energy);\r\n  }\r\n}\r\n","/**\r\n * @extends Action\r\n */\r\n\r\nclass TextureOverLife extends Action {\r\n  constructor(floatScatter) {\r\n    super();\r\n\r\n    this.scatter = floatScatter;\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @param {Emitter} emmiter\r\n   * @param {Particle} particle\r\n   * @param {number} dt\r\n   * @param {number} t\r\n   *\r\n   * @return {void}\r\n   */\r\n  update(emmiter, particle, dt, t) {\r\n    particle.textureIndex = ~~this.scatter.getValueAt(particle.energy);\r\n  }\r\n}\r\n","\r\nclass Initializer {\r\n  /**\r\n   * @param {Particle} particle\r\n   *\r\n   * @return {void}\r\n   */  \r\n  initialize(particle) {}\r\n}\r\n","\r\nclass Life extends Initializer {\r\n  /**\r\n   * constructor - Description\r\n   *\r\n   * @param {FloatScatter} floatScatter Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  constructor(floatScatter) {\r\n    super();\r\n\r\n    /** @type {FloatScatter} */\r\n    this.scatter = floatScatter;\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @param {Particle} particle\r\n   *\r\n   * @return {void}\r\n   */\r\n  initialize(particle) {\r\n    particle.life = this.scatter.getValue();\r\n  }\r\n}\r\n","\r\nclass Mass extends Initializer {\r\n\r\n  /**\r\n   * constructor - Description\r\n   *\r\n   * @param {number} mass Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  constructor(mass) {\r\n    super();\r\n\r\n    /** @type {number} */\r\n    this.mass = mass;\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @param {Particle} particle\r\n   *\r\n   * @return {void}\r\n   */\r\n  initialize(particle) {\r\n    particle.mass = this.mass;\r\n  }\r\n}\r\n","\r\nclass Scale extends Initializer {\r\n  /**\r\n   * constructor - Description\r\n   *\r\n   * @param {FloatScatter} floatScatter Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  constructor(floatScatter) {\r\n    super();\r\n\r\n    /** @type {FloatScatter} */\r\n    this.scatter = floatScatter;\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @param {Particle} particle\r\n   *\r\n   * @return {void}\r\n   */\r\n  initialize(particle) {\r\n    particle.scale = this.scatter.getValue();\r\n  }\r\n}\r\n","\r\nclass Velocity extends Initializer {\r\n  /**\r\n   * constructor - Description\r\n   *\r\n   * @param {VectorScatter} vectorScatter Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  constructor(vectorScatter) {\r\n    super();\r\n\r\n    /** @type {VectorScatter} */\r\n    this.scatter = vectorScatter;\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @param {Particle} particle\r\n   *\r\n   * @return {void}\r\n   */\r\n  initialize(particle) {\r\n    // TODO: optimize!\r\n    let v = this.scatter.getValue();\r\n    particle.vx = v.x;\r\n    particle.vy = v.y;\r\n  }\r\n}\r\n","\r\nclass Position extends Initializer {\r\n\r\n  /**\r\n   * constructor - Description\r\n   *\r\n   * @param {VectorScatter} vectorScatter Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  constructor(vectorScatter) {\r\n    super();\r\n\r\n    /** @type {VectorScatter} */\r\n    this.scatter = vectorScatter;\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @param {Particle} particle\r\n   *\r\n   * @return {void}\r\n   */\r\n  initialize(particle) {\r\n    // TODO: optimize!\r\n    let v = this.scatter.getValue();\r\n    particle.x = v.x;\r\n    particle.y = v.y;\r\n  }\r\n}\r\n","\r\nclass Rotation extends Initializer {\r\n  /**\r\n   * constructor - Description\r\n   *\r\n   * @param {FloatScatter} floatScatter Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  constructor(floatScatter) {\r\n    super();\r\n\r\n    /** @type {FloatScatter} */\r\n    this.scatter = floatScatter;\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @param {Particle} particle\r\n   *\r\n   * @return {void}\r\n   */\r\n  initialize(particle) {\r\n    particle.r = this.scatter.getValue();\r\n  }\r\n}\r\n","\r\nclass RandomTexture extends Initializer {\r\n  /**\r\n   * constructor - Description\r\n   *\r\n   * @param {FloatScatter} floatScatter Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  constructor(floatScatter) {\r\n    super();\r\n\r\n    /** @type {FloatScatter} */\r\n    this.scatter = floatScatter;\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @param {Particle} particle\r\n   *\r\n   * @return {void}\r\n   */\r\n  initialize(particle) {\r\n    particle.textureIndex = ~~this.scatter.getValue();\r\n  }\r\n}\r\n","/**\r\n * @enum {number}\r\n */\r\nvar EmitterState = {\r\n  PENDING: 0,\r\n  EMITTING: 1,\r\n  FINISHED: 2\r\n};\r\n","\r\nclass Particle {\r\n  constructor() {\r\n    this.reset();\r\n  }\r\n\r\n  reset() {\r\n    /** @type {number} */\r\n    this.textureIndex = 0;\r\n\r\n    /** @type {number} */\r\n    this.scale = 1;\r\n\r\n    /** @type {number} */\r\n    this.alpha = 1;\r\n\r\n    /** @type {number} */\r\n    this.life = 1;\r\n\r\n    /** @type {number} */\r\n    this.age = 0;\r\n\r\n    /** @type {number} */\r\n    this.energy = this.age / this.life;\r\n\r\n    /** @type {number} */\r\n    this.mass = 0;\r\n\r\n    /** @type {number} */\r\n    this.x = 0;\r\n\r\n    /** @type {number} */\r\n    this.y = 0;\r\n\r\n    /** @type {number} */\r\n    this.r = 0\r\n\r\n    /** @type {number} */\r\n    this.vx = 0;\r\n\r\n    /** @type {number} */\r\n    this.vy = 0;\r\n\r\n    /** @type {number} */\r\n    this.ax = 0;\r\n\r\n    /** @type {number} */\r\n    this.ay = 0;\r\n  }\r\n\r\n  /**\r\n   * update\r\n   *\r\n   * @param {number} dt\r\n   *\r\n   * @return {void}\r\n   */\r\n  update(dt) {\r\n    if (this.life <= 0) {\r\n      this.life = 0;\r\n      return;\r\n    }\r\n\r\n    this.x += this.vx * dt;\r\n    this.y += this.vy * dt;\r\n\r\n    if (this.mass > 0) {\r\n      this.ax *= 1 / this.mass;\r\n      this.ay *= 1 / this.mass;\r\n    }\r\n\r\n    this.vx += this.ax * dt;\r\n    this.vy += this.ay * dt;\r\n\r\n    this.ax = 0;\r\n    this.ay = 0;\r\n\r\n    this.life -= dt;\r\n    this.age += dt;\r\n\r\n    this.energy = this.age / (this.age + this.life);\r\n  }\r\n}\r\n","\r\nclass Emitter extends DisplayObject {\r\n  constructor() {\r\n    super();\r\n\r\n    /** @type {Array<Texture>} */\r\n    this.mTextures = null;\r\n\r\n    /** @type {Array<Particle>} */\r\n    this.mParticles = [];\r\n\r\n    /** @type {Array<Particle>} */\r\n    this.mRecycled = [];\r\n\r\n    /** @type {Array<Initializer>} */\r\n    this.mInitializers = [];\r\n\r\n    /** @type {Array<Action>} */\r\n    this.mActions = [];\r\n\r\n    /** @type {GameObject} */\r\n    this.mSpace = null;\r\n\r\n    /** @type {boolean} */\r\n    this.mIsLocal = true;\r\n\r\n    /** @type {number} */\r\n    this.mMaxParticles = 10000;\r\n\r\n    /** @type {FloatScatter} */\r\n    this.mEmitCount = new FloatScatter(10);\r\n\r\n    /** @type {FloatScatter} */\r\n    this.mEmitNumRepeats = new FloatScatter(10);\r\n\r\n    /** @type {number} */\r\n    this.mEmitNumRepeatsLeft = this.mEmitNumRepeats.getValue();\r\n\r\n    /** @type {FloatScatter} */\r\n    this.mEmitDuration = new FloatScatter(1);\r\n\r\n    /** @type {number} */\r\n    this.mEmitDurationLeft = this.mEmitDuration.getValue();\r\n\r\n    /** @type {FloatScatter} */\r\n    this.mEmitInterval = new FloatScatter(0.1);\r\n\r\n    /** @type {number} */\r\n    this.mEmitIntervalLeft = this.mEmitInterval.getValue();\r\n\r\n    /** @type {FloatScatter} */\r\n    this.mEmitDelay = new FloatScatter(1);\r\n\r\n    /** @type {number} */\r\n    this.mEmitDelayLeft = this.mEmitDelay.getValue();\r\n\r\n    /** @type {number} */\r\n    this.mNextUpdateAt = 0;\r\n\r\n    /** @type {EmitterState} */\r\n    this.mState = EmitterState.PENDING;\r\n\r\n    // /** @type {function(a:Particle, b:Particle):number} */\r\n    // this.mComparer = null;\r\n\r\n    /** @type {Matrix} */\r\n    this.__tmpLocal = new Matrix();\r\n\r\n    /** @type {Matrix} */\r\n    this.__tmpWorld = new Matrix();\r\n  }\r\n\r\n  // reset() {\r\n  //   this.mState = 0;\r\n  //\r\n  //   // todo: reset simulation\r\n  //   // todo: clear all particles\r\n  //   this.updateNextTick(0);\r\n  // }\r\n\r\n  resetState() {\r\n    this.mState = EmitterState.PENDING;\r\n  }\r\n\r\n  /**\r\n   * updateNextTick - Updates delay, duration, interval. Use this function each time you change one of those values.\r\n   *\r\n   * @param {number} [dt=0]\r\n   *\r\n   * @return {void}\r\n   */\r\n  updateNextTick(dt = 0) {\r\n    let t = Black.instance.uptime;\r\n    let firstEmit = false;\r\n\r\n    if (this.mState === EmitterState.PENDING) {\r\n      this.mNextUpdateAt = t + this.mEmitDelayLeft;\r\n      this.mEmitDelayLeft -= dt;\r\n\r\n      if (this.mEmitDelayLeft <= 0) {\r\n        this.mEmitDelayLeft = this.mEmitDelay.getValue();\r\n        this.mState = EmitterState.EMITTING;\r\n        firstEmit = true;\r\n      }\r\n    }\r\n\r\n    if (this.mState === EmitterState.EMITTING) {\r\n      if (this.mEmitDurationLeft <= 0) {\r\n        this.mEmitDurationLeft = this.mEmitDuration.getValue();\r\n\r\n        this.mEmitNumRepeatsLeft--;\r\n\r\n        if (this.mEmitNumRepeatsLeft <= 0) {\r\n          this.mState = EmitterState.FINISHED;\r\n\r\n          this.post('complete');\r\n          return;\r\n        } else {\r\n          this.mState = EmitterState.PENDING;\r\n          return;\r\n        }\r\n      } else {\r\n        // we are getting value here each update to make sure we are up to date!\r\n        if (firstEmit) {\r\n          // for a first emit we do not want to add an extra delay. emit now!\r\n          this.mNextUpdateAt = t\r\n          this.mEmitIntervalLeft = this.mEmitInterval.getValue();\r\n        }\r\n        else {\r\n          this.mEmitIntervalLeft -= dt;\r\n          this.mNextUpdateAt = t + this.mEmitIntervalLeft;\r\n\r\n          // reset interval\r\n          if (this.mEmitIntervalLeft <= 0)\r\n            this.mEmitIntervalLeft = this.mEmitInterval.getValue();\r\n        }\r\n      }\r\n\r\n      this.mEmitDurationLeft -= dt;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * addInitializer - Adds Initializer to the end of the list.\r\n   *\r\n   * @param {Initializer} initializer\r\n   *\r\n   * @return {Initializer}\r\n   */\r\n  addInitializer(initializer) {\r\n    this.mInitializers.push(initializer);\r\n    return initializer;\r\n  }\r\n\r\n\r\n  /**\r\n   * addAction - Adds action to the end of the list.\r\n   *\r\n   * @param {Action} action\r\n   *\r\n   * @return {Action}\r\n   */\r\n  addAction(action) {\r\n    this.mActions.push(action);\r\n    return action;\r\n  }\r\n\r\n  __render(video, time, parentAlpha, parentBlendMode) {\r\n    video.save(this);\r\n\r\n    // set blend mode\r\n    let tmpBlendMode = BlendMode.AUTO;\r\n    video.globalBlendMode = tmpBlendMode = this.blendMode === BlendMode.AUTO ? parentBlendMode : this.blendMode;\r\n\r\n    // tmp matrices\r\n    let localTransform = this.__tmpLocal;\r\n    let worldTransform = this.__tmpWorld;\r\n    localTransform.identity();\r\n\r\n    let texture = null;\r\n\r\n    if (this.mTextures.length > 0) {\r\n      let plength = this.mParticles.length;\r\n      let particle;\r\n      for (let i = 0; i < plength; i++) {\r\n      //for (let i = plength - 1; i > 0; i--) {\r\n        particle = this.mParticles[i];\r\n        texture = this.mTextures[particle.textureIndex];\r\n\r\n        let tw = texture.width * 0.5;\r\n        let th = texture.height * 0.5;\r\n\r\n        if (particle.r === 0) {\r\n          let tx = particle.x - tw * particle.scale;\r\n          let ty = particle.y - th * particle.scale;\r\n          localTransform.set(particle.scale, 0, 0, particle.scale, tx, ty);\r\n        } else {\r\n          let cos = Math.cos(particle.r);\r\n          let sin = Math.sin(particle.r);\r\n          let a = particle.scale * cos;\r\n          let b = particle.scale * sin;\r\n          let c = particle.scale * -sin;\r\n          let d = particle.scale * cos;\r\n\r\n          let tx = particle.x - tw * a - th * c;\r\n          let ty = particle.y - tw * b - th * d;\r\n          localTransform.set(a, b, c, d, tx, ty);\r\n        }\r\n\r\n        if (this.mIsLocal === true) {\r\n          worldTransform.identity();\r\n          worldTransform.copyFrom(localTransform);\r\n          worldTransform.prepend(this.worldTransformation);\r\n        } else {\r\n          this.mSpace.worldTransformation.copyTo(worldTransform);\r\n          worldTransform.append(localTransform);\r\n        }\r\n\r\n        video.setTransform(worldTransform);\r\n        video.globalAlpha = parentAlpha * this.mAlpha * particle.alpha;\r\n        video.drawImage(texture);\r\n      }\r\n    }\r\n\r\n    video.restore();\r\n    super.__render(video, time, parentAlpha, parentBlendMode);\r\n  }\r\n\r\n  onUpdate(dt) {\r\n    // rate logic\r\n    this.updateNextTick(dt);\r\n\r\n    if (Black.instance.uptime >= this.mNextUpdateAt && this.mState === EmitterState.EMITTING)\r\n      this.__create(this.mEmitCount.getValue());\r\n\r\n    // main update login\r\n    let alength = this.mActions.length;\r\n    let plength = this.mParticles.length;\r\n\r\n    let t = Black.instance.uptime;\r\n\r\n    for (let i = 0; i < alength; i++)\r\n      this.mActions[i].preUpdate(dt, t);\r\n\r\n    let particle;\r\n\r\n    let i = this.mParticles.length;\r\n    while (i--) {\r\n      particle = this.mParticles[i];\r\n\r\n      for (let k = 0; k < alength; k++)\r\n        this.mActions[k].update(this, particle, dt, t);\r\n\r\n      particle.update(dt);\r\n\r\n      if (particle.life === 0) {\r\n        this.mRecycled.push(particle);\r\n        this.mParticles.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    for (let j = 0; j < alength; j++)\r\n      this.mActions[j].postUpdate(dt, t);\r\n  }\r\n\r\n  __create(amount) {\r\n    let matrix = this.worldTransformation.clone();\r\n    let minv = null;\r\n\r\n    if (this.mIsLocal === false) {\r\n      minv = this.mSpace.worldTransformationInversed.clone();\r\n      matrix.prepend(minv);\r\n    }\r\n\r\n    for (let i = 0; i < amount; i++) {\r\n      let p = null;\r\n\r\n      if (this.mRecycled.length > 0) {\r\n        p = this.mRecycled.pop();\r\n      } else {\r\n        if (this.mParticles.length >= this.mMaxParticles)\r\n          return;\r\n\r\n        p = new Particle();\r\n      }\r\n\r\n      p.reset();\r\n\r\n      for (let k = 0; k < this.mInitializers.length; k++) {\r\n        let initer = this.mInitializers[k];\r\n        initer.initialize(p);\r\n      }\r\n\r\n      if (this.mIsLocal === false) {\r\n        matrix.transformDirectionXY(p.ax, p.ay, Vector.__cache);\r\n        p.ax = Vector.__cache.x;\r\n        p.ay = Vector.__cache.y;\r\n\r\n        matrix.transformDirectionXY(p.vx, p.vy, Vector.__cache);\r\n        p.vx = Vector.__cache.x;\r\n        p.vy = Vector.__cache.y;\r\n\r\n        matrix.transformXY(p.x, p.y, Vector.__cache);\r\n        p.x = Vector.__cache.x;\r\n        p.y = Vector.__cache.y;\r\n      }\r\n\r\n      this.mParticles.push(p);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * maxParticles\r\n   *\r\n   * @return {number}\r\n   */\r\n  get maxParticles() {\r\n    return this.mMaxParticles;\r\n  }\r\n\r\n\r\n  /**\r\n   * maxParticles\r\n   *\r\n   * @param {number} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set maxParticles(value) {\r\n    if (value < 0)\r\n      throw new Error('Bad argument error.');\r\n\r\n    this.mMaxParticles = value;\r\n  }\r\n\r\n\r\n  /**\r\n   * emitCount\r\n   *\r\n   * @return {FloatScatter}\r\n   */\r\n  get emitCount() {\r\n    return this.mEmitCount;\r\n  }\r\n\r\n\r\n  /**\r\n   * emitCount\r\n   *\r\n   * @param {FloatScatter} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set emitCount(value) {\r\n    this.mEmitCount = value;\r\n  }\r\n\r\n\r\n  /**\r\n   * emitNumRepeats\r\n   *\r\n   * @return {FloatScatter}\r\n   */\r\n  get emitNumRepeats() { return this.mEmitNumRepeats; }\r\n\r\n  /**\r\n   * emitNumRepeats\r\n   *\r\n   * @param {FloatScatter} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set emitNumRepeats(value) { this.mEmitNumRepeats = value; this.mEmitNumRepeatsLeft = this.mEmitNumRepeats.getValue(); }\r\n\r\n\r\n  /**\r\n   * emitDuration\r\n   *\r\n   * @return {FloatScatter}\r\n   */\r\n  get emitDuration() { return this.mEmitDuration; }\r\n\r\n  /**\r\n   * emitDuration\r\n   *\r\n   * @param {FloatScatter} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set emitDuration(value) { this.mEmitDuration = value; this.mEmitDurationLeft = this.mEmitDuration.getValue(); }\r\n\r\n\r\n  /**\r\n   * emitInterval\r\n   *\r\n   * @return {FloatScatter}\r\n   */\r\n  get emitInterval() { return this.mEmitInterval; }\r\n\r\n  /**\r\n   * emitInterval\r\n   *\r\n   * @param {FloatScatter} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set emitInterval(value) { this.mEmitInterval = value; this.mEmitIntervalLeft = this.mEmitInterval.getValue(); }\r\n\r\n\r\n  /**\r\n   * emitDelay\r\n   *\r\n   * @return {FloatScatter}\r\n   */\r\n  get emitDelay() { return this.mEmitDelay; }\r\n\r\n  /**\r\n   * emitDelay\r\n   *\r\n   * @param {FloatScatter} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set emitDelay(value) { this.mEmitDelay = value; this.mEmitDelayLeft = this.mEmitDelay.getValue(); }\r\n\r\n\r\n  /**\r\n   * space\r\n   *\r\n   * @return {GameObject}\r\n   */\r\n  get space() { return this.mSpace; }\r\n\r\n  /**\r\n   * space\r\n   *\r\n   * @param {GameObject} gameObject\r\n   *\r\n   * @return {void}\r\n   */\r\n  set space(gameObject) {\r\n    this.mSpace = gameObject;\r\n    this.mIsLocal = this.mSpace === null || this.mSpace === this;\r\n  }\r\n\r\n\r\n  /**\r\n   * textures\r\n   *\r\n   * @return {Array<Texture>}\r\n   */\r\n  get textures() {\r\n    return this.mTextures;\r\n  }\r\n\r\n\r\n  /**\r\n   * textures\r\n   *\r\n   * @param {Array<Texture>} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set textures(value) {\r\n    if (value.length === 0)\r\n      throw new Error('At least one texture must be provided.');\r\n\r\n    this.mTextures = value;\r\n  }\r\n}\r\n","/**\r\n * @enum {number}\r\n */\r\n\r\nvar Key = {\r\n  A: 65,\r\n  B: 66,\r\n  C: 67,\r\n  D: 68,\r\n  E: 69,\r\n  F: 70,\r\n  G: 71,\r\n  H: 72,\r\n  I: 73,\r\n  J: 74,\r\n  K: 75,\r\n  L: 76,\r\n  M: 77,\r\n  N: 78,\r\n  O: 79,\r\n  P: 80,\r\n  Q: 81,\r\n  R: 82,\r\n  S: 83,\r\n  T: 84,\r\n  U: 85,\r\n  V: 86,\r\n  W: 87,\r\n  X: 88,\r\n  Y: 89,\r\n  Z: 90,\r\n  DIGIT_0: 48,\r\n  DIGIT_1: 49,\r\n  DIGIT_2: 50,\r\n  DIGIT_3: 51,\r\n  DIGIT_4: 52,\r\n  DIGIT_5: 53,\r\n  DIGIT_6: 54,\r\n  DIGIT_7: 55,\r\n  DIGIT_8: 56,\r\n  DIGIT_9: 57,\r\n  NUMPAD_0: 96,\r\n  NUMPAD_1: 97,\r\n  NUMPAD_2: 98,\r\n  NUMPAD_3: 99,\r\n  NUMPAD_4: 100,\r\n  NUMPAD_5: 101,\r\n  NUMPAD_6: 102,\r\n  NUMPAD_7: 103,\r\n  NUMPAD_8: 104,\r\n  NUMPAD_9: 105,\r\n  NUMPAD_MULTIPLY: 106,\r\n  NUMPAD_ADD: 107,\r\n  NUMPAD_SUBTRACT: 109,\r\n  NUMPAD_DECIMAL: 110,\r\n  NUMPAD_DIVIDE: 111,\r\n  LEFT_ARROW: 37,\r\n  UP_ARROW: 38,\r\n  RIGHT_ARROW: 39,\r\n  DOWN_ARROW: 40,\r\n  BACKSPACE: 8,\r\n  TAB: 9,\r\n  ENTER: 13,\r\n  SHIFT: 16,\r\n  CTRL: 17,\r\n  ALT: 18,\r\n  F1: 112,\r\n  F2: 113,\r\n  F3: 114,\r\n  F4: 115,\r\n  F5: 116,\r\n  F6: 117,\r\n  F7: 118,\r\n  F8: 119,\r\n  F9: 120,\r\n  F10: 121,\r\n  F11: 122,\r\n  F12: 123,\r\n  PAUSE_BREAK: 19,\r\n  CAPS_LOCK: 20,\r\n  ESCAPE: 27,\r\n  PAGE_UP: 33,\r\n  PAGE_DOWN: 34,\r\n  END: 35,\r\n  HOME: 36,\r\n  INSERT: 45,\r\n  DELETE: 46,\r\n  LEFT_WINDOW: 91,\r\n  RIGHT_WINDOW: 92,\r\n  CONTEXT_MENU: 93,\r\n  NUM_LOCK: 144,\r\n  SCROLL_LOCK: 145,\r\n  SEMI_COLON: 186,\r\n  EQUAL_SIGN: 187,\r\n  COMMA: 188,\r\n  DASH: 189,\r\n  PERIOD: 190,\r\n  FORWARD_SLASH: 191,\r\n  BACKQUOTE: 192,\r\n  BRAKET_LEFT: 219,\r\n  BACK_SLASH: 220,\r\n  BRAKET_RIGHT: 221,\r\n  SINGLE_QUOTE: 222,\r\n};\r\n","\r\nclass KeyInfo {\r\n\r\n  /**\r\n   * constructor - Description\r\n   *\r\n   * @param {Event} nativeEvent Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  constructor(nativeEvent) {\r\n    this.keyCode = nativeEvent.keyCode;\r\n    this.code = nativeEvent.code;\r\n    this.char = nativeEvent.key;\r\n    this.shiftKey = nativeEvent.shiftKey;\r\n    this.altKey = nativeEvent.altKey;\r\n    this.ctrlKey = nativeEvent.ctrlKey;\r\n  }\r\n}\r\n","/*\r\nHas to be static class.\r\n\r\n+ before update store all events locally\r\n- check root object! add collider automatically? or do it on demand?\r\n*/\r\n\r\n\r\nclass Input extends System {\r\n  constructor() {\r\n    super();\r\n\r\n    /** @type {Input} */\r\n    this.constructor.instance = this;\r\n\r\n    /** @type {Vector} */\r\n    this.mPointerPosition = new Vector();\r\n\r\n    /** @type {Element} */\r\n    this.mDom = Black.instance.containerElement;\r\n\r\n    /** @type {Array<string>} */\r\n    this.mEventList = null;\r\n\r\n    /** @type {Array<string>} */\r\n    this.mKeyEventList = null;\r\n\r\n    this.__initListeners();\r\n\r\n    /** @type {Array<{e: Event, x: number, y:number}>} */\r\n    this.mMouseQueue = [];\r\n\r\n    /** @type {Array<Event>} */\r\n    this.mKeyQueue = [];\r\n\r\n    /** @type {Array<number>} */\r\n    this.mPressedKeys = [];\r\n\r\n    /** @type {boolean} */\r\n    this.mIsPointerDown = false;\r\n\r\n    /** @type {Array<InputComponent>} */\r\n    this.mInputListeners = [];\r\n  }\r\n\r\n  __initListeners() {\r\n    this.mKeyEventList = Input.mKeyEventList;\r\n\r\n    if (window.PointerEvent)\r\n      this.mEventList = Input.mPointerEventList;\r\n    // else if (window.MSPointerEvent)\r\n    //   this.mEventList = Input.mMSPointerEventList;\r\n    else if (Device.isTouch && Device.isMobile)\r\n      this.mEventList = Input.mTouchEventList;\r\n    else\r\n      this.mEventList = Input.mMouseEventList;\r\n\r\n    // TODO: handle enter, cancel events too\r\n    for (let i = 0; i < 6; i++)\r\n      this.mDom.addEventListener(this.mEventList[i], e => this.__onPointerEvent(e), false);\r\n\r\n\r\n    for (let i = 0; i < this.mKeyEventList.length; i++)\r\n      document.addEventListener(this.mKeyEventList[i], e => this.__onKeyEvent(e), false);\r\n  }\r\n\r\n  __sortListeners() {\r\n    // TODO: make it faster\r\n    // - try insert sort\r\n    this.mInputListeners.sort((x, y) => {\r\n      return y.gameObject.depth - x.gameObject.depth || y.gameObject.index - x.gameObject.index;\r\n    });\r\n  }\r\n\r\n\r\n  /**\r\n   * __onKeyEvent - Description\r\n   *\r\n   * @param {Event} e Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  __onKeyEvent(e) {\r\n    this.mKeyQueue.push(e);\r\n    return true;\r\n  }\r\n\r\n\r\n  /**\r\n   * __onPointerEvent - Description\r\n   *\r\n   * @param {Event} e Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  __onPointerEvent(e) {\r\n    e.preventDefault();\r\n\r\n    let /** @type {Vector|null} */ p = null;\r\n    if (e.type.indexOf('touch') === 0)\r\n      p = this.__getTouchPos(this.mDom, /** @type {TouchEvent} */ (e));\r\n    else\r\n      p = this.__getPointerPos(this.mDom, e);\r\n\r\n    this.mPointerPosition.x = p.x;\r\n    this.mPointerPosition.y = p.y;\r\n\r\n    this.mMouseQueue.push({\r\n      e: e,\r\n      x: p.x,\r\n      y: p.y\r\n    });\r\n\r\n    return true;\r\n  }\r\n\r\n\r\n  /**\r\n   * __getPointerPos - Description\r\n   *\r\n   * @param {Element} canvas Description\r\n   * @param {Event} evt    Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  __getPointerPos(canvas, evt) {\r\n    let rect = canvas.getBoundingClientRect();\r\n    let scaleX = canvas.clientWidth / rect.width;\r\n    let scaleY = canvas.clientHeight / rect.height;\r\n    return new Vector((evt.clientX - rect.left) * scaleX, (evt.clientY - rect.top) * scaleY);\r\n  }\r\n\r\n\r\n  /**\r\n   * __getTouchPos - Description\r\n   *\r\n   * @param {Element} canvas Description\r\n   * @param {TouchEvent} evt    Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  __getTouchPos(canvas, evt) {\r\n    let rect = canvas.getBoundingClientRect();\r\n\r\n    /** @type {Touch} */\r\n    let touch = evt.changedTouches[0]; // ios? what about android?\r\n    let x = touch.pageX;\r\n    let y = touch.pageY;\r\n\r\n    let scaleX = canvas.clientWidth / rect.width;\r\n    let scaleY = canvas.clientHeight / rect.height;\r\n    return new Vector((x - rect.left) * scaleX, (y - rect.top) * scaleY);\r\n  }\r\n\r\n\r\n  /**\r\n   * __addListener - Description\r\n   *\r\n   * @param {Array<InputComponent>} array Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  __addListener(array) {\r\n    // check for duplicates\r\n    for (let i = 0; i < array.length; i++) {\r\n      let item = /** @type {InputComponent} */ (array[i]);\r\n\r\n      if (this.mInputListeners.indexOf(item) === -1)\r\n        this.mInputListeners.push(item);\r\n    }\r\n\r\n    this.__sortListeners();\r\n  }\r\n\r\n\r\n  /**\r\n   * onChildrenAdded - Description\r\n   *\r\n   * @param {GameObject} child Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onChildrenAdded(child) {\r\n    let cs = GameObject.findComponents(child, InputComponent);\r\n    if (!cs || cs.length === 0)\r\n      return;\r\n\r\n    this.__addListener(cs);\r\n  }\r\n\r\n\r\n  /**\r\n   * onChildrenRemoved - Description\r\n   *\r\n   * @param {GameObject} child Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onChildrenRemoved(child) {\r\n    let cs = GameObject.findComponents(child, InputComponent);\r\n    if (!cs || cs.length === 0)\r\n      return;\r\n\r\n    for (var i = cs.length - 1; i >= 0; i--) {\r\n      let component = cs[i];\r\n      let index = this.mInputListeners.indexOf( /** @type {InputComponent} */ (component));\r\n\r\n      if (index !== -1)\r\n        this.mInputListeners.splice(index, 1);\r\n    }\r\n\r\n    this.__sortListeners();\r\n  }\r\n\r\n\r\n  /**\r\n   * onComponentAdded - Description\r\n   *\r\n   * @param {GameObject} child     Description\r\n   * @param {Component} component Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onComponentAdded(child, component) {\r\n    if (component.constructor !== InputComponent)\r\n      return;\r\n\r\n    this.__addListener([component]);\r\n    //this.mInputListeners.push(/** @type {InputComponent} */ (component));\r\n    //this.__sortListeners();\r\n  }\r\n\r\n\r\n  /**\r\n   * onComponentRemoved - Description\r\n   *\r\n   * @param {GameObject} child     Description\r\n   * @param {Component} component Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onComponentRemoved(child, component) {\r\n    if (component.constructor !== InputComponent)\r\n      return;\r\n\r\n    let index = this.mInputListeners.indexOf( /** @type {InputComponent} */ (component));\r\n    if (index !== -1) {\r\n      this.mInputListeners.splice(index, 1);\r\n      this.__sortListeners();\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * onUpdate - Description\r\n   *\r\n   * @param {number} dt Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onUpdate(dt) {\r\n    let pointerPos = new Vector();\r\n\r\n    for (let i = 0; i < this.mMouseQueue.length; i++) {\r\n      let nativeEvent = this.mMouseQueue[i];\r\n\r\n      let ix = this.mEventList.indexOf(nativeEvent.e.type);\r\n      let fnName = Input.mInputEventsLookup[ix];\r\n\r\n      pointerPos.set(nativeEvent.x, nativeEvent.y);\r\n\r\n      /** @type {InputComponent|null} */\r\n      let currentComponent = null;\r\n      for (let k = 0; k < this.mInputListeners.length; k++) {\r\n        currentComponent = this.mInputListeners[k];\r\n\r\n        if (currentComponent.gameObject === null)\r\n          console.log(currentComponent);\r\n\r\n        if (GameObject.intersects(currentComponent.gameObject, pointerPos) === false)\r\n          continue;\r\n\r\n        if (ix === Input.POINTER_DOWN)\r\n          this.mIsPointerDown = true;\r\n        else if (ix === Input.POINTER_UP)\r\n          this.mIsPointerDown = false;\r\n\r\n        console.log(fnName);\r\n        currentComponent.gameObject.post('~' + fnName);\r\n      }\r\n\r\n      this.post(fnName);\r\n    }\r\n\r\n    for (let i = 0; i < this.mKeyQueue.length; i++) {\r\n      let nativeEvent = this.mKeyQueue[i];\r\n\r\n      let ix = this.mKeyEventList.indexOf(nativeEvent.type);\r\n      let pIx = this.mPressedKeys.indexOf(nativeEvent.keyCode);\r\n      let fnName = Input.mKeyEventsLookup[ix];\r\n\r\n      if (fnName === 'keyUp' && pIx !== -1)\r\n        this.mPressedKeys.splice(pIx, 1);\r\n\r\n      else if (fnName === 'keyDown' && pIx === -1) {\r\n        this.mPressedKeys.push(nativeEvent.keyCode);\r\n        fnName = 'keyPress';\r\n      }\r\n\r\n      this.post(fnName, new KeyInfo(nativeEvent), nativeEvent);\r\n    }\r\n\r\n    this.mMouseQueue.splice(0, this.mMouseQueue.length);\r\n    this.mKeyQueue.splice(0, this.mKeyQueue.length);\r\n  }\r\n\r\n  /**\r\n   * on - Description\r\n   *\r\n   * @param {string} name           Description\r\n   * @param {Function} callback       Description\r\n   * @param {Object=} [context=null] Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  static on(name, callback, context = null) {\r\n    Input.instance.on(name, callback, context);\r\n  }\r\n\r\n\r\n  /**\r\n   * isPointerDown - Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  static get isPointerDown() {\r\n    return Input.instance.mIsPointerDown;\r\n  }\r\n\r\n\r\n  /**\r\n   * pointerX - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static get pointerX() {\r\n    return Input.instance.mPointerPosition.x;\r\n  }\r\n\r\n\r\n  /**\r\n   * pointerY - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static get pointerY() {\r\n    return Input.instance.mPointerPosition.y;\r\n  }\r\n\r\n\r\n  /**\r\n   * pointerPosition - Description\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  static get pointerPosition() {\r\n    return Input.instance.mPointerPosition;\r\n  }\r\n\r\n  static get pressedKeys() {\r\n    return Input.instance.mPressedKeys;\r\n  }\r\n}\r\n\r\n/** @type {Input}\r\n * @nocollapse\r\n */\r\nInput.instance = null;\r\n\r\n\r\n/** @type {number}\r\n *  @const\r\n */\r\nInput.POINTER_MOVE = 0;\r\n\r\n/** @type {number}\r\n *  @const\r\n */\r\nInput.POINTER_DOWN = 1;\r\n\r\n/** @type {number}\r\n *  @const\r\n */\r\nInput.POINTER_UP = 2;\r\n\r\n/** @type {number}\r\n *  @const\r\n */\r\nInput.POINTER_CANCEL = 3;\r\n\r\n/** @type {number}\r\n *  @const\r\n */\r\nInput.POINTER_ENTER = 4;\r\n\r\n/** @type {number}\r\n *  @const\r\n */\r\nInput.POINTER_LEAVE = 5;\r\n\r\n/** @type {Array<string>}\r\n *  @const\r\n */\r\nInput.mKeyEventList = ['keydown', 'keyup'];\r\n\r\n/** @type {Array<string>}\r\n *  @const\r\n */\r\nInput.mKeyEventsLookup = ['keyDown', 'keyUp', ' keyPress'];\r\n\r\n/** @type {Array<string>}\r\n *  @const\r\n */\r\n\r\nInput.mInputEventsLookup = ['pointerMove', 'pointerDown', 'pointerUp', 'pointerCancel', 'pointerEnter', 'pointerLeave'];\r\n\r\n/** @type {Array<string>}\r\n *  @const\r\n */\r\nInput.mPointerEventList = ['pointermove', 'pointerdown', 'pointerup', 'pointercancel', 'pointerenter', 'pointerleave'];\r\n\r\n// /** @type {Array<string>}\r\n//  *  @const\r\n//  */\r\n// Input.mMSPointerEventList = ['MSPointerMove', 'MSPointerDown', 'MSPointerUp', 'MSPointerCancel', 'MSPointerEnter', 'MSPointerLeave'];\r\n\r\n/** @type {Array<string>}\r\n *  @const\r\n */\r\nInput.mMouseEventList = ['mousemove', 'mousedown', 'mouseup', 'mousecancel', 'mouseenter', 'mouseleave'];\r\n\r\n/** @type {Array<string>}\r\n *  @const\r\n */\r\nInput.mTouchEventList = ['touchmove', 'touchstart', 'touchend', 'touchcancel', 'touchenter', 'touchleave'];\r\n","\r\nclass InputComponent extends Component {\r\n  /**\r\n   * @return {void}\r\n   */\r\n  constructor() {\r\n    super();\r\n\r\n    /** @type {boolean} */\r\n    this.touchable = true;\r\n  }\r\n}\r\n","\r\nclass FPSComponent extends Component  {\r\n  constructor() {\r\n    super();\r\n\r\n    /** @type {TextField} */\r\n    this.txtFPS = null;\r\n  }\r\n\r\n  onAdded(){\r\n    this.txtFPS = new TextField('FPS: 0');\r\n    this.txtFPS.x = 0;\r\n    this.txtFPS.y = 0;\r\n    this.gameObject.addChild(this.txtFPS);\r\n  }\r\n\r\n  onRemoved(){\r\n  }\r\n\r\n  onUpdate(){\r\n    this.txtFPS.text = 'FPS: ' + Black.instance.FPS;\r\n  }\r\n}\r\n","\r\nclass MRComponent extends Component {\r\n\r\n  /**\r\n   * constructor - Description\r\n   *\r\n   * @param {number} [width=960]  Description\r\n   * @param {number} [height=640] Description\r\n   */\r\n  constructor(width = 960, height = 640) {\r\n    super();\r\n\r\n    /** @type {number} */\r\n    this.mWidth = width;\r\n\r\n    /** @type {number} */\r\n    this.mHeight = height;\r\n\r\n    /** @type {number} */\r\n    this.mScale = 0;\r\n\r\n    /** @type {number} */\r\n    this.mInvScale = 0;\r\n\r\n    /** @type {number} */\r\n    this.mAspect = 0;\r\n\r\n    this.setSize(this.mWidth, this.mHeight);\r\n\r\n    Black.instance.viewport.on('resize', this.__onResize, this);\r\n  }\r\n\r\n  __onResize(msg, rect) {\r\n    this.setSize(this.mWidth, this.mHeight);\r\n  }\r\n\r\n  /**\r\n   * setSize - description\r\n   *\r\n   * @param  {number} width = 960  description\r\n   * @param  {number} height = 640 description\r\n   * @return {void}              description\r\n   */\r\n  setSize(width = 960, height = 640){\r\n    this.mWidth = width;\r\n    this.mHeight = height;\r\n\r\n    this.updateLayout();\r\n  }\r\n\r\n  /**\r\n   * updateLayout - description\r\n   *\r\n   * @return {void}  description\r\n   */\r\n  updateLayout() {\r\n    if (!this.gameObject)\r\n      return;\r\n\r\n    /** @type {Rectangle} */\r\n    let size = Black.instance.viewport.size;\r\n\r\n    /** @type {number} */\r\n    let scaleX = size.width / this.mWidth;\r\n\r\n    /** @type {number} */\r\n    let scaleY = size.height / this.mHeight;\r\n\r\n    this.mScale = Math.min(scaleX, scaleY);\r\n    this.mInvScale = 1 / this.mScale;\r\n\r\n    this.gameObject.scaleX = this.gameObject.scaleY = this.mScale;\r\n    this.gameObject.x = (size.width / 2) - (this.mWidth / 2) * this.mScale;\r\n    this.gameObject.y = (size.height / 2) - (this.mHeight / 2) * this.mScale;\r\n  }\r\n\r\n  onAdded(){\r\n    this.updateLayout();\r\n  }\r\n\r\n  onRemoved(){\r\n  }\r\n\r\n  onUpdate(){\r\n  }\r\n}\r\n","\r\nclass Ease {\r\n  constructor() {}\r\n\r\n  /**\r\n   * linear - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static linear(k) {\r\n    return k;\r\n  }\r\n\r\n  /**\r\n   * quadraticIn - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static quadraticIn(k) {\r\n    return k * k;\r\n  }\r\n\r\n  /**\r\n   * quadraticOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static quadraticOut(k) {\r\n    return k * (2 - k);\r\n  }\r\n\r\n  /**\r\n   * quadraticInOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static quadraticInOut(k) {\r\n    if ((k *= 2) < 1)\r\n      return 0.5 * k * k;\r\n\r\n    return -0.5 * (--k * (k - 2) - 1);\r\n  }\r\n\r\n  /**\r\n   * cubicIn - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static cubicIn(k) {\r\n    return k * k * k;\r\n  }\r\n\r\n  /**\r\n   * cubicOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static cubicOut(k) {\r\n    return --k * k * k + 1;\r\n  }\r\n\r\n  /**\r\n   * cubicInOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static cubicInOut(k) {\r\n    if ((k *= 2) < 1)\r\n      return 0.5 * k * k * k;\r\n\r\n    return 0.5 * ((k -= 2) * k * k + 2);\r\n  }\r\n\r\n  /**\r\n   * quarticIn - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static quarticIn(k) {\r\n    return k * k * k * k;\r\n  }\r\n\r\n  /**\r\n   * quarticOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static quarticOut(k) {\r\n    return 1 - (--k * k * k * k);\r\n  }\r\n\r\n  /**\r\n   * quarticInOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static quarticInOut(k) {\r\n    if ((k *= 2) < 1)\r\n      return 0.5 * k * k * k * k;\r\n\r\n    return -0.5 * ((k -= 2) * k * k * k - 2);\r\n  }\r\n\r\n  /**\r\n   * quinticIn - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static quinticIn(k) {\r\n    return k * k * k * k * k;\r\n  }\r\n\r\n  /**\r\n   * quinticOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static quinticOut(k) {\r\n    return --k * k * k * k * k + 1;\r\n  }\r\n\r\n  /**\r\n   * quinticInOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static quinticInOut(k) {\r\n    if ((k *= 2) < 1)\r\n      return 0.5 * k * k * k * k * k;\r\n\r\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\r\n  }\r\n\r\n  /**\r\n   * sinusoidalIn - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static sinusoidalIn(k) {\r\n    return 1 - Math.cos(k * Math.PI / 2);\r\n  }\r\n\r\n  /**\r\n   * sinusoidalOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static sinusoidalOut(k) {\r\n    return Math.sin(k * Math.PI / 2);\r\n  }\r\n\r\n  /**\r\n   * sinusoidalInOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static sinusoidalInOut(k) {\r\n    return 0.5 * (1 - Math.cos(Math.PI * k));\r\n  }\r\n\r\n  /**\r\n   * exponentialIn - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static exponentialIn(k) {\r\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\r\n  }\r\n\r\n  /**\r\n   * exponentialOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static exponentialOut(k) {\r\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\r\n  }\r\n\r\n  /**\r\n   * exponentialInOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static exponentialInOut(k) {\r\n    if (k === 0)\r\n      return 0;\r\n\r\n    if (k === 1)\r\n      return 1;\r\n\r\n    if ((k *= 2) < 1)\r\n      return 0.5 * Math.pow(1024, k - 1);\r\n\r\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\r\n  }\r\n\r\n  /**\r\n   * circularIn - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static circularIn(k) {\r\n    return 1 - Math.sqrt(1 - k * k);\r\n  }\r\n\r\n  /**\r\n   * circularOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static circularOut(k) {\r\n    return Math.sqrt(1 - (--k * k));\r\n  }\r\n\r\n  /**\r\n   * circularInOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static circularInOut(k) {\r\n    if ((k *= 2) < 1)\r\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\r\n\r\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\r\n  }\r\n\r\n  /**\r\n   * elasticIn - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static elasticIn(k) {\r\n    if (k === 0)\r\n      return 0;\r\n\r\n    if (k === 1)\r\n      return 1;\r\n\r\n    return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\r\n  }\r\n\r\n  /**\r\n   * elasticOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static elasticOut(k) {\r\n    if (k === 0)\r\n      return 0;\r\n\r\n    if (k === 1)\r\n      return 1;\r\n\r\n    return Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\r\n  }\r\n\r\n  /**\r\n   * elasticInOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static elasticInOut(k) {\r\n    if (k === 0)\r\n      return 0;\r\n\r\n    if (k === 1)\r\n      return 1;\r\n\r\n    k *= 2;\r\n\r\n    if (k < 1)\r\n      return -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\r\n\r\n    return 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\r\n\r\n  }\r\n\r\n  /**\r\n   * backIn - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static backIn(k) {\r\n    const s = 1.70158;\r\n    return k * k * ((s + 1) * k - s);\r\n  }\r\n\r\n  /**\r\n   * backOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static backOut(k) {\r\n    const s = 1.70158;\r\n    return --k * k * ((s + 1) * k + s) + 1;\r\n  }\r\n\r\n  /**\r\n   * backInOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static backInOut(k) {\r\n    const s = 1.70158 * 1.525;\r\n\r\n    if ((k *= 2) < 1)\r\n      return 0.5 * (k * k * ((s + 1) * k - s));\r\n\r\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\r\n  }\r\n\r\n  /**\r\n   * bounceIn - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static bounceIn(k) {\r\n    return 1 - Ease.bounceOut(1 - k);\r\n  }\r\n\r\n  /**\r\n   * bounceOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static bounceOut(k) {\r\n    if (k < (1 / 2.75))\r\n      return 7.5625 * k * k;\r\n    else if (k < (2 / 2.75))\r\n      return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\r\n    else if (k < (2.5 / 2.75))\r\n      return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\r\n\r\n    return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\r\n  }\r\n\r\n  /**\r\n   * bounceInOut - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static bounceInOut(k) {\r\n    if (k < 0.5)\r\n      return Ease.bounceIn(k * 2) * 0.5;\r\n\r\n    return Ease.bounceOut(k * 2 - 1) * 0.5 + 0.5;\r\n  }\r\n\r\n  /**\r\n   * smoothstep - Description\r\n   *\r\n   * @param {number} k Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static smootherStep(k) {\r\n    return k * k * k * (k * (6.0 * k - 15.0) + 10.0);\r\n  }\r\n}\r\n","\r\nclass Interpolation {\r\n  constructor() {}\r\n\r\n  /**\r\n   * linear - Description\r\n   *\r\n   * @param {Array} v - The input array of values to interpolate between.\r\n   *\r\n   * @param {number} k - The percentage of interpolation, between 0 and 1.\r\n   *\r\n   * @return {number} The interpolated value\r\n   */\r\n  static linear(v, k) {\r\n    let m = v.length - 1;\r\n    let f = m * k;\r\n    let i = Math.floor(f);\r\n\r\n    let fn = (p0, p1, t) => {\r\n      return (p1 - p0) * t + p0;\r\n    };\r\n\r\n    if (k < 0) {\r\n      return fn(v[0], v[1], f);\r\n    }\r\n\r\n    if (k > 1) {\r\n      return fn(v[m], v[m - 1], m - f);\r\n    }\r\n\r\n    return fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\r\n  }\r\n\r\n  /**\r\n   * bezier - Description\r\n   *\r\n   * @param {Array} v - The input array of values to interpolate between.\r\n   *\r\n   * @param {number} k - The percentage of interpolation, between 0 and 1.\r\n   *\r\n   * @return {number} The interpolated value\r\n   */\r\n  static bezier(v, k) {\r\n    let b = 0;\r\n    let n = v.length;\r\n    let pow = Math.pow;\r\n    // Bernstein basis polynomials\r\n    let bn = (n, i) => {\r\n      let fc = Interpolation.__factorial;\r\n      return fc(n) / fc(i) / fc(n - i);\r\n    };\r\n\r\n    for (let i = 0; i < n; i++) {\r\n      b += pow(1 - k, n - i) * pow(k, i) * v[i] * bn(n, i);\r\n    }\r\n\r\n    return b;\r\n  }\r\n\r\n  /**\r\n   * catmullRom - Description\r\n   *\r\n   * @param {Array} v - The input array of values to interpolate between.\r\n   *\r\n   * @param {number} k - The percentage of interpolation, between 0 and 1.\r\n   *\r\n   * @return {number} The interpolated value\r\n   */\r\n  static catmullRom(v, k) {\r\n    let m = v.length - 1;\r\n    let f = m * k;\r\n    let i = Math.floor(f);\r\n    let fn = (p0, p1, p2, p3, t) => {\r\n      let v0 = (p2 - p0) * 0.5;\r\n      let v1 = (p3 - p1) * 0.5;\r\n      let t2 = t * t;\r\n      let t3 = t * t2;\r\n\r\n      return ((p1 - p2) * 2 + v0 + v1) * t3 + ((p2 - p1) * 3 - 2 * v0 - v1) * t2 + v0 * t + p1;\r\n    };\r\n\r\n    if (v[0] === v[m]) {\r\n      if (k < 0) {\r\n        i = Math.floor(f = m * (1 + k));\r\n      }\r\n\r\n      return fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\r\n    } else {\r\n      if (k < 0) {\r\n        return v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\r\n      }\r\n\r\n      if (k > 1) {\r\n        return v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\r\n      }\r\n\r\n      return fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * __factorial\r\n *\r\n * @param {number} n\r\n *\r\n * @return {number}\r\n */\r\nInterpolation.__factorial = (function() {\r\n  let a = [1];\r\n\r\n  return function(n) {\r\n    if (a[n]) {\r\n      return a[n];\r\n    }\r\n\r\n    let s = n;\r\n\r\n    while (--n) {\r\n      s *= n;\r\n    }\r\n\r\n    a[n] = s;\r\n    return s;\r\n  };\r\n})();\r\n","/**\r\n * Tween\r\n * @unrestricted\r\n * @extends Component\r\n */\r\n\r\nclass Tween extends Component {\r\n  /**\r\n   * constructor - Description\r\n   * @param {Object}   values            Description\r\n   * @param {number} [duration=0.25]   Description\r\n   * @param {Object|null}   [properties=null] Description\r\n   */\r\n  constructor(values, duration = 0.250, properties = null) {\r\n    super();\r\n\r\n    /** @dict */\r\n    this.mValues = values;\r\n\r\n    /** @type {number} */\r\n    this.mDuration = duration;\r\n\r\n    /** @dict */\r\n    this.mProperties = properties;\r\n\r\n    /** @type {boolean} */\r\n    this.mIsPlaying = false;\r\n\r\n    /** @type {boolean} */\r\n    this.mIsPaused = false;\r\n\r\n    /** @type {number} */\r\n    this.mStartTime = 0;\r\n\r\n    /** @type {number} */\r\n    this.mPausedTime = 0;\r\n\r\n    /** @dict */\r\n    this.mValuesStart = {};\r\n\r\n    /** @type {number} */\r\n    this.mElapsed = 0;\r\n\r\n    /** @type {function ((Array|null), number):number} */\r\n    this.mInterpolation = Interpolation.linear;\r\n\r\n    /** @type {number} */\r\n    this.mDelay = 0;\r\n\r\n    /** @type {number} */\r\n    this.mRepeatTimes = 0;\r\n\r\n    /** @type {boolean} */\r\n    this.mInitiated = false;\r\n\r\n    /** @type {boolean} */\r\n    this.mStarted = false;\r\n\r\n    /** @type {boolean} */\r\n    this.mReverse = false;\r\n\r\n    /** @type {boolean} */\r\n    this.mRemoveOnComplete = true;\r\n\r\n    /** @type {boolean} */\r\n    this.mPlayOnAdded = true;\r\n\r\n   /** @type {function(number):number} */\r\n    this.mEase = Ease.smootherStep;\r\n\r\n    if (this.mProperties !== null) {\r\n      for (let f in this.mProperties) {\r\n        this[f] = /** @dict */ (this.mProperties[f]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * ease - Description\r\n   *\r\n   * @return {function(number):number} Description\r\n   */\r\n  get ease() {\r\n    return this.mEase;\r\n  }\r\n\r\n  /**\r\n   * ease - Description\r\n   *\r\n   * @param {function(number):number} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set ease(value) {\r\n    this.mEase = value;\r\n  }\r\n\r\n  /**\r\n   * interpolation - Description\r\n   *\r\n   * @return {function(Array, number):number} Description\r\n   */\r\n  get interpolation() {\r\n    return this.mInterpolation;\r\n  }\r\n\r\n  /**\r\n   * interpolation - Description\r\n   *\r\n   * @param {function(Array, number):number} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set interpolation(value) {\r\n    this.mInterpolation = value;\r\n  }\r\n\r\n  /**\r\n   * elapsed - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get elapsed() {\r\n    return this.mElapsed;\r\n  }\r\n\r\n  /**\r\n   * delay - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get delay() {\r\n    return this.mDelay;\r\n  }\r\n\r\n  /**\r\n   * delay - Description\r\n   *\r\n   * @param {number} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set delay(value) {\r\n    this.mDelay = value;\r\n  }\r\n\r\n  /**\r\n   * removeOnComplete - Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  get removeOnComplete() {\r\n    return this.mRemoveOnComplete;\r\n  }\r\n\r\n  /**\r\n   * removeOnComplete - Description\r\n   *\r\n   * @param {boolean} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set removeOnComplete(value) {\r\n    this.mRemoveOnComplete = value;\r\n  }\r\n\r\n  /**\r\n   * playOnAdded - Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  get playOnAdded() {\r\n    return this.mPlayOnAdded;\r\n  }\r\n\r\n  /**\r\n   * playOnAdded - Description\r\n   *\r\n   * @param {boolean} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set playOnAdded(value) {\r\n    this.mPlayOnAdded = value;\r\n  }\r\n\r\n\r\n  /**\r\n   * __start - Description\r\n   *\r\n   * @param {number} t Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  __start(t) {\r\n    this.mIsPlaying = true;\r\n    this.mStartTime = t + this.mDelay;\r\n  }\r\n\r\n  /**\r\n   * play - Description\r\n   *\r\n   * @return {Tween} Description\r\n   */\r\n  play() {\r\n    if (!this.mIsPaused) {\r\n      this.__start(Black.instance.uptime);\r\n    } else {\r\n      this.__resume();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * stop - Description\r\n   *\r\n   * @return {Tween} Description\r\n   */\r\n  stop() {\r\n    if (!this.mIsPlaying)\r\n      return this;\r\n\r\n    this.mIsPlaying = false;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * to - Description\r\n   *\r\n   * @param {Object} values - Description\r\n   *\r\n   * @return {Tween} Description\r\n   */\r\n  to(values = {}, duration = 0.250) {\r\n    this.mValues = values;\r\n\r\n    this.mDuration = duration;\r\n\r\n    this.mInitiated = false;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * pause - Description\r\n   *\r\n   * @return {Tween} Description\r\n   */\r\n  pause() {\r\n    if (!this.mIsPlaying)\r\n      return this;\r\n\r\n    this.mIsPaused = true;\r\n    this.mPausedTime = Black.instance.uptime;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * __resume - Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  __resume() {\r\n    if (!this.mIsPaused)\r\n      return;\r\n\r\n    this.mIsPaused = false;\r\n    this.mStartTime += Black.instance.uptime - this.mPausedTime;\r\n  }\r\n\r\n\r\n  /**\r\n   * @return {void}\r\n   */\r\n  remove() {\r\n    if (this.mIsPlaying)\r\n      this.stop();\r\n\r\n    this.gameObject.removeComponent(this);\r\n  }\r\n\r\n  /**\r\n   * dispose - Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  dispose() {\r\n    this.remove();\r\n  }\r\n\r\n  /**\r\n   * repeat - Description\r\n   *\r\n   * @return {Tween} Description\r\n   */\r\n  repeat(times) {\r\n    this.mRepeatTimes = times;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * loop - Description\r\n   *\r\n   * @return {Tween} Description\r\n   */\r\n  loop(value = true) {\r\n    this.mRepeatTimes = value ? Infinity : 0;\r\n\r\n    return this;\r\n  }\r\n\r\n   /**\r\n   * reverse - Description\r\n   *\r\n   * @return {Tween} Description\r\n   */\r\n  reverse(value = true) {\r\n    this.mReverse = value;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * chain - Description\r\n   *\r\n   * @return {Tween} Description\r\n   */\r\n  chain(tween) {\r\n    if (!tween) {\r\n      return this;\r\n    }\r\n\r\n    this.mRemoveOnComplete = false;\r\n\r\n    this.on('complete', () => {\r\n      tween.play();\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * onAdded - description\r\n   *\r\n   * @override\r\n   * @param  {GameObject} gameObject description\r\n   * @return {void}            description\r\n   */\r\n  onAdded(gameObject) {\r\n    if (this.mPlayOnAdded) {\r\n      this.__start(Black.instance.uptime);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * __update - Description\r\n   *\r\n   * @param {number} t Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  __update(t) {\r\n    if (t < this.mStartTime || !this.mIsPlaying || this.mIsPaused)\r\n      return;\r\n\r\n    // copy values only when starting tween...\r\n    // since values may change\r\n    if (this.mStarted === false) {\r\n      this.mStarted = true;\r\n      this.post('start', this.gameObject);\r\n\r\n      for (let f in this.mValues) {\r\n        if (!this.mInitiated && Array.isArray(this.mValues[f])) {\r\n          this.mValues[f] = [this.gameObject[f]].concat(this.mValues[f]);\r\n        }\r\n        this.mValuesStart[f] = parseFloat(this.gameObject[f]);\r\n      }\r\n\r\n      this.mInitiated = true;\r\n    }\r\n\r\n    this.mElapsed = (t - this.mStartTime) / this.mDuration;\r\n\r\n    if (this.mElapsed > 1)\r\n      this.mElapsed = 1;\r\n\r\n    let value = this.mEase(this.mElapsed);\r\n\r\n    for (let f in this.mValues) {\r\n      let start = /** @type {number} */ (this.mValuesStart[f]);\r\n      let end = /** @type {number|Array} */ (this.mValues[f]);\r\n\r\n      if (Array.isArray(end)) {\r\n        this.gameObject[f] = this.mInterpolation(end, value);\r\n      } else {\r\n        this.gameObject[f] = /** @type {number} */ (start + (end - start) * value);\r\n      }\r\n    }\r\n\r\n    this.post('update', this.gameObject);\r\n\r\n    if (this.mElapsed === 1) {\r\n      if (this.mRepeatTimes > 0) {\r\n        this.mRepeatTimes -= 1;\r\n\r\n        if (this.mReverse) {\r\n          for (let f in this.mValues) {\r\n            [this.mValues[f], this.mValuesStart[f]] = [this.mValuesStart[f], this.mValues[f]];\r\n          }\r\n        }\r\n\r\n        this.mStartTime = t + this.mDelay;\r\n\r\n        this.post('loop', this.gameObject);\r\n      } else {\r\n        this.mIsPlaying = false;\r\n        this.post('complete', this.gameObject);\r\n\r\n        if (this.mRemoveOnComplete) {\r\n          this.dispose();\r\n        } else {\r\n          for (let f in this.mValues) {\r\n            this.mValuesStart[f] = this.mValues[f];\r\n          }\r\n\r\n          this.mStarted = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * set - Description\r\n   *\r\n   * @param {Object} values Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set(values) {\r\n    this.mValues = values;\r\n\r\n    for (let f in this.mValues)\r\n      this.mValuesStart[f] = parseFloat(this.gameObject[f]);\r\n  }\r\n\r\n  onPostUpdate(dt){\r\n    let t = Black.instance.uptime;\r\n    this.__update(t);\r\n  }\r\n}\r\n","\r\nclass Animation {\r\n  /**\r\n   * constructor - Description\r\n   *\r\n   * @param {AnimationController}    controller  Description\r\n   * @param {string}    name        Description\r\n   * @param {Array<Texture>}    frames      Description\r\n   * @param {number}  [fps=14]    Description\r\n   * @param {boolean} [loop=true] Description\r\n   */\r\n  constructor(controller, name, frames, fps = 14, loop = true) {\r\n    Assert.is(fps > 0, 'FPS must be greater than 0.');\r\n\r\n    this.mController = controller;\r\n\r\n    /** @type {string} */\r\n    this.mName = name;\r\n\r\n    /** @type {Array<Texture>} */\r\n    this.mFrames = frames;\r\n\r\n    /** @type {number} */\r\n    this.mCurrentFrame = 0;\r\n\r\n    /** @type {number} */\r\n    this.mNextFrameAt = 0;\r\n\r\n    /** @type {number} */\r\n    this.mFPS = fps;\r\n\r\n    /** @type {number} */\r\n    this.mFrameDuration = 1 / this.mFPS;\r\n\r\n    /** @type {boolean} */\r\n    this.mLoop = loop;\r\n\r\n    /** @type {boolean} */\r\n    this.mPaused = false;\r\n\r\n    /** @type {number} */\r\n    this.mElapsed = 0;\r\n\r\n    /** @type {boolean} */\r\n    this.mStopped = false;\r\n\r\n    /** @type {boolean} */\r\n    this.mCompleted = false;\r\n  }\r\n\r\n\r\n  /**\r\n   * play - Description\r\n   *\r\n   * @return {Texture} Description\r\n   */\r\n  play() {\r\n    if (this.mCompleted === true) {\r\n      this.mCurrentFrame = 0;\r\n      this.mElapsed = 0;\r\n    }\r\n\r\n    this.mPaused = false;\r\n    this.mStopped = false;\r\n    this.mCompleted = false;\r\n\r\n    this.mNextFrameAt = Black.instance.uptime + this.mFrameDuration - this.mElapsed;\r\n    this.mElapsed = 0;\r\n\r\n    return this.mFrames[this.mCurrentFrame];\r\n  }\r\n\r\n\r\n  /**\r\n   * stop - Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  stop() {\r\n    this.mStopped = true;\r\n    this.mCurrentFrame = 0;\r\n  }\r\n\r\n\r\n  /**\r\n   * pause - Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  pause() {\r\n    this.mPaused = true;\r\n    this.mElapsed = this.mNextFrameAt - Black.instance.uptime;\r\n  }\r\n\r\n\r\n  /**\r\n   * __update - Description\r\n   *\r\n   * @param {number} dt Description\r\n   * @param {number} t  Description\r\n   *\r\n   * @return {Texture|null} Description\r\n   */\r\n  __update(dt, t) {\r\n    if (t < this.mNextFrameAt || this.mPaused === true || this.mStopped === true || this.mCompleted === true)\r\n      return null;\r\n\r\n    this.mCurrentFrame++;\r\n\r\n    if (this.mCurrentFrame >= this.mFrames.length) {\r\n      if (this.mLoop === true) {\r\n        this.mCurrentFrame = 0;\r\n      }\r\n      else {\r\n        this.mCurrentFrame = this.mFrames.length - 1;\r\n        this.mController.post('complete', this);\r\n        this.mCompleted = true;\r\n        return null;\r\n      }\r\n    }\r\n\r\n    this.mNextFrameAt = Black.instance.uptime + this.mFrameDuration;\r\n    let texture = this.mFrames[this.mCurrentFrame];\r\n    return texture;\r\n  }\r\n\r\n  /**\r\n   * fps - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get fps() {\r\n    return this.mFPS;\r\n  }\r\n\r\n  /**\r\n   * fps - Description\r\n   *\r\n   * @param {number} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set fps(value) {\r\n    Assert.is(value > 0, 'FPS must be greater than 0.');\r\n\r\n    this.mFPS = value;\r\n    this.mFrameDuration = 1 / this.mFPS;\r\n\r\n    // update next frame start time\r\n    let diff = this.mNextFrameAt - Black.instance.uptime;\r\n    this.mNextFrameAt += diff;\r\n  }\r\n\r\n  /**\r\n   * loop - Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  get loop() {\r\n    return this.mLoop;\r\n  }\r\n\r\n  /**\r\n   * loop - Description\r\n   *\r\n   * @param {boolean} value Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set loop(value) {\r\n    this.mLoop = value;\r\n  }\r\n\r\n\r\n  /**\r\n   * frames - Description\r\n   *\r\n   * @return {Array<Texture>} Description\r\n   */\r\n  get frames() {\r\n    return this.mFrames;\r\n  }\r\n\r\n\r\n  /**\r\n   * playing - Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  get isPlaying(){\r\n    return this.mPaused === false && this.mStopped === false;\r\n  }\r\n\r\n  /**\r\n   * playing - Description\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  get isComplete(){\r\n    return this.mCompleted;\r\n  }\r\n\r\n  get name() {\r\n    return this.mName;\r\n  }\r\n}\r\n","\r\nclass AnimationController extends Component {\r\n  constructor() {\r\n    super();\r\n\r\n    /** @type {Object<string, Animation>} */\r\n    this.mAnimations = {};\r\n\r\n    /** @type {Animation|null} */\r\n    this.mCurrentAnim = null;\r\n  }\r\n\r\n\r\n  /**\r\n   * get - Description\r\n   *\r\n   * @param {string} name Description\r\n   *\r\n   * @return {Animation} Description\r\n   */\r\n  get(name){\r\n    Assert.is(this.mAnimations.hasOwnProperty(name), 'Animation must be set first.');\r\n\r\n    return this.mAnimations[name];\r\n  }\r\n\r\n\r\n  /**\r\n   * set - Description\r\n   *\r\n   * @param {string}    name        Description\r\n   * @param {Array<Texture>}    textures    Description\r\n   * @param {number}  [fps=14]    Description\r\n   * @param {boolean} [loop=true] Description\r\n   *\r\n   * @return {Animation} Description\r\n   */\r\n  set(name, textures, fps = 14, loop = true) {\r\n    Assert.is(textures.length > 0, 'Animation cannot be empty.');\r\n    Assert.is(fps > 0, 'FPS must be greater than 0.');\r\n\r\n    let anim = new Animation(this, name, textures, fps, loop);\r\n    this.mAnimations[name] = anim;\r\n\r\n    return anim;\r\n  }\r\n\r\n\r\n  /**\r\n   * play - Description\r\n   *\r\n   * @param {string} name Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  play(name) {\r\n    Assert.is(this.mAnimations.hasOwnProperty(name), 'Animation must be set first.');\r\n\r\n    this.mCurrentAnim = this.mAnimations[name];\r\n\r\n    let texture = this.mCurrentAnim.play();\r\n\r\n    let sprite = /** @type {Sprite} */ (this.gameObject);\r\n    if (sprite === null)\r\n      return;\r\n\r\n    if (texture !== null)\r\n      sprite.texture = texture;\r\n  }\r\n\r\n\r\n  /**\r\n   * stop - Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  stop() {\r\n    if (this.mCurrentAnim === null)\r\n      return;\r\n\r\n    this.mCurrentAnim.stop();\r\n  }\r\n\r\n\r\n  /**\r\n   * pause - Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  pause() {\r\n    if (this.mCurrentAnim === null)\r\n      return;\r\n\r\n    this.mCurrentAnim.pause();\r\n  }\r\n\r\n\r\n  /**\r\n   * onPostUpdate - Description\r\n   *\r\n   * @override\r\n   * @param {number} dt Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onPostUpdate(dt) {\r\n    if (this.mCurrentAnim === null)\r\n      return;\r\n\r\n    // TODO: replace with time.time\r\n    let newTexture = this.mCurrentAnim.__update(dt, Black.instance.uptime);\r\n    if (newTexture === null)\r\n      return;\r\n\r\n    let sprite = /** @type {Sprite} */ (this.gameObject);\r\n    sprite.texture = newTexture;\r\n  }\r\n\r\n\r\n  /**\r\n   * currentAnimation\r\n   *\r\n   * @return {Animation|null}\r\n   */\r\n  get currentAnimation() {\r\n    return this.mCurrentAnim;\r\n  }\r\n}\r\n","//.########::'##::::::::::'###:::::'######::'##:::'##:\r\n// ##.... ##: ##:::::::::'## ##:::'##... ##: ##::'##::\r\n// ##:::: ##: ##::::::::'##:. ##:: ##:::..:: ##:'##:::\r\n// ########:: ##:::::::'##:::. ##: ##::::::: #####::::\r\n// ##.... ##: ##::::::: #########: ##::::::: ##. ##:::\r\n// ##:::: ##: ##::::::: ##.... ##: ##::: ##: ##:. ##::\r\n// ########:: ########: ##:::: ##:. ######:: ##::. ##:\r\n//........:::........::..:::::..:::......:::..::::..::\r\n\r\n\r\nclass Black extends MessageDispatcher {\r\n\r\n  /**\r\n   * constructor\r\n   * @param {string}   containerElementId\r\n   * @param {function(new: GameObject)}   rootClass\r\n   * @param {string=} [videoDriverName=canvas]\r\n   */\r\n  constructor(containerElementId, rootClass, videoDriverName = 'canvas') {\r\n    super();\r\n\r\n    // Dirty GCC workaround\r\n    window['Black'] = {};\r\n    window['Black']['instance'] = this;\r\n\r\n    var css = \"background: #000; color: #fff;\";\r\n    console.log('%c ~Black ', css);\r\n\r\n    /** @type {string} */\r\n    this.mContainerElementId = containerElementId;\r\n\r\n    /** @type {HTMLElement} */\r\n    this.mContainerElement = /** @type {!HTMLElement} */ (document.getElementById(this.mContainerElementId));\r\n\r\n    if (!this.mContainerElement)\r\n      throw new Error('Container element was not found');\r\n\r\n    /** @type {string} */\r\n    this.mVideoName = videoDriverName;\r\n\r\n    /** @type {number} */\r\n    this.mStageWidth = this.mContainerElement.clientWidth;\r\n\r\n    /** @type {number} */\r\n    this.mStageHeight = this.mContainerElement.clientHeight;\r\n\r\n    /** @type {number} */\r\n    this.mSimulationTimestep = 1000 / 60;\r\n\r\n    /** @type {number} */\r\n    this.mUptime = 0;\r\n\r\n    /** @type {number} */\r\n    this.mFrameAccum = 0;\r\n\r\n    /** @type {number} */\r\n    this.mLastFrameTimeMs = 0;\r\n\r\n    /** @type {number} */\r\n    this.mCurrentTime = 0;\r\n\r\n    /** @type {number} */\r\n    this.mFPS = 60;\r\n\r\n    /** @type {number} */\r\n    this.mLastFpsUpdate = 0;\r\n\r\n    /** @type {number} */\r\n    this.mFramesThisSecond = 0;\r\n\r\n    /** @type {number} */\r\n    this.mNumUpdateSteps = 0;\r\n\r\n    /** @type {number} */\r\n    this.mMinFrameDelay = 0;\r\n\r\n    /** @type {Array<System>} */\r\n    this.mSystems = [];\r\n\r\n    /** @type {Rectangle} */\r\n    this.mBounds = new Rectangle();\r\n\r\n    /** @type {boolean} */\r\n    this.mIsRunning = false;\r\n\r\n    /** @type {boolean} */\r\n    this.mIsStarted = false;\r\n\r\n    /** @type {boolean} */\r\n    this.mIsPanic = false;\r\n\r\n    /** @type {number} */\r\n    this.mLastFrameUpdateTime = 0;\r\n\r\n    /** @type {number} */\r\n    this.mLastFrameRenderTime = 0;\r\n\r\n    /** @type {number} */\r\n    this.mRAFHandle = -1; // not sure\r\n\r\n    /** @type {Viewport} */\r\n    this.mViewport = null;\r\n\r\n    /** @type {NullDriver} */\r\n    this.mVideo = null;\r\n\r\n    /** @type {boolean} */\r\n    this.mPaused = false;\r\n\r\n    /** @type {boolean} */\r\n    this.mUnpausing = false;\r\n\r\n    /** @type {boolean} */\r\n    this.mPauseOnHide = true;\r\n\r\n    /** @type {boolean} */\r\n    this.mPauseOnBlur = false;\r\n\r\n    /** @type {Object<string, Array>} */\r\n    this.mTagCache = {};\r\n\r\n    /** @type {function(new: GameObject)|null} */\r\n    this.mRootClass = rootClass;\r\n\r\n    /** @type {GameObject|null} */\r\n    this.mRoot = null;\r\n  }\r\n\r\n  pause() {\r\n    this.mPaused = true;\r\n  }\r\n\r\n  resume() {\r\n    this.mUnpausing = true;\r\n  }\r\n\r\n  __bootViewport() {\r\n    this.mViewport = new Viewport(this.mContainerElement);\r\n  }\r\n\r\n  __bootSystems() {\r\n    this.addSystem(new Input());\r\n  }\r\n\r\n  __bootStage() {\r\n    window.onblur = event => this.__onVisbilityChange(event);\r\n    window.onfocus = event => this.__onVisbilityChange(event);\r\n    window.onpagehide = event => this.__onVisbilityChange(event);\r\n    window.onpageshow = event => this.__onVisbilityChange(event);\r\n\r\n    if (document.hidden && this.mPauseOnHide === true)\r\n      this.mPaused = true;\r\n  }\r\n\r\n  __onVisbilityChange(event) {\r\n    let type = event.type;\r\n\r\n    if (type === 'blur' && this.mPauseOnBlur === true)\r\n      this.mPaused = true;\r\n    else if (type === 'pagehide' && this.mPauseOnHide === true)\r\n      this.mPaused = true;\r\n    else if (type === 'focus' || type === 'pageshow') {\r\n      if (document.hidden === false)\r\n        this.mUnpausing = true;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * addSystem - Adds a given system to the system list.\r\n   *\r\n   * @param  {System} system\r\n   * @return {System}\r\n   */\r\n  addSystem(system) {\r\n    this.mSystems.push(system);\r\n    return system;\r\n  }\r\n\r\n\r\n  /**\r\n   * removeSystem - Removes the given system to the system list.\r\n   *\r\n   * @param {System} system\r\n   *\r\n   * @return {System|null}\r\n   */\r\n  removeSystem(system) {\r\n    // TODO: remove system on next frame\r\n    var ix = this.mSystems.indexOf(system);\r\n    if (ix === -1)\r\n      return null;\r\n\r\n    this.mSystems.splice(ix, 1);\r\n    return system;\r\n  }\r\n\r\n  __bootVideo() {\r\n    if (this.mVideoName === 'canvas')\r\n      this.mVideo = new CanvasDriver(this.mContainerElement, this.mStageWidth, this.mStageHeight);\r\n    else if (this.mVideoName === 'dom')\r\n      this.mVideo = new DOMDriver(this.mContainerElement, this.mStageWidth, this.mStageHeight);\r\n    else if (this.mVideoName === 'null' || this.mVideoName == null)\r\n      this.mVideo = new NullDriver(this.mContainerElement, this.mStageWidth, this.mStageHeight);\r\n    else\r\n      Assert.is(false, 'Unsupported video driver. Use canvas or dom.');\r\n  }\r\n\r\n  start() {\r\n    this.constructor.instance = this;\r\n\r\n    if (this.mIsStarted)\r\n      return;\r\n\r\n    this.__bootViewport();\r\n    this.__bootSystems();\r\n    this.__bootVideo();\r\n    this.__bootStage();\r\n\r\n    this.mRoot = new this.mRootClass();\r\n    this.mRoot.name = 'root';\r\n    this.mRoot.mAdded = true; // why are not added actually?\r\n    this.mRoot.onAdded();\r\n\r\n    const self = this;\r\n\r\n    this.mIsStarted = true;\r\n    this.mVideo.start();\r\n\r\n    this.mRAFHandle = requestAnimationFrame(function (timestamp) {\r\n      // TODO: do first update here\r\n      self.mIsRunning = true;\r\n\r\n      self.mLastFrameTimeMs = timestamp;\r\n      self.mLastFpsUpdate = timestamp;\r\n      self.mFramesThisSecond = 0;\r\n\r\n      // Start the main loop.\r\n      self.mRAFHandle = requestAnimationFrame((x) => {\r\n        self.__update(x);\r\n      });\r\n    });\r\n  }\r\n\r\n\r\n  stop() {\r\n    this.mIsStarted = false;\r\n    this.mIsRunning = false;\r\n    cancelAnimationFrame(this.mRAFHandle);\r\n  }\r\n\r\n\r\n  /**\r\n   * __update - Description\r\n   *\r\n   * @param {number} timestamp Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  __update(timestamp) {\r\n    // TODO: this method seems to be totaly broken. maxAllowedFPS is not working correctly\r\n    this.constructor.instance = this;\r\n\r\n    const self = this;\r\n\r\n    if (this.mPaused === true && this.mUnpausing === true) {\r\n      this.mUnpausing = this.mPaused = false;\r\n\r\n      this.mLastFrameTimeMs = 0;\r\n      this.mLastFpsUpdate = timestamp;\r\n      this.mLastFrameTimeMs = timestamp;\r\n      this.mCurrentTime = 0; // same as first update\r\n      this.mFrameAccum = 0;\r\n    }\r\n\r\n    if (timestamp < this.mLastFrameTimeMs + this.mMinFrameDelay) {\r\n      this.mRAFHandle = window.requestAnimationFrame(this.__update.bind(this));\r\n      return;\r\n    }\r\n\r\n    if (this.mPaused === false) {\r\n      this.mFrameAccum += (timestamp - this.mLastFrameTimeMs);\r\n      this.mLastFrameTimeMs = timestamp;\r\n\r\n      // BEGIN\r\n      if (timestamp > this.mLastFpsUpdate + 1000) {\r\n        this.mFPS = this.mFramesThisSecond;\r\n\r\n        this.mLastFpsUpdate = timestamp;\r\n        this.mFramesThisSecond = 0;\r\n      }\r\n      this.mFramesThisSecond++;\r\n\r\n      this.mNumUpdateSteps = 0;\r\n\r\n      // fix first update\r\n      if (this.mCurrentTime === 0)\r\n        this.mCurrentTime = timestamp - this.mMinFrameDelay;\r\n\r\n      const dt = Time.scale * ((timestamp - this.mCurrentTime) * 0.001);\r\n      this.mCurrentTime = timestamp;\r\n      Time.mDeltaTime = dt;\r\n\r\n      while (this.mFrameAccum >= this.mSimulationTimestep) {\r\n        this.__internalFixedUpdate(this.mSimulationTimestep * 0.001);\r\n\r\n        this.mFrameAccum -= this.mSimulationTimestep;\r\n\r\n        if (++this.mNumUpdateSteps >= (60 * 3)) {\r\n          console.log('[BLACK]: Not enough time to calculate update logic.');\r\n          this.mIsPanic = true;\r\n          break;\r\n        }\r\n      }\r\n\r\n      this.__internalUpdate(dt);\r\n      this.__internalPostUpdate(dt);\r\n\r\n      this.mVideo.beginFrame();\r\n      this.mRoot.__render(this.mVideo, this.mUptime, 1, BlendMode.AUTO);\r\n      this.mVideo.endFrame();\r\n\r\n      // TODO: remove uptime\r\n      this.mUptime += dt;\r\n      Time.mTime = this.mUptime;\r\n\r\n      this.mIsPanic = false;\r\n    }\r\n\r\n    this.mRAFHandle = window.requestAnimationFrame(this.__update.bind(this));\r\n  }\r\n\r\n\r\n  /**\r\n   * __internalFixedUpdate - Description\r\n   *\r\n   * @param {number} dt Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  __internalFixedUpdate(dt) {\r\n    for (let i = 0; i < this.mSystems.length; i++)\r\n      this.mSystems[i].onFixedUpdate(dt);\r\n\r\n    this.mRoot.__fixedUpdate(dt);\r\n  }\r\n\r\n\r\n  /**\r\n   * __internalUpdate - Description\r\n   *\r\n   * @param {number} dt Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  __internalUpdate(dt) {\r\n    for (let i = 0; i < this.mSystems.length; i++)\r\n      this.mSystems[i].onUpdate(dt, this.mUptime);\r\n\r\n    this.mRoot.__update(dt);\r\n  }\r\n\r\n  /**\r\n   * __internalUpdate - Description\r\n   *\r\n   * @param {number} dt Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  __internalPostUpdate(dt) {\r\n    for (let i = 0; i < this.mSystems.length; i++)\r\n      this.mSystems[i].onPostUpdate(dt, this.mUptime);\r\n\r\n    this.mRoot.__postUpdate(dt);\r\n  }\r\n\r\n  /**\r\n   * bounds - Description\r\n   *\r\n   * @return {Rectangle} Description\r\n   */\r\n  get bounds() {\r\n    return this.mBounds;\r\n  }\r\n\r\n\r\n  /**\r\n   * root - Description\r\n   *\r\n   * @return {GameObject} Description\r\n   */\r\n  get root() {\r\n    return this.mRoot;\r\n  }\r\n\r\n\r\n  /**\r\n   * video - Description\r\n   *\r\n   * @return {NullDriver} Description\r\n   */\r\n  get video() {\r\n    return this.mVideo;\r\n  }\r\n\r\n\r\n  /**\r\n   * simulationTimestep - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get simulationTimestep() {\r\n    return this.mSimulationTimestep;\r\n  }\r\n\r\n\r\n  /**\r\n   * simulationTimestep - Description\r\n   *\r\n   * @param {number} timestep Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set simulationTimestep(timestep) {\r\n    this.mSimulationTimestep = timestep;\r\n  }\r\n\r\n\r\n  /**\r\n   * FPS - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get FPS() {\r\n    return this.mFPS;\r\n  }\r\n\r\n\r\n  /**\r\n   * maxFPS - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get maxFPS() {\r\n    return 1000 / this.mMinFrameDelay;\r\n  }\r\n\r\n\r\n  /**\r\n   * maxAllowedFPS - Description\r\n   *\r\n   * @param {number} fps Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  set maxAllowedFPS(fps) {\r\n    if (fps <= 0)\r\n      this.stop();\r\n    else\r\n      this.mMinFrameDelay = 1000 / fps;\r\n  }\r\n\r\n\r\n  /**\r\n   * viewport - Description\r\n   *\r\n   * @return {Viewport} Description\r\n   */\r\n  get viewport() {\r\n    return this.mViewport;\r\n  }\r\n\r\n\r\n  /**\r\n   * containerElement - Description\r\n   *\r\n   * @return {Element} Description\r\n   */\r\n  get containerElement() {\r\n    return this.mContainerElement;\r\n  }\r\n\r\n\r\n  /**\r\n   * uptime - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get uptime() {\r\n    return this.mUptime;\r\n  }\r\n\r\n  /**\r\n   * onTagUpdated - Description\r\n   *\r\n   * @param {GameObject} child Description\r\n   * @param {string|null} oldTag   Description\r\n   * @param {string|null} newTag   Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onTagUpdated(child, oldTag, newTag) {\r\n    if (oldTag !== null) {\r\n      let arr = this.mTagCache[oldTag];\r\n      arr.splice(arr.indexOf(child), 1);\r\n\r\n      if (arr.length === 0)\r\n        delete this.mTagCache[oldTag];\r\n    }\r\n\r\n    if (newTag !== null) {\r\n      if (this.mTagCache.hasOwnProperty(newTag) === false)\r\n        this.mTagCache[newTag] = [];\r\n\r\n      this.mTagCache[newTag].push(child);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @param  {GameObject} child     description\r\n   * @return {void}           description\r\n   */\r\n  onChildrenAdded(child) {\r\n    for (let i = 0; i < this.mSystems.length; i++)\r\n      this.mSystems[i].onChildrenAdded(child);\r\n\r\n    GameObject.forEach(child, (x) => {\r\n      if (x.mAdded === true)\r\n        return;\r\n\r\n      this.onTagUpdated(x, null, x.mTag);\r\n\r\n      x.mAdded = true;\r\n      x.onAdded();\r\n\r\n      for (let i = 0; i < x.mComponents.length; i++) {\r\n        let c = x.mComponents[i];\r\n\r\n        if (c.mAdded === true)\r\n          continue;\r\n\r\n        c.mAdded = true;\r\n        c.onAdded(x);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param  {GameObject} child     description\r\n   * @return {void}           description\r\n   */\r\n  onChildrenRemoved(child) {\r\n    for (let i = 0; i < this.mSystems.length; i++)\r\n      this.mSystems[i].onChildrenRemoved(child);\r\n\r\n    GameObject.forEach(child, (x) => {\r\n      if (x.mAdded === true) {\r\n        this.onTagUpdated(x, x.mTag, null);\r\n\r\n        x.mAdded = false;\r\n        x.onRemoved();\r\n\r\n        for (let i = 0; i < x.mComponents.length; i++) {\r\n          let c = x.mComponents[i];\r\n\r\n          if (c.mAdded === false)\r\n            continue;\r\n\r\n          c.mAdded = false;\r\n          c.onRemoved(x);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @param  {GameObject} child     description\r\n   * @param  {Component} component description\r\n   * @return {void}           description\r\n   */\r\n  onComponentAdded(child, component) {\r\n    for (let i = 0; i < this.mSystems.length; i++)\r\n      this.mSystems[i].onComponentAdded(child, component);\r\n\r\n    if (component.mAdded === true)\r\n      return;\r\n\r\n    component.mAdded = true;\r\n    component.onAdded(child);\r\n  }\r\n\r\n\r\n  /**\r\n   * @param  {GameObject} child     description\r\n   * @param  {Component} component description\r\n   * @return {void}           description\r\n   */\r\n  onComponentRemoved(child, component) {\r\n    //child.mBlack = null;\r\n    //console.log('onComponentRemoved', child, component);\r\n\r\n    for (let i = 0; i < this.mSystems.length; i++)\r\n      this.mSystems[i].onComponentRemoved(child, component);\r\n\r\n    if (component.mAdded === false)\r\n      return;\r\n\r\n    component.mAdded = false;\r\n    component.onRemoved(child);\r\n  }\r\n\r\n  /**\r\n   * pauseOnHide\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  get pauseOnHide() {\r\n    return this.mPauseOnHide;\r\n  }\r\n\r\n  /**\r\n   * pauseOnHide\r\n   *\r\n   * @param {boolean} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set pauseOnHide(value) {\r\n    this.mPauseOnHide = value;\r\n  }\r\n\r\n  /**\r\n   * pauseOnBlur\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  get pauseOnBlur() {\r\n    return this.mPauseOnBlur;\r\n  }\r\n\r\n  /**\r\n   * pauseOnBlur\r\n   *\r\n   * @param {boolean} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set pauseOnBlur(value) {\r\n    this.mPauseOnBlur = value;\r\n  }\r\n\r\n  /**\r\n   * videoName\r\n   *\r\n   * @return {string}\r\n   */\r\n  get videoName() {\r\n    return this.mVideoName;\r\n  }\r\n}\r\n"]}