{"version":3,"sources":["MathEx.js","Helpers.js","Vector.js","Matrix.js","Rectangle.js","Circle.js","Line.js","Polygon.js","Curve.js","Debug.js","Message.js","MessageDispatcher.js","Time.js","System.js","Viewport.js","Component.js","GameObject.js","Texture.js","AtlasTexture.js","Asset.js","TextureAsset.js","JSONAsset.js","FontAsset.js","AtlasTextureAsset.js","SoundAsset.js","AssetManager.js","BlendMode.js","VideoNullDriver.js","CanvasDriver.js","DOMDriver.js","WebGLDriver.js","WebGLConstants.js","WebGLBlendMode.js","WebGLBasePlugin.js","WebGLTextures.js","WebGLTexPlugin.js","WebGLParticlesPlugin.js","DisplayObject.js","TextInfo.js","Sprite.js","TextField.js","Device.js","Scatter.js","FloatScatter.js","VectorScatter.js","CurveScatter.js","Action.js","Acceleration.js","AlphaOverLife.js","ScaleOverLife.js","RotationOverLife.js","TextureOverLife.js","Initializer.js","Life.js","Mass.js","Scale.js","Velocity.js","Position.js","Rotation.js","RandomTexture.js","EmitterState.js","Particle.js","Emitter.js","Key.js","KeyInfo.js","Input.js","InputComponent.js","FPSComponent.js","MRComponent.js","Ease.js","Interpolation.js","Tween.js","AnimationInfo.js","AnimationController.js","Black.js"],"names":["MathEx","a","b","Math","floor","random","value","min","max","t","epsilon","Number","EPSILON","PI_Q","PI","PI2","DEG2RAD","RAD2DEG","Vector","x","y","vector","sqrt","scalar","sum","lengthSqr","clamp","lerp","abs","rotation","subtract","setRotation","add","cos","toFixed","sin","set","acos","dot","length","angle","vectorMin","vectorMax","outVector","undefined","__cache","Matrix","c","d","tx","ty","_matrix","Float32Array","m","dx","dy","a0","a1","a2","a3","a4","a5","theta","scale","sx","sy","bv","b0","b1","b2","b3","b4","b5","a11","c11","tx11","rect","outRect","Rectangle","minX","MAX_VALUE","maxX","minY","maxY","xx","yy","tmpVector","points","width","height","i","transformXY","aa","ab","ac","ad","atx","aty","det","skewX","atan2","skewY","delta","r_rotation","r_skewX","r_skewY","r_scaleX","r_scaleY","r_x","r_y","v","matrix","copyTo","w","h","right","bottom","toUnion","clone","x0","x1","y0","y1","volume","cacheRight","cacheBottom","left","top","Line","topLeft","topRight","bottomRight","bottomLeft","Circle","r","circle","contains","distance","start","end","line","equals","normalize","multyplier","multiplyScalar","start1","end1","start2","end2","denominator","numerator1","numerator2","directionX","directionY","nearest","nearestDistance","dt","pow","x2","y2","__isInBoundsXY","Polygon","vertices","mVertices","mLines","mBounds","mCenter","refresh","polygon","len","push","polygonVertices","thisVertices","center","lines","intersectionLine","intersects","thisLines","thisLen","polygonLines","polygonLen","j","bounds","intersectsCircle","rectangle","rectangleLines","rectangleLen","containsXY","point","perimeter","path","path2","split","Curve","mPoints","mLookup","mBaked","mStep","mEachT","__initPoints","__refreshEachT","__refreshCache","res","concat","slice","lookup","getFullLength","pointsLen","getLength","step","eachT","eachLength","s","ceil","p","copyFrom","minT","maxT","bezier","mPointsLen","label","startX","startY","cpStartX","cpStartY","cpEndX","cpEndY","endX","endY","u","tt","uu","uuu","ttt","p0","p1","p2","p3","Debug","assert","message","logOnFail","console","error","throwOnFail","Error","info","Message","mSender","mName","mPathMask","mComponentMask","mDirection","mSibblings","mOrigin","mTarget","mCanceled","hasComponentMask","MessageDispatcher","mListeners","name","callback","context","filterIx","indexOf","pureName","substring","pathMask","mOverheardHandlers","hasOwnProperty","dispatchers","splice","__parseMessage","isGameObjectOrComponent","GameObject","Component","params","__invoke","__invokeComponents","__invokeOverheard","root","__sendGlobal","__sendBubbles","sender","toTop","list","current","gameObject","parent","dispatcher","origin","numChildren","child","getChildAt","inPath","__checkPath","call","isGameObject","go","mComponents","RegExp","join","test","result","charAt","ixAt","ixHash","substr","Time","mTime","mDeltaTime","mScale","System","component","Viewport","containerElement","mContainerElement","style","userSelect","touchAction","overflow","cursor","WebkitTapHighlightColor","size","getBoundingClientRect","mSize","window","addEventListener","__onResize","post","mId","ID","mGameObject","mAdded","removeComponent","constructor","mChildren","mX","mY","mScaleX","mScaleY","mPivotX","mPivotY","mRotation","mLocalTransform","mWorldTransform","mDirty","DirtyFlag","DIRTY","mParent","mTag","mIndex","mNumChildrenRemoved","mNumComponentsRemoved","gameObjectsAndOrComponents","gooc","addChild","addComponent","addChildAt","index","setChildIndex","removeFromParent","__setParent","Black","instance","onChildrenAdded","setTransformDirty","ix","dispose","removeChild","removeChildAt","hadRoot","onChildrenRemoved","onComponentAdded","onAdded","onRemoved","onComponentRemoved","typeName","onFixedUpdate","k","__checkRemovedComponents","__fixedUpdate","__checkRemovedChildren","onUpdate","__update","onPostUpdate","__postUpdate","video","time","parentAlpha","onRender","childLen","__render","space","includeChildren","worldTransformation","prepend","invert","onGetLocalBounds","transformRect","expand","getBounds","scaleX","scaleY","anchorX","anchorY","zero","localPoint","transformVector","globalPoint","worldTransformationInversed","ax","ay","gen","ctx","iter","apply","it","done","next","seconds","setTimeout","cb","bind","on","flag","forEach","setDirty","LOCAL","WORLD","append","localTransformation","atan","currentWidth","currentHeight","old","onTagUpdated","inv","obj","hits","getComponent","InputComponent","touchable","intersectsWith","inside","tag","mTagCache","type","f","node","action","find","id","findById","Texture","nativeTexture","region","untrimmedRect","mTexture","mRegion","mIsSubtexture","__ID","HTMLImageElement","naturalWidth","naturalHeight","mTrimmed","mUntrimmedRect","mIsLoaded","nativeWidth","nativeHeight","coord","Uint32Array","refreshCoord","_vSlotWebGL","premultiplyAlpha","x3","y3","string","imgElement","Image","src","canvas","quality","toDataURL","getTextureFromCanvas","MISSING_IMAGE_CACHE","AtlasTexture","texture","jsonObject","native","mMeta","mSubTextures","__parseJson","o","NEGATIVE_HALF_PI","key","frames","data","warn","nameMask","outTextures","out","names","re","naturalSort","dataset","field","sort","__naturalComparer","useAbs","NUMBER_GROUPS","String","bb","parseFloat","toLowerCase","Asset","url","mUrl","mData","mMimeType","mResponseType","mExtension","getExtension","mRequest","XMLHttpRequest","overrideMimeType","responseType","open","onreadystatechange","readyState","status","responseText","onLoaded","send","TextureAsset","mImageElement","onload","JSONAsset","mimeType","JSON","parse","FontAsset","local","replace","mTestingFontName","mLocal","mTestingString","mLoadingTimeout","mCheckDelay","mTestingElement","__getTestingElement","mLoaderElement","__getLoaderElement","fontFamily","mDefaultFontWidth","offsetWidth","loaderElement","document","createElement","media","rel","onerror","getElementsByTagName","appendChild","testingElement","position","visibility","fontSize","innerHTML","body","href","checkLoadingStatus","onLoadingFail","parentNode","AtlasTextureAsset","imageUrl","dataUrl","dataAsset","onJsonLoaded","load","SoundAsset","mAudioElement","Audio","Device","isMobile","__enableOnMobile","autoplay","preload","oncanplaythrough","unlock","play","pause","removeEventListener","AssetManager","mDefaultPath","mTotalLoaded","mIsAllLoaded","mLoadingProgress","mQueue","mTextures","mAtlases","mJsons","mSounds","mFonts","item","COMPLETE","onAssetLoaded","msg","PROGRESS","subTextures","atlas","key2","ao","default","BlendMode","AUTO","NORMAL","ADD","MULTIPLY","SCREEN","OVERLAY","DARKEN","LIGHTEN","COLOR_DODGE","COLOR_BURN","HARD_LIGHT","SOFT_LIGHT","DIFFERENCE","EXCLUSION","HUE","SATURATE","COLOR","LUMINOSITY","VideoNullDriver","mGlobalBlendMode","mClientWidth","mClientHeight","mTransform","mGlobalAlpha","mMeasureElement","viewport","clientWidth","clientHeight","object","text","color","parsedColor","toString","textField","CanvasDriver","mCtx","mCurrentObject","mLetterSpacing","__createCanvas","cvs","getContext","setTransform","ox","oy","drawImage","widths","lineWidths","lineHeight","multiLine","strokeThickness","letterSpacing","font","weight","textBaseline","l","measureText","autoSize","fieldWidth","fieldHeight","lineOffset","align","maxWidth","fillStyle","hexColorToString","lineJoin","miterLimit","lineWidth","strokeStyle","strokeColor","clip","strokeText","fillText","clearRect","clear","globalCompositeOperation","save","restore","log","globalAlpha","blendMode","DOMDriver","mCache","mCounter","mPixelated","__initCSS","measureEl","whiteSpace","imgRendering","sSprite","sSpritePixelated","sText","sViewport","className","el","fromCanvasAsImage","oldTransform","uw","uh","__popElement","__updateElementCommon","__updateImageElement","fontStyle","fontWeight","__updateTextElement","transform","webkitTransform","opacity","backgroundImage","isSubTexture","vBackgroundPosition","backgroundPosition","textAlign","webkitTextStrokeColor","webkitTextStrokeWidth","WebGLDriver","fn","mEmptyPlugin","stop","drawText","onResize","mActivePlugin","mActiveArrayBuffer","mActiveElementBuffer","blend","boundTextures","gl","enable","BLEND","MAX_TEXTURE_IMAGE_UNITS","getParameter","glTextures","WebGLTextures","blender","WebGLBlendMode","mPlugins","WebGLTexPlugin","WebGLParticlesPlugin","config","antialias","alpha","premultipliedAlpha","desiredWidthInCSSPixels","desiredHeightInCSSPixels","devicePixelRatio","drawingBufferWidth","drawingBufferHeight","plugin","pluginName","globalBlendMode","slot","activeTexture","TEXTURE0","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","texImage2D","TEXTURE_2D","RGBA","UNSIGNED_BYTE","buffer","bindBuffer","ARRAY_BUFFER","ELEMENT_ARRAY_BUFFER","blendFunc","dst","WebGLConstants","FLOAT","FLOAT_VEC2","FLOAT_VEC3","FLOAT_VEC4","INT","INT_VEC2","INT_VEC3","INT_VEC4","BOOL","BOOL_VEC2","BOOL_VEC3","BOOL_VEC4","FLOAT_MAT2","FLOAT_MAT3","FLOAT_MAT4","SAMPLER_2D","SAMPLER_CUBE","SAMPLER_3D","SAMPLER_2D_SHADOW","FLOAT_MAT2x3","FLOAT_MAT2x4","FLOAT_MAT3x2","FLOAT_MAT3x4","FLOAT_MAT4x2","FLOAT_MAT4x3","SAMPLER_2D_ARRAY","SAMPLER_2D_ARRAY_SHADOW","SAMPLER_CUBE_SHADOW","UNSIGNED_INT","UNSIGNED_INT_VEC2","UNSIGNED_INT_VEC3","UNSIGNED_INT_VEC4","INT_SAMPLER_2D","INT_SAMPLER_3D","INT_SAMPLER_CUBE","INT_SAMPLER_2D_ARRAY","UNSIGNED_INT_SAMPLER_2D","UNSIGNED_INT_SAMPLER_3D","UNSIGNED_INT_SAMPLER_CUBE","UNSIGNED_INT_SAMPLER_2D_ARRAY","TEXTURE_CUBE_MAP","TEXTURE_3D","TEXTURE_2D_ARRAY","ONE","ONE_MINUS_SRC_ALPHA","DST_ALPHA","DST_COLOR","ONE_MINUS_SRC_COLOR","typeMap","WebGLBasePlugin","renderer","vertexShaderSource","fragmentShaderSource","attributesInfo","mRenderer","mBlendMode","vertexShader","createShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderSource","compileShader","program","createProgram","attachShader","linkProgram","useProgram","deleteShader","uniforms","uniformsAmount","getProgramParameter","ACTIVE_UNIFORMS","uniformInfo","getActiveUniform","isArray","location","getUniformLocation","sSetter","setter","Object","defineProperty","get","UNITS","fillRect","glTexture","createTexture","bindTexture","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","LAST_SLOT","batchSize","objects","batches","buffers","textures","texturesLength","slots","nextPow2","ArrayBuffer","float32View","uint32View","indices","Uint16Array","mElementBuffer","createBuffer","bindElementBuffer","bufferData","STREAM_DRAW","mArrayBuffer","aPosition","getAttribLocation","aTexCoord","aColor","aTexSlot","vertexAttribPointer","UNSIGNED_SHORT","enableVertexAttribArray","uniform2f","uProjection","uniform1iv","uSamplers","Int32Array","Array","fill","map","flush","worldAlpha","mNeedInvalidate","rendererBoundTextures","vBoundTextures","currentBatchIndex","currentBatch","currentBlend","currentBatchSlots","tint","nextBlend","refreshVertexData","tex","vertexData","texCoord","batch","setBlend","drawElements","TRIANGLE_STRIP","vertexShaderSource1","fragmentShaderSource1","LAST_SLOT_","objectsLength","isTrimmed","untrimmedRegion","particle","DisplayObject","mAlpha","mVisible","TextInfo","FontStyle","FontWeight","FontAlign","LEFT","ITALIC","BOLD","SUPERBOLD","RIGHT","CENTER","Sprite","mTextureName","getTexture","TextField","mText","mCacheBounds","mTextWidth","mTextHeight","mStyle","mAutoSize","mMultiLine","mLineHeight","mFieldWidth","mFieldHeight","mInstance","mPixelRatio","getDevicePixelRatio","screen","systemXDPI","logicalXDPI","userAgent","navigator","vendor","opera","hasEvent","maxTouchPoints","Scatter","FloatScatter","ease","VectorScatter","FloatCurveScatter","mCurve","baked","interpolate","Action","emmiter","Acceleration","vectorScatter","mScatter","getValue","AlphaOverLife","floatScatter","getValueAt","energy","ScaleOverLife","RotationOverLife","TextureOverLife","textureIndex","Initializer","Life","scatter","life","Mass","mass","Scale","Velocity","vx","vy","Position","Rotation","RandomTexture","EmitterState","PENDING","EMITTING","FINISHED","Particle","reset","age","Emitter","mParticles","mRecycled","mInitializers","mActions","mSpace","mIsLocal","mMaxParticles","mEmitCount","mEmitNumRepeats","Infinity","mEmitNumRepeatsLeft","mEmitDuration","mEmitDurationLeft","mEmitInterval","mEmitIntervalLeft","mEmitDelay","mEmitDelayLeft","mNextUpdateAt","mState","__tmpLocal","__tmpWorld","__sortOrder","EmitterSortOrder","FRONT_TO_BACK","uptime","firstEmit","initializer","emitterWorldAlpha","localTransform","worldTransform","identity","plength","__renderParticle","tw","th","updateNextTick","__create","alength","preUpdate","update","postUpdate","amount","minv","pop","initer","initialize","transformDirectionXY","BACK_TO_FRONT","Key","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","DIGIT_0","DIGIT_1","DIGIT_2","DIGIT_3","DIGIT_4","DIGIT_5","DIGIT_6","DIGIT_7","DIGIT_8","DIGIT_9","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_MULTIPLY","NUMPAD_ADD","NUMPAD_SUBTRACT","NUMPAD_DECIMAL","NUMPAD_DIVIDE","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","PAUSE_BREAK","CAPS_LOCK","ESCAPE","PAGE_UP","PAGE_DOWN","END","HOME","INSERT","DELETE","LEFT_WINDOW","RIGHT_WINDOW","CONTEXT_MENU","NUM_LOCK","SCROLL_LOCK","SEMI_COLON","EQUAL_SIGN","COMMA","DASH","PERIOD","FORWARD_SLASH","BACKQUOTE","BRAKET_LEFT","BACK_SLASH","BRAKET_RIGHT","SINGLE_QUOTE","KeyInfo","nativeEvent","keyCode","code","char","shiftKey","altKey","ctrlKey","Input","mPointerPosition","mDom","mEventList","mKeyEventList","__initListeners","mPointerQueue","mKeyQueue","mPressedKeys","mIsPointerDown","mNeedUpEvent","mInputListeners","Map","mTargetComponent","mLockedTarget","mLastInTargetComponent","PointerEvent","mPointerEventList","isTouch","mTouchEventList","mMouseEventList","__onPointerEvent","e","IX_POINTER_UP","__onPointerEventDoc","__onKeyEvent","isPaused","over","target","parentElement","__pushEvent","preventDefault","__getTouchPos","__getPointerPos","evt","clientX","clientY","touch","changedTouches","__updateKeyboard","__findTarget","pointerPosition","__processInOut","pointerPos","eventType","mInputEventsLookup","__processNativeEvent","pos","POINTER_DOWN","POINTER_UP","PointerInfo","sameTarget","mPointerInDispatched","__postOutMessage","__postInMessage","pIx","fnName","mKeyEventsLookup","POINTER_MOVE","POINTER_IN","POINTER_OUT","IX_POINTER_MOVE","IX_POINTER_DOWN","activeObject","mActiveObject","FPSComponent","txtFPS","FPS","MRComponent","mWidth","mHeight","mInvScale","mAspect","mCacheWidth","mCacheHeight","setSize","updateLayout","isLandscape","Ease","bounceOut","bounceIn","Interpolation","n","bn","fc","__factorial","v0","v1","t2","t3","Tween","values","duration","properties","mValues","mDuration","mProperties","mIsPlaying","mIsPaused","mStartTime","mPausedTime","mValuesStart","mElapsed","mInterpolation","linear","mDelay","mRepeatTimes","mInitiated","mStarted","mReverse","mRemoveOnComplete","mPlayOnAdded","mEase","smootherStep","__start","__resume","times","tween","AnimationInfo","controller","fps","loop","mController","mFrames","mCurrentFrame","mNextFrameAt","mFPS","mFrameDuration","mLoop","mPaused","mStopped","mCompleted","diff","AnimationController","mAnimations","mCurrentAnim","anim","sprite","newTexture","containerElementId","rootClass","videoDriverClass","mContainerElementId","getElementById","mVideoDriverClass","mStageWidth","mStageHeight","mSimulationTimestep","mUptime","mFrameAccum","mLastFrameTimeMs","mCurrentTime","mLastFpsUpdate","mFramesThisSecond","mNumUpdateSteps","mMinFrameDelay","mSystems","mIsRunning","mIsStarted","mIsPanic","mLastFrameUpdateTime","mLastFrameRenderTime","mRAFHandle","mViewport","mVideo","mUnpausing","mPauseOnHide","mPauseOnBlur","mRootClass","mRoot","mEnableFixedTimeStep","mWasStopped","onblur","__onVisbilityChange","event","onfocus","onpagehide","onpageshow","hidden","system","__bootViewport","__bootSystems","__bootVideo","__bootStage","self","requestAnimationFrame","timestamp","cancelAnimationFrame","__internalFixedUpdate","__internalUpdate","__internalPostUpdate","beginFrame","endFrame","oldTag","newTag","arr","timestep"],"mappings":"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","file":"black-es5.js","sourcesContent":["\r\nclass MathEx {\r\n  /**\r\n   * randomBetween\r\n   *\r\n   * @param {number} a\r\n   * @param {number} b\r\n   *\r\n   * @return {number}\r\n   */\r\n  static randomBetween(a, b) {\r\n    return Math.floor(Math.random() * (b - a + 1) + a);\r\n  };\r\n\r\n\r\n  /**\r\n   * clamp\r\n   *\r\n   * @param {number} value\r\n   * @param {number} min\r\n   * @param {number} max\r\n   *\r\n   * @return {number}\r\n   */\r\n  static clamp(value, min, max) {\r\n    return (value < min) ? min : (value > max) ? max : value;\r\n  };\r\n\r\n\r\n  /**\r\n   * lerp\r\n   *\r\n   * @param {number} a\r\n   * @param {number} b\r\n   * @param {number} t\r\n   *\r\n   * @return {number}\r\n   */\r\n  static lerp(a, b, t) {\r\n    return a + t * (b - a);\r\n  };\r\n\r\n\r\n  /**\r\n   * lerpp\r\n   *\r\n   * @param {number} a\r\n   * @param {number} b\r\n   * @param {number} t\r\n   *\r\n   * @return {number}\r\n   */\r\n  static lerpp(a, b, t) {\r\n    return (1 - t) * a + t * b;\r\n  };\r\n\r\n  static equals(a, b, epsilon = Number.EPSILON) {\r\n    return (a - epsilon < b) && (a + epsilon > b);\r\n  }\r\n}\r\n\r\n/** @const\r\n *  @type {number}\r\n */\r\nMathEx.PI_Q = Math.PI / 4;\r\n\r\n/** @const\r\n *  @type {number}\r\n */\r\nMathEx.PI2 = Math.PI * 2;\r\n\r\n/** @const\r\n *  @type {number}\r\n */\r\nMathEx.DEG2RAD = 0.01745329251994329576923690768489;\r\n\r\n/** @const\r\n *  @type {number}\r\n */\r\nMathEx.RAD2DEG = 57.295779513082320876798154814105;","// function assert(title, condition) {\r\n//   if (condition)\r\n//     console.log('%s %c[  OK  ]', title + ' ' + '.'.repeat(88 - title.length), 'color:green;')\r\n//   else\r\n//     console.log('%s %c[FAILED]', title + ' ' + '.'.repeat(88 - title.length), 'color:red;')\r\n// }\r\n//\r\n// function perfTest(testName, fn, ctx, count = 1000) {\r\n//   let startTime = new Date().getTime();\r\n//\r\n//   for (var i = 0; i < count; i++)\r\n//     fn.apply(ctx);\r\n//     //fn();\r\n//\r\n//   return (new Date().getTime() - startTime);\r\n// }\r\n//\r\n// function perfCompare(testsName, fn1, fn2, ctx, count = 1000) {\r\n//   let t1 = perfTest(testsName, fn1, ctx, count);\r\n//   let t2 = perfTest(testsName, fn2, ctx, count);\r\n//\r\n//   let c1 = 'color:green;'\r\n//   let c2 = 'color:red;'\r\n//\r\n//   if (t1 > t2) {\r\n//     c1 = c2;\r\n//     c2 = 'color:green;'\r\n//   }\r\n//\r\n//   console.log('%s:%c %dms %cvs%c %dms', testsName, c1, t1, 'color:black;', c2, t2);\r\n// }\r\n//\r\n// function assertf(title, func) {\r\n//   const r = func();\r\n//\r\n//   const statuses = ['[  OK  ]', '[FAILED]'];\r\n//   const colors = ['color:green;', 'color:red;'];\r\n//\r\n//   console.log('%s %c%s', title + ' ' + '.'.repeat(88 - title.length), r ? colors[0] : colors[1], r ? statuses[0] : statuses[1]);\r\n// }\r\n","/**\r\n * Mathematical representation of a vector.\r\n *\r\n * @cat geom\r\n */\r\n\r\nclass Vector {\r\n  /**\r\n   * Creates new Vector instance.\r\n   *\r\n   * @param  {number=} x = 0 X-component.\r\n   * @param  {number=} y = 0 y-component.\r\n   */\r\n  constructor(x = 0, y = 0) {\r\n    /**\r\n     * X coordinate of a point in the space.\r\n     *\r\n     * @type {number}\r\n     */\r\n    this.x = x;\r\n\r\n    /**\r\n     * Y coordinate of a point in the space.\r\n     * @type {number}\r\n     */\r\n    this.y = y;\r\n  }\r\n\r\n  /**\r\n   * Updates values of this vector with a given.\r\n   *\r\n   * @param {number=} [x=0] X-component.\r\n   * @param {number=} [y=0] y-component\r\n   *\r\n   * @return {Vector} This.\r\n   */\r\n  set(x = 0, y = 0) {\r\n    this.x = x;\r\n    this.y = y;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Adds two vectors.\r\n   *\r\n   * @param {Vector} vector The vector object to be added to this.\r\n   *\r\n   * @return {Vector} This.\r\n   */\r\n  add(vector) {\r\n    this.x += vector.x;\r\n    this.y += vector.y;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Subtract two vectors.\r\n   *\r\n   * @param {Vector} vector The vector object to be subtracted.\r\n   *\r\n   * @return {Vector} This.\r\n   */\r\n  subtract(vector) {\r\n    this.x -= vector.x;\r\n    this.y -= vector.y;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Returns distance between two vectors.\r\n   *\r\n   * @param {Vector} vector Second vector to check distance with.\r\n   *\r\n   * @return {number} The distance between two vectors.\r\n   */\r\n  distance(vector) {\r\n    let x = this.x - vector.x;\r\n    let y = this.y - vector.y;\r\n\r\n    return Math.sqrt((x * x) + (y * y));\r\n  }\r\n\r\n  /**\r\n   * Multiplies two vectors.\r\n   *\r\n   * @param {Vector} vector A second vector to multiply with.\r\n   *\r\n   * @return {Vector} This.\r\n   */\r\n  multiply(vector) {\r\n    this.x *= vector.x;\r\n    this.y *= vector.y;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Multiplies this vector by scalar value.\r\n   *\r\n   * @param {number} scalar The values to mul by.\r\n   *\r\n   * @return {Vector} This.\r\n   */\r\n  multiplyScalar(scalar) {\r\n    this.x *= scalar;\r\n    this.y *= scalar;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Find dot product between two vectors.\r\n   *\r\n   * @param {Vector} vector Second vector to find angle with.\r\n   *\r\n   * @return {number} A scalar value representing dot product.\r\n   */\r\n  dot(vector) {\r\n    return this.x * vector.x + this.y * vector.y;\r\n  }\r\n\r\n  /**\r\n   * Returns the length of this vector.\r\n   *\r\n   * @return {number} The length of the vector.\r\n   */\r\n  length() {\r\n    let x = this.x;\r\n    let y = this.y;\r\n\r\n    return Math.sqrt(x * x + y * y);\r\n  }\r\n\r\n  /**\r\n   * Returns the squared length of this vector.\r\n   *\r\n   * @return {number} Squared length.\r\n   */\r\n  lengthSqr() {\r\n    let x = this.x;\r\n    let y = this.y;\r\n\r\n    return x * x + y * y;\r\n  }\r\n\r\n  /**\r\n   * Creates unit vector out of this one.\r\n   *\r\n   * @returns {Vector} This.\r\n   */\r\n  normalize() {\r\n    let sum = this.lengthSqr();\r\n\r\n    if (sum > 0) {\r\n      sum = Math.sqrt(sum);\r\n      this.x /= sum;\r\n      this.y /= sum;\r\n    } else {\r\n      this.x = 0;\r\n      this.y = 0;\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clamps values of this vector to given range.\r\n   *\r\n   * @param {number} min Min value.\r\n   * @param {number} max Max value.\r\n   *\r\n   * @return {Vector} This.\r\n   */\r\n  clamp(min, max) {\r\n    this.x = MathEx.clamp(this.x, min, max);\r\n    this.y = MathEx.clamp(this.y, min, max);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Linearly interpolates between two vectors.\r\n   *\r\n   * @param {Vector} vector The second vector to interpolate values between.\r\n   * @param {number} t      Interpolant.\r\n   *\r\n   * @return {Vector} This.\r\n   */\r\n  lerp(vector, t) {\r\n    this.x = MathEx.lerp(this.x, vector.x, t);\r\n    this.y = MathEx.lerp(this.y, vector.y, t);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Copies this vector values into given vector.\r\n   *\r\n   * @param {Vector} vector The vector to store values in.\r\n   *\r\n   * @return {Vector} Given vector.\r\n   */\r\n  copyTo(vector) {\r\n    vector.x = this.x;\r\n    vector.y = this.y;\r\n\r\n    return vector;\r\n  }\r\n\r\n  /**\r\n   * Copies values from given vector into this.\r\n   *\r\n   * @param {Vector} vector The vector to copy values from.\r\n   *\r\n   * @return {Vector} This.\r\n   */\r\n  copyFrom(vector) {\r\n    this.x = vector.x;\r\n    this.y = vector.y;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clones this vector object.\r\n   *\r\n   * @return {Vector} New Vector instance.\r\n   */\r\n  clone() {\r\n    return new Vector(this.x, this.y);\r\n  }\r\n\r\n  /**\r\n   * Compares two vectors for equality.\r\n   *\r\n   * @param {Vector} vector Second vector to compare with.\r\n   * @param {number=} epsilon Threshold.\r\n   *\r\n   * @return {boolean} True if equal.\r\n   */\r\n  equals(vector, epsilon = Number.EPSILON) {\r\n    return vector !== null && (Math.abs(vector.x - this.x) < epsilon) && (Math.abs(vector.y - this.y) < epsilon);\r\n  }\r\n\r\n  /**\r\n   * Checks if this vector is empty.\r\n   *\r\n   * @return {boolean} True if both components equal to zero,\r\n   */\r\n  isEmpty() {\r\n    return this.x === 0 && this.y === 0;\r\n  }\r\n\r\n  /**\r\n   * Rotates this vector around specified point.\r\n   *\r\n   * @param {Vector} vector Center vector.\r\n   * @param {number} rotation Angle in radians.\r\n   *\r\n   * @return {Vector} This rotated vector.\r\n   */\r\n  setRotationFrom(vector, rotation) {\r\n    return this\r\n      .subtract(vector)\r\n      .setRotation(rotation)\r\n      .add(vector);\r\n  }\r\n\r\n  /**\r\n   *  Rotates this vector around zero vector.\r\n   *\r\n   * @param {number} rotation Angle in radians\r\n   *\r\n   * @return {Vector} This rotated vector.\r\n   */\r\n  setRotation(rotation) {\r\n    let cos = Math.cos(rotation).toFixed(15);\r\n    let sin = Math.sin(rotation).toFixed(15);\r\n\r\n    return this.set(this.x * cos - this.y * sin, this.x * sin + this.y * cos);\r\n  }\r\n\r\n  /**\r\n   * Calculates angle in radians within this and specified vectors.\r\n   *\r\n   * @return {number} Angle in radians.\r\n   */\r\n  theta(vector) {\r\n    return Math.acos(this.dot(vector) / this.length() / vector.length());\r\n  }\r\n\r\n  /**\r\n   * Rotates this vector to normal.\r\n   *\r\n   * @return {Vector} This vector.\r\n   */\r\n  perp() {\r\n    return this.set(this.y, -this.x);\r\n  }\r\n\r\n  /**\r\n   * Creates new Vector from given angle in radians.\r\n   *\r\n   * @param {number=} [angle=0] Angle.\r\n   *\r\n   * @return {Vector} New Vector object.\r\n   */\r\n  static fromAngle(angle = 0) {\r\n    return new Vector(Math.cos(angle), Math.sin(angle));\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   *\r\n   * @param {Vector} vectorMin\r\n   * @param {Vector} vectorMax\r\n   * @param {Vector=} outVector\r\n   *\r\n   * @return {Vector}\r\n   */\r\n  static randomRange(vectorMin, vectorMax, outVector = undefined) {\r\n    outVector = outVector || new Vector();\r\n\r\n    outVector.x = Math.random() * (vectorMax.x - vectorMin.x) + vectorMin.x;\r\n    outVector.y = Math.random() * (vectorMax.y - vectorMin.y) + vectorMin.y;\r\n\r\n    return outVector;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @ignore\r\n * @type {Vector}\r\n * @nocollapse\r\n */\r\nVector.__cache = new Vector();\r\n","/**\r\n * A 2x3 matrix allows you to transform objects in space.\r\n *\r\n * @cat geom\r\n */\r\n\r\nclass Matrix {\r\n  /**\r\n   * Creates new Matrix instance.\r\n   *\r\n   * @param  {number} a = 1  A-component.\r\n   * @param  {number} b = 0  B-component.\r\n   * @param  {number} c = 0  C-component.\r\n   * @param  {number} d = 1  D-component.\r\n   * @param  {number} tx = 0 TX-component.\r\n   * @param  {number} ty = 0 TY-component.\r\n   */\r\n  constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n    /** @type {Float32Array} */\r\n    this._matrix = new Float32Array(6);\r\n\r\n    this.set(a, b, c, d, tx, ty);\r\n  }\r\n\r\n  /**\r\n   * Sets components of this matrix to the given values.\r\n   *\r\n   * @param  {number} a  A-component.\r\n   * @param  {number} b  B-component.\r\n   * @param  {number} c  C-component.\r\n   * @param  {number} d  D-component.\r\n   * @param  {number} tx TX-component.\r\n   * @param  {number} ty TY-component.\r\n   * @return {Matrix} This.\r\n   */\r\n  set(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\r\n    let m = this._matrix;\r\n\r\n    m[0] = a;\r\n    m[1] = b;\r\n    m[2] = c;\r\n    m[3] = d;\r\n    m[4] = tx;\r\n    m[5] = ty;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Translates the matrix by x and y axes.\r\n   *\r\n   * @param {number} dx Amount along x-axis.\r\n   * @param {number} dy Amount along y-axis.\r\n   *\r\n   * @return {Matrix} This.\r\n   */\r\n  translate(dx, dy) {\r\n    let a = this._matrix;\r\n\r\n    let /** @type {number} */ a0 = a[0]; // a\r\n    let /** @type {number} */ a1 = a[1]; // b\r\n    let /** @type {number} */ a2 = a[2]; // c\r\n    let /** @type {number} */ a3 = a[3]; // d\r\n    let /** @type {number} */ a4 = a[4]; // tx\r\n    let /** @type {number} */ a5 = a[5]; // ty\r\n\r\n    this._matrix[4] = a0 * dx + a2 * dy + a4;\r\n    this._matrix[5] = a1 * dx + a3 * dy + a5;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets tx and ty components to given values.\r\n   *\r\n   * @param {number} x The tx component to update.\r\n   * @param {number} y The ty component to update.\r\n   *\r\n   * @return {Matrix} This.\r\n   */\r\n  setTranslation(x, y) {\r\n    this._matrix[4] = x;\r\n    this._matrix[5] = y;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets absolute rotation of this matrix to specified angle.\r\n   *\r\n   * @param  {number} theta     Theta value.\r\n   * @param  {number} scale = 1 Scale value.\r\n   */\r\n  setRotation(theta, scale = 1) {\r\n    let m = this._matrix;\r\n    m[0] = Math.cos(theta) * scale;\r\n    m[2] = Math.sin(theta) * scale;\r\n    m[1] = -m[2];\r\n    m[3] = m[0];\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Applies rotation to this matrix.\r\n   *\r\n   * @param  {number} angle Angle in radians.\r\n   * @return {Matrix} This.\r\n   */\r\n  rotate(angle) {\r\n    let a = this._matrix;\r\n    let cos = Math.cos(angle);\r\n    let sin = Math.sin(angle);\r\n    let a0 = a[0];\r\n    let a2 = a[2];\r\n    let a4 = a[4];\r\n\r\n    a[0] = a0 * cos - a[1] * sin;\r\n    a[1] = a0 * sin + a[1] * cos;\r\n    a[2] = a2 * cos - a[3] * sin;\r\n    a[3] = a2 * sin + a[3] * cos;\r\n    a[4] = a4 * cos - a[5] * sin;\r\n    a[5] = a4 * sin + a[5] * cos;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Scales current matrix.\r\n   *\r\n   * @param {number} sx Abscissa of the scaling vector.\r\n   * @param {number} sy Ordinate of the scaling vector.\r\n   *\r\n   * @return {Matrix} This.\r\n   */\r\n  scale(sx, sy) {\r\n    let a = this._matrix;\r\n    let /** @type {number} */ a0 = a[0]; // a\r\n    let /** @type {number} */ a1 = a[1]; // b\r\n    let /** @type {number} */ a2 = a[2]; // c\r\n    let /** @type {number} */ a3 = a[3]; // d\r\n    let /** @type {number} */ a4 = a[4]; // tx\r\n    let /** @type {number} */ a5 = a[5]; // ty\r\n\r\n    this._matrix[0] = a0 * sx;\r\n    this._matrix[1] = a1 * sx;\r\n    this._matrix[2] = a2 * sy;\r\n    this._matrix[3] = a3 * sy;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Resets current matrix to identity state.\r\n   *\r\n   * @return {Matrix} This.\r\n   */\r\n  identity() {\r\n    return this.set(1, 0, 0, 1, 0, 0);\r\n  }\r\n\r\n  /**\r\n   * Concatenates a given matrix with the current one.\r\n   *\r\n   * @param  {Matrix} b The matrix to be concatenated.\r\n   * @return {Matrix}   This.\r\n   */\r\n  prepend(b) {\r\n    let a = this._matrix;\r\n    let bv = b._matrix;\r\n\r\n    let /** @type {number} */ a0 = a[0]; // a\r\n    let /** @type {number} */ a1 = a[1]; // b\r\n    let /** @type {number} */ a2 = a[2]; // c\r\n    let /** @type {number} */ a3 = a[3]; // d\r\n    let /** @type {number} */ a4 = a[4]; // tx\r\n    let /** @type {number} */ a5 = a[5]; // ty\r\n\r\n    let /** @type {number} */ b0 = bv[0]; // a\r\n    let /** @type {number} */ b1 = bv[1]; // b\r\n    let /** @type {number} */ b2 = bv[2]; // c\r\n    let /** @type {number} */ b3 = bv[3]; // d\r\n    let /** @type {number} */ b4 = bv[4]; // tx\r\n    let /** @type {number} */ b5 = bv[5]; // ty\r\n\r\n    let a11 = (a0 * b0 + a1 * b2);\r\n    a[1] = a0 * b1 + a1 * b3;\r\n    a[0] = a11;\r\n\r\n    let c11 = (a2 * b0 + a3 * b2);\r\n    a[3] = a2 * b1 + a3 * b3;\r\n    a[2] = c11;\r\n\r\n    let tx11 = (a4 * b0 + a5 * b2 + b4);\r\n    a[5] = a4 * b1 + a5 * b3 + b5;\r\n    a[4] = tx11;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Appends values to this matrix.\r\n   *\r\n   * @param  {Matrix} b The matrix to be appended.\r\n   * @return {Matrix} This.\r\n   */\r\n  append(b) {\r\n    let a = this._matrix;\r\n    let bv = b._matrix;\r\n\r\n    let /** @type {number} */ a0 = a[0];\r\n    let /** @type {number} */ a1 = a[1];\r\n    let /** @type {number} */ a2 = a[2];\r\n    let /** @type {number} */ a3 = a[3];\r\n    let /** @type {number} */ a4 = a[4];\r\n    let /** @type {number} */ a5 = a[5];\r\n    let /** @type {number} */ b0 = bv[0];\r\n    let /** @type {number} */ b1 = bv[1];\r\n    let /** @type {number} */ b2 = bv[2];\r\n    let /** @type {number} */ b3 = bv[3];\r\n    let /** @type {number} */ b4 = bv[4];\r\n    let /** @type {number} */ b5 = bv[5];\r\n\r\n    a[0] = a0 * b0 + a2 * b1;\r\n    a[1] = a1 * b0 + a3 * b1;\r\n    a[2] = a0 * b2 + a2 * b3;\r\n    a[3] = a1 * b2 + a3 * b3;\r\n    a[4] = a0 * b4 + a2 * b5 + a4;\r\n    a[5] = a1 * b4 + a3 * b5 + a5;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Transforms given and x- and y- components of a point from a local space to\r\n   * world space.\r\n   *\r\n   * @param  {number} x          The x- component of a point.\r\n   * @param  {number} y          The y- component of a point.\r\n   * @param  {Vector=} outVector If given stores resulting values in it.\r\n   * @return {Vector} Transformed Vector object.\r\n   */\r\n  transformXY(x, y, outVector) {\r\n    outVector = outVector || new Vector();\r\n    let m = this._matrix;\r\n\r\n    outVector.x = m[0] * x + m[2] * y + m[4];\r\n    outVector.y = m[1] * x + m[3] * y + m[5];\r\n\r\n    return outVector;\r\n  }\r\n\r\n  /**\r\n   * Transforms given point from a local space to world space without applying\r\n   * scalling.\r\n   *\r\n   * @param  {number} x          The x- component.\r\n   * @param  {number} y          The y- component.\r\n   * @param  {Vector=} outVector If given stores results in it.\r\n   * @return {Vector} Just transformed Vector object.\r\n   */\r\n  transformDirectionXY(x, y, outVector) {\r\n    let m = this._matrix;\r\n    outVector = outVector || new Vector();\r\n\r\n    outVector.x = m[0] * x + m[2] * y;\r\n    outVector.y = m[1] * x + m[3] * y;\r\n\r\n    return outVector;\r\n  }\r\n\r\n  /**\r\n   * Transforms vector by current matrix object.\r\n   *\r\n   * @param  {Vector} vector     Vector to apply transformation on.\r\n   * @param  {Vector=} outVector Out Vector to store results in.\r\n   * @return {Vector} New transformed vector.\r\n   */\r\n  transformVector(vector, outVector) {\r\n    outVector = outVector || new Vector();\r\n    let m = this._matrix;\r\n\r\n    outVector.x = m[0] * vector.x + m[2] * vector.y + m[4];\r\n    outVector.y = m[1] * vector.x + m[3] * vector.y + m[5];\r\n\r\n    return outVector;\r\n  }\r\n\r\n  /**\r\n   * Transforms rectangle by current matrix object.\r\n   *\r\n   * @param  {Rectangle} rect         Rectangle to apply transformation on.\r\n   * @param  {Rectangle|null} outRect When given stores results in it.\r\n   * @return {Rectangle} Tranformed Rectangle object.\r\n   */\r\n  transformRect(rect, outRect) {\r\n    outRect = outRect || new Rectangle();\r\n\r\n    let minX = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    let xx = 0;\r\n    let yy = 0;\r\n    let tmpVector = new Vector();\r\n\r\n    // TODO: fix dirty hack. rewrite to use rect\r\n    //let points = [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height];\r\n\r\n    /** @type {Array<number>} */\r\n    let points = [rect.x, rect.y, rect.x + rect.width, rect.y, rect.x, rect.y + rect.height, rect.x + rect.width, rect.y + rect.height];\r\n\r\n    for (var i = 0; i < points.length; i += 2) {\r\n      xx = points[i];\r\n      yy = points[i + 1];\r\n\r\n      this.transformXY(xx, yy, tmpVector);\r\n\r\n      if (minX > tmpVector.x)\r\n        minX = tmpVector.x;\r\n      if (maxX < tmpVector.x)\r\n        maxX = tmpVector.x;\r\n      if (minY > tmpVector.y)\r\n        minY = tmpVector.y;\r\n      if (maxY < tmpVector.y)\r\n        maxY = tmpVector.y;\r\n    }\r\n\r\n    outRect.set(minX, minY, maxX - minX, maxY - minY);\r\n    return outRect;\r\n  }\r\n\r\n  /**\r\n   * Inverts current matrix.\r\n   *\r\n   * @return {Matrix} This.\r\n   */\r\n  invert() {\r\n    let a = this._matrix;\r\n\r\n    let aa = a[0];\r\n    let ab = a[1];\r\n    let ac = a[2];\r\n    let ad = a[3];\r\n    let atx = a[4];\r\n    let aty = a[5];\r\n\r\n    let det = aa * ad - ab * ac;\r\n    if (det === 0) {\r\n      a[0] = a[1] = a[2] = a[3] = 0;\r\n      a[4] = -atx;\r\n      a[5] = -aty;\r\n      return this;\r\n    }\r\n    det = 1.0 / det;\r\n\r\n    a[0] = ad * det;\r\n    a[1] = -ab * det;\r\n    a[2] = -ac * det;\r\n    a[3] = aa * det;\r\n    a[4] = (ac * aty - ad * atx) * det;\r\n    a[5] = (ab * atx - aa * aty) * det;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * TODO: remove or finish\r\n   * @ignore\r\n   *\r\n   * @returns {Array<number>} Description\r\n   */\r\n  __decompose() {\r\n    let m = this._matrix;\r\n    let a = m[0];\r\n    let b = m[1];\r\n    let c = m[2];\r\n    let d = m[3];\r\n    let tx = m[4];\r\n    let ty = m[5];\r\n\r\n    let skewX = -Math.atan2(-c, d);\r\n    let skewY = Math.atan2(b, a);\r\n\r\n    let delta = Math.abs(skewX + skewY);\r\n\r\n    let r_rotation = 0\r\n    let r_skewX = 0;\r\n    let r_skewY = 0;\r\n    let r_scaleX = 0;\r\n    let r_scaleY = 0;\r\n    let r_x = 0;\r\n    let r_y = 0;\r\n\r\n    if (delta < 0.00001) {\r\n      r_rotation = skewY;\r\n\r\n      if (a < 0 && d >= 0)\r\n        r_rotation += (r_rotation <= 0) ? Math.PI : -Math.PI;\r\n    } else {\r\n      r_skewX = skewX;\r\n      r_skewY = skewY;\r\n    }\r\n\r\n    r_scaleX = Math.sqrt((a * a) + (b * b));\r\n    r_scaleY = Math.sqrt((c * c) + (d * d));\r\n\r\n    r_x = tx;\r\n    r_y = ty;\r\n\r\n    return [r_x, r_y, r_rotation, r_scaleX, r_scaleY, r_skewX, r_skewY];\r\n  }\r\n\r\n  /**\r\n   * Clones the current matrix and returns new cloned object.\r\n   *\r\n   * @return {Matrix} New cloned object.\r\n   */\r\n  clone() {\r\n    let m = new Matrix();\r\n    let v = this._matrix;\r\n    m.set(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n    return m;\r\n  }\r\n\r\n  /**\r\n   * Copies values to given matrix.\r\n   *\r\n   * @param  {Matrix} matrix The destination matrix.\r\n   * @return {Matrix} This.\r\n   */\r\n  copyTo(matrix) {\r\n    let a = this._matrix;\r\n    let b = matrix._matrix;\r\n\r\n    b[0] = a[0];\r\n    b[1] = a[1];\r\n    b[2] = a[2];\r\n    b[3] = a[3];\r\n    b[4] = a[4];\r\n    b[5] = a[5];\r\n\r\n    return matrix;\r\n  }\r\n\r\n  /**\r\n   * Copies values from given matrix into this.\r\n   *\r\n   * @param  {Matrix} matrix The matrix to copy values from.\r\n   * @return {Matrix} This.\r\n   */\r\n  copyFrom(matrix) {\r\n    return matrix.copyTo(this);\r\n  }\r\n\r\n  /**\r\n   * Compares this matrix values with given matrix and checks if they are the same.\r\n   *\r\n   * @param  {Matrix} matrix                   Matrix object to compare with.\r\n   * @param  {number} epsilon = Number.EPSILON Comparision threshold.\r\n   * @return {boolean} True if equal.\r\n   */\r\n  equals(matrix, epsilon = Number.EPSILON) {\r\n    let a = this._matrix;\r\n    let b = matrix._matrix;\r\n    if (!matrix)\r\n      return false;\r\n\r\n    return (Math.abs(a[0] - b[0]) < epsilon) && (Math.abs(a[1] - b[1]) < epsilon) && (Math.abs(a[2] - b[2]) < epsilon) &&\r\n      (Math.abs(a[3] - b[3]) < epsilon) && (Math.abs(a[4] - b[4]) < epsilon) && (Math.abs(a[5] - b[5]) < epsilon);\r\n  }\r\n\r\n  /**\r\n   * Returns array of values representing this matrix object.\r\n   *\r\n   * @return {Float32Array}\r\n   */\r\n  get value() {\r\n    return this._matrix;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @type {Matrix}\r\n * @nocollapse\r\n */\r\nMatrix.__cache = new Matrix();\r\n","/**\r\n * Mathematical representation of a rectangle.\r\n *\r\n * @cat geom\r\n */\r\n\r\nclass Rectangle {\r\n  /**\r\n   * Creates new instance of Rectangle.\r\n   *\r\n   * @param  {number=} y = 0 X-component.\r\n   * @param  {number=} x = 0 Y-component.\r\n   * @param  {number=} w = 0 The width.\r\n   * @param  {number=} h = 0 The height.\r\n   */\r\n  constructor(x = 0, y = 0, w = 0, h = 0) {\r\n    /**\r\n     * The x coordinate of the rectangle.\r\n     * @type {number}\r\n     */\r\n    this.x = x;\r\n\r\n    /**\r\n     * The y coordinate of the rectangle.\r\n     * @type {number}\r\n     */\r\n    this.y = y;\r\n\r\n    /**\r\n     * The width of the rectangle.\r\n     * @type {number}\r\n     */\r\n    this.width = w;\r\n\r\n    /**\r\n     * The height of the rectangle.\r\n     * @type {number}\r\n     */\r\n    this.height = h;\r\n  }\r\n\r\n  /**\r\n   * Update rectangle values with a given.\r\n   *\r\n   * @param {number} x X-component.\r\n   * @param {number} y Y-component.\r\n   * @param {number} w The width.\r\n   * @param {number} h The height.\r\n   *\r\n   * @return {Rectangle} This.\r\n   */\r\n  set(x, y, w, h) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.width = w;\r\n    this.height = h;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Copies values from given rectangle into this one.\r\n   *\r\n   * @param {Rectangle} rect The Rectangle to copy values from.\r\n   *\r\n   * @return {Rectangle} This.\r\n   */\r\n  copyFrom(rect) {\r\n    this.x = rect.x;\r\n    this.y = rect.y;\r\n    this.width = rect.width;\r\n    this.height = rect.height;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Copies values from this rectangle into given rectangle.\r\n   *\r\n   * @param {Rectangle} rect The destination rect.\r\n   *\r\n   * @return {Rectangle} Given rect object.\r\n   */\r\n  copyTo(rect) {\r\n    rect.x = this.x;\r\n    rect.y = this.y;\r\n    rect.width = this.width;\r\n    rect.height = this.height;\r\n\r\n    return rect;\r\n  }\r\n\r\n  /**\r\n   * Get/Sets the leftmost point of this rectangle.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get left() {\r\n    return this.x;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   *\r\n   * @param {number} left\r\n   */\r\n  set left(left) {\r\n    this.x = left;\r\n  }\r\n\r\n  /**\r\n   * Get/Sets the rightmost point of this rectangle.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get right() {\r\n    return this.x + this.width;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   *\r\n   * @param {number} right\r\n   */\r\n  set right(right) {\r\n    this.x = right - this.width;\r\n  }\r\n\r\n  /**\r\n   * Get/Sets the topmost point of this rectangle.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get top() {\r\n    return this.y;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   *\r\n   * @param {number} top\r\n   */\r\n  set top(top) {\r\n    this.y = top;\r\n  }\r\n\r\n  /**\r\n   * Get/Sets the bottommost point of this rectangle.\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get bottom() {\r\n    return this.y + this.height;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   *\r\n   * @param {number} bottom\r\n   */\r\n  set bottom(bottom) {\r\n    this.y = bottom - this.height;\r\n  }\r\n\r\n  /**\r\n   * Get/Sets the top left point for this rectangle.\r\n   *\r\n   * @return {Vector}\r\n   */\r\n  get topLeft() {\r\n    return new Vector(this.x, this.y);\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   *\r\n   * @param {Vector} vector\r\n   */\r\n  set topLeft(vector) {\r\n    this.left = vector.x;\r\n    this.top = vector.y;\r\n  }\r\n\r\n  /**\r\n   * Get/Sets the top right point for this rectangle.\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  get topRight() {\r\n    return new Vector(this.right, this.y);\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   *\r\n   * @param {Vector} vector\r\n   */\r\n  set topRight(vector) {\r\n    this.right = vector.x;\r\n    this.top = vector.y;\r\n  }\r\n\r\n  /**\r\n   * Get/Sets the top left point for this rectangle.\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  get bottomRight() {\r\n    return new Vector(this.right, this.bottom);\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   *\r\n   * @param {Vector} vector\r\n   */\r\n  set bottomRight(vector) {\r\n    this.right = vector.x;\r\n    this.bottom = vector.y;\r\n  }\r\n\r\n  /**\r\n   * Get/Sets the top left point for this rectangle.\r\n   *\r\n   * @return {Vector} Description\r\n   */\r\n  get bottomLeft() {\r\n    return new Vector(this.x, this.bottom);\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   *\r\n   * @param {Vector} vector\r\n   */\r\n  set bottomLeft(vector) {\r\n    this.x = vector.x;\r\n    this.bottom = vector.y;\r\n  }\r\n\r\n  /**\r\n   * Creates a new Rectangle instance with width and height equal to current\r\n   * instance.\r\n   *\r\n   * @param {Vector=} outVector Resulting rect to save values in.\r\n   *\r\n   * @return {Vector} New Rectangle instance or `outVector` if passed.\r\n   */\r\n  size(outVector = undefined) {\r\n    outVector = outVector || new Vector();\r\n    return outVector.set(this.width, this.height);\r\n  }\r\n\r\n  /**\r\n   * Sets all components of this Rectangle to zero.\r\n   *\r\n   * @return {Rectangle} This.\r\n   */\r\n  zero() {\r\n    return this.set(0, 0, 0, 0);\r\n  }\r\n\r\n\r\n  /**\r\n   * Compares this Rectangle with a given one.\r\n   *\r\n   * @param {Rectangle} rect                  Rect to compare values with.\r\n   * @param {number} epsilon = Number.EPSILON\r\n   *\r\n   * @return {boolean} True if rects are equal.\r\n   */\r\n  equals(rect, epsilon = Number.EPSILON) {\r\n    return rect !== null && (Math.abs(this.x - rect.x) < epsilon) && (Math.abs(this.y - rect.y) < epsilon) &&\r\n           (Math.abs(this.width - rect.width) < epsilon) && (Math.abs(this.height - rect.height) < epsilon);\r\n  }\r\n\r\n\r\n  /**\r\n   * Checks if a given point is inside this rectangle.\r\n   *\r\n   * @param {number} x The x-component of a point.\r\n   * @param {number} y The y-component of a point.\r\n   *\r\n   * @return {boolean} True if point is inside.\r\n   */\r\n  containsXY(x, y) {\r\n    return x >= this.x && x <= this.right && y >= this.y && y <= this.bottom;\r\n  }\r\n\r\n\r\n  /**\r\n   * Checks if a given rectangle is inside this rect.\r\n   *\r\n   * @param {Rectangle} rect Rectangle to check with.\r\n   *\r\n   * @return {boolean} True if given rectangle is inside this one.\r\n   */\r\n  contains(rect) {\r\n    return rect.x >= this.x && rect.y >= this.y && rect.right <= this.right && rect.bottom <= this.bottom;\r\n  }\r\n\r\n  /**\r\n   * Checks if this rect intersects with a given rectangle.\r\n   *\r\n   * @param {Rectangle} rect The rect to check intersection with.\r\n   *\r\n   * @return {boolean} True if intersects.\r\n   */\r\n  intersects(rect) {\r\n    return rect.right > this.x && rect.bottom > this.y &&\r\n           rect.x < this.right && rect.y < this.bottom;\r\n  }\r\n\r\n\r\n  /**\r\n   * Adds given rectangle into this.\r\n   *\r\n   * @param {Rectangle} toUnion A rectangle object to add to this rect.\r\n   *\r\n   * @return {Rectangle} New rectangle object that is the union.\r\n   */\r\n  union(toUnion) {\r\n    if (this.width === 0 || this.height === 0)\r\n      return toUnion.clone();\r\n    else if (toUnion.width === 0 || toUnion.height === 0)\r\n      return this.clone();\r\n\r\n    let x0 = this.x > toUnion.x ? toUnion.x : this.x;\r\n    let x1 = this.right < toUnion.right ? toUnion.right : this.right;\r\n    let y0 = this.y > toUnion.y ? toUnion.y : this.y;\r\n    let y1 = this.bottom < toUnion.bottom ? toUnion.bottom : this.bottom;\r\n\r\n    return new Rectangle(x0, y0, x1 - x0, y1 - y0);\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns volume of this Rectangle.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get volume() {\r\n    return this.width * this.height;\r\n  }\r\n\r\n\r\n  /**\r\n   * Expands this rectangle object by given values.\r\n   *\r\n   * @param {number} x      X-component.\r\n   * @param {number} y      Y-component\r\n   * @param {number} width  The width.\r\n   * @param {number} height The height.\r\n   *\r\n   * @return {Rectangle} This.\r\n   */\r\n  expand(x, y, width, height) {\r\n    if (this.volume === 0)\r\n      return this.set(x, y, width, height);\r\n\r\n    let cacheRight = this.right;\r\n\t\tlet cacheBottom = this.bottom;\r\n\r\n    if (this.x > x) {\r\n      this.x = x;\r\n      this.width = cacheRight - x;\r\n    }\r\n\r\n    if (this.y > y) {\r\n      this.y = y;\r\n      this.height = cacheBottom - y;\r\n    }\r\n\r\n    if (cacheRight < x + width)\r\n      this.width = x + width - this.x;\r\n\r\n\t\tif (cacheBottom < y + height)\r\n      this.height = y + height - this.y;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Increases the size of this rectangle by given x- and y- values.\r\n   *\r\n   * @param {number=} [x=0] X-component.\r\n   * @param {number=} [y=0] Y-component.\r\n   *\r\n   * @return {Rectangle} This.\r\n   */\r\n  inflate(x = 0, y = 0) {\r\n    this.x -= x;\r\n    this.y -= y;\r\n    this.width += 2 * x;\r\n    this.height += 2 * y;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clones this Rectangle object into new one.\r\n   *\r\n   * @return {Rectangle} New rectangle object.\r\n   */\r\n  clone() {\r\n    return new Rectangle(this.x, this.y, this.width, this.height);\r\n  }\r\n\r\n  /**\r\n   * perimeter - Description\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get perimeter() {\r\n    return 2 * (this.width + this.height);\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns the center point of this rectangle.\r\n   *\r\n   * @param {Vector=} outVector The out-Vector to store values in.\r\n   *\r\n   * @return {Vector} New rectangle object.\r\n   */\r\n  center(outVector = undefined) {\r\n    outVector = outVector || new Vector();\r\n    return outVector.set(this.x + this.width * 0.5, this.y + this.height * 0.5);\r\n  }\r\n\r\n  /**\r\n   *  Scales this rectangle.\r\n   *\r\n   * @param {number} x Width multiplier.\r\n   * @param {number} y Height multiplier.\r\n   *\r\n   * @return {Rectangle} This rectangle.\r\n   */\r\n  scale(x, y) {\r\n    this.width *= x;\r\n    this.height *= y;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Checks if rectangle has area.\r\n   *\r\n   * @return {boolean} True if has.\r\n   */\r\n  isEmpty() {\r\n    return this.width === 0 && this.height === 0;\r\n  }\r\n\r\n  get lines() { // todo\r\n    return [\r\n      new Line(this.topLeft, this.topRight),\r\n      new Line(this.topRight, this.bottomRight),\r\n      new Line(this.bottomRight, this.bottomLeft),\r\n      new Line(this.bottomLeft, this.topLeft)\r\n    ];\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @ignore\r\n * @type {Rectangle}\r\n * @nocollapse\r\n */\r\nRectangle.__cache = new Rectangle();\r\n","/**\r\n * Mathematical representation of a circle.\r\n *\r\n * @cat geom\r\n */\r\n\r\nclass Circle {\r\n  /**\r\n   * Creates new Circle instance.\r\n   * \r\n   * @param  {number=} x = 0 Position x.\r\n   * @param  {number=} y = 0 Position y.\r\n   * @param  {number=} r = 1 Radius.\r\n   */\r\n  constructor(x = 0, y = 0, r = 1) {\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.x = x;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.y = y;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.r = r;\r\n  }\r\n\r\n  /**\r\n   * Sets new circle properties\r\n   *\r\n   * @param {number} x Position x.\r\n   * @param {number} y Position y.\r\n   * @param {number} r Radius.\r\n   *\r\n   * @return {Circle} This circle.\r\n   */\r\n  set(x, y, r) {\r\n    this.x = x;\r\n    this.y = y;\r\n    this.r = r;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Clones this circle.\r\n   *\r\n   * @return {Circle} Created circle.\r\n   */\r\n  clone() {\r\n    return new Circle(this.x, this.y, this.r);\r\n  }\r\n\r\n  /**\r\n   * Copy this properties to another circle.\r\n   *\r\n   * @param {Circle} circle Object to copy to.\r\n   *\r\n   * @return {Circle} Passed circle.\r\n   */\r\n  copyTo(circle) {\r\n    return circle.set(this.x, this.y, this.r);\r\n  }\r\n\r\n  /**\r\n   * Copy another circle properties to this.\r\n   *\r\n   * @param {Circle} circle Object to copy from.\r\n   *\r\n   * @return {Circle} This circle.\r\n   */\r\n  copyFrom(circle) {\r\n    return this.set(circle.x, circle.y, circle.r);\r\n  }\r\n\r\n  /**\r\n   * Shows whether circles are identical.\r\n   *\r\n   * @param {Circle} circle Object to comparison.\r\n   * @param {number=} epsilon Compare precision.\r\n   *\r\n   * @return {boolean} True if circles are identical.\r\n   */\r\n  equals(circle, epsilon = Number.EPSILON) {\r\n    return circle !== null && (Math.abs(this.x - circle.x) < epsilon) && (Math.abs(this.y - circle.y) < epsilon) &&\r\n      (Math.abs(this.r - circle.r) < epsilon);\r\n  }\r\n\r\n  /**\r\n   * Shows whether point is in circle.\r\n   *\r\n   * @param {number} x Point position x.\r\n   * @param {number} y Point position y.\r\n   *\r\n   * @return {boolean} True if circle contains point.\r\n   */\r\n  containsXY(x, y) {\r\n    return this.contains(new Vector(x, y));\r\n  }\r\n\r\n  /**\r\n   * Shows whether point is in circle.\r\n   *\r\n   * @param {Vector} vector Point to check.\r\n   *\r\n   * @return {boolean} True if circle contains point.\r\n   */\r\n  contains(vector) {\r\n    return new Vector(this.x, this.y).subtract(vector).length() <= this.r;\r\n  }\r\n\r\n  /**\r\n   * Finds left X position.\r\n   *\r\n   * @return {number} Left X position.\r\n   */\r\n  get left() {\r\n    return this.x - this.r;\r\n  }\r\n\r\n  /**\r\n   * Finds right X position.\r\n   *\r\n   * @return {number} Right X position.\r\n   */\r\n  get right() {\r\n    return this.x + this.r;\r\n  }\r\n\r\n  /**\r\n   * Finds top Y position.\r\n   *\r\n   * @return {number} Top Y position.\r\n   */\r\n  get top() {\r\n    return this.y - this.r;\r\n  }\r\n\r\n  /**\r\n   * Finds bottom Y position.\r\n   *\r\n   * @return {number} Bottom Y position.\r\n   */\r\n  get bottom() {\r\n    return this.y + this.r;\r\n  }\r\n\r\n  /**\r\n   * Returns top point of this circle.\r\n   *\r\n   * @return {Vector}\r\n   */\r\n  get topPoint() {\r\n    return new Vector(this.x, this.top);\r\n  }\r\n\r\n  /**\r\n   * Returns bottom point of this circle.\r\n   *\r\n   * @return {Vector}\r\n   */\r\n  get bottomPoint() {\r\n    return new Vector(this.x, this.bottom);\r\n  }\r\n\r\n  /**\r\n   * Resets all values to zero.\r\n   *\r\n   * @return {Circle} Returns this.\r\n   */\r\n  zero() {\r\n    return this.set(0, 0, 0);\r\n  }\r\n\r\n  /**\r\n   * Shows whether this circle intersects another.\r\n   *\r\n   * @param {Circle} circle Circle to check.\r\n   *\r\n   * @return {boolean} True if intersects.\r\n   */\r\n  intersects(circle) {\r\n    let d = new Vector(this.x, this.y).distance(new Vector(circle.x, circle.y));\r\n    return d <= this.r + circle.r && d >= this.r - circle.r;\r\n  }\r\n\r\n  /**\r\n   * Shows whether this circle collide with another.\r\n   *\r\n   * @param {Circle} circle Circle to check.\r\n   *\r\n   * @return {boolean} True if collide.\r\n   */\r\n  collide(circle) {\r\n    let d = new Vector(this.x, this.y).distance(new Vector(circle.x, circle.y));\r\n    return d <= this.r + circle.r;\r\n  }\r\n\r\n  /**\r\n   * overlap - Shows whether this circle overlap another.\r\n   *\r\n   * @param {Circle} circle Circle to check.\r\n   *\r\n   * @return {boolean} True if overlap.\r\n   */\r\n  overlap(circle) {\r\n    if (this.r < circle.r) {\r\n      return false;\r\n    }\r\n\r\n    let d = new Vector(this.x, this.y).distance(new Vector(circle.x, circle.y));\r\n    return d <= this.r - circle.r;\r\n  }\r\n\r\n  /**\r\n   * Returns area of this circle.\r\n   *\r\n   * @return {number} area.\r\n   */\r\n  get volume() {\r\n    return Math.PI * this.r * this.r;\r\n  }\r\n\r\n  /**\r\n   * Returns perimeter of this circle.\r\n   *\r\n   * @return {number} perimeter.\r\n   */\r\n  get perimeter() {\r\n    return 2 * Math.PI * this.r;\r\n  }\r\n\r\n  /**\r\n   * Represents center as vector.\r\n   *\r\n   * @param {Vector=} outVector Object for result.\r\n   *\r\n   * @return {Vector} Center point.\r\n   */\r\n  center(outVector = undefined) {\r\n    outVector = outVector || new Vector();\r\n    return outVector.set(this.x, this.y);\r\n  }\r\n\r\n}\r\n\r\n/** @type {Circle}\r\n * @nocollapse\r\n */\r\nCircle.__cache = new Circle();\r\n","/**\r\n * Mathematical representation of a bezier curve.\r\n *\r\n * @cat geom\r\n */\r\n\r\nclass Line {\r\n  /**\r\n   * Creates new Line instance.\r\n   * @param  {Vector} start Start point.\r\n   * @param  {Vector} end End point.\r\n   */\r\n  constructor(start, end) {\r\n    /** @type {Vector} */\r\n    this.start = start;\r\n\r\n    /** @type {Vector} */\r\n    this.end = end;\r\n  }\r\n\r\n  /**\r\n   * set - Sets new line properties\r\n   *\r\n   * @param  {Vector} start Start point.\r\n   * @param  {Vector} end End point.\r\n   *\r\n   * @return {Line} This circle.\r\n   */\r\n  set(start, end) {\r\n    this.start = start;\r\n    this.end = end;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * clone - Clones this line.\r\n   *\r\n   * @return {Line} Created line.\r\n   */\r\n  clone() {\r\n    return new Line(this.start.clone(), this.end.clone());\r\n  }\r\n\r\n  /**\r\n   * copyTo - Copy this properties to another line.\r\n   *\r\n   * @param {Line} line Object to copy to.\r\n   *\r\n   * @return {Line} Passed line.\r\n   */\r\n  copyTo(line) {\r\n    return line.set(this.start.clone(), this.end.clone());\r\n  }\r\n\r\n  /**\r\n   * copyFrom - Copy another line properties to this.\r\n   *\r\n   * @param {Line} line Object to copy from.\r\n   *\r\n   * @return {Line} This circle.\r\n   */\r\n  copyFrom(line) {\r\n    return this.set(line.start.clone(), line.end.clone());\r\n  }\r\n\r\n  /**\r\n   * equals - Shows whether lines are identical.\r\n   *\r\n   * @param {Line} line Object to comparison.\r\n   * @param {number=} epsilon Compare precision.\r\n   *\r\n   * @return {boolean} True if lines are identical.\r\n   */\r\n  equals(line, epsilon = Number.EPSILON) {\r\n    return (this.start.equals(line.start, epsilon) && this.end.equals(line.end, epsilon)) ||\r\n      (this.start.equals(line.end, epsilon) && this.end.equals(line.start, epsilon));\r\n  }\r\n\r\n  /**\r\n   * left - Finds left X position.\r\n   *\r\n   * @return {number} Left X position.\r\n   */\r\n  get left() {\r\n    return Math.min(this.start.x, this.end.x);\r\n  }\r\n\r\n\r\n  /**\r\n   * right - Finds right X position.\r\n   *\r\n   * @return {number} Right X position.\r\n   */\r\n  get right() {\r\n    return Math.max(this.start.x, this.end.x);\r\n  }\r\n\r\n  /**\r\n   * top - Finds top Y position.\r\n   *\r\n   * @return {number} Top Y position.\r\n   */\r\n  get top() {\r\n    return Math.min(this.start.y, this.end.y);\r\n  }\r\n\r\n  /**\r\n   * bottom - Finds bottom Y position.\r\n   *\r\n   * @return {number} Bottom Y position.\r\n   */\r\n  get bottom() {\r\n    return Math.max(this.start.y, this.end.y);\r\n  }\r\n\r\n  /**\r\n   * reverse - Replace line start and end points.\r\n   *\r\n   * @return {Line} This line.\r\n   */\r\n  reverse() {\r\n    let start = this.start;\r\n    this.start = this.end;\r\n    this.end = start;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * normalize - Change line's length to one. Moves end point.\r\n   *\r\n   * @return {Line} This line.\r\n   */\r\n  normalize() {\r\n    this.end\r\n      .subtract(this.start)\r\n      .normalize()\r\n      .add(this.start);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * scale - Change line's length to scaled. Moves end point.\r\n   *\r\n   * @return {Line} This line.\r\n   */\r\n  scale(multyplier) {\r\n    this.end\r\n      .subtract(this.start)\r\n      .multiplyScalar(multyplier)\r\n      .add(this.start);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * zero - Description\r\n   *\r\n   * @return {Line} Description\r\n   */\r\n  zero() {\r\n    return this.set(new Vector(), new Vector());\r\n  }\r\n\r\n  /**\r\n   * length - Length of this line.\r\n   *\r\n   * @return {number} length.\r\n   */\r\n  length() {\r\n    return this.start.distance(this.end);\r\n  }\r\n\r\n  /**\r\n   * center - Represents center as vector.\r\n   *\r\n   * @param {Vector=} outVector Object for result.\r\n   *\r\n   * @return {Vector} Center point.\r\n   */\r\n  center(outVector = undefined) {\r\n    outVector = outVector || new Vector();\r\n    return outVector.set((this.start.x + this.end.x) / 2, (this.start.y + this.end.y) / 2);\r\n  }\r\n\r\n\r\n  /**\r\n   * type - Description\r\n   *\r\n   * @return {string} Description\r\n   */\r\n  get type() {\r\n    return 'Line';\r\n  }\r\n\r\n  /**\r\n   * containsXY - Shows whether point is on line.\r\n   *\r\n   * @param {number} x Point position x.\r\n   * @param {number} y Point position y.\r\n   *\r\n   * @return {boolean} True if line contains point.\r\n   */\r\n  containsXY(x, y) {\r\n    return this.contains(new Vector(x, y));\r\n  }\r\n\r\n  /**\r\n   * contains - Shows whether point is on line.\r\n   *\r\n   * @param {Vector} vector Point to check.\r\n   *\r\n   * @return {boolean} True if line contains point.\r\n   */\r\n  contains(vector) {\r\n    return this.start.distance(vector) + this.end.distance(vector) === this.length();\r\n  }\r\n\r\n  /**\r\n   * intersects - Shows whether this line intersects another.\r\n   *\r\n   * @param {Line} line Line to check.\r\n   *\r\n   * @return {boolean} True if intersects.\r\n   */\r\n  intersects(line) {\r\n    let start1 = this.start;\r\n    let end1 = this.end;\r\n    let start2 = line.start;\r\n    let end2 = line.end;\r\n\r\n    let denominator = ((end2.y - start2.y) * (end1.x - start1.x)) - ((end2.x - start2.x) * (end1.y - start1.y));\r\n\r\n    if (denominator === 0) {\r\n      return false;\r\n    }\r\n\r\n    let a = start1.y - start2.y;\r\n    let b = start1.x - start2.x;\r\n    let numerator1 = ((end2.x - start2.x) * a) - ((end2.y - start2.y) * b);\r\n    let numerator2 = ((end1.x - start1.x) * a) - ((end1.y - start1.y) * b);\r\n    a = numerator1 / denominator;\r\n    b = numerator2 / denominator;\r\n\r\n    return a >= 0 && a <= 1 && b > 0 && b < 1;\r\n  }\r\n\r\n  /**\r\n   * intersects - Shows whether this line intersects circle.\r\n   *\r\n   * @param {Circle} circle Circle to check.\r\n   *\r\n   * @return {boolean} True if intersects.\r\n   */\r\n  intersectsCircle(circle) {\r\n    let start = this.start;\r\n    let end = this.end;\r\n\r\n    if (circle.contains(start) || circle.contains(end)) {\r\n      return true;\r\n    }\r\n\r\n    let distance = start.distance(end);\r\n    let directionX = (end.x - start.x) / distance;\r\n    let directionY = (end.y - start.y) / distance;\r\n\r\n    let t = directionX * (circle.x - start.x) + directionY * (circle.y - start.y);\r\n\r\n    let nearest = new Vector((t * directionX) + start.x, (t * directionY) + start.y);\r\n    let nearestDistance = nearest.distance(new Vector(circle.x, circle.y));\r\n\r\n    if (nearestDistance < circle.r) {\r\n      let dt = Math.sqrt(Math.pow(circle.r, 2) - Math.pow(nearestDistance, 2));\r\n\r\n      let x1 = ((t - dt) * directionX + start.x).toFixed(15);\r\n      let y1 = ((t - dt) * directionY + start.y).toFixed(15);\r\n      let x2 = ((t + dt) * directionX + start.x).toFixed(15);\r\n      let y2 = ((t + dt) * directionY + start.y).toFixed(15);\r\n\r\n      return this.__isInBoundsXY(x1, y1) || this.__isInBoundsXY(x2, y2);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  __isInBoundsXY(x, y) {\r\n    let x1 = this.start.x;\r\n    let y1 = this.start.y;\r\n    let x2 = this.end.x;\r\n    let y2 = this.end.y;\r\n\r\n    return x > Math.min(x1, x2) && x < Math.max(x1, x2) && y > Math.min(y1, y2) && y < Math.max(y1, y2);\r\n  }\r\n\r\n}\r\n\r\n/** @type {Line}\r\n * @nocollapse\r\n */\r\nLine.__cache = new Line(new Vector(), new Vector());\r\n","/**\r\n * @cat geom\r\n */\r\n\r\nclass Polygon {\r\n  /**\r\n   * Creates new Polygon instance.\r\n   *\r\n   * @param  {Array<Vector>} vertices = [] Array of vertex points;\r\n   */\r\n  constructor(vertices = []) {\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Vector>}\r\n     */\r\n    this.mVertices = vertices;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Line>}\r\n     */\r\n    this.mLines = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Rectangle}\r\n     */\r\n    this.mBounds = new Rectangle();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Vector}\r\n     */\r\n    this.mCenter = new Vector();\r\n\r\n    this.refresh();\r\n  }\r\n\r\n  /**\r\n   * set - Sets new vertices.\r\n   *\r\n   * @param {Array<Vector>} vertices New points.\r\n   *\r\n   * @return {Polygon} This polygon.\r\n   */\r\n  set(vertices) {\r\n    this.mVertices = vertices;\r\n    this.refresh();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * copyTo - Copy this properties to another polygon.\r\n   *\r\n   * @param {Polygon} polygon Object to copy to.\r\n   *\r\n   * @return {Polygon} Passed polygon.\r\n   */\r\n  copyTo(polygon) {\r\n    let len = this.mVertices.length;\r\n    let vertices = [];\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      vertices.push(this.mVertices[i].clone());\r\n    }\r\n\r\n    return polygon.set(vertices);\r\n  }\r\n\r\n  /**\r\n   * copyFrom - Copy another polygon properties to this.\r\n   *\r\n   * @param {Polygon} polygon Object to copy from.\r\n   *\r\n   * @return {Polygon} This polygon.\r\n   */\r\n  copyFrom(polygon) {\r\n    let polygonVertices = polygon.mVertices;\r\n    let len = polygonVertices.length;\r\n    let vertices = [];\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      vertices.push(polygonVertices[i].clone());\r\n    }\r\n\r\n    return this.set(vertices);\r\n  }\r\n\r\n  /**\r\n   * clone - Clones this polygon.\r\n   *\r\n   * @return {Polygon} Created polygon.\r\n   */\r\n  clone() {\r\n    let thisVertices = this.mVertices;\r\n    let len = thisVertices.length;\r\n    let vertices = [];\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      vertices.push(thisVertices[i].clone());\r\n    }\r\n\r\n    return new Polygon(vertices);\r\n  }\r\n\r\n  get width() {\r\n    return this.mBounds.width;\r\n  }\r\n\r\n  get height() {\r\n    return this.mBounds.height;\r\n  }\r\n\r\n  /**\r\n   * containsXY - Shows whether point is in polygon.\r\n   *\r\n   * @param {number} x Point position x.\r\n   * @param {number} y Point position y.\r\n   *\r\n   * @return {boolean} True if polygon contains point.\r\n   */\r\n  containsXY(x, y) {\r\n    return this.contains(new Vector(x, y));\r\n  }\r\n\r\n  /**\r\n   * contains - Shows whether point is in polygon.\r\n   *\r\n   * @param {Vector} vector Point to check.\r\n   *\r\n   * @return {boolean} True if polygon contains point.\r\n   */\r\n  contains(vector) {\r\n    let center = this.mCenter;\r\n    let lines = this.mLines;\r\n    let len = lines.length;\r\n\r\n    if (center.equals(vector)) {\r\n      return true;\r\n    }\r\n\r\n    let intersectionLine = new Line(vector, center.clone());\r\n    let intersects = 0;\r\n    intersectionLine.scale((this.width + this.height) / intersectionLine.length());\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      intersects += lines[i].intersects(intersectionLine) ? 1 : 0;\r\n    }\r\n\r\n    return intersects % 2 !== 0;\r\n  }\r\n\r\n  /**\r\n   * perimeter - Perimeter of this polygon.\r\n   *\r\n   * @return {number} perimeter.\r\n   */\r\n  get perimeter() {\r\n    let thisLines = this.mLines;\r\n    let len = thisLines.length;\r\n    let perimeter = 0;\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      perimeter += thisLines[i].length();\r\n    }\r\n\r\n    return perimeter;\r\n  }\r\n\r\n  /**\r\n   * collide - Checks collides between two polygons.\r\n   *\r\n   * @param {Polygon} polygon Object to check.\r\n   *\r\n   * @return {boolean} True if polygon collides with another polygon.\r\n   */\r\n  collide(polygon) {\r\n    if (!this.mBounds.intersects(polygon.mBounds)) {\r\n      return false;\r\n    }\r\n\r\n    let thisLines = this.mLines;\r\n    let thisLen = thisLines.length;\r\n    let polygonLines = polygon.mLines;\r\n    let polygonLen = polygonLines.length;\r\n\r\n    for (let i = 0; i < thisLen; i++) {\r\n      for (let j = 0; j < polygonLen; j++) {\r\n        if (thisLines[i].intersects(polygonLines[j])) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * collideCircle - Checks collides between this polygon and circle.\r\n   *\r\n   * @param {Circle} circle Object to check.\r\n   *\r\n   * @return {boolean} True if polygon collides with circle.\r\n   */\r\n  collideCircle(circle) {\r\n    let bounds = this.mBounds;\r\n    let lines = this.mLines;\r\n\r\n    if (bounds.left > circle.right || bounds.right < circle.left || bounds.top > circle.bottom || bounds.bottom < circle.top) {\r\n      return false;\r\n    }\r\n\r\n    let len = lines.length;\r\n    for (let i = 0; i < len; i++) {\r\n      if (lines[i].intersectsCircle(circle)) {\r\n        return true;\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * collideRectangle - Checks collides between this polygon and rectangle.\r\n   *\r\n   * @param {Rectangle} rectangle Object to check.\r\n   *\r\n   * @return {boolean} True if polygon collides with rectangle.\r\n   */\r\n  collideRectangle(rectangle) {\r\n    if (!this.mBounds.intersects(rectangle)) {\r\n      return false;\r\n    }\r\n\r\n    let thisLines = this.mLines;\r\n    let thisLen = thisLines.length;\r\n    let rectangleLines = rectangle.lines;\r\n    let rectangleLen = rectangleLines.length;\r\n\r\n    for (let i = 0; i < thisLen; i++) {\r\n      for (let j = 0; j < rectangleLen; j++) {\r\n        if (thisLines[i].intersects(rectangleLines[j])) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * overlap - Checks overlaps between this polygon and another.\r\n   *\r\n   * @param {Polygon} polygon Object to check.\r\n   *\r\n   * @return {boolean} True if polygon overlaps second.\r\n   */\r\n  overlap(polygon) {\r\n    if (this.mBounds.width < polygon.mBounds.width || this.mBounds.height < polygon.mBounds.height) {\r\n      return false;\r\n    }\r\n\r\n    if (!this.contains(polygon.mCenter)) {\r\n      return false;\r\n    }\r\n\r\n    let thisLines = this.mLines;\r\n    let thisLen = thisLines.length;\r\n    let polygonLines = polygon.mLines;\r\n    let polygonLen = polygonLines.length;\r\n\r\n    for (let i = 0; i < thisLen; i++) {\r\n      for (let j = 0; j < polygonLen; j++) {\r\n        if (thisLines[i].intersects(polygonLines[j])) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * overlapCircle - Checks overlaps between this polygon and circle.\r\n   *\r\n   * @param {Circle} circle Object to check.\r\n   *\r\n   * @return {boolean} True if polygon overlaps circle.\r\n   */\r\n  overlapCircle(circle) {\r\n    if (!this.containsXY(circle.x, circle.y)) {\r\n      return false;\r\n    }\r\n\r\n    let thisLines = this.mLines;\r\n    let len = thisLines.length;\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      if (thisLines[i].intersectsCircle(circle)) {\r\n        return false;\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * overlapRectangle - Checks overlaps between this polygon and rectangle.\r\n   *\r\n   * @param {Rectangle} rectangle Object to check.\r\n   *\r\n   * @return {boolean} True if polygon overlaps rectangle.\r\n   */\r\n  overlapRectangle(rectangle) {\r\n    if (!this.contains(rectangle.center())) {\r\n      return false;\r\n    }\r\n\r\n    let thisLines = this.mLines;\r\n    let thisLen = thisLines.length;\r\n    let rectangleLines = rectangle.lines;\r\n    let rectangleLen = rectangleLines.length;\r\n\r\n    for (let i = 0; i < thisLen; i++) {\r\n      for (let j = 0; j < rectangleLen; j++) {\r\n        if (thisLines[i].intersects(rectangleLines[j])) {\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * refresh - ReCalc center, bounds, and edges of this polygon.\r\n   *\r\n   * @return {Polygon} This polygon.\r\n   */\r\n  refresh() {\r\n    let center = this.mCenter;\r\n    let bounds = this.mBounds;\r\n    let vertices = this.mVertices;\r\n    let lines = this.mLines = [];\r\n    center.set(0, 0);\r\n\r\n    // bounds\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n\r\n    for (let i = 0; i < vertices.length; i++) {\r\n      let vector = vertices[i];\r\n      center.add(vector);\r\n\r\n      // bounds\r\n      let {\r\n        x,\r\n        y\r\n      } = vector;\r\n      maxX = x > maxX ? x : maxX;\r\n      maxY = y > maxY ? y : maxY;\r\n      minX = x < minX ? x : minX;\r\n      minY = y < minY ? y : minY;\r\n\r\n      lines.push(new Line(vector, vertices[i + 1] || vertices[0]));\r\n    }\r\n\r\n    center.multiplyScalar(1 / vertices.length);\r\n    bounds.set(minX, minY, maxX - minX, maxY - minY);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * refreshCenter - ReCalc center of this polygon.\r\n   *\r\n   * @return {Polygon} This polygon.\r\n   */\r\n  refreshCenter() {\r\n    let center = this.mCenter;\r\n    let vertices = this.mVertices;\r\n    let len = vertices.length;\r\n    center.set(0, 0);\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      center.add(vertices[i]);\r\n    }\r\n\r\n    center.multiplyScalar(1 / vertices.length);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * refreshBounds - ReCalc bounds of this polygon.\r\n   *\r\n   * @return {Polygon} This polygon.\r\n   */\r\n  refreshBounds() {\r\n    let bounds = this.mBounds;\r\n    let vertices = this.mVertices;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    let minX = Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let len = vertices.length;\r\n    let x;\r\n    let y;\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      x = vertices[i].x;\r\n      y = vertices[i].y;\r\n      maxX = x > maxX ? x : maxX;\r\n      maxY = y > maxY ? y : maxY;\r\n      minX = x < minX ? x : minX;\r\n      minY = y < minY ? y : minY;\r\n    }\r\n\r\n    bounds.set(minX, minY, maxX - minX, maxY - minY);\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * refreshLines - ReCalc edges of this polygon.\r\n   *\r\n   * @return {Polygon} This polygon.\r\n   */\r\n  refreshLines() {\r\n    let vertices = this.mVertices;\r\n    let lines = this.mLines = [];\r\n\r\n    for (let i = 0; i < vertices.length; i += 2) {\r\n      lines.push(new Line(vertices[i], vertices[i + 1] || vertices[0]));\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * fromPath - Creates instance of Polygon.\r\n   *\r\n   * @param {string} path Numbers x y divided with space.\r\n   *\r\n   * @return {Polygon} Created polygon.\r\n   */\r\n  static fromPath(path) {\r\n    let vertices = [];\r\n    let path2 = path.split(' ');\r\n\r\n    for (let i = 0; i < path2.length; i += 2) {\r\n      vertices.push(new Vector(Number(path2[i]), Number(path2[i + 1])));\r\n    }\r\n\r\n    return new Polygon(vertices);\r\n  }\r\n\r\n  /**\r\n   * setRotation - Sets rotation. Rotate this polygon around it center.\r\n   *\r\n   * @param {number} rotation Angle in radians.\r\n   *\r\n   * @return {Polygon} This polygon.\r\n   */\r\n  setRotation(rotation) {\r\n    let center = this.mCenter;\r\n    let vertices = this.mVertices;\r\n    let cos = Math.cos(rotation).toFixed(15);\r\n    let sin = Math.sin(rotation).toFixed(15);\r\n\r\n    for (let i = 0, len = vertices.length; i < len; i++) {\r\n      let vector = vertices[i];\r\n      vector\r\n        .subtract(center)\r\n        .set(vector.x * cos - vector.y * sin, vector.x * sin + vector.y * cos)\r\n        .add(center);\r\n    }\r\n\r\n    return this.refresh();\r\n  }\r\n\r\n  /**\r\n   * setTranslation - Translates this polygon to specified position.\r\n   *\r\n   * @param {Vector} point Translation vector.\r\n   *\r\n   * @return {Polygon} This vertices.\r\n   */\r\n  setTranslation(point) {\r\n    let center = this.mCenter;\r\n    let vertices = this.mVertices;\r\n    let len = vertices.length;\r\n    point.subtract(center);\r\n\r\n    for (let i = 0; i < len; i++) {\r\n      vertices[i].add(point);\r\n    }\r\n\r\n    return this.refresh();\r\n  }\r\n\r\n}\r\n\r\n/** @type {Polygon}\r\n * @nocollapse\r\n */\r\nPolygon.__cache = new Polygon();\r\n","/**\r\n * Mathematical representation of a bezier curve.\r\n *\r\n * @cat geom\r\n */\r\n\r\nclass Curve {\r\n  /**\r\n   * Creates new Curve instance.\r\n   */\r\n  constructor() {\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.mPoints = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Vector>}\r\n     */\r\n    this.mLookup = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mBaked = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mStep = 1 / 60;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.mEachT = [];\r\n  }\r\n\r\n  /**\r\n   * Sets new points coordinates.\r\n   *\r\n   * @param  {...number} points Coordinates: startX, startY, cpStartX, cpStartY, cpEndX, cpEndY, endX/start2X, endY/start2Y, cp2StartX, cp2StartX... 8 or 14 or 20...\r\n   *\r\n   * @return {Curve} This curve.\r\n   */\r\n  set(...points) {\r\n    this.mPoints = this.__initPoints(points);\r\n    this.__refreshEachT();\r\n\r\n    if (this.mBaked)\r\n      this.__refreshCache();\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /**\r\n   * Enables or disables interpolation from cache (lookup).\r\n   * Returns true or false depending on baked is enabled or not.\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  get baked() {\r\n    return this.mBaked;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param  {boolean} label\r\n   */\r\n  set baked(label) {\r\n    this.mBaked = label;\r\n\r\n    if (!this.mLookup && this.mPoints) {\r\n      this.__refreshCache();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Wides points array. Sets first point for next bezier same as last of previous.\r\n   * @private\r\n   * @param  {Array<number>} points Array of points coordinates.\r\n   *\r\n   * @return {Array<number>} Points coordinates array.\r\n   */\r\n  __initPoints(points) {\r\n    let res = [];\r\n\r\n    for (let i = 6; i < points.length; i += 6) {\r\n      res = res.concat(points.slice(i - 6, i + 2));\r\n    }\r\n\r\n    return res;\r\n  }\r\n\r\n  /**\r\n   * Refresh cache (lookup) for fast interpolations.\r\n   *\r\n   * @private\r\n   *\r\n   * @return {Curve} This curve.\r\n   */\r\n  __refreshCache() {\r\n    let lookup = this.mLookup = [];\r\n    let getFullLength = this.getFullLength();\r\n    let points = this.mPoints;\r\n    let pointsLen = points.length;\r\n\r\n    for (let i = 0; i < pointsLen; i += 8) {\r\n      let length = Curve.getLength(...points.slice(i, i + 8));\r\n      let step = this.mStep * getFullLength / length;\r\n\r\n      for (let t = step; t < 1; t += step)\r\n        lookup.push(Curve.lerp(t, ...points.slice(i, i + 8)));\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n\r\n  /**\r\n   * Refresh local interpolation kof for each bezier in curve.\r\n   * @private\r\n   * @return {Curve} This curve.\r\n   */\r\n  __refreshEachT() {\r\n    let points = this.mPoints;\r\n    let eachT = this.mEachT = [];\r\n    let pointsLen = points.length;\r\n    let eachLength = [];\r\n\r\n    for (let i = 0; i < pointsLen; i += 8)\r\n      eachLength.push(Curve.getLength(...points.slice(i, i + 8)));\r\n\r\n    let length = this.getFullLength();\r\n    let s = 0;\r\n    for (let i = 0; i < pointsLen; i += 8) {\r\n      s += eachLength[i / 8];\r\n      eachT.push(s / length);\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Interpolates single bezier on t position.\r\n   *\r\n   * @param  {number} t Interpolation position (0...1).\r\n   * @param  {number} startX\r\n   * @param  {number} startY\r\n   * @param  {number} cpStartX\r\n   * @param  {number} cpStartY\r\n   * @param  {number} cpEndX\r\n   * @param  {number} cpEndY\r\n   * @param  {number} endX\r\n   * @param  {number} endY\r\n   * @param  {Vector=} outVector\r\n   *\r\n   * @return {Vector} Position on bezier.\r\n   */\r\n  static lerp(t, startX, startY, cpStartX, cpStartY, cpEndX, cpEndY, endX, endY, outVector) {\r\n    let u = 1 - t;\r\n    let tt = t * t;\r\n    let uu = u * u;\r\n    let uuu = uu * u;\r\n    let ttt = tt * t;\r\n\r\n    let p = outVector || new Vector();\r\n    p.set(startX, startY);\r\n    p.x *= uuu;\r\n    p.y *= uuu;\r\n\r\n    // first\r\n    p.x += 3 * uu * t * cpStartX;\r\n    p.y += 3 * uu * t * cpStartY;\r\n\r\n    // second\r\n    p.x += 3 * u * tt * cpEndX;\r\n    p.y += 3 * u * tt * cpEndY;\r\n\r\n    // third\r\n    p.x += ttt * endX;\r\n    p.y += ttt * endY;\r\n\r\n    return p;\r\n  }\r\n\r\n  /**\r\n   * Interpolates across whole curve.\r\n   *\r\n   * @param  {number} t Interpolation position (0...1).\r\n   * @param  {Vector=} outVector\r\n   *\r\n   * @return {Vector} Position on curve.\r\n   */\r\n  interpolate(t, outVector) {\r\n    let res = outVector || new Vector();\r\n    let lookup = this.mLookup;\r\n\r\n    if (this.mBaked) {\r\n      let i = Math.ceil((lookup.length - 1) * t);\r\n      let p = lookup[i];\r\n      res.copyFrom(p);\r\n\r\n      return res;\r\n    }\r\n\r\n    // not backed\r\n    let { mEachT, mPoints } = this;\r\n    let i = 0;\r\n\r\n    while (mEachT[i] < t)\r\n      i++;\r\n\r\n    let minT = mEachT[i - 1] || 0;\r\n    let maxT = mEachT[i];\r\n    let bezier = mPoints.slice(i * 8, i * 8 + 8);\r\n\r\n    return Curve.lerp((t - minT) / (maxT - minT), ...bezier, res);\r\n  }\r\n\r\n  /**\r\n   * Returns single bezier length.\r\n   *\r\n   * @param  {...number} points Coordinates: startX, startY, cpStartX, cpStartY, cpEndX, cpEndY, endX, endY\r\n   *\r\n   * @return {number} Length.\r\n   */\r\n  static getLength(...points) {\r\n    let p0 = new Vector(points[0], points[1]);\r\n    let p1 = new Vector(points[2], points[3]);\r\n    let p2 = new Vector(points[4], points[5]);\r\n    let p3 = new Vector(points[6], points[7]);\r\n\r\n    return (p3.distance(p0) + p0.distance(p1) + p1.distance(p2) + p2.distance(p3)) / 2;\r\n  }\r\n\r\n  /**\r\n   * Returns this curve length.\r\n   *\r\n   * @return {number} Length.\r\n   */\r\n  getFullLength() {\r\n    let points = this.mPoints;\r\n    let mPointsLen = points.length;\r\n    let res = 0;\r\n\r\n    for (let i = 0; i < mPointsLen; i += 8)\r\n      res += Curve.getLength(...points.slice(i, i + 8));\r\n\r\n    return res;\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * @type {Curve}\r\n * @nocollapse\r\n */\r\nCurve.__cache = new Curve();\r\n","/**\r\n * Utility class for logging and debugging.\r\n *\r\n * @cat core\r\n */\r\n\r\nclass Debug {\r\n  constructor() {\r\n    Debug.assert(false, 'Static class.');\r\n  }\r\n\r\n  static assert(value, message) {\r\n    if (value === true)\r\n      return;\r\n\r\n    message = message == null ? 'Assertation failed.' : message;\r\n\r\n    if (Debug.logOnFail)\r\n      console.error('[ASSERT]', message);\r\n\r\n    if (Debug.throwOnFail)\r\n      throw new Error(message);\r\n  }\r\n\r\n  static log(...message) {\r\n    console.info('%c%s', 'color: black;', 'LOG:', ...message);\r\n  }\r\n\r\n  static info(...message) {\r\n    console.info('%c%s', 'color: #003bd2;', 'INFO:', ...message);\r\n  }\r\n\r\n  static warn(...message) {\r\n    console.info('%c%s', 'color: #f67400;', 'WARN:', ...message);\r\n  }\r\n\r\n  static error(...message) {\r\n    console.info('%c%s', 'color: #d50000;', 'ERROR:', ...message);\r\n  }\r\n}\r\n\r\nDebug.throwOnFail = false;\r\nDebug.logOnFail = true;\r\n","/**\r\n * Message holds all information about dispatched event.\r\n *\r\n * @cat core\r\n */\r\n\r\nclass Message {\r\n  constructor() {\r\n    /**\r\n     * @private\r\n     * @type {*}\r\n     */\r\n    this.mSender = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.mName;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|null}\r\n     */\r\n    this.mPathMask = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|null}\r\n     */\r\n    this.mComponentMask = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.mDirection = 'none';\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mSibblings = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.mOrigin = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object}\r\n     */\r\n    this.mTarget = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mCanceled = false;\r\n  }\r\n\r\n  /**\r\n   * @return {string|null}\r\n   */  \r\n  get path() {\r\n    var hasComponentMask = this.mComponentMask !== null;\r\n\r\n    if (this.mPathMask !== null) {\r\n      if (hasComponentMask === true)\r\n        return this.mPathMask + '#' + this.mComponentMask;\r\n      else\r\n        return this.mPathMask;  \r\n    }\r\n    else if (hasComponentMask === true) {\r\n      return this.mComponentMask;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Who send the message.\r\n   *\r\n   * @return {*}\r\n   */\r\n  get sender() {\r\n    return this.mSender;\r\n  }\r\n\r\n  /**\r\n   * The name of the message.\r\n   *\r\n   * @return {string}\r\n   */\r\n  get name() {\r\n    return this.mName;\r\n  }\r\n\r\n  /**\r\n   * Direction in what message was sent. Can be 'none', 'up' and 'down'.\r\n   *\r\n   * @return {string}\r\n   */\r\n  get direction() {\r\n    return this.mDirection;\r\n  }\r\n\r\n  /**\r\n   * Indicates if sibblings should be included into dispatching process.\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  get sibblings() {\r\n    return this.mSibblings;\r\n  }\r\n\r\n  /**\r\n   * The GameObject.name mask string if was used.\r\n   *\r\n   * @return {string|null}\r\n   */\r\n  get pathMask() {\r\n    return this.mPathMask;\r\n  }\r\n\r\n  /**\r\n   * Component mask string if was used.\r\n   *\r\n   * @return {string|null}\r\n   */\r\n  get componentMask() {\r\n    return this.mComponentMask;\r\n  }\r\n\r\n  /**\r\n   * The original sender of a message.\r\n   *\r\n   * @return {*|null}\r\n   */\r\n  get origin() {\r\n    return this.mOrigin;\r\n  }\r\n\r\n  /**\r\n   * The listener object.\r\n   *\r\n   * @return {*|null}\r\n   */\r\n  get target() {\r\n    return this.mTarget;\r\n  }\r\n\r\n  // /**\r\n  //  * Stops propagation of the message.\r\n  //  *\r\n  //  * @return {void}\r\n  //  */\r\n  // cancel() {\r\n  //   this.mCanceled = true;\r\n  // }\r\n\r\n  // /**\r\n  //  * True if message was canceled by the user.\r\n  //  *\r\n  //  * @return {boolean}\r\n  //  */\r\n  // get canceled() {\r\n  //   return this.mCanceled;\r\n  // }\r\n\r\n  static get PROGRESS() {\r\n    return 'progress';\r\n  }\r\n  static get COMPLETE() {\r\n    return 'complete';\r\n  }\r\n}","/**\r\n * The MessageDispatcher class is the base class for all classes that posts messages.\r\n *\r\n * Global messages will not be dispatched on non GameObject objects.\r\n *\r\n *\r\n *\r\n * @cat core\r\n * @unrestricted\r\n */\r\n\r\nclass MessageDispatcher {\r\n  constructor() {\r\n    // object of arrays\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, Array>}\r\n     */\r\n    this.mListeners = null;\r\n  }\r\n\r\n  /**\r\n   * Listens to message by given name\r\n   *\r\n   * @param {string} name           Name of a message to listen\r\n   * @param {Function} callback       The callback function\r\n   * @param {Object=} [context=null] The context for callback function\r\n   *\r\n   * @return {void}\r\n   */\r\n  on(name, callback, context = null) {\r\n    Debug.assert(name !== null, 'name cannot be null.');\r\n    Debug.assert(callback !== null, 'callback cannot be null.');\r\n\r\n    // TODO: refactor, expore dispatching provider\r\n    let filterIx = name.indexOf('@');\r\n    if (filterIx !== -1) {\r\n      // global handler\r\n\r\n      let pureName = name.substring(0, filterIx);\r\n      let pathMask = name.substring(filterIx + 1);\r\n\r\n      if (MessageDispatcher.mOverheardHandlers.hasOwnProperty(pureName) === false)\r\n        MessageDispatcher.mOverheardHandlers[pureName] = [];\r\n\r\n      let dispatchers = (MessageDispatcher.mOverheardHandlers[pureName]);\r\n      // for (let i = 0; i < dispatchers.length; i++)\r\n      //   if (dispatchers[i].callback === callback)\r\n      //     return;\r\n\r\n      dispatchers.push({\r\n        callback: callback,\r\n        context: context,\r\n        pathMask: pathMask\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    if (this.mListeners === null)\r\n      this.mListeners = {};\r\n\r\n    if (this.mListeners.hasOwnProperty(name) === false)\r\n      this.mListeners[name] = [];\r\n\r\n    let dispatchers = /** @type {Array<{callback: Function, context}>} */ (this.mListeners[name]);\r\n\r\n    // TODO: check for dups somehow\r\n    // for (let i = 0; i < dispatchers.length; i++)\r\n    //   if (dispatchers[i].callback === callback)\r\n    //     return;\r\n\r\n    dispatchers.push({\r\n      callback: callback,\r\n      context: context\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Returns true if this object is subscribed for any messages with a given name.\r\n   *\r\n   * @param {string} name Message name to check.\r\n   *\r\n   * @returns {boolean} True if found.\r\n   */\r\n  hasOn(name) {\r\n    Debug.assert(name !== null, 'name cannot be null.');\r\n\r\n    let filterIx = name.indexOf('@');\r\n    if (filterIx !== -1) {\r\n      let pureName = name.substring(0, filterIx);\r\n      if (MessageDispatcher.mOverheardHandlers.hasOwnProperty(pureName) === false)\r\n        return false;\r\n    } else {\r\n      if (this.mListeners === null)\r\n        return false;\r\n      else if (this.mListeners.hasOwnProperty(name) === false)\r\n        return false;\r\n    }\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Removes listener.\r\n   * If callback is null then all callbacks will be removed.\r\n   *\r\n   * @param {string} name\r\n   * @param {Function=} [callback=null]\r\n   *\r\n   * @return {void}\r\n   */\r\n  removeOn(name, callback = null) {\r\n    Debug.assert(name !== null, 'name cannot be null.');\r\n    //Debug.assert(callback !== null, 'callback cannot be null.');\r\n\r\n    let filterIx = name.indexOf('@');\r\n    if (filterIx !== -1) {\r\n      //we are working with overheared message\r\n      let pureName = name.substring(0, filterIx);\r\n      let pathMask = name.substring(filterIx + 1);\r\n\r\n      if (MessageDispatcher.mOverheardHandlers.hasOwnProperty(pureName) === false)\r\n        return;\r\n\r\n      let dispatchers = (MessageDispatcher.mOverheardHandlers[pureName]);\r\n\r\n      if (callback === null) {\r\n        dispatchers.splice(0, dispatchers.length);\r\n        return;\r\n      } else {\r\n        for (let i = dispatchers.length; i--;) {\r\n          if (dispatchers[i].callback === callback) {\r\n            dispatchers.splice(i, 1);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n\r\n    } else {\r\n      // regular message\r\n      if (this.mListeners === null)\r\n        return;\r\n\r\n      let dispatchers = /** @type {Array<{callback: Function, context}>} */ (this.mListeners[name]);\r\n\r\n      if (dispatchers === undefined)\r\n        return;\r\n\r\n      if (callback === null) {\r\n        dispatchers.splice(0, dispatchers.length);\r\n        return;\r\n      } else {\r\n        for (let i = dispatchers.length; i--;) {\r\n          if (dispatchers[i].callback === callback) {\r\n            dispatchers.splice(i, 1);\r\n            return;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Sends message with given pattern and params\r\n   *\r\n   * @param {string}  name   The name of a message\r\n   * @param {...*} params A list of params to send\r\n   *\r\n   * @return {void}\r\n   */\r\n  post(name, ...params) {\r\n    // TODO: add wildcard support and name mask annotation support\r\n    Debug.assert(name !== null, 'name cannot be null.');\r\n    // if (name === null || name.length === 0)\r\n    //   throw new Error('Name cannot be null.');\r\n\r\n    let message = this.__parseMessage(this, name);\r\n\r\n    //if (message.name === null && message.name === '')\r\n    Debug.assert(message.name !== '', 'Message.name cannot be null.');  \r\n\r\n    // TODO: o'really 62?\r\n    let isGameObjectOrComponent = this instanceof GameObject || this instanceof Component;\r\n    if (message.mDirection !== 'none' && isGameObjectOrComponent === false)\r\n      throw new Error('Dispatching not direct messages are not allowed on non Game Objects.');\r\n\r\n    if (message.mDirection === 'none') {\r\n      this.__invoke(this, message, ...params);\r\n      this.__invokeComponents(this, message, ...params);\r\n      this.__invokeOverheard(this, message, ...params);\r\n    } else if (message.mDirection === 'down') {\r\n      message.mOrigin = ( /** @type {GameObject} */ (this)).root;\r\n\r\n      if (message.mSibblings === true) {\r\n        this.__sendGlobal(this, message, null, ...params);\r\n        message.mOrigin.__invokeOverheard(this, message, ...params);\r\n      } else {\r\n        this.__sendBubbles(this, message, false, ...params);\r\n        message.mSender.__invokeOverheard(message.sender, message, ...params);\r\n      }\r\n    } else if (message.mDirection === 'up') {\r\n      this.__sendBubbles(this, message, true, ...params);\r\n      message.mSender.__invokeOverheard(message.sender, message, ...params);\r\n    } else {\r\n      throw new Error('Unknown message type.');\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {*}  sender\r\n   * @param {Message}  message\r\n   * @param {boolean}  toTop\r\n   * @param {...*} params\r\n   *\r\n   * @return {void}\r\n   */\r\n  __sendBubbles(sender, message, toTop, ...params) {\r\n    message.mOrigin = toTop === true ? this : ( /** @type {GameObject} */ (this)).root;\r\n\r\n    let list = [this];\r\n\r\n    let current = /** @type {GameObject|Component} */ (this);\r\n    if (this instanceof Component) {\r\n      if (current.gameObject !== null) {\r\n        list.push(current.gameObject);\r\n        current = current.gameObject;\r\n      }\r\n    }\r\n\r\n    while (current.parent !== null) {\r\n      list.push(current.parent);\r\n      current = current.parent;\r\n    }\r\n\r\n    if (toTop) {\r\n      for (let i = 0; i < list.length; i++) {\r\n        let dispatcher = /** @type {GameObject} */ (list[i]);\r\n        dispatcher.__invoke(sender, message, ...params);\r\n        dispatcher.__invokeComponents(sender, message, ...params);\r\n      }\r\n    } else {\r\n      for (let i = list.length - 1; i >= 0; i--) {\r\n        let dispatcher = /** @type {GameObject} */ (list[i]);\r\n        dispatcher.__invoke(sender, message, ...params);\r\n        dispatcher.__invokeComponents(sender, message, ...params);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {*}  sender\r\n   * @param {Message}  message\r\n   * @param {GameObject=}  origin\r\n   * @param {...*} params\r\n   *\r\n   * @return {void}\r\n   */\r\n  __sendGlobal(sender, message, origin, ...params) {\r\n    if (origin === null)\r\n      origin = /** @type {GameObject} */ (message.mOrigin);\r\n\r\n    origin.__invoke(sender, message, ...params);\r\n    origin.__invokeComponents(sender, message, ...params);\r\n\r\n    for (let i = 0; i < origin.numChildren; i++) {\r\n      let child = origin.getChildAt(i);\r\n      child.__sendGlobal(sender, message, child, ...params);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {*}  sender\r\n   * @param {Message}  message\r\n   * @param {...*} params\r\n   *\r\n   * @return {void}\r\n   */\r\n  __invoke(sender, message, ...params) {\r\n    if (this.mListeners === null)\r\n      return;\r\n\r\n    let dispatchers = /** @type {Array<{callback: Function, context}>} */ (this.mListeners[message.mName]);\r\n\r\n    if (dispatchers === undefined || dispatchers.length === 0)\r\n      return;\r\n\r\n    if (message.path !== null) {\r\n      let inPath = this.__checkPath(this.path, message.path);\r\n      if (!inPath)\r\n        return;\r\n    }\r\n\r\n    // no path filter found - just invoke it\r\n    let clone = dispatchers.slice(0);\r\n\r\n    for (let i = 0; i < clone.length; i++) {\r\n      let dispatcher = /** @type {{callback: Function, context: *}} */ (clone[i]);\r\n      message.mTarget = this;\r\n      dispatcher.callback.call(dispatcher.context, message, ...params);\r\n    }\r\n  }\r\n\r\n  __invokeComponents(sender, message, toTop, ...params) {\r\n    let isGameObject = this instanceof GameObject;\r\n    if (isGameObject === false)\r\n      return;  \r\n    \r\n    let go = /** @type {GameObject} */ (this);\r\n\r\n    let len = go.mComponents.length;\r\n    for (let i = 0; i < len; i++) {\r\n      let c = go.mComponents[i];\r\n      c.__invoke(sender, message, ...params);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {*}  sender\r\n   * @param {Message}  message\r\n   * @param {...*} params\r\n   *\r\n   * @return {void}\r\n   */\r\n  __invokeOverheard(sender, message, ...params) {\r\n    let dispatchers = MessageDispatcher.mOverheardHandlers[message.mName];\r\n\r\n    if (dispatchers === undefined || dispatchers.length === 0)\r\n      return;\r\n\r\n    let clone = dispatchers.slice(0);\r\n\r\n    for (let i = 0; i < clone.length; i++) {\r\n      let dispatcher = /** @type {{callback: Function, context: *}} */ (clone[i]);\r\n\r\n      if (!this.__checkPath(sender.path, dispatcher.pathMask))\r\n        continue;\r\n\r\n      message.mTarget = this;\r\n      dispatcher.callback.call(dispatcher.context, message, ...params);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {string} path\r\n   * @param {string} pathMask\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  __checkPath(path, pathMask) {\r\n    if (path == null || pathMask == null)\r\n      return false;\r\n\r\n    if (path === pathMask)\r\n      return true;\r\n\r\n    if (pathMask.indexOf('*') === -1)\r\n      return path === pathMask;\r\n    else\r\n      return new RegExp(\"^\" + pathMask.split(\"*\").join(\".*\") + \"$\").test(path);\r\n  }\r\n\r\n  // TODO: parse exception path'ses like: ~tatata@@@omg####imnotidiout###@@~~\r\n  /**\r\n   * @private\r\n   * @param {*} sender\r\n   * @param {string} info\r\n   *\r\n   * @return {Message}\r\n   */\r\n  __parseMessage(sender, info) {\r\n    // TODO: make message pool... this type of objects shall not be\r\n    // but dont forget to take care about cancel property\r\n\r\n    let result = new Message();\r\n    result.mSender = sender;\r\n    result.mDirection = 'none';\r\n    result.mSibblings = true;\r\n    result.mPathMask = null;\r\n    result.mComponentMask = null;\r\n\r\n    if (info.charAt(0) === '~') {\r\n      result.mSibblings = false;\r\n      result.mDirection = 'up';\r\n    }\r\n\r\n    let ixAt = info.indexOf('@');\r\n    let ixHash = info.indexOf('#');\r\n\r\n    if (ixAt === -1 && ixHash === -1) {\r\n      result.mSibblings = false;\r\n      result.mName = info.substr(result.mDirection === 'up' ? 1 : 0);\r\n      return result;\r\n    }\r\n\r\n    Debug.assert(ixHash !== -1 && ixAt >= 0, 'Message syntax is not correct. Did you miss @?');\r\n\r\n    result.mDirection = 'down';\r\n\r\n    if (ixHash === -1) { // we got no hash but we have a dog\r\n      result.mName = info.substring(result.mSibblings ? 0 : 1, ixAt);\r\n\r\n      if (info.length === ixAt + 1)\r\n        result.mPathMask = null;\r\n      else\r\n        result.mPathMask = info.substring(ixAt + 1);\r\n\r\n      return result;\r\n    } else {\r\n      if (ixAt !== -1) {\r\n        result.mPathMask = info.substring(ixAt + 1, ixHash);\r\n        result.mName = info.substring(result.mSibblings ? 0 : 1, ixAt);\r\n      } else {\r\n        result.mName = info.substring(result.mSibblings ? 0 : 1, ixHash);\r\n      }\r\n\r\n      if (info.length === ixHash + 1)\r\n        result.mComponentMask = null;\r\n      else\r\n        result.mComponentMask = info.substring(ixHash + 1);\r\n\r\n      return result;\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * @dict\r\n */\r\nMessageDispatcher.mOverheardHandlers = {};","/**\r\n * Provides time related methods.\r\n *\r\n * @cat core\r\n * @static\r\n */\r\n\r\nclass Time {\r\n  constructor() {\r\n  }\r\n\r\n  /**\r\n   * Time since start in seconds.\r\n   * @returns {number}\r\n   */\r\n  static get time(){\r\n    return Time.mTime;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  static get dt() {\r\n    return Time.mDeltaTime;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  static get scale() {\r\n    return Time.mScale;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   */\r\n  static set scale(value) {\r\n    Debug.assert(value >= 0, 'Time.scale must be >= 0.');\r\n\r\n    Time.mScale = value;\r\n  }\r\n}\r\n\r\n/**\r\n * @ignore\r\n * @type {number}\r\n */\r\nTime.mTime = 0;\r\n\r\n/** \r\n * @ignore\r\n * @type {number}\r\n */\r\nTime.mDeltaTime = 0;\r\n\r\n/** \r\n * @ignore\r\n * @type {number}\r\n */\r\nTime.mScale = 1;\r\n","/**\r\n * Base class for custom systems. System is used to listen scene changes.\r\n *\r\n * @cat core\r\n * @extends MessageDispatcher\r\n */\r\n\r\nclass System extends MessageDispatcher {\r\n  constructor(){\r\n    super();\r\n  }\r\n\r\n\r\n  /**\r\n   * onFixedUpdate - Description\r\n   *\r\n   * @param {number} dt Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onFixedUpdate(dt){\r\n  }\r\n\r\n\r\n  /**\r\n   * onUpdate - Description\r\n   *\r\n   * @param {number} dt Description\r\n   * @param {number} t Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onUpdate(dt, t){\r\n  }\r\n\r\n  /**\r\n   * onPostUpdate - Description\r\n   *\r\n   * @param {number} dt Description\r\n   * @param {number} t Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onPostUpdate(dt, t){\r\n  }\r\n\r\n\r\n  /**\r\n   * onChildrenAdded - Description\r\n   *\r\n   * @param {GameObject} child Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onChildrenAdded(child){\r\n  }\r\n\r\n\r\n  /**\r\n   * onChildrenRemoved - Description\r\n   *\r\n   * @param {GameObject} child Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onChildrenRemoved(child){\r\n  }\r\n\r\n\r\n  /**\r\n   * onComponentAdded - Description\r\n   *\r\n   * @param {GameObject} child     Description\r\n   * @param {Component} component Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onComponentAdded(child, component)\r\n  {}\r\n\r\n\r\n  /**\r\n   * onComponentRemoved - Description\r\n   *\r\n   * @param {GameObject} child     Description\r\n   * @param {Component} component Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  onComponentRemoved(child, component)\r\n  {}\r\n}\r\n","/**\r\n * Manages viewport, handles DOM container resize events and updates internal data.\r\n *\r\n * @cat core\r\n * @fires resize\r\n * @extends MessageDispatcher\r\n */\r\n\r\nclass Viewport extends MessageDispatcher {\r\n  /**\r\n   * constructor\r\n   * @param {HTMLElement} containerElement\r\n   * @return {void}\r\n   */\r\n  constructor(containerElement) {\r\n    super();\r\n\r\n    /** @type {HTMLElement} */\r\n    this.mContainerElement = containerElement;\r\n\r\n    this.mContainerElement.style.userSelect = 'none';\r\n    this.mContainerElement.style.touchAction = 'none';\r\n    this.mContainerElement.style.overflow = 'hidden';\r\n    this.mContainerElement.style.cursor = 'auto';\r\n    this.mContainerElement.style.WebkitTapHighlightColor = 'rgba(0, 0, 0, 0)';\r\n\r\n    let size = this.mContainerElement.getBoundingClientRect();\r\n\r\n    /** @type {Rectangle} */\r\n    this.mSize = new Rectangle(size.left, size.top, size.width, size.height);\r\n\r\n    window.addEventListener('resize', x=> this.__onResize());\r\n  }\r\n\r\n  __onResize() {\r\n    let size = this.mContainerElement.getBoundingClientRect();\r\n    this.mSize = new Rectangle(size.left, size.top, size.width, size.height);\r\n\r\n    this.post('resize', this.mSize);\r\n  }\r\n\r\n  /**\r\n   * size - Returns the size of a viewport.\r\n   * @return {Rectangle}\r\n   */\r\n  get size(){\r\n    return this.mSize;\r\n  }\r\n\r\n  /**\r\n   * nativeDOM - Retruns the HTML container element the engine runs in.\r\n   * @return {Element}\r\n   */\r\n  get nativeDOM(){\r\n    return this.mContainerElement;\r\n  }\r\n\r\n  // TODO: dispose, remove resize event\r\n}\r\n","/**\r\n * A base class for custom components.\r\n *\r\n * @cat core\r\n * @unrestricted\r\n * @extends MessageDispatcher\r\n */\r\n\r\nclass Component extends MessageDispatcher {\r\n  /**\r\n   * Creates new Component instance.\r\n   */\r\n  constructor() {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number} \r\n     */\r\n    this.mId = ++GameObject.ID;\r\n\r\n    /**\r\n     * @private\r\n     * @type {GameObject|null}\r\n     */\r\n    this.mGameObject = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mAdded = false;\r\n  }\r\n\r\n  /**\r\n   * Called when attached to GameObject.\r\n   *\r\n   * @public\r\n   *\r\n   * @param  {GameObject} gameObject The owner of this component.\r\n   * @return {void}\r\n   */\r\n  onAdded(gameObject) {}\r\n\r\n  /**\r\n   * Called when detached from GameObject.\r\n   *\r\n   * @public\r\n   *\r\n   * @param  {GameObject} gameObject The owner of this component.\r\n   * @return {void}\r\n   */\r\n  onRemoved(gameObject) {}\r\n\r\n  /**\r\n   * Called at every fixed frame update.\r\n   * @public\r\n   *\r\n   * @param  {number} dt Amount of seconds since the last update.\r\n   * @return {void}\r\n   */\r\n  onFixedUpdate(dt) {}\r\n\r\n  /**\r\n   * Called at every engine update.\r\n   * @public\r\n   *\r\n   * @param  {number} dt Amount of seconds since the last update.\r\n   * @return {void}\r\n   */\r\n  onUpdate(dt) {}\r\n\r\n  /**\r\n   * Called after all updates have been executed.\r\n   * @public\r\n   *\r\n   * @param  {number} dt Amount of seconds since the last update.\r\n   * @return {void}\r\n   */\r\n  onPostUpdate(dt) {}\r\n\r\n  // TODO: finish\r\n  dispose() {}\r\n\r\n  // TODO: finish\r\n\r\n  /**\r\n   * Detaches this Component from its parent GameObject.\r\n   * @returns {void}\r\n   */\r\n  removeFromParent() {\r\n    if (this.mGameObject === null)\r\n      return;\r\n\r\n    this.mGameObject.removeComponent(this);\r\n  }\r\n\r\n  /**\r\n   * Returns owner of this component.\r\n   *\r\n   * @returns {GameObject}\r\n   */\r\n  get gameObject() {\r\n    return this.mGameObject;\r\n  }\r\n\r\n  /**\r\n   * Returns string representing a url like path to this object in the display\r\n   * tree.\r\n   *\r\n   * @readonly\r\n   *\r\n   * @return {string|null}\r\n   */\r\n  get path() {\r\n    if (this.mGameObject !== null)\r\n      return this.mGameObject.path + '#' + this.constructor.name;\r\n\r\n    return this.constructor.name;\r\n  }\r\n}\r\n\r\n/**\r\n * @ignore\r\n * @type {number}\r\n * @nocollapse\r\n */\r\nComponent.ID = 0;","/**\r\n * Building block in Black Engine.\r\n *\r\n * @cat core\r\n * @unrestricted\r\n * @extends MessageDispatcher\r\n */\r\n\r\nclass GameObject extends MessageDispatcher {\r\n  /**\r\n   * Creates new instance of GameObject.\r\n   */\r\n  constructor() {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mId = ++GameObject.ID;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|null}\r\n     */\r\n    this.mName = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Component>}\r\n     */\r\n    this.mComponents = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<GameObject>}\r\n     */\r\n    this.mChildren = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mX = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mY = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mScaleX = 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mScaleY = 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mPivotX = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mPivotY = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mRotation = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Rectangle}\r\n     */\r\n    this.mBounds = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Matrix}\r\n     */\r\n    this.mLocalTransform = new Matrix();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Matrix}\r\n     */\r\n    this.mWorldTransform = new Matrix();\r\n\r\n    /**\r\n     * @private\r\n     * @type {DirtyFlag}\r\n     */\r\n    this.mDirty = DirtyFlag.DIRTY;\r\n\r\n    /**\r\n     * @private\r\n     * @type {GameObject}\r\n     */\r\n    this.mParent = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|null}\r\n     */\r\n    this.mTag = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mIndex = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mAdded = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mNumChildrenRemoved = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mNumComponentsRemoved = 0;\r\n  }\r\n\r\n  /**\r\n   * Returns unique object id.\r\n   *\r\n   * @returns {number}\r\n   */\r\n  get id() {\r\n    return this.mId;\r\n  }\r\n\r\n  /**\r\n   * This method called each time object added to stage.\r\n   *\r\n   * @public\r\n   * @return {void}\r\n   */\r\n  onAdded() { }\r\n\r\n  /**\r\n   * Called when object is removed from stage.\r\n   *\r\n   * @public\r\n   * @return {void}\r\n   */\r\n  onRemoved() { }\r\n\r\n\r\n  /**\r\n   * Sugar method for adding child GameObjects or Components in a simple manner.\r\n   *\r\n   * @param {...(GameObject|Component)} gameObjectsAndOrComponents A GameObject or Component to add.\r\n   * @return {Array<GameObject|Component>} The passed GameObject or Component.\r\n   */\r\n  add(...gameObjectsAndOrComponents) {\r\n    for (let i = 0; i < gameObjectsAndOrComponents.length; i++) {\r\n      let gooc = gameObjectsAndOrComponents[i];\r\n\r\n      if (gooc instanceof GameObject)\r\n        this.addChild( /** @type {!GameObject} */(gooc));\r\n      else\r\n        this.addComponent( /** @type {!Component} */(gooc));\r\n    }\r\n\r\n    return gameObjectsAndOrComponents;\r\n  }\r\n\r\n  /**\r\n   * Adds a child GameObject instance to this GameObject instance. The child is added to the top of all other children in this GameObject instance.\r\n   *\r\n   * @param  {GameObject} child The GameObject instance to add as a child of this GameObject instance.\r\n   * @return {GameObject}\r\n   */\r\n  addChild(child) {\r\n    return this.addChildAt(child, this.mChildren.length);\r\n  }\r\n\r\n  /**\r\n   * Adds a child GameObject instance to this GameObject instance. The child is added to the top of all other children in this GameObject instance.\r\n   *\r\n   * @param  {GameObject} child The GameObject instance to add as a child of this GameObject instance.\r\n   * @param  {number=} index = 0 The index position to which the child is added.\r\n   * @return {GameObject} The GameObject instance that you pass in the child parameter.\r\n   */\r\n  addChildAt(child, index = 0) {\r\n    let numChildren = this.mChildren.length;\r\n\r\n    if (index < 0 || index > numChildren)\r\n      throw new Error('Child index is out of bounds.');\r\n\r\n    if (child.mParent === this)\r\n      return this.setChildIndex(child, index);\r\n\r\n    // this operation should be atomic. since __setParent can throw exception.\r\n    this.mChildren.splice(index, 0, child);\r\n\r\n    child.removeFromParent();\r\n    child.__setParent(this);\r\n\r\n    if (this.root !== null)\r\n      Black.instance.onChildrenAdded(child);\r\n\r\n    return child;\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @ignore\r\n   * @param {GameObject} value\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  __setParent(value) {\r\n    let p = value;\r\n\r\n    while (p !== null && p !== this)\r\n      p = p.mParent;\r\n\r\n    if (p === this)\r\n      throw new Error('Object cannot be a child to itself.');\r\n\r\n    this.mParent = value;\r\n    this.setTransformDirty();\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Sets the index (layer) of the specified GameObject to the specified index (layer).\r\n   *\r\n   * @param {GameObject} child The GameObject instance to change index for.\r\n   * @param {number} index Desired index.\r\n   *\r\n   * @returns {GameObject} The GameObject instance that you pass in the child parameter.\r\n   */\r\n  setChildIndex(child, index) {\r\n    let ix = this.mChildren.indexOf(child);\r\n\r\n    if (ix < 0)\r\n      throw new Error('Given child element was not found in children list.');\r\n\r\n    if (ix === index)\r\n      return child;\r\n\r\n    // NOTE: systems needs to know when trees changes\r\n    child.removeFromParent();\r\n    this.addChildAt(child, index);\r\n    this.setTransformDirty();\r\n\r\n    return child;\r\n  }\r\n\r\n  /**\r\n   * Removes this GameObject instance from its parent.\r\n   *\r\n   * @param {boolean} [dispose=false]\r\n   *\r\n   * @return {void}\r\n   */\r\n  removeFromParent(dispose = false) {\r\n    if (this.mParent !== null)\r\n      this.mParent.removeChild(this);\r\n\r\n    if (dispose)\r\n      this.dispose();\r\n\r\n    this.setTransformDirty();\r\n  }\r\n\r\n  /**\r\n   * Removes specified child GameObject instance from children.\r\n   *\r\n   * @param {GameObject} child GameObject instance to remove.\r\n   * @param {boolean} [dispose=false]\r\n   *\r\n   * @return {GameObject} The GameObject instance that you pass in the child parameter.\r\n   */\r\n  removeChild(child, dispose) {\r\n    let ix = this.mChildren.indexOf(child);\r\n\r\n    if (ix < 0)\r\n      return null;\r\n\r\n    return this.removeChildAt(ix);\r\n  }\r\n\r\n\r\n  /**\r\n   * Finds children by name.\r\n   *\r\n   * @param {string} name Name of the child object to find.\r\n   *\r\n   * @return {GameObject|null} GameObject instance of null if not found.\r\n   */\r\n  getChildByName(name) {\r\n    for (var i = 0; i < this.mChildren.length; i++) {\r\n      if (this.mChildren[i].name === name)\r\n        return this.mChildren[i];\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Removes GameObjects instance from specified index.\r\n   *\r\n   * @param {number} index Description\r\n   * @param {boolean} [dispose=false]\r\n   *\r\n   * @return {GameObject} The removed GameObject instance.\r\n   */\r\n  removeChildAt(index, dispose) {\r\n    if (index < 0 || index > this.numChildren)\r\n      throw new Error('Child index is out of bounds.');\r\n\r\n    let hadRoot = this.root !== null;\r\n\r\n    let child = this.mChildren[index];\r\n    child.__setParent(null);\r\n\r\n    this.mChildren.splice(index, 1);\r\n\r\n    if (hadRoot)\r\n      Black.instance.onChildrenRemoved(child);\r\n\r\n    if (dispose)\r\n      child.dispose();\r\n\r\n    this.setTransformDirty();\r\n\r\n    this.mNumChildrenRemoved++;\r\n\r\n    return child;\r\n  }\r\n\r\n  /**\r\n   * Returns GameObject at specified index.\r\n   *\r\n   * @param {number} index The index of child GameObject.\r\n   *\r\n   * @return {GameObject} The GameObject at specified index.\r\n   */\r\n  getChildAt(index) {\r\n    return this.mChildren[index];\r\n  }\r\n\r\n  /**\r\n   * Adds Component instance to the end of the list,\r\n   *\r\n   * @param  {Component} component Component instance or instances.\r\n   * @return {Component} The Component instance you pass in the instances parameter.\r\n   */\r\n  addComponent(component) {\r\n    let instance = component;\r\n\r\n    if (instance.gameObject)\r\n      throw new Error('Component cannot be added to two game objects at the same time.');\r\n\r\n    this.mComponents.push(instance);\r\n    instance.mGameObject = this;\r\n\r\n    if (this.root !== null)\r\n      Black.instance.onComponentAdded(this, instance);\r\n\r\n    instance.onAdded(this);\r\n\r\n    return instance;\r\n  }\r\n\r\n  /**\r\n   * Remove specified component.\r\n   *\r\n   * @param {Component} instance The component instance.\r\n   *\r\n   * @return {Component|null}\r\n   */\r\n  removeComponent(instance) {\r\n    if (!instance)\r\n      return null;\r\n\r\n    let index = this.mComponents.indexOf(instance);\r\n    if (index > -1)\r\n      this.mComponents.splice(index, 1);\r\n\r\n    // detach game object after or before?\r\n    instance.mGameObject = null;\r\n    instance.onRemoved(this);\r\n\r\n    if (this.root !== null)\r\n      Black.instance.onComponentRemoved(this, instance);\r\n\r\n    this.mNumComponentsRemoved++;\r\n\r\n    return instance;\r\n  }\r\n\r\n  /**\r\n   * Get component by type.\r\n   *\r\n   * @param {Object} typeName The component type.\r\n   *\r\n   * @return {Component|null} The Component instance or null if not found.\r\n   */\r\n  getComponent(typeName) {\r\n    for (let i = 0; i < this.mComponents.length; i++) {\r\n      let c = this.mComponents[i];\r\n      if (c instanceof typeName)\r\n        return c;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Returns number of component's of this GameObject.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get numComponenets() {\r\n    return this.mComponents.length;\r\n  }\r\n\r\n  /**\r\n   * Retrives Component at given index.\r\n   *\r\n   * @param {number} index\r\n   *\r\n   * @return {Component|null}\r\n   */\r\n  getComponentAt(index) {\r\n    if (index >= 0 && index < this.mComponents.length)\r\n      return this.mComponents[index];\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Retun local transformation Matrix\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get localTransformation() {\r\n    if (this.mDirty & DirtyFlag.LOCAL) {\r\n      this.mDirty ^= DirtyFlag.LOCAL;\r\n\r\n      if (this.mRotation === 0) {\r\n        let tx = this.mX - this.mPivotX * this.mScaleX;\r\n        let ty = this.mY - this.mPivotY * this.mScaleY;\r\n        return this.mLocalTransform.set(this.mScaleX, 0, 0, this.mScaleY, tx, ty);\r\n      } else {\r\n        let cos = Math.cos(this.mRotation);\r\n        let sin = Math.sin(this.mRotation);\r\n        let a = this.mScaleX * cos;\r\n        let b = this.mScaleX * sin;\r\n        let c = this.mScaleY * -sin;\r\n        let d = this.mScaleY * cos;\r\n        let tx = this.mX - this.mPivotX * a - this.mPivotY * c;\r\n        let ty = this.mY - this.mPivotX * b - this.mPivotY * d;\r\n        return this.mLocalTransform.set(a, b, c, d, tx, ty);\r\n      }\r\n    }\r\n\r\n    return this.mLocalTransform;\r\n  }\r\n\r\n  /**\r\n   * Returns cloned Matrix object which represents object orientation in world space.\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get worldTransformation() {\r\n    if (this.mDirty & DirtyFlag.WORLD) {\r\n      this.mDirty ^= DirtyFlag.WORLD;\r\n\r\n      if (this.mParent !== null)\r\n        this.mParent.worldTransformation.copyTo(this.mWorldTransform).append(this.localTransformation);\r\n      else\r\n        this.localTransformation.copyTo(this.mWorldTransform);\r\n    }\r\n\r\n    return this.mWorldTransform;\r\n  }\r\n\r\n  set worldTransformation(matrix) {\r\n    const PI_Q = Math.PI / 4.0;\r\n\r\n    let a = matrix.value[0];\r\n    let b = matrix.value[1];\r\n    let c = matrix.value[2];\r\n    let d = matrix.value[3];\r\n    let tx = matrix.value[4];\r\n    let ty = matrix.value[5];\r\n\r\n    this.mPivotX = this.mPivotX = 0;\r\n    this.mX = tx;\r\n    this.mY = ty;\r\n\r\n    let skewX = Math.atan(-c / d);\r\n    let skewY = Math.atan(b / a);\r\n\r\n    if (skewX != skewX)\r\n      skewX = 0.0;\r\n    if (skewY != skewY)\r\n      skewY = 0.0;\r\n\r\n    this.mScaleY = (skewX > -PI_Q && skewX < PI_Q) ?  d / Math.cos(skewX) : -c / Math.sin(skewX);\r\n    this.mScaleX = (skewY > -PI_Q && skewY < PI_Q) ?  a / Math.cos(skewY) :  b / Math.sin(skewY);\r\n\r\n    if (MathEx.equals(skewX, skewY)) {\r\n      this.mRotation = skewX;\r\n      skewX = skewY = 0;\r\n    } else {\r\n      this.mRotation = 0;\r\n    }\r\n\r\n    this.setTransformDirty();\r\n  }\r\n\r\n  /**\r\n   * Returns cloned and inversed Matrix object which represents object orientation in world space\r\n   *\r\n   * @return {Matrix}\r\n   */\r\n  get worldTransformationInversed() {\r\n    // TODO: optimize, cache\r\n    return this.worldTransformation.clone().invert();\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {number} dt\r\n   *\r\n   * @return {void}\r\n   */\r\n  __fixedUpdate(dt) {\r\n    this.onFixedUpdate(dt);\r\n\r\n    for (let k = 0; k < this.mComponents.length; k++) {\r\n      let c = this.mComponents[k];\r\n      c.mGameObject = this;\r\n      c.onFixedUpdate(dt);\r\n\r\n      if (this.__checkRemovedComponents(k))\r\n        break;\r\n    }\r\n\r\n    for (let i = 0; i < this.mChildren.length; i++) {\r\n      this.mChildren[i].__fixedUpdate(dt);\r\n\r\n      if (this.__checkRemovedChildren(i))\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {number} dt time since the last frame\r\n   *\r\n   * @return {void}\r\n   */\r\n  __update(dt) {\r\n    this.onUpdate(dt);\r\n\r\n    for (let k = 0; k < this.mComponents.length; k++) {\r\n      let c = this.mComponents[k];\r\n      c.mGameObject = this;\r\n      c.onUpdate(dt);\r\n\r\n      if (this.__checkRemovedComponents(k))\r\n        break;\r\n    }\r\n\r\n    for (let i = 0; i < this.mChildren.length; i++) {\r\n      this.mChildren[i].__update(dt);\r\n\r\n      if (this.__checkRemovedChildren(i))\r\n        break;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {number} dt time since the last frame\r\n   *\r\n   * @return {void}\r\n   */\r\n  __postUpdate(dt) {\r\n    this.onPostUpdate(dt);\r\n\r\n    for (let k = 0; k < this.mComponents.length; k++) {\r\n      let c = this.mComponents[k];\r\n      c.mGameObject = this;\r\n      c.onPostUpdate(dt);\r\n\r\n      if (this.__checkRemovedComponents(k))\r\n        break;\r\n    }\r\n\r\n    for (let i = 0; i < this.mChildren.length; i++) {\r\n      this.mChildren[i].__postUpdate(dt);\r\n\r\n      if (this.__checkRemovedChildren(i))\r\n        break;\r\n    }\r\n  }\r\n\r\n  __checkRemovedComponents(i) {\r\n    if (this.mComponents == 0)\r\n      return false;\r\n\r\n    i -= this.mNumComponentsRemoved;\r\n    this.mNumComponentsRemoved = 0;\r\n\r\n    if (i < 0)\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  __checkRemovedChildren(i) {\r\n    if (this.mNumChildrenRemoved == 0)\r\n      return false;\r\n\r\n    i -= this.mNumChildrenRemoved;\r\n    this.mNumChildrenRemoved = 0;\r\n\r\n    if (i < 0)\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n\r\n\r\n  /**\r\n   * Called at every fixed frame update.\r\n   *\r\n   * @public\r\n   * @param {number} dt time since the last frame\r\n   *\r\n   * @return {void}\r\n   */\r\n  onFixedUpdate(dt) { }\r\n\r\n  /**\r\n   * Called at every engine update.\r\n   *\r\n   * @public\r\n   * @param {number} dt time since the last frame\r\n   *\r\n   * @return {void}\r\n   */\r\n  onUpdate(dt) { }\r\n\r\n  /**\r\n   * Called after all updates have been executed.\r\n   *\r\n   * @public\r\n   * @param {number} dt Description\r\n   *\r\n   * @return {void}\r\n   */\r\n  onPostUpdate(dt) { }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {VideoNullDriver} video   *\r\n   * @param {number} time\r\n   * @param {number} parentAlpha\r\n   *\r\n   * @return {void}\r\n   */\r\n  __render(video, time, parentAlpha) {\r\n    this.onRender(video, time);\r\n\r\n    let child = null;\r\n    let childLen = this.mChildren.length;\r\n    for (let i = 0; i < childLen; i++) {\r\n      child = this.mChildren[i];\r\n      child.__render(video, time, parentAlpha);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {VideoNullDriver} video Description\r\n   * @param {number} time  Description\r\n   *\r\n   * @return {void}\r\n   */\r\n  onRender(video, time) { }\r\n\r\n  /**\r\n   * Override this method if you need to specify GameObject size. Should be always be a local coordinates.\r\n   *\r\n   * @protected\r\n   * @param {Rectangle=} outRect Description\r\n   *\r\n   * @return {Rectangle} bounds in local space withoout taking care about transformation matrix\r\n   */\r\n  onGetLocalBounds(outRect = undefined) {\r\n    outRect = outRect || new Rectangle();\r\n    return outRect.set(0, 0, 0, 0);\r\n  }\r\n\r\n  /**\r\n   * Returns world bounds of this object and all children if specified (true by default).\r\n   *\r\n   * object.getBounds() - relative to world.\r\n   * object.getBounds(object) - local bounds.\r\n   * object.getBounds(object.parent) - relative to parent.\r\n   * object.getBounds(objectB) - relative to objectB space.\r\n   *\r\n   * @param {GameObject} [space=undefined]\r\n   * @param {boolean} [includeChildren=true]\r\n   * @param {Rectangle=} [outRect=null]\r\n   *\r\n   * @return {Rectangle} returns bounds of the object and all childrens\r\n   */\r\n  getBounds(space = undefined, includeChildren = true, outRect = undefined) {\r\n    outRect = outRect || new Rectangle();\r\n\r\n    let matrix = this.worldTransformation;\r\n\r\n    // TODO: optimize, check if space == null, space == this, space == parent\r\n    // TODO: use wtInversed instead\r\n    if (space != null) {\r\n      matrix = this.worldTransformation.clone();\r\n      matrix.prepend(space.worldTransformation.clone().invert());\r\n    }\r\n\r\n    let bounds = new Rectangle();\r\n    this.onGetLocalBounds(bounds);\r\n\r\n    matrix.transformRect(bounds, bounds);\r\n    outRect.expand(bounds.x, bounds.y, bounds.width, bounds.height);\r\n\r\n    if (includeChildren)\r\n      for (let i = 0; i < this.numChildren; i++)\r\n        this.getChildAt(i).getBounds(space, includeChildren, outRect);\r\n\r\n    return outRect;\r\n  }\r\n\r\n  /**\r\n   * Sets the object transform in one line.\r\n   *\r\n   * @param {number} [x=0]       Cord X.\r\n   * @param {number} [y=0]       Cord Y.\r\n   * @param {number} [r=0]       Rotation.\r\n   * @param {number} [scaleX=1]  scale X.\r\n   * @param {number} [scaleY=1]  scale Y.\r\n   * @param {number} [anchorX=0] Anchor X.\r\n   * @param {number} [anchorY=0] Anchor Y.\r\n   * @param {boolean} [includeChildren=true] Include children when adjusting pivot?\r\n   *\r\n   * @return {GameObject} This.\r\n   */\r\n  setTransform(x = 0, y = 0, r = 0, scaleX = 1, scaleY = 1, anchorX = 0, anchorY = 0, includeChildren = true) {\r\n    this.mX = x;\r\n    this.mY = y;\r\n    this.mRotation = r;\r\n    this.mScaleX = scaleX;\r\n    this.mScaleY = scaleY;\r\n\r\n    this.getBounds(this, includeChildren, Rectangle.__cache.zero());\r\n    this.mPivotX = Rectangle.__cache.width * anchorX;\r\n    this.mPivotY = Rectangle.__cache.height * anchorY;\r\n\r\n    this.setTransformDirty();\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Calculate global position of the object.\r\n   *\r\n   * @param {Vector} localPoint\r\n   * @param {Vector|null} [outVector=null]\r\n   *\r\n   * @return {Vector}\r\n   */\r\n  localToGlobal(localPoint, outVector = null) {\r\n    return this.worldTransformation.transformVector(localPoint, outVector);\r\n  }\r\n\r\n  /**\r\n   * Calculate local position of the object\r\n   *\r\n   * @param {Vector} globalPoint\r\n   * @param {Vector|null} [outVector=null]\r\n   *\r\n   * @return {Vector}\r\n   */\r\n  globalToLocal(globalPoint, outVector = null) {\r\n    return this.worldTransformationInversed.transformVector(globalPoint, outVector);\r\n  }\r\n  /**\r\n   * Gets/Sets count of children elements.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get numChildren() {\r\n    return this.mChildren.length;\r\n  }\r\n\r\n  /**\r\n   * Returns name of this GameoObject instance.\r\n   *\r\n   * @return {string|null}\r\n   */\r\n  get name() {\r\n    return this.mName;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {string|null} value Description\r\n   *\r\n   * @return {void}\r\n   */\r\n  set name(value) {\r\n    this.mName = value;\r\n  }\r\n\r\n  /**\r\n   * Gets/Sets the x coordinate of the GameoObject instance relative to the local coordinates of the parent GameoObject.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get x() {\r\n    return this.mX;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {number} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set x(value) {\r\n    if (this.mX == value)\r\n      return;\r\n\r\n    this.mX = value;\r\n    this.setTransformDirty();\r\n  }\r\n\r\n  /**\r\n   * Gets/Sets the y coordinate of the GameoObject instance relative to the local coordinates of the parent GameoObject.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get y() {\r\n    return this.mY;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {number} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set y(value) {\r\n    if (this.mY == value)\r\n      return;\r\n\r\n    this.mY = value;\r\n    this.setTransformDirty();\r\n  }\r\n\r\n  /**\r\n   * Gets/Sets the x coordinate of the object's origin in its local space.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get pivotX() {\r\n    return this.mPivotX;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {number} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set pivotX(value) {\r\n    if (this.mPivotX == value)\r\n      return;\r\n\r\n    this.mPivotX = value;\r\n    this.setTransformDirty();\r\n  }\r\n\r\n  /**\r\n   * Gets/Sets the y coordinate of the object's origin in its local space.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get pivotY() {\r\n    return this.mPivotY;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {number} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set pivotY(value) {\r\n    if (this.mPivotY == value)\r\n      return;\r\n\r\n    this.mPivotY = value;\r\n    this.setTransformDirty();\r\n  }\r\n\r\n  /**\r\n   * Sets pivot point to given position.\r\n   *\r\n   * @param {number}  [ax=0.5]               Align along x-axis.\r\n   * @param {number}  [ay=0.5]               Align along y-axis.\r\n   * @param {boolean} [includeChildren=true] Include children elements when\r\n   * calculating bounds?\r\n   *\r\n   * @return {GameObject} This.\r\n   */\r\n  alignPivot(ax = 0.5, ay = 0.5, includeChildren = true) {\r\n    this.getBounds(this, includeChildren, Rectangle.__cache.zero());\r\n\r\n    this.mPivotX = Rectangle.__cache.width * ax;\r\n    this.mPivotY = Rectangle.__cache.height * ay;\r\n    this.setTransformDirty();\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Gets/Sets the scale factor of this object along x-axis.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get scaleX() {\r\n    return this.mScaleX;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {number} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set scaleX(value) {\r\n    if (this.mScaleX == value)\r\n      return;\r\n\r\n    this.mScaleX = value;\r\n    this.setTransformDirty();\r\n  }\r\n\r\n  /**\r\n   * Gets/Sets the scale factor of this object along y-axis.\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  get scaleY() {\r\n    return this.mScaleY;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {number} value Description\r\n   *\r\n   * @return {void}\r\n   */\r\n  set scaleY(value) {\r\n    if (this.mScaleY == value)\r\n      return;\r\n\r\n    this.mScaleY = value;\r\n    this.setTransformDirty();\r\n  }\r\n\r\n  /**\r\n   * Gets/Sets rotation in radians.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get rotation() {\r\n    return this.mRotation;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {number} value Description\r\n   *\r\n   * @return {void}\r\n   */\r\n  set rotation(value) {\r\n    if (this.mRotation == value)\r\n      return;\r\n\r\n    this.mRotation = value;\r\n    this.setTransformDirty();\r\n  }\r\n\r\n  /**\r\n   * Returns this GameObject parent GameObject.\r\n   * @readonly\r\n   *\r\n   * @return {GameObject}\r\n   */\r\n  get parent() {\r\n    return this.mParent;\r\n  }\r\n\r\n  /**\r\n   * Returns topmost parent element of this GameObject or null if this\r\n   * GameObject is not a child.\r\n   *\r\n   * @readonly\r\n   *\r\n   * @return {GameObject|null}\r\n   */\r\n  get root() {\r\n    if (Black.instance == null)\r\n      return null;\r\n\r\n    let current = this;\r\n\r\n    if (current === Black.instance.root)\r\n      return current;\r\n\r\n    while (current.mParent) {\r\n      if (current === Black.instance.root)\r\n        return current;\r\n      else if (current.mParent === Black.instance.root)\r\n        return Black.instance.root;\r\n      else\r\n        current = current.mParent;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  // /**\r\n  //  * Returns how deep this GameObject in the display tree.\r\n  //  *\r\n  //  * @readonly\r\n  //  *\r\n  //  * @return {number}\r\n  //  */\r\n  // get depth() {\r\n  //   if (this.mParent)\r\n  //     return this.mParent.depth + 1;\r\n  //   else\r\n  //     return 0;\r\n  // }\r\n\r\n  // TODO: review and make sure this func is required\r\n  // get displayDepth() {\r\n  //   // Many thanks to Roman Kopansky\r\n  //   const flatten = arr => arr.reduce((acc, val) => acc.concat(val.mChildren.length ? flatten(val.mChildren) : val), []);\r\n  //   return flatten(this.root.mChildren).indexOf(this);\r\n  // }\r\n\r\n  // /**\r\n  //  * @ignore\r\n  //  * @return {number}\r\n  //  */\r\n  // get index() {\r\n  //   // TODO: this is only required by Input component and its pretty heavy.\r\n  //   // Try to workaround it.\r\n  //   return this.parent.mChildren.indexOf(this);\r\n  // }\r\n\r\n  /**\r\n   * Gets/sets the width of this object.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get width() {\r\n    return this.getBounds(this.mParent).width;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   *\r\n   * @param {number} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set width(value) {\r\n    this.scaleX = 1;\r\n    const currentWidth = this.width;\r\n\r\n    if (currentWidth != 0.0)\r\n      this.scaleX = value / currentWidth;\r\n  }\r\n\r\n  /**\r\n   * Gets/sets the height of this object.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get height() {\r\n    return this.getBounds(this.mParent).height;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {number} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set height(value) {\r\n    this.scaleY = 1;\r\n    const currentHeight = this.height;\r\n\r\n    if (currentHeight != 0)\r\n      this.scaleY = value / currentHeight;\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns width of this GameObject in local space without including children\r\n   * elements.\r\n   *\r\n   * @readonly\r\n   *\r\n   * @return {number}\r\n   */\r\n  get localWidth() {\r\n    return this.getBounds(this, false).width;\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns height of this GameObject in local space without including children\r\n   * elements.\r\n   *\r\n   * @readonly\r\n   *\r\n   * @return {number}\r\n   */\r\n  get localHeight() {\r\n    return this.getBounds(this, false).height;\r\n  }\r\n\r\n  // TODO: precache\r\n  /**\r\n   * Returns string representing a url like path to this object in the display\r\n   * tree.\r\n   *\r\n   * @readonly\r\n   *\r\n   * @return {string|null}\r\n   */\r\n  get path() {\r\n    if (this.mParent !== null)\r\n      return this.mParent.path + '/' + this.mName;\r\n\r\n    return this.mName;\r\n  }\r\n\r\n  /**\r\n   * Gets/Sets tag of this GameObject.\r\n   *\r\n   * @return {string|null}\r\n   */\r\n  get tag() {\r\n    return this.mTag;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   *\r\n   * @param {string|null} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set tag(value) {\r\n    if (this.mTag === value)\r\n      return;\r\n\r\n    /** @type {string|null} */\r\n    let old = this.mTag;\r\n    this.mTag = value;\r\n\r\n    if (this.mAdded)\r\n      Black.instance.onTagUpdated(this, old, value);\r\n  }\r\n\r\n  /**\r\n   * Starts coroutine.\r\n   *\r\n   * @param {Function} gen  Generator function.\r\n   * @param {*=} [ctx=null] Context for Generator function.\r\n   *\r\n   * @return {Generator}\r\n   */\r\n  spawn(gen, ctx = null) {\r\n    var iter = gen.apply(ctx == null ? this : ctx);\r\n\r\n    function step(it) {\r\n      if (it.done)\r\n        return;\r\n\r\n      if (typeof it.value === 'function')\r\n        it.value(x => step(iter.next(x)));\r\n      else\r\n        step(iter.next(it.value));\r\n    }\r\n\r\n    step(iter.next());\r\n    return iter;\r\n  }\r\n\r\n  /**\r\n   * Waits for given amount of seconds before processing.\r\n   *\r\n   * @return {function(*):*}\r\n   */\r\n  wait(seconds = 1) {\r\n    return cb => setTimeout(cb.bind(this, seconds * 1000), seconds * 1000);\r\n  }\r\n\r\n\r\n  /**\r\n   * Waits for a speceific message.\r\n   *\r\n   * @param {string} message The name of the message to wait for.\r\n   *\r\n   * @return {function(*):*}\r\n   */\r\n  waitMessage(message) {\r\n    return cb => this.on(message, cb.bind(this));\r\n  }\r\n\r\n\r\n  /**\r\n   * Marks this GameObject and/or its children elements as dirty.\r\n   *\r\n   * @param {DirtyFlag} flag                 The flag or flag bit mask.\r\n   * @param {boolean} [includeChildren=true] Description\r\n   *\r\n   * @return {void}\r\n   */\r\n  setDirty(flag, includeChildren = true) {\r\n    if (includeChildren) {\r\n      GameObject.forEach(this, x => {\r\n        x.mDirty |= flag;\r\n      });\r\n    } else {\r\n      this.mDirty |= flag;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * Marks this GameObject as Local dirty and all children elements as World\r\n   * dirty.\r\n   *\r\n   * @returns {void}\r\n   */\r\n  setTransformDirty() {\r\n    this.setDirty(DirtyFlag.LOCAL, false);\r\n    this.setDirty(DirtyFlag.WORLD, true);\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   *\r\n   * @return {void}\r\n   */\r\n  dispose() { }\r\n\r\n  // TODO: rename method\r\n  /**\r\n   * @ignore\r\n   *\r\n   * @param {Array<number>} points\r\n   * @param {Matrix} worldTransformation\r\n   * @param {Rectangle=} outRect\r\n   *\r\n   * @return {Rectangle}\r\n   */\r\n  static getBoundsWithPoints(points, worldTransformation, outRect) {\r\n    outRect = outRect || new Rectangle();\r\n\r\n    let minX = Number.MAX_VALUE;\r\n    let maxX = -Number.MAX_VALUE;\r\n    let minY = Number.MAX_VALUE;\r\n    let maxY = -Number.MAX_VALUE;\r\n    let xx = 0;\r\n    let yy = 0;\r\n    let tmpVector = new Vector();\r\n\r\n    for (let i = 0; i < points.length; i += 2) {\r\n      worldTransformation.transformXY(points[i], points[i + 1], tmpVector);\r\n\r\n      if (minX > tmpVector.x)\r\n        minX = tmpVector.x;\r\n\r\n      if (maxX < tmpVector.x)\r\n        maxX = tmpVector.x;\r\n\r\n      if (minY > tmpVector.y)\r\n        minY = tmpVector.y;\r\n\r\n      if (maxY < tmpVector.y)\r\n        maxY = tmpVector.y;\r\n    }\r\n\r\n    outRect.set(minX, minY, maxX - minX, maxY - minY);\r\n    return outRect;\r\n  }\r\n\r\n  /**\r\n   * Returns whenever a given GameObject intersects with a point.\r\n   *\r\n   * @param {GameObject} gameObject GameObject to test.\r\n   * @param {Vector} point          A point to test.\r\n   *\r\n   * @return {boolean} True if intersects.\r\n   */\r\n  static intersects(gameObject, point) {\r\n    let tmpVector = new Vector();\r\n    let inv = gameObject.worldTransformationInversed;\r\n\r\n    inv.transformVector(point, tmpVector);\r\n\r\n    let rect = gameObject.getBounds(gameObject, false);\r\n    return rect.containsXY(tmpVector.x, tmpVector.y);\r\n  }\r\n\r\n  /**\r\n   * Returns a point where intersection were made in local space.\r\n   *\r\n   * @param {GameObject} gameObject GameObject to test intersection with.\r\n   * @param {Vector}     point      The point to test.\r\n   * @param {Vector=}    outVector  If passed point of intersection will be\r\n   * stored in it.\r\n   *\r\n   * @return {boolean} True if intersects.\r\n   */\r\n  static intersectsAt(gameObject, point, outVector = undefined) {\r\n    outVector = outVector || new Vector();\r\n\r\n    let tmpVector = Vector.__cache;\r\n    let inv = gameObject.worldTransformationInversed;\r\n\r\n    inv.transformVector(point, tmpVector);\r\n\r\n    let rect = gameObject.getBounds(gameObject, false);\r\n    let contains = rect.containsXY(tmpVector.x, tmpVector.y);\r\n\r\n    if (!contains)\r\n      return false;\r\n\r\n    outVector.x = tmpVector.x - rect.x;\r\n    outVector.y = tmpVector.y - rect.y;\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * Checks if GameObject or any of its children elements intersects the given\r\n   * point, the difference between `hits` and `intersectsWith` that `hits` also\r\n   * checks for presence of `InputComponent`.\r\n   *\r\n   * @param {GameObject} gameObject GameObject to test.\r\n   * @param {Vector} point          Point to test.\r\n   *\r\n   * @return {GameObject|null} Intersecting object or null.\r\n   */\r\n  static hits(gameObject, point) {\r\n    // TODO: add colliders\r\n\r\n    let obj = null;\r\n    for (let i = gameObject.numChildren - 1; i >= 0; --i) {\r\n      let child = gameObject.mChildren[i];\r\n\r\n      obj = GameObject.hits(child, point);\r\n      if (obj != null)\r\n        return obj;\r\n\r\n      let c = child.getComponent(InputComponent);\r\n      let touchable = c !== null && c.touchable;\r\n      if (touchable && GameObject.intersects(child, point)) {\r\n        obj = child;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (obj === null) {\r\n      let c = gameObject.getComponent(InputComponent);\r\n      let touchable = c !== null && c.touchable;\r\n\r\n      if (touchable && GameObject.intersects(gameObject, point))\r\n        return gameObject;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Checks if GameObject or any of its children elements intersects the given\r\n   * point.\r\n   *\r\n   * @param {GameObject} gameObject GameObject to test.\r\n   * @param {Vector} point          Point to test.\r\n   *\r\n   * @return {GameObject|null} Intersecting object or null.\r\n   */\r\n  static intersectsWith(gameObject, point) {\r\n    let obj = null;\r\n    for (let i = gameObject.numChildren - 1; i >= 0; --i) {\r\n      let child = gameObject.mChildren[i];\r\n\r\n      obj = GameObject.intersectsWith(child, point);\r\n      if (obj != null)\r\n        return obj;\r\n\r\n      let inside = GameObject.intersects(child, point);\r\n      if (inside) {\r\n        obj = child;\r\n        break;\r\n      }\r\n    }\r\n\r\n    if (obj === null && GameObject.intersects(gameObject, point))\r\n      return gameObject;\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Returns all GameObject with given tag.\r\n   *\r\n   * @param {string} tag Tag to find.\r\n   *\r\n   * @returns {Array<GameObject>|null} Array of GameObject or null if not found.\r\n   */\r\n  static findWithTag(tag) {\r\n    if (Black.instance.mTagCache.hasOwnProperty(tag) === false)\r\n      return null;\r\n\r\n    return Black.instance.mTagCache[tag];\r\n  }\r\n\r\n  /**\r\n   * Returns a list of Components.\r\n   *\r\n   * @param {GameObject} gameObject         GameObject to start search from.\r\n   * @param {function (new:Component)} type Type of Component.\r\n   *\r\n   * @return {Array<Component>} Array of Component or empty array.\r\n   */\r\n  static findComponents(gameObject, type) {\r\n    Debug.assert(gameObject !== null, 'gameObject cannot be null.');\r\n    Debug.assert(type !== null, 'type cannot be null.');\r\n\r\n    /** @type {Array<Component>} */\r\n    let list = [];\r\n\r\n    /** @type {function(GameObject, function(new:Component)):void} */\r\n    let f = function (gameObject, type) {\r\n      for (let i = 0; i < gameObject.mComponents.length; i++) {\r\n        let c = gameObject.mComponents[i];\r\n        if (c instanceof type)\r\n          list.push(c);\r\n      }\r\n\r\n      for (let i = 0; i < gameObject.mChildren.length; i++)\r\n        f(gameObject.mChildren[i], type);\r\n    };\r\n\r\n    f(gameObject, type);\r\n\r\n    return list;\r\n  }\r\n\r\n  /**\r\n   * Runs action accross all GameObjects.\r\n   *\r\n   * @param {GameObject} node                  GameObject to start iteration from.\r\n   * @param {function(GameObject)} action The function to be executed on\r\n   * every GameObject.\r\n   *\r\n   * @return {void}\r\n   */\r\n  static forEach(node, action) {\r\n    if (node == null)\r\n      node = Black.instance.root;\r\n\r\n    action(node);\r\n\r\n    for (let i = 0; i < node.numChildren; i++)\r\n      GameObject.forEach(node.getChildAt(i), action);\r\n  }\r\n\r\n\r\n  /**\r\n   * Finds object by its name. If node is not passed the root will be taken as\r\n   * starting point.\r\n   *\r\n   * @param {string} name      Name to search.\r\n   * @param {GameObject=} node Starting GameObject.\r\n   *\r\n   * @return {GameObject} GameObject or null.\r\n   */\r\n  static find(name, node) {\r\n    if (node == null)\r\n      node = Black.instance.root;\r\n\r\n    if (node.name === name)\r\n      return node;\r\n\r\n    for (let i = 0; i < node.numChildren; i++) {\r\n      let r = GameObject.find(name, node.getChildAt(i));\r\n      if (r != null)\r\n        return r;\r\n    }\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Finds object by its id property. If node is not passed the root will be taken as\r\n   * starting point.\r\n   *\r\n   * @param {number} id         Id to search.\r\n   * @param {GameObject=} node  Starting GameObject or null.\r\n   *\r\n   * @return {GameObject} GameObject or null.\r\n   */\r\n  static findById(id, node) {\r\n    if (node == null)\r\n      node = Black.instance.root;\r\n\r\n    if (node.id === id)\r\n      return node;\r\n\r\n    for (let i = 0; i < node.numChildren; i++) {\r\n      let r = GameObject.findById(id, node.getChildAt(i));\r\n      if (r !== null)\r\n        return r;\r\n    }\r\n\r\n    return null;\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * @type {number}\r\n * @nocollapse\r\n */\r\nGameObject.ID = 0;\r\n\r\n/**\r\n * @enum {number}\r\n */\r\n\r\nvar DirtyFlag = {\r\n  LOCAL: 1,\r\n  WORLD: 2,\r\n  DIRTY: 0xffffff\r\n};\r\n","// TODO:\r\n// [_] Do not handle is loaded or not.\r\n// Texture shall not be responsible for loading itself.\r\n// We have TextureAsset for it.\r\n// native size - always the size of physical texture\r\n// source size - the original size of a texture to\r\n//\r\n\r\n/**\r\n * A number scatter for defining a range in 2D space.\r\n *\r\n * @cat video\r\n * @extends Scatter\r\n */\r\n\r\nclass Texture {\r\n  /**\r\n   * Creates new Texture instance.\r\n   * @param  {HTMLImageElement|HTMLVideoElement|HTMLCanvasElement} nativeTexture A source of the texture.\r\n   * @param  {Rectangle=} region = undefined                                     A region to be drawn.\r\n   * @param  {Rectangle=} untrimmedRect = undefined                              Actual size of a texture when not trimmed.\r\n   */\r\n  constructor(nativeTexture, region, untrimmedRect) {\r\n    /**\r\n     * @private\r\n     * @type {Image}\r\n     */\r\n    this.mTexture = nativeTexture;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Rectangle}\r\n     */\r\n    this.mRegion = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mIsSubtexture = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mId = ++Texture.__ID;\r\n\r\n    if (region === undefined) {\r\n      if(nativeTexture instanceof HTMLImageElement)\r\n        this.mRegion = new Rectangle(0, 0, nativeTexture.naturalWidth, nativeTexture.naturalHeight);\r\n      else\r\n        this.mRegion = new Rectangle(0, 0, nativeTexture.width, nativeTexture.height);\r\n    } else {\r\n      this.mRegion = /** @type {Rectangle} */ (region);\r\n      this.mIsSubtexture = true;\r\n    }\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mTrimmed = untrimmedRect !== undefined;\r\n\r\n    if (this.mTrimmed === false)\r\n      untrimmedRect = new Rectangle(0, 0, this.mRegion.width, this.mRegion.height);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Rectangle}\r\n     */\r\n    this.mUntrimmedRect = /** @type {Rectangle} */ (untrimmedRect);\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mIsLoaded = true;\r\n\r\n    // TODO: refactor, make private\r\n    this.nativeWidth = nativeTexture.naturalWidth || nativeTexture.width;\r\n    this.nativeHeight = nativeTexture.naturalHeight || nativeTexture.height;\r\n\r\n    this.coord = new Uint32Array(4);\r\n    this.refreshCoord();\r\n    \r\n    this._vSlotWebGL = -1;  // virtual slot for batch calculations\r\n    this.premultiplyAlpha = true;\r\n  }\r\n\r\n  refreshCoord() {\r\n    const coord = this.coord;\r\n    const region = this.mRegion;\r\n    const w = this.nativeWidth;\r\n    const h = this.nativeHeight;\r\n\r\n    const x0 = region.left / w;\r\n    const y0 = region.top / h;\r\n\r\n    const x1 = region.right / w;\r\n    const y1 = region.top / h;\r\n\r\n    const x2 = region.left / w;\r\n    const y2 = region.bottom / h;\r\n\r\n    const x3 = region.right / w;\r\n    const y3 = region.bottom / h;\r\n\r\n    coord[0] = (((y0 * 65535) & 0xffff) << 16) | ((x0 * 65535) & 0xffff);\r\n    coord[1] = (((y1 * 65535) & 0xffff) << 16) | ((x1 * 65535) & 0xffff);\r\n    coord[2] = (((y2 * 65535) & 0xffff) << 16) | ((x2 * 65535) & 0xffff);\r\n    coord[3] = (((y3 * 65535) & 0xffff) << 16) | ((x3 * 65535) & 0xffff);\r\n  }\r\n\r\n  /**\r\n   * Returns the unique id of this texture.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get id() {\r\n    return this.mId;\r\n  }\r\n\r\n  /**\r\n   * Returns True if this texture has been trimmed.\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  get isTrimmed() {\r\n    return this.mTrimmed;\r\n  }\r\n\r\n  /**\r\n   * Returns True if this texture is a part of other Texture object\r\n   *\r\n   * @return {boolean} Description\r\n   */\r\n  get isSubTexture() {\r\n    return this.mIsSubtexture;\r\n  }\r\n\r\n  // TODO: if we update texture we have to nofity everything, send signal\r\n  // update(nativeTexture = null, region = null, source = null, crop = null){\r\n  // }\r\n\r\n  // render width\r\n  // render height\r\n  // croppedWidth, croppedHeight\r\n  // width, height\r\n  //\r\n\r\n  /**\r\n   * Returns a Rect object representing the untrimmed size and position of this\r\n   * texture withing other texture if so.\r\n   *\r\n   * @return {Rectangle}\r\n   */\r\n  get untrimmedRect() {\r\n    return this.mUntrimmedRect;\r\n  }\r\n\r\n  /**\r\n   * The width of this texture.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get width() {\r\n    if (this.mRegion)\r\n      return this.mRegion.width;\r\n\r\n    return this.mTexture.naturalWidth;\r\n  }\r\n\r\n  /**\r\n   * The width of this texture.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get height() {\r\n    if (this.mRegion)\r\n      return this.mRegion.height;\r\n\r\n    return this.mTexture.naturalHeight;\r\n  }\r\n\r\n  /**\r\n   * If isSubTexture, returns the physical region inside parent texture.\r\n   *\r\n   * @return {Rectangle}\r\n   */\r\n  get region() {\r\n    return this.mRegion;\r\n  }\r\n\r\n  /**\r\n   * Returns native object. Usually DOM Image element.\r\n   *\r\n   * @return {Image}\r\n   */\r\n  get native() {\r\n    return this.mTexture;\r\n  }\r\n\r\n  /**\r\n   * True if fully loaded and ready.\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  get isLoaded() {\r\n    return this.mIsLoaded;\r\n  }\r\n\r\n  /**\r\n   * Dispose and releases all resources related to this texture.\r\n   *\r\n   * @return {void}\r\n   */\r\n  dispose() {\r\n    this.mTexture = null;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   *\r\n   * @param {string} string\r\n   *\r\n   * @return {Texture}\r\n   */\r\n  static fromBase64String(string) {\r\n    let imgElement = new Image();\r\n    imgElement.src = string;\r\n    return new Texture(imgElement);\r\n  }\r\n\r\n\r\n  /**\r\n   * @ignore\r\n   *\r\n   * @param {HTMLElement}   canvas\r\n   * @param {string} [type=image/png]\r\n   * @param {number} [quality=1]\r\n   *\r\n   * @return {Texture}\r\n   */\r\n  static fromCanvasAsImage(canvas, type = 'image/png', quality = 1) {\r\n    let imgElement = new Image();\r\n    imgElement.src = canvas.toDataURL(type, quality);\r\n\r\n    return new Texture(imgElement);\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   *\r\n   * @param {HTMLElement} canvas\r\n   *\r\n   * @return {Texture}\r\n   */\r\n  static fromCanvas(canvas) {\r\n    return Black.instance.video.getTextureFromCanvas(canvas);\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * @type {number}\r\n * @nocollapse\r\n */\r\nTexture.__ID = 0;\r\n\r\n/**\r\n * @private\r\n * @type {Image|null}\r\n * @nocollapse\r\n */\r\nTexture.MISSING_IMAGE_CACHE = null;\r\n","/**\r\n * A number scatter for defining a range in 2D space.\r\n *\r\n * @cat video\r\n * @extends Texture\r\n */\r\n\r\nclass AtlasTexture extends Texture {\r\n  /**\r\n   * Creates new AtlasTexture instance.\r\n   *\r\n   * @param {Texture}              texture A base texture object.\r\n   * @param {{meta: *, frames: *}} Black json object.\r\n   */\r\n  constructor(texture, jsonObject) {\r\n    super(texture.native);\r\n\r\n    /** @type {Object} */\r\n    this.mMeta = {};\r\n\r\n    /** @dict */\r\n    this.mSubTextures = {}; // dictionary\r\n\r\n    this.__parseJson(jsonObject);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * @param  {{meta: *, frames: *}} o\r\n   * @return {void}\r\n   */\r\n  __parseJson(o) {\r\n    const NEGATIVE_HALF_PI = -(Math.PI / 2);\r\n\r\n    // if (o.meta.format)\r\n    //   this.mMeta.format = o.meta.format;\r\n    //\r\n    // if (o.meta.scale)\r\n    //   this.mMeta.scale = parseFloat(o.meta.scale);\r\n\r\n    for (let key in o.frames) {\r\n      let data = /** @type {Array<number>} */ (o.frames[key]);\r\n\r\n      let region = new Rectangle(data[0], data[1], data[2], data[3]);\r\n      let untrimmedRect = new Rectangle(data[4], data[5], data[6], data[7]);\r\n\r\n      this.mSubTextures[key] = new Texture(this.native, region, untrimmedRect);\r\n    }\r\n  }\r\n\r\n  // addRegion(name, region, frame) {}\r\n  //\r\n  // removeRegion() {}\r\n\r\n  /**\r\n   * Returns the texture by a given name.\r\n   *\r\n   * @param {string} name The name of the texture to find.\r\n   *\r\n   * @return {Texture} The Texture or null if not found.\r\n   */\r\n  getTexture(name) {\r\n    /** @type {Texture} */\r\n    let t = this.mSubTextures[name];\r\n    if (t === undefined)\r\n      Debug.warn(`Texture '${name}' was not found`);\r\n\r\n    return /** @type {Texture} */ (t);\r\n  }\r\n\r\n  /**\r\n   * Returns array of Texture by given name or wildcard mask.\r\n   * If `nameMask` is null then all textures will be returned.\r\n   * This method sorts all resulting textures using neurural sort algorith.\r\n   *\r\n   * @param {string|null} [nameMask=null] The mask to filter by.\r\n   * @param {Array<Texture>|null}         outTextures If passed will be\r\n   * overwritten by result object.\r\n   *\r\n   * @return {Array<Texture>} The list of found textures.\r\n   */\r\n  getTextures(nameMask = null, outTextures = null) {\r\n    let out = outTextures || [];\r\n    if (nameMask === null) {\r\n      for (let key in this.mSubTextures)\r\n        out.push(this.mSubTextures[key]);\r\n\r\n      return /** @type {Array<Texture>} */ (out);\r\n    }\r\n\r\n    let names = [];\r\n\r\n    // TODO: make helper wild function\r\n    let re = new RegExp(\"^\" + nameMask.split(\"*\").join(\".*\") + \"$\");\r\n    for (let key in this.mSubTextures)\r\n      if (re.test(key))\r\n        names.push(key);\r\n\r\n    //names.sort(AtlasTexture.__naturalComparer);\r\n    AtlasTexture.naturalSort(names);\r\n\r\n    for (let i = 0; i < names.length; i++)\r\n      out.push(this.mSubTextures[names[i]]);\r\n\r\n    return out;\r\n  }\r\n\r\n  get subTextures() {\r\n    return this.mSubTextures;\r\n  }\r\n\r\n  static naturalSort(dataset, field = null) {\r\n    dataset.sort(AtlasTexture.__naturalComparer(field));\r\n  }\r\n\r\n  static __naturalComparer(field = null, useAbs = true) {\r\n    return function(a, b) {\r\n      const NUMBER_GROUPS = /(-?\\d*\\.?\\d+)/g;\r\n      let aa = String(field == null ? a : a[field]).split(NUMBER_GROUPS);\r\n      let bb = String(field == null ? b : b[field]).split(NUMBER_GROUPS);\r\n      let min = Math.min(aa.length, bb.length);\r\n\r\n      for (let i = 0; i < min; i++) {\r\n        let x = 0;\r\n        let y = 0;\r\n\r\n        if (useAbs) {\r\n          x = Math.abs(parseFloat(aa[i])) || aa[i].toLowerCase();\r\n          y = Math.abs(parseFloat(bb[i])) || bb[i].toLowerCase();\r\n        } else {\r\n          x = parseFloat(aa[i]) || aa[i].toLowerCase();\r\n          y = parseFloat(bb[i]) || bb[i].toLowerCase();\r\n        }\r\n\r\n        if (x < y)\r\n          return -1;\r\n        else if (x > y)\r\n          return 1;\r\n      }\r\n\r\n      return 0;\r\n    }\r\n  }\r\n\r\n  //dispose() {}\r\n}\r\n","/**\r\n * Holds information about external assets.\r\n *\r\n * @cat loaders\r\n * @extends MessageDispatcher\r\n */\r\n\r\nclass Asset extends MessageDispatcher {\r\n  /**\r\n   * Creates new Assets instance.\r\n   * @param  {string} name Name of asset.\r\n   * @param  {string} url  URL of the asset to load it from.\r\n   */\r\n  constructor(name, url) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.mName = name;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.mUrl = url;\r\n\r\n    /**\r\n     * @private\r\n     * @type {*|null}\r\n     */\r\n    this.mData = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mIsLoaded = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|undefined}\r\n     */\r\n    this.mMimeType = undefined;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.mResponseType = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.mExtension = this.getExtension(url);\r\n\r\n    /**\r\n     * @private\r\n     * @type {XMLHttpRequest|null}\r\n     */\r\n    this.mRequest = null;\r\n  }\r\n\r\n  /**\r\n   * Loads asset from an external source.\r\n   *\r\n   * @return {void}\r\n   */\r\n  load() {\r\n    //console.log('Asset: loading asset \\'%s\\' from \\'%s\\'', this.mName, this.mUrl);\r\n\r\n    this.mRequest = new XMLHttpRequest();\r\n    //this.mRequest.onprogress = (pe) => this.onProgressChanged(pe);\r\n\r\n    if (this.mRequest.overrideMimeType && this.mMimeType)\r\n      this.mRequest.overrideMimeType(this.mMimeType);\r\n\r\n    this.mRequest.responseType = this.mResponseType;\r\n    this.mRequest.open(\"GET\", this.mUrl, true);\r\n    this.mRequest.onreadystatechange = () => {\r\n      if (this.mRequest.readyState === 4) {\r\n        if ((this.mRequest.status === 200) || ((this.mRequest.status === 0) && this.mRequest.responseText))\r\n          this.onLoaded();\r\n        else\r\n          throw new Error('Error loading ' + this.mUrl + \" (\" + this.mRequest.status + \":\"+ this.mRequest.responseText + \")\"); //TODO handle errors\r\n      }\r\n    };\r\n\r\n    this.mRequest.send(null);\r\n  }\r\n\r\n  /**\r\n   * Called when asset is fully loaded.\r\n   *\r\n   * @protected\r\n   * @fires complete\r\n   *\r\n   * @return {void}\r\n   */\r\n  onLoaded() {\r\n    this.mIsLoaded = true;\r\n    this.post('complete');\r\n  }\r\n\r\n  /**\r\n   * Returns the name of this asset.\r\n   *\r\n   * @return {string}\r\n   */\r\n  get name() {\r\n    return this.mName;\r\n  }\r\n\r\n  /**\r\n   * Returns loaded data object associated with this asset.\r\n   *\r\n   * @return {*}\r\n   */\r\n  get data() {\r\n    return this.mData;\r\n  }\r\n\r\n  /**\r\n   * Returns true if asset is preloaded.\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  get isLoaded() {\r\n    return this.mIsLoaded;\r\n  }\r\n\r\n  // TODO: finish\r\n  dispose() {}\r\n\r\n  /**\r\n   * Helper function. Returns the file extension.\r\n   *\r\n   * @param {string} url Url to get extension from.\r\n   *\r\n   * @return {string} Empty string if no extension were found or extension itself.\r\n   */\r\n  getExtension(url) {\r\n    if (url.indexOf('.') === -1)\r\n      return '';\r\n\r\n    return url.substring(url.indexOf('.')).toLowerCase();\r\n  }\r\n}\r\n","/**\r\n * Single Texture file asset class responsible for loading images file and\r\n * converting them into Textures.\r\n *\r\n * @cat loaders\r\n * @extends Asset\r\n */\r\n\r\nclass TextureAsset extends Asset {\r\n  /**\r\n   * Creates TextureAsset instance.\r\n   *\r\n   * @param {string} name Asset name.\r\n   * @param {string} url  URL to load image from.\r\n   */\r\n  constructor(name, url) {\r\n    super(name, url);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Image}\r\n     */\r\n    this.mImageElement = new Image();\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @inheritDoc\r\n   *\r\n   * @return {void}\r\n   */\r\n  onLoaded() {\r\n    this.mData = new Texture(this.mImageElement);\r\n\r\n    super.onLoaded();\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @inheritDoc\r\n   *\r\n   * @return {void}\r\n   */\r\n  load() {\r\n    this.mImageElement.src = this.mUrl;\r\n    this.mImageElement.onload = () => {\r\n      this.onLoaded();\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Single JSON file asset class responsible for loading json file.\r\n *\r\n * @cat loaders\r\n * @extends Asset\r\n */\r\n\r\nclass JSONAsset extends Asset {\r\n  /**\r\n   * Creates new JSONAsset instance.\r\n   *\r\n   * @param {string} name The name of asset.\r\n   * @param {string} url  URL to the json file.\r\n   *\r\n   * @return {void}\r\n   */\r\n  constructor(name, url) {\r\n    super(name, url);\r\n\r\n    this.mimeType = 'application/json';\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @inheritDoc\r\n   *\r\n   * @return {void}\r\n   */\r\n  onLoaded(){\r\n    this.mData = JSON.parse(/** @type {string} */ (this.mRequest.responseText) );\r\n    super.onLoaded();\r\n  }\r\n}\r\n","/**\r\n * Font file asset class responsible for loading local font files.\r\n *\r\n * Note: this class need a body to work preoperly.\r\n *\r\n * @cat loaders\r\n * @extends Asset\r\n */\r\n\r\nclass FontAsset extends Asset {\r\n  /**\r\n   * @param {string} name        The custom name of the font\r\n   * @param {string|null} url    The path to the font\r\n   * @param {boolean} local      Is this font local?\r\n   */\r\n  constructor(name, url, local) {\r\n    if (local === false)\r\n      url = 'https://fonts.googleapis.com/css?family=' + name.replace(new RegExp(' ', 'g'), '+');\r\n    \r\n    super(name, url);\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.mTestingFontName = 'Courier New';\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mLocal = local;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.mTestingString = '~ GHBDTN,.#$Mlck';\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mLoadingTimeout = 2500;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mCheckDelay = 50;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.mTestingElement = this.__getTestingElement();\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.mLoaderElement = this.__getLoaderElement(this.mLocal);\r\n    this.mTestingElement.style.fontFamily = this.mTestingFontName;\r\n    \r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mDefaultFontWidth = this.mTestingElement.offsetWidth;\r\n\r\n    this.mTestingElement.style.fontFamily = name + ',' + this.mTestingFontName;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @return {HTMLElement}\r\n   */\r\n  __getLoaderElement(local) {\r\n    let loaderElement = document.createElement(local ? 'style' : 'link');\r\n    loaderElement.type = 'text/css';\r\n    loaderElement.media = 'all';\r\n    loaderElement.rel = 'stylesheet';\r\n    loaderElement.onerror = function () {\r\n      //debugger;\r\n      // TODO: handle fail\r\n    };\r\n    document.getElementsByTagName('head')[0].appendChild(loaderElement);\r\n    return loaderElement;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @return {HTMLElement}\r\n   */\r\n  __getTestingElement() {\r\n    let testingElement = document.createElement('span');\r\n    testingElement.style.position = 'absolute';\r\n    testingElement.style.top = '-9999px';\r\n    testingElement.style.left = '-9999px';\r\n    testingElement.style.visibility = 'hidden';\r\n    testingElement.style.fontSize = '250px';\r\n    testingElement.innerHTML = this.mTestingString;\r\n    document.body.appendChild(testingElement);\r\n\r\n    return testingElement;\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @return {void}\r\n   */\r\n  load() {\r\n    if (this.mLocal)\r\n      this.mLoaderElement.innerHTML += (`\\n @font-face {font-family: ${this.mName}; src: url(${this.mUrl});}`);\r\n    else\r\n      this.mLoaderElement.href = this.mUrl;\r\n\r\n    this.checkLoadingStatus();\r\n  }\r\n\r\n  /**\r\n   * @return {void}\r\n   */\r\n  checkLoadingStatus() {\r\n    if (this.mDefaultFontWidth === this.mTestingElement.offsetWidth) {\r\n      if ((this.mLoadingTimeout -= this.mCheckDelay) <= 0) {\r\n        this.onLoadingFail();\r\n        return;\r\n      }\r\n\r\n      setTimeout(this.checkLoadingStatus.bind(this), this.mCheckDelay);\r\n      return;\r\n    }\r\n    this.onLoaded();\r\n  }\r\n\r\n  onLoaded() {\r\n    var a = this.mLoaderElement;\r\n\r\n    super.onLoaded();\r\n    this.mTestingElement.parentNode.removeChild(this.mTestingElement);\r\n  }\r\n\r\n  /**\r\n   * @return {void}\r\n   */\r\n  onLoadingFail() {\r\n    console.warn(`loading ${this.name} font failed.`);\r\n    this.onLoaded(); //TODO what to do here?\r\n  }\r\n}","/**\r\n * Texture Atlas asset responsible for loading Image file and coresponding Json\r\n * file.\r\n *\r\n * @cat loaders\r\n * @extends Asset\r\n */\r\n\r\nclass AtlasTextureAsset extends Asset {\r\n  /**\r\n   * Creates new AtlasTextureAsset instance.\r\n   *\r\n   * @param {string} name     Name of the asset.\r\n   * @param {string} imageUrl Image URL.\r\n   * @param {string} dataUrl  Json URL.\r\n   */\r\n  constructor(name, imageUrl, dataUrl) {\r\n    super(name, imageUrl);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Image}\r\n     */\r\n    this.mImageElement = new Image();\r\n\r\n    /**\r\n     * @private\r\n     * @type {JSONAsset}\r\n     */\r\n    this.dataAsset = new JSONAsset(name, dataUrl);\r\n    this.dataAsset.on('complete', this.onJsonLoaded, this);\r\n  }\r\n\r\n\r\n  /**\r\n   * @ignore\r\n   * @returns {void}\r\n   */\r\n  onJsonLoaded() {\r\n    this.mImageElement.src = this.mUrl;\r\n    this.mImageElement.onload = () => {\r\n      this.onLoaded();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @inheritDoc\r\n   * @return {void}\r\n   */\r\n  onLoaded() {\r\n    this.mData = new AtlasTexture(new Texture(this.mImageElement), /** @type {{meta: *, frames: *}} */ (this.dataAsset.data));\r\n\r\n    super.onLoaded();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @override\r\n   *\r\n   * @return {void}\r\n   */\r\n  load() {\r\n    this.dataAsset.load();\r\n  }\r\n}\r\n","/**\r\n * Sound file asset class responsible for preloading audio files.\r\n *\r\n * @cat loaders\r\n * @extends Asset\r\n */\r\n\r\nclass SoundAsset extends Asset {\r\n  /**\r\n   * Creates SoundAsset instance.\r\n   *\r\n   * @param {string} name Sound name.\r\n   * @param {string} url  URL to load audio from.\r\n   */\r\n  constructor(name, url) {\r\n    super(name, url);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Audio}\r\n     */\r\n    this.mAudioElement = new Audio();\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @inheritDoc\r\n   *\r\n   * @return {void}\r\n   */\r\n  onLoaded() {\r\n    this.mData = this.mAudioElement;\r\n\r\n    if (Device.isMobile) {\r\n      this.__enableOnMobile();\r\n    }\r\n\r\n    super.onLoaded();\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @inheritDoc\r\n   *\r\n   * @return {void}\r\n   */\r\n  load() {\r\n    this.mAudioElement.autoplay = false;\r\n    this.mAudioElement.src = this.mUrl;\r\n    this.mAudioElement.preload = 'auto';\r\n    this.mAudioElement.load();\r\n    this.mAudioElement.oncanplaythrough = () => {\r\n      if (!this.mData) {\r\n        this.onLoaded();\r\n      }\r\n    };\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * @return {void}\r\n   */\r\n  __enableOnMobile() {\r\n    let unlock = () => {\r\n      this.mAudioElement.play();\r\n      this.mAudioElement.pause();\r\n      document.removeEventListener('touchend', unlock, true);\r\n    };\r\n    document.addEventListener('touchend', unlock, true);\r\n  }\r\n}\r\n","/*\r\nTODO:\r\n  1. propper error handling\r\n  2. max parallel downloads\r\n  3. check for name dublicates\r\n  4. load progress\r\n*/\r\n\r\n/**\r\n * Reponsible for preloading assets and manages its in memory state.\r\n *\r\n * @cat loaders\r\n * @extends MessageDispatcher\r\n */\r\n\r\nclass AssetManager extends MessageDispatcher {\r\n  /**\r\n   * Creates new AssetManager instance. AssetManager exposes static property\r\n   * called 'default' and many internal classes uses default instance.\r\n   */\r\n  constructor() {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.mDefaultPath = '';\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mTotalLoaded = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mIsAllLoaded = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mLoadingProgress = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Asset>}\r\n     */\r\n    this.mQueue = [];\r\n\r\n    /**\r\n     * @private\r\n     * @member\r\n     * @dict\r\n     */\r\n    this.mTextures = {};\r\n\r\n    /**\r\n     * @private\r\n     * @member\r\n     * @dict\r\n     */\r\n    this.mAtlases = {};\r\n\r\n    /**\r\n     * @private\r\n     * @member\r\n     * @dict\r\n     */\r\n    this.mJsons = {};\r\n\r\n    /**\r\n     * @private\r\n     * @member\r\n     * @dict\r\n     */\r\n    this.mSounds = {};\r\n\r\n    /**\r\n     * @private\r\n     * @member\r\n     * @dict\r\n     */\r\n    this.mFonts = {};\r\n  }\r\n\r\n  /**\r\n   * Adds single image to the loading queue.\r\n   *\r\n   * @param {string} name Name of the asset.\r\n   * @param {string} url  The URL of the image.\r\n   *\r\n   * @returns {void}\r\n   */\r\n  enqueueImage(name, url) {\r\n    this.mQueue.push(new TextureAsset(name, this.mDefaultPath + url));\r\n  }\r\n\r\n  /**\r\n   * Adds atlas to the loading queue.\r\n   *\r\n   * @param {string} name     Name of the asset.\r\n   * @param {string} imageUrl Atlas URL.\r\n   * @param {string} dataUrl  URL to the .json file which describes the atlas.\r\n   *\r\n   * @returns {void}\r\n   */\r\n  enqueueAtlas(name, imageUrl, dataUrl) {\r\n    this.mQueue.push(new AtlasTextureAsset(name, this.mDefaultPath + imageUrl, this.mDefaultPath + dataUrl));\r\n  }\r\n\r\n  /**\r\n   * Adds single json file to the loading queue.\r\n   *\r\n   * @param {string} name Name of the asset.\r\n   * @param {string} url  The URL of the json.\r\n   *\r\n   * @returns {void}\r\n   */\r\n  enqueueJson(name, url) {\r\n    this.mQueue.push(new JSONAsset(name, this.mDefaultPath + url));\r\n  }\r\n\r\n  /**\r\n   * Adds single sound to the loading queue.\r\n   *\r\n   * @param {string} name Name of the sound.\r\n   * @param {string} url  The URL of the sound.\r\n   *\r\n   * @returns {void}\r\n   */\r\n  enqueueSound(name, url) {\r\n    this.mQueue.push(new SoundAsset(name, this.mDefaultPath + url));\r\n  }\r\n\r\n  /*\r\n   * Adds local font to the loading queue.\r\n   *\r\n   * @param {string} name Name of the asset.\r\n   * @param {string} url  The URL to the font.\r\n   *\r\n   * @returns {void}\r\n   */\r\n  enqueueFont(name, url) {\r\n    this.mQueue.push(new FontAsset(name, this.mDefaultPath + url, true));\r\n  }\r\n\r\n  /**\r\n   * Adds Google Font to the loading queue.\r\n   *\r\n   * @param {string} name Name of the asset.\r\n   *\r\n   * @returns {void}\r\n   */\r\n  enqueueGoogleFont(name) {\r\n    this.mQueue.push(new FontAsset(name, null, false));\r\n  }\r\n\r\n  /**\r\n   * Starts preloading all enqueued assets.\r\n   * @fires complete\r\n   *\r\n   * @return {void}\r\n   */\r\n  loadQueue() {\r\n    for (let i = 0; i < this.mQueue.length; i++) {\r\n      let item = this.mQueue[i];\r\n\r\n      item.on(Message.COMPLETE, this.onAssetLoaded, this);\r\n      item.load();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @ignore\r\n   *\r\n   * @param {Message} msg\r\n   *\r\n   * @return {void}\r\n   */\r\n  onAssetLoaded(msg) {\r\n    this.mTotalLoaded++;\r\n    this.mLoadingProgress = this.mTotalLoaded / this.mQueue.length;\r\n\r\n    let item = msg.sender;\r\n\r\n    // TODO: rework this\r\n    // TODO: check for dups\r\n    if (item.constructor === TextureAsset)\r\n      this.mTextures[item.name] = item.data;\r\n    else if (item.constructor === AtlasTextureAsset)\r\n      this.mAtlases[item.name] = item.data;\r\n    else if (item.constructor === JSONAsset)\r\n      this.mJsons[item.name] = item.data;\r\n    else if (item.constructor === SoundAsset)\r\n      this.mSounds[item.name] = item.data;\r\n    else if (item.constructor === FontAsset) {\r\n      this.mFonts[item.name] = item.data;\r\n    } else\r\n      console.error('Unable to handle asset type.', item);\r\n\r\n    this.post(Message.PROGRESS, this.mLoadingProgress);\r\n\r\n    if (this.mTotalLoaded === this.mQueue.length) {\r\n      this.mQueue.splice(0, this.mQueue.length);\r\n      this.mTotalLoaded = 0;\r\n      this.mIsAllLoaded = true;\r\n      this.post(Message.COMPLETE);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns Texture object by given name.\r\n   *\r\n   * @param {string} name The name of the Asset.\r\n   *\r\n   * @return {Texture|null} Returns a Texture if found or null.\r\n   */\r\n  getTexture(name) {\r\n    /** @type {Texture} */\r\n    let t = this.mTextures[name];\r\n\r\n    if (t != null)\r\n      return t;\r\n\r\n    for (let key in this.mAtlases) {\r\n      t = this.mAtlases[key].subTextures[name];\r\n      if (t != null)\r\n        return t;\r\n    }\r\n\r\n    Debug.warn(`Texture '${name}' was not found`);\r\n    return null;\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns array of Texture by given name mask.\r\n   * Searches across all loaded images and atlasses.\r\n   *\r\n   * @param {string} nameMask\r\n   *\r\n   * @returns {Array<Texture>|null}\r\n   */\r\n  getTextures(nameMask) {\r\n    //if (nameMask == null)\r\n\r\n    let out = [];\r\n    let names = [];\r\n\r\n    let re = new RegExp(\"^\" + nameMask.split(\"*\").join(\".*\") + \"$\");\r\n\r\n    // collect single textures\r\n    for (let key in this.mTextures)\r\n      if (re.test(key))\r\n        names.push({ name: key, atlas: null });\r\n\r\n    // collect textures from all atlases\r\n    for (let key in this.mAtlases) {\r\n      let atlas = this.mAtlases[key];\r\n\r\n      for (let key2 in atlas.mSubTextures)\r\n        if (re.test(key2))\r\n          names.push({ name: key2, atlas: atlas });\r\n    }\r\n\r\n    AtlasTexture.naturalSort(names, 'name');\r\n\r\n    for (let i = 0; i < names.length; i++) {\r\n      let ao = names[i];\r\n\r\n      if (ao.atlas == null)\r\n        out.push(this.mTextures[ao.name]);\r\n      else\r\n        out.push(ao.atlas.mSubTextures[ao.name]);\r\n    }\r\n\r\n    if (out.length > 0)\r\n      return out;\r\n\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Returns AtlasTexture by given name.\r\n   *\r\n   * @param {string} name The name of the Asset.\r\n   *\r\n   * @return {AtlasTexture} Returns atlas or null.\r\n   */\r\n  getAtlas(name) {\r\n    return this.mAtlases[name];\r\n  }\r\n\r\n  /**\r\n   * Returns Sound by given name.\r\n   *\r\n   * @param {string} name The name of the sound.\r\n   *\r\n   * @return {Audio} Returns sound or null.\r\n   */\r\n  getSound(name) {\r\n    return this.mSounds[name];\r\n  }\r\n\r\n  /**\r\n   * Gets/Sets default path for preloading. Usefull when url's getting too long.\r\n   * The asset path will be concatenated with defaultPath.\r\n   *\r\n   * @return {string}\r\n   */\r\n  get defaultPath() {\r\n    return this.mDefaultPath;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {string} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set defaultPath(value) {\r\n    this.mDefaultPath = value;\r\n  }\r\n\r\n  /**\r\n   * Returns True if all assets were loaded.\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  get isAllLoaded() {\r\n    return this.mIsAllLoaded;\r\n  }\r\n}\r\n\r\n/**\r\n * Default instance. Sprite and other classes uses this instance to find textures by name.\r\n * @static\r\n * @type {AssetManager}\r\n */\r\nAssetManager.default = new AssetManager();\r\n","/**\r\n * A blend mode enum.\r\n * @cat drivers\r\n * @enum {string}\r\n */\r\n\r\nvar BlendMode = {\r\n  AUTO       : 'auto',\r\n  NORMAL     : 'source-over',\r\n  ADD        : 'lighter',\r\n  MULTIPLY   : 'multiply',\r\n  SCREEN     : 'screen',\r\n  OVERLAY    : 'overlay',\r\n  DARKEN     : 'darken',\r\n  LIGHTEN    : 'lighten',\r\n  COLOR_DODGE: 'color-dodge',\r\n  COLOR_BURN : 'color-burn',\r\n  HARD_LIGHT : 'hard-light',\r\n  SOFT_LIGHT : 'soft-light',\r\n  DIFFERENCE : 'difference',\r\n  EXCLUSION  : 'exclusion',\r\n  HUE        : 'hue',\r\n  SATURATE   : 'saturate',\r\n  COLOR      : 'color',\r\n  LUMINOSITY : 'luminosity'\r\n};\r\n","/**\r\n * Base class for custom video drivers. VideoDriver is used to render things\r\n * onto the screen.\r\n *\r\n * @cat drivers\r\n */\r\n\r\nclass VideoNullDriver {\r\n  /**\r\n   * @param  {HTMLElement} containerElement\r\n   * @param  {number} width\r\n   * @param  {number} height\r\n   */\r\n  constructor(containerElement, width, height) {\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.mGlobalBlendMode = 'auto';\r\n\r\n    /**\r\n     * @protected\r\n     * @type {HTMLElement}\r\n     */\r\n    this.mContainerElement = /**\r\n     * @private\r\n     * @type {HTMLElement} */ (containerElement\r\n    );\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mClientWidth = width;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mClientHeight = height;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Matrix}\r\n     */\r\n    this.mTransform = new Matrix();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mGlobalAlpha = 1;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.mMeasureElement = /** @type {HTMLElement} */ (document.createElement('span'));\r\n    this.mMeasureElement.style.position = 'absolute';\r\n    this.mContainerElement.appendChild(this.mMeasureElement);\r\n\r\n    Black.instance.viewport.on('resize', this.__onResize, this);\r\n  }\r\n\r\n\r\n  /**\r\n   * @protected\r\n   * @ignore\r\n   * @param {Message} msg\r\n   * @param {Rectangle} rect\r\n   *\r\n   * @returns {void}\r\n   */\r\n  __onResize(msg, rect) {\r\n    let w = this.mContainerElement.clientWidth;\r\n    let h = this.mContainerElement.clientHeight;\r\n\r\n    this.mClientWidth = w;\r\n    this.mClientHeight = h;\r\n  }\r\n\r\n  /**\r\n   * Initialization function.\r\n   *\r\n   * @protected\r\n   *\r\n   * @return {void}\r\n   */\r\n  start() {\r\n  }\r\n\r\n\r\n  /**\r\n   * Called before rendering anything. Usually used to clear back-buffer.\r\n   *\r\n   * @protected\r\n   *\r\n   * @returns {void}\r\n   */\r\n  beginFrame() {\r\n  }\r\n\r\n\r\n  /**\r\n   * Called after rendering is finished.\r\n   * @protected\r\n   *\r\n   * @returns {void}\r\n   */\r\n  endFrame() {\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {HTMLElement} canvas\r\n   * @return {Texture|null}\r\n   */\r\n  getTextureFromCanvas(canvas) {\r\n    return null;\r\n  }\r\n\r\n  /**\r\n   * Sets world transformation for future use.\r\n   *\r\n   * @public\r\n   * @param {Matrix} m An transformation matrix to store.\r\n   *\r\n   * @return {void}\r\n   */\r\n  setTransform(m) {\r\n    this.mTransform = m;\r\n  }\r\n\r\n  /**\r\n   * Gets/Sets the global alpha. Used to calculate alpha relative to parent\r\n   * object.\r\n   *\r\n   * @protected\r\n   *\r\n   * @return {number}\r\n   */\r\n  get globalAlpha() {\r\n    return this.mGlobalAlpha;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {number} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set globalAlpha(value) {\r\n    this.mGlobalAlpha = value;\r\n  }\r\n\r\n  /**\r\n   * Gets/Sets global blending mode. Used to calculate blend mode relative to\r\n   * parent object.\r\n   *\r\n   * @return {string}\r\n   */\r\n  get globalBlendMode() {\r\n    return this.mGlobalBlendMode;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {string} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set globalBlendMode(value) {\r\n    this.mGlobalBlendMode = value;\r\n  }\r\n\r\n  /**\r\n   * Draws image onto the back-buffer. GlobalAlpha, BlendMode and transformation\r\n   * matrix must be set prior to calling this method.\r\n   *\r\n   * @public\r\n   *\r\n   * @param  {Sprite|Particle} object\r\n   * @param  {Texture} texture\r\n   * \r\n   */\r\n  drawImage(object, texture) {\r\n  }\r\n\r\n  /**\r\n   * Draws text onto back-buffer.\r\n   *\r\n   * @public\r\n   *\r\n   * @param {TextField} text TextField object to draw.\r\n   * @param {TextInfo} style The style information.\r\n   * @param {Rectangle} bounds Clipping bounds, text will be drawn outside this bounds.\r\n   *\r\n   * @return {void}\r\n   */\r\n  drawText(text, style, bounds) {\r\n  }\r\n\r\n\r\n  /**\r\n   * Clears back-buffer.\r\n   *\r\n   * @protected\r\n   *\r\n   * @returns {void}\r\n   */\r\n  clear() {\r\n  }\r\n\r\n  /**\r\n   * Used to save context if extists.\r\n   *\r\n   * @ignore\r\n   * @protected\r\n   * @param {GameObject|null} gameObject Used for internal binding.\r\n   *\r\n   * @return {void}\r\n   */\r\n  save(gameObject) {\r\n  }\r\n\r\n  /**\r\n   * Used to restore context if extists.\r\n   *\r\n   * @protected\r\n   * @ignore\r\n   * @returns {type}\r\n   */\r\n  restore() {\r\n  }\r\n\r\n\r\n  /**\r\n   * Convers number color to hex string.\r\n   *\r\n   * @param {number} color The color to convert.\r\n   *\r\n   * @returns {string} The resuling hex string.\r\n   */\r\n  hexColorToString(color) {\r\n    let parsedColor = color.toString(16);\r\n    return '#000000'.substring(0, 7 - parsedColor.length) + parsedColor;\r\n  }\r\n\r\n  /**\r\n   * Measures text with a given style.\r\n   *\r\n   * @param {TextField} textField    Text to measure.\r\n   * @param {TextInfo} style Text style to apply onto text.\r\n   * @param {Rectangle} bounds.\r\n   *\r\n   * @return {Rectangle} Local bounds.\r\n   */\r\n  measureText(textField, style, bounds) {\r\n  }\r\n}\r\n","/**\r\n * An video driver that draw everything into DOM Canvas element.\r\n *\r\n * @cat drivers\r\n * @extends VideoNullDriver\r\n */\r\n\r\nclass CanvasDriver extends VideoNullDriver {\r\n  /**\r\n   * @param  {HTMLElement} containerElement The DOM element to draw into.\r\n   * @param  {number} width                 The width of the viewport.\r\n   * @param  {number} height                The height of the viewport.\r\n   */\r\n  constructor(containerElement, width, height) {\r\n    super(containerElement, width, height);\r\n\r\n    /**\r\n     * @private\r\n     * @type {CanvasRenderingContext2D|null}\r\n     */\r\n    this.mCtx = null;\r\n\r\n    this.mGlobalAlpha = 1;\r\n    this.mGlobalBlendMode = BlendMode.NORMAL;\r\n    this.mCurrentObject = null;\r\n    this.mLetterSpacing = 0;\r\n\r\n    this.__createCanvas();\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @return {void}\r\n   */\r\n  __createCanvas() {\r\n    let cvs = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\r\n    cvs.id = 'canvas';\r\n    cvs.width = this.mClientWidth;\r\n    cvs.height = this.mClientHeight;\r\n    this.mContainerElement.appendChild(cvs);\r\n\r\n    this.mCtx = /** @type {CanvasRenderingContext2D} */ (cvs.getContext('2d'));    \r\n  }\r\n\r\n\r\n  /**\r\n   * @private\r\n   * @param {Message} msg\r\n   * @param {Rectangle} rect\r\n   *\r\n   * @returns {void}\r\n   */\r\n  __onResize(msg, rect) {\r\n    super.__onResize(msg, rect);\r\n\r\n    this.mCtx.canvas.width = this.mClientWidth;\r\n    this.mCtx.canvas.height = this.mClientHeight;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {Matrix} m\r\n   *\r\n   * @return {void}\r\n   */\r\n  setTransform(m) {\r\n    super.setTransform(m);\r\n\r\n    let v = m.value;\r\n    this.mCtx.setTransform(v[0], v[1], v[2], v[3], v[4], v[5]);\r\n  }\r\n\r\n  /**\r\n   * @param {number} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set globalAlpha(value) {\r\n    if (value == this.mGlobalAlpha)\r\n      return;\r\n\r\n    this.mGlobalAlpha = value;\r\n    this.mCtx.globalAlpha = value;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @override\r\n   *\r\n   * @param {string} blendMode\r\n   *\r\n   * @return {void}\r\n   */\r\n  set globalBlendMode(blendMode) {\r\n    if (this.mGlobalBlendMode === blendMode)\r\n      return;\r\n\r\n    this.mGlobalBlendMode = blendMode;\r\n    this.mCtx.globalCompositeOperation = blendMode;\r\n  }\r\n\r\n  /**\r\n   * drawImage\r\n   *\r\n   * @inheritDoc\r\n   * @override\r\n   *\r\n   * @param {Sprite|Particle} object\r\n   * @param {Texture} texture\r\n   *\r\n   * @return {void}\r\n   */\r\n  drawImage(object, texture) {\r\n    let w = texture.width;\r\n    let h = texture.height;\r\n    let ox = texture.untrimmedRect.x;\r\n    let oy = texture.untrimmedRect.y;\r\n\r\n    this.mCtx.drawImage(texture.native, texture.region.x, texture.region.y, w, h, ox, oy, w, h);\r\n  }\r\n  \r\n  /**\r\n   * Measures text with a given style.\r\n   *\r\n   * @inheritDoc\r\n   * @override\r\n   * \r\n   * @param {TextField} textField    Text to measure.\r\n   * @param {TextInfo} style Text style to apply onto text.\r\n   * @param {Rectangle} bounds.\r\n   *\r\n   * @return {Rectangle} A Vector with width and height of the text bounds.\r\n   */\r\n  measureText(textField, style, bounds) {\r\n    let lines = textField.lines;\r\n    let widths = textField.lineWidths;\r\n    let lineHeight = textField.lineHeight;\r\n    let text = textField.text;\r\n    let multiLine = textField.multiLine;\r\n    let strokeThickness = style.strokeThickness;\r\n    let ctx = this.mCtx;\r\n    \r\n    if (this.mLetterSpacing !== textField.letterSpacing) {\r\n      this.mLetterSpacing = textField.letterSpacing;\r\n      \r\n      let canvas = ctx.canvas;\r\n      canvas.style.letterSpacing = `${textField.letterSpacing}px`;\r\n      // ctx = this.mCtx = canvas.getContext(`2d`);\r\n    }\r\n    \r\n    ctx.font = `${style.style} ${style.weight} ${style.size}px \"${style.name}\"`;\r\n    ctx.textBaseline = `top`;\r\n    \r\n    lines.length = 0;\r\n    widths.length = 0;\r\n    multiLine ? lines.push(...text.split(`\\n`)) : lines.push(text);\r\n\r\n    for (let i = 0, l = lines.length; i < l; i++) {\r\n      widths[i] = ctx.measureText(lines[i]).width + strokeThickness;\r\n    }\r\n    \r\n    if (!textField.autoSize) {\r\n      return bounds.set(0, 0, textField.fieldWidth, textField.fieldHeight);\r\n    }\r\n    \r\n    return bounds.set(0, 0, Math.max(...widths), lines.length * lineHeight * (style.size + strokeThickness));\r\n  }\r\n\r\n  /**\r\n   * drawText\r\n   *\r\n   * @inheritDoc\r\n   * @override\r\n   *\r\n   * @param {TextField} textField\r\n   * @param {TextInfo} style\r\n   * @param {Rectangle} bounds\r\n   *\r\n   * @return {void}\r\n   */\r\n  drawText(textField, style, bounds) {\r\n    let lines = textField.lines;\r\n    let widths = textField.lineWidths;\r\n    let lineOffset = textField.lineHeight * style.size;\r\n    let strokeThickness = style.strokeThickness;\r\n    let align = style.align;\r\n    let maxWidth = bounds.width;\r\n    let ctx = this.mCtx;\r\n\r\n    if (this.mLetterSpacing !== textField.letterSpacing) {\r\n      this.mLetterSpacing = textField.letterSpacing;\r\n\r\n      let canvas = ctx.canvas;\r\n      canvas.style.letterSpacing = `${textField.letterSpacing}px`;\r\n      // ctx = this.mCtx = canvas.getContext(`2d`);\r\n    }\r\n\r\n    ctx.font = `${style.style} ${style.weight} ${style.size}px \"${style.name}\"`;\r\n    ctx.fillStyle = this.hexColorToString(style.color);\r\n    ctx.textBaseline = `bottom`;\r\n\r\n    if (strokeThickness !== 0) {\r\n      ctx.lineJoin = `round`;\r\n      ctx.miterLimit = 2;\r\n      ctx.lineWidth = strokeThickness;\r\n      ctx.strokeStyle = this.hexColorToString(style.strokeColor);\r\n    }\r\n\r\n    if (!textField.autoSize) {\r\n      ctx.rect(0, 0, maxWidth, bounds.height);\r\n      ctx.clip();\r\n    }\r\n\r\n    // ctx.fillRect(0, 0, maxWidth, bounds.height);\r\n\r\n    for (let i = 0, l = lines.length; i < l; i++) {\r\n      let width = widths[i];\r\n      let y = bounds.height - strokeThickness / 2 - lineOffset * (l - i - 1);\r\n      let x = strokeThickness / 2;\r\n\r\n      if (align === `center`) {\r\n        x += maxWidth / 2 - width / 2;\r\n      } else if (align === `right`) {\r\n        x += maxWidth - width;\r\n      }\r\n\r\n      strokeThickness !== 0 && ctx.strokeText(lines[i], x, y);\r\n      ctx.fillText(lines[i], x, y);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * clear\r\n   * @inheritDoc\r\n   * @override\r\n   *\r\n   * @return {void}\r\n   */\r\n  clear() {\r\n    this.mCtx.setTransform(1, 0, 0, 1, 0, 0);\r\n    this.mCtx.clearRect(0, 0, this.mCtx.canvas.width, this.mCtx.canvas.height);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @override\r\n   *\r\n   * @return {void}\r\n   */\r\n  beginFrame() {\r\n    super.beginFrame();\r\n\r\n    this.clear();\r\n    //this.mCtx.save();\r\n\r\n    this.mCtx.globalCompositeOperation = this.mGlobalBlendMode;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @override\r\n   *\r\n   * @return {void}\r\n   */\r\n  endFrame() {\r\n    super.endFrame();\r\n\r\n    //this.mCtx.restore();\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {HTMLElement} canvas\r\n   *\r\n   * @return {Texture|null}\r\n   */\r\n  getTextureFromCanvas(canvas) {\r\n    return new Texture(canvas);\r\n  }\r\n\r\n  /**\r\n   * save\r\n   *\r\n   * @override\r\n   * @param {GameObject|null} gameObject Used for internal binding.\r\n   *\r\n   * @return {void}\r\n   */\r\n  save(gameObject) {\r\n    this.mCtx.save();\r\n    this.mCurrentObject = gameObject;\r\n  }\r\n\r\n  /**\r\n   * restore\r\n   *\r\n   * @return {void}\r\n   */\r\n  restore() {\r\n    this.mCtx.restore();\r\n  }\r\n\r\n  clip(rect) {\r\n    //this.mCtx.beginPath();\r\n    console.log('123');\r\n    \r\n    this.mCtx.rect(rect.x, rect.y, rect.width, rect.height);\r\n    this.mCtx.clip();\r\n\r\n    //this.mCtx.endPath();\r\n  }\r\n}\r\n","/**\r\n * An video driver that draw everything into DOM elements itself.\r\n *\r\n * @cat drivers\r\n * @extends VideoNullDriver\r\n */\r\n\r\nclass DOMDriver extends VideoNullDriver {\r\n  /**\r\n   * @param  {HTMLElement} containerElement The DOM element to draw into.\r\n   * @param  {number} width                 The width of the viewport.\r\n   * @param  {number} height                The height of the viewport.\r\n   */\r\n  constructor(containerElement, width, height) {\r\n    super(containerElement, width, height);\r\n\r\n    /** @type {number} */\r\n    this.mGlobalAlpha = 1;\r\n\r\n    /** @type {Array<Element>} */\r\n    this.mCache = [];\r\n\r\n    /** @type {number} */\r\n    this.mCounter = 0;\r\n\r\n    /** @type {boolean} */\r\n    this.mPixelated = true;\r\n\r\n    /** @type {GameObject|null} */\r\n    this.mCurrentObject = null;\r\n    this.__initCSS();\r\n\r\n    this.measureEl = document.createElement(`div`);\r\n    this.measureEl.style.position = `absolute`;\r\n    this.measureEl.style.visibility = `hidden`;\r\n    this.measureEl.style.height = `auto`;\r\n    this.measureEl.style.width = `auto`;\r\n    this.measureEl.style.whiteSpace = `nowrap`;\r\n    document.getElementsByTagName(`body`)[0].appendChild(this.measureEl);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @override\r\n   * @param {GameObject|null} gameObject Used for internal binding.\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  save(gameObject) {\r\n    this.mCurrentObject = gameObject;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * @return {void}  description\r\n   */\r\n  __initCSS() {\r\n    let imgRendering = 'image-rendering:optimizeSpeed; image-rendering:optimize-contrast; image-rendering:crisp-edges; image-rendering:pixelated';\r\n\r\n    let sSprite = document.createElement('style');\r\n    sSprite.type = 'text/css';\r\n    sSprite.innerHTML = '.sprite { position: absolute; background-repeat: no-repeat; cursor: default !important; -webkit-transform-origin: 0px 0px;}';\r\n    document.getElementsByTagName('head')[0].appendChild(sSprite);\r\n\r\n    let sSpritePixelated = document.createElement('style');\r\n    sSpritePixelated.type = 'text/css';\r\n    sSpritePixelated.innerHTML = '.sprite-p { position: absolute; background-repeat: no-repeat; cursor: default !important; -webkit-transform-origin: 0px 0px; ' + imgRendering + '}';\r\n    document.getElementsByTagName('head')[0].appendChild(sSpritePixelated);\r\n\r\n    let sText = document.createElement('style');\r\n    sText.type = 'text/css';\r\n    sText.innerHTML = '.text { position: absolute; white-space: pre; overflow: hidden; cursor: default !important; -webkit-transform-origin: 0px 0px;}';\r\n    document.getElementsByTagName('head')[0].appendChild(sText);\r\n\r\n    let sViewport = document.createElement('style');\r\n    sViewport.type = 'text/css';\r\n    sViewport.innerHTML = '.viewport { width: 100%; height: 100%; position: relative; overflow: hidden; cursor: default; }';\r\n    document.getElementsByTagName('head')[0].appendChild(sViewport);\r\n\r\n    this.mContainerElement.className = 'viewport';\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @override\r\n   *\r\n   * @return {void}  description\r\n   */\r\n  beginFrame() {\r\n    this.mCounter = 0;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @override\r\n   *\r\n   * @return {void}  description\r\n   */\r\n  endFrame() {\r\n    if (this.mCounter === this.mCache.length)\r\n      return;\r\n\r\n    //TODO: cleanup unused divs\r\n    //TODO: remove them instead of hiding\r\n    for (let i = this.mCounter; i < this.mCache.length; i++) {\r\n      let el = this.mCache[i];\r\n\r\n      el.parentNode.removeChild(el);\r\n    }\r\n\r\n    this.mCache.splice(this.mCounter);\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {HTMLElement} canvas\r\n   *\r\n   * @return {Texture|null}\r\n   */\r\n  getTextureFromCanvas(canvas) {\r\n    return Texture.fromCanvasAsImage(canvas);\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @inheritDoc\r\n   *\r\n   * @param  {Sprite|Particle} object\r\n   * @param  {Texture} texture\r\n   *\r\n   * @return {void}\r\n   */\r\n  drawImage(object, texture) {\r\n    /** @type {Matrix|null} */\r\n    let oldTransform = this.mTransform.clone();\r\n    let uw = texture.untrimmedRect.x;\r\n    let uh = texture.untrimmedRect.y;\r\n\r\n    //this.mTransform.translate(px, py);\r\n\r\n    if (texture.untrimmedRect.x !== 0 || texture.untrimmedRect.y !== 0) {\r\n      Matrix.__cache.set(1, 0, 0, 1, texture.untrimmedRect.x, texture.untrimmedRect.y);\r\n      this.mTransform = this.mTransform.clone().append(Matrix.__cache);\r\n      //this.mTransform = this.mTransform.clone().translate(texture.untrimmedRect.x, texture.untrimmedRect.y);\r\n    }\r\n\r\n    let el = this.__popElement(this.mPixelated ? 'sprite-p' : 'sprite');\r\n    this.__updateElementCommon(el);\r\n    this.__updateImageElement(el, texture);\r\n\r\n    this.mTransform = oldTransform.clone();\r\n  }\r\n\r\n  /**\r\n   * Measures text with a given style.\r\n   *\r\n   * @inheritDoc\r\n   * @override\r\n   *\r\n   * @param {TextField} textField    Text to measure.\r\n   * @param {TextInfo} style Text style to apply onto text.\r\n   * @param {Rectangle} bounds.\r\n   *\r\n   * @return {Rectangle} A Vector with width and height of the text bounds.\r\n   */\r\n  measureText(textField, style, bounds) {\r\n    let el = this.measureEl;\r\n\r\n    textField.lines = textField.multiLine ? textField.text : textField.text.replace(/\\n/mg, ` `);\r\n\r\n    el.style.whiteSpace = 'pre';\r\n    el.style.fontSize = style.size + 'px';\r\n    el.style.fontFamily = style.name;\r\n    el.style.fontStyle = style.style;\r\n    el.style.fontWeight = style.weight;\r\n    el.style.lineHeight = `${textField.lineHeight}`;\r\n    el.style.letterSpacing = `${textField.letterSpacing}px`;\r\n    el.innerHTML = textField.lines;\r\n\r\n    let widths = textField.lineWidths;\r\n    widths.length = 0;\r\n    widths[0] = el.offsetWidth + style.strokeThickness;\r\n\r\n    if (!textField.autoSize) {\r\n      bounds.set(0, 0, textField.fieldWidth, textField.fieldHeight);\r\n    } else {\r\n      bounds.set(0, 0,\r\n        el.clientWidth + 1 + style.strokeThickness,\r\n        el.clientHeight + 1 + style.strokeThickness);\r\n    }\r\n\r\n    el.innerHTML = ``;\r\n\r\n    return bounds;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @override\r\n   *\r\n   * @param {TextField} textField\r\n   * @param {TextInfo} style\r\n   * @param {Rectangle} bounds\r\n   *\r\n   * @return {void}\r\n   */\r\n  drawText(textField, style, bounds) {\r\n    let el = this.__popElement('text');\r\n\r\n    // TODO: check this type. review the code.\r\n    this.__updateTextElement(\r\n      /** @type {HTMLElement} */ (el), textField, style, bounds);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {string} className\r\n   *\r\n   * @return {Element}\r\n   */\r\n  __popElement(className) {\r\n    this.mCounter++;\r\n\r\n    if (this.mCounter <= this.mCache.length)\r\n      return this.mCache[this.mCounter - 1];\r\n\r\n    let el = document.createElement('div');\r\n    el.className = className;\r\n    this.mContainerElement.appendChild(el);\r\n\r\n    this.mCache.push(el);\r\n    return (el);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Element} el\r\n   *\r\n   * @return {void}\r\n   */\r\n  __updateElementCommon(el) {\r\n    let v = this.mTransform.value;\r\n\r\n    // TODO: slow, rework\r\n    // NOTE: toFixed(0) is faster then toFixed(6)\r\n    let transform = `matrix(${v[0].toFixed(6)}, ${v[1].toFixed(6)}, ${v[2].toFixed(6)}, ${v[3].toFixed(6)}, ${v[4].toFixed(6)}, ${v[5].toFixed(6)})`;\r\n    //let transform = `matrix(${v[0]}, ${v[1]}, ${v[2]}, ${v[3]}, ${v[4]}, ${v[5]})`;\r\n\r\n    //console.log(el.style.transform, transform);\r\n    if (el.style.webkitTransform !== transform)\r\n      el.style.webkitTransform = transform;\r\n\r\n    //el.style.transform = transform;\r\n\r\n    //if (el.style.opacity != this.mGlobalAlpha)\r\n    el.style.opacity = this.mGlobalAlpha; // would be faster to not compare string and int\r\n\r\n    //if (el.style.backgroundImage !== '') {\r\n    //el.style.backgroundImage = '';\r\n    //console.log('reset img');\r\n    //}\r\n\r\n    // if (el.style.width !== null)\r\n    //   el.style.width = null;\r\n    //\r\n    // if (el.style.height !== null)\r\n    //   el.style.height = null;\r\n\r\n    // if (el.style.display === 'none')\r\n    //   el.style.display = 'block';\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param  {Element} el      description\r\n   * @param  {Texture} texture description\r\n   * @return {void}         description\r\n   */\r\n  __updateImageElement(el, texture) {\r\n    if (texture) {\r\n      let url = 'url(' + texture.native.src + ')';\r\n\r\n      if (el.style.backgroundImage !== url)\r\n        el.style.backgroundImage = url;\r\n\r\n      if (texture.isSubTexture) {\r\n        let vBackgroundPosition = `${-texture.region.x}px ${-texture.region.y}px`;\r\n\r\n        if (el.style.backgroundPosition !== vBackgroundPosition)\r\n          el.style.backgroundPosition = vBackgroundPosition;\r\n      }\r\n    } else {\r\n      el.style.backgroundImage = 'none';\r\n    }\r\n\r\n    if (el.style.width != texture.width + 'px')\r\n      el.style.width = texture.width + 'px';\r\n\r\n    if (el.style.height != texture.height + 'px')\r\n      el.style.height = texture.height + 'px';\r\n\r\n    if (el.innerHTML !== '')\r\n      el.innerHTML = '';\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {HTMLElement} el\r\n   * @param {TextField} textField\r\n   * @param {TextInfo} style\r\n   * @param {Rectangle} bounds\r\n   *\r\n   * @return {void}\r\n   */\r\n  __updateTextElement(el, textField, style, bounds) {\r\n    let width = textField.lineWidths[0];\r\n    let text = textField.lines;\r\n    let align = style.align;\r\n    let x = 0;\r\n\r\n    if (align === `center`) {\r\n      x -= bounds.width / 2 - width / 2;\r\n    } else if (align === `right`) {\r\n      x -= bounds.width - width;\r\n    }\r\n\r\n    let v = this.mTransform.value;\r\n    el.style.webkitTransform = `matrix(${v[0]}, ${v[1]}, ${v[2]}, ${v[3]}, ${v[4] - x}, ${v[5]})`;\r\n    el.style.opacity = this.mGlobalAlpha;\r\n\r\n    if (!textField.autoSize) {\r\n      // top right bottom left. There is no width and height\r\n      el.style.clip = `rect(0px ${bounds.width + x}px ${bounds.height}px ${x}px)`;\r\n    }\r\n\r\n    el.style.lineHeight = `${textField.lineHeight}`;\r\n    el.style.fontSize = style.size + 'px';\r\n    el.style.letterSpacing = `${textField.letterSpacing}px`;\r\n    el.innerHTML = text;\r\n\r\n    if (el.style.width !== bounds.width + x + 'px') {\r\n      el.style.width = bounds.width + x + 'px';\r\n    }\r\n\r\n    if (el.style.height !== bounds.height + 'px') {\r\n      el.style.height = bounds.height + 'px';\r\n    }\r\n\r\n    if (el.style.fontFamily !== style.name) {\r\n      el.style.fontFamily = style.name;\r\n    }\r\n\r\n    let color = this.hexColorToString(style.color);\r\n\r\n    if (el.style.color != color) {\r\n      el.style.color = color;\r\n    }\r\n\r\n    if (el.style.fontStyle !== style.style)\r\n      el.style.fontStyle = style.style;\r\n\r\n    if (el.style.fontWeight != style.weight) {\r\n      el.style.fontWeight = style.weight;\r\n    }\r\n\r\n    if (el.style.textAlign !== style.align) {\r\n      el.style.textAlign = style.align;\r\n    }\r\n\r\n    if (el.style.backgroundImage !== 'none') {\r\n      el.style.backgroundImage = 'none';\r\n    }\r\n\r\n    if (style.strokeThickness > 0) {\r\n      let strokeColor = this.hexColorToString(style.strokeColor);\r\n\r\n      if (el.style.webkitTextStrokeColor != strokeColor) {\r\n        el.style.webkitTextStrokeColor = strokeColor;\r\n      }\r\n\r\n      if (el.style.webkitTextStrokeWidth != style.strokeThickness + 'px') {\r\n        el.style.webkitTextStrokeWidth = style.strokeThickness + 'px';\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * An video driver that draw everything into DOM Canvas element.\r\n *\r\n * @cat drivers\r\n * @extends VideoNullDriver\r\n */\r\n\r\nclass WebGLDriver extends VideoNullDriver {\r\n  /**\r\n   * @param  {HTMLElement} containerElement description\r\n   * @param  {number} width            description\r\n   * @param  {number} height           description\r\n   */\r\n  constructor(containerElement, width, height) {\r\n    super(containerElement, width, height);\r\n\r\n    console.log(`WebGL`);\r\n\r\n    const fn = () => {\r\n    };\r\n    this.mEmptyPlugin = {\r\n      stop: fn, start: fn, drawImage: fn, drawText: fn, onResize: fn, setTransform: fn,\r\n      set blendMode(v) {\r\n      },\r\n      set globalAlpha(v) {\r\n      }\r\n    };\r\n    this.mActivePlugin = this.mEmptyPlugin;\r\n    this.mActiveArrayBuffer = null;\r\n    this.mActiveElementBuffer = null;\r\n    this.blend = null;\r\n    this.boundTextures = [];\r\n\r\n    this.__createCanvas();\r\n\r\n    const gl = this.gl;\r\n    gl.enable(gl.BLEND);\r\n\r\n    this.MAX_TEXTURE_IMAGE_UNITS = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\r\n    this.glTextures = new WebGLTextures(this);\r\n    this.blender = new WebGLBlendMode(gl);\r\n\r\n    this.mPlugins = {\r\n      [WebGLTexPlugin.name]      : new WebGLTexPlugin(this),\r\n      [WebGLParticlesPlugin.name]: new WebGLParticlesPlugin(this)\r\n    };\r\n  }\r\n\r\n  /**\r\n   * __createCanvas\r\n   *\r\n   * @return {void}\r\n   */\r\n  __createCanvas() {\r\n    let canvas = /** @type {HTMLCanvasElement} */ (document.createElement(`canvas`));\r\n    canvas.id = `canvas`;\r\n    this.mContainerElement.appendChild(canvas);\r\n\r\n    const config = {\r\n      antialias         : true, // default true\r\n      alpha             : false,\r\n      premultipliedAlpha: false\r\n    };\r\n\r\n    this.gl = canvas.getContext(`webgl`, config) || canvas.getContext(`webgl-experimental`, config);\r\n    this.__onResize(`init`, new Rectangle(0, 0, this.mClientWidth, this.mClientHeight))\r\n  }\r\n\r\n  __onResize(msg, rect) {\r\n    super.__onResize(msg, rect);\r\n\r\n    const gl = this.gl;\r\n    const canvas = gl.canvas;\r\n\r\n    const desiredWidthInCSSPixels = rect.width;\r\n    const desiredHeightInCSSPixels = rect.height;\r\n\r\n    // set the display size of the canvas.\r\n    canvas.style.width = desiredWidthInCSSPixels + `px`;\r\n    canvas.style.height = desiredHeightInCSSPixels + `px`;\r\n\r\n    // set the size of the drawingBuffer\r\n    var devicePixelRatio = window.devicePixelRatio || 1;\r\n    canvas.width = desiredWidthInCSSPixels * devicePixelRatio;\r\n    canvas.height = desiredHeightInCSSPixels * devicePixelRatio;\r\n    gl.viewport(0, 0, gl.drawingBufferWidth, gl.drawingBufferHeight);\r\n\r\n    this.mActivePlugin.onResize(msg, rect);\r\n  }\r\n\r\n  drawImage(object, texture) {\r\n    let plugin = this.mPlugins[object.pluginName];\r\n\r\n    if (plugin !== this.mActivePlugin) {\r\n      this.mActivePlugin.stop();\r\n      this.mActivePlugin = plugin;\r\n      plugin.start();\r\n    }\r\n\r\n    plugin.globalAlpha = this.mGlobalAlpha;\r\n    plugin.globalBlendMode = this.mGlobalBlendMode;\r\n    plugin.setTransform(this.mTransform);\r\n    plugin.drawImage(object, texture);\r\n  }\r\n\r\n  drawText(textField, style, bounds) {\r\n    let plugin = this.mPlugins[textField.pluginName];\r\n\r\n    if (plugin !== this.mActivePlugin) {\r\n      this.mActivePlugin.stop();\r\n      this.mActivePlugin = plugin;\r\n      plugin.start();\r\n    }\r\n\r\n    plugin.globalAlpha = this.mGlobalAlpha;\r\n    plugin.globalBlendMode = this.mGlobalBlendMode;\r\n    plugin.setTransform(this.mTransform);\r\n    plugin.drawText(textField, style, bounds);\r\n  }\r\n\r\n  bindTexture(texture, slot) {\r\n    const gl = this.gl;\r\n    gl.activeTexture(gl.TEXTURE0 + slot);\r\n    // gl.bindTexture(gl.TEXTURE_2D, this.glTextures[slot]);\r\n    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, Number(texture.premultiplyAlpha));\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, texture.native);\r\n\r\n    // only sprite plugin usable\r\n    // _vSlotWebGL can be -1 even texture is bound\r\n    const boundTextures = this.boundTextures;\r\n    boundTextures[slot]._vSlotWebGL = -1;\r\n    boundTextures[slot] = texture;\r\n    texture._vSlotWebGL = slot;\r\n  }\r\n\r\n  bindArrayBuffer(buffer) {\r\n    if (buffer === this.mActiveArrayBuffer) return;\r\n\r\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, buffer);\r\n    this.mActiveArrayBuffer = buffer;\r\n  }\r\n\r\n  bindElementBuffer(buffer) {\r\n    if (buffer === this.mActiveElementBuffer) return;\r\n\r\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, buffer);\r\n    this.mActiveElementBuffer = buffer;\r\n  }\r\n\r\n  setBlend(blend) {\r\n    const blendFunc = this.blender[blend];\r\n    if (!blendFunc) debugger\r\n    this.gl.blendFunc(blendFunc.src, blendFunc.dst);\r\n    this.blend = blend;\r\n  }\r\n\r\n  endFrame() {\r\n    this.mActivePlugin.stop();\r\n  }\r\n\r\n  measureText(textField, style, bounds) {\r\n    let lines = textField.lines;\r\n    let widths = textField.lineWidths;\r\n    let lineHeight = textField.lineHeight;\r\n    let text = textField.text;\r\n    let multiLine = textField.multiLine;\r\n    let strokeThickness = style.strokeThickness;\r\n    let ctx = textField.context;\r\n    let canvas;\r\n\r\n    if (!ctx) {\r\n      canvas = document.createElement(`canvas`);\r\n      ctx = textField.context = canvas.getContext(`2d`);\r\n      ctx.mLetterSpacing = 0;\r\n    } else {\r\n      canvas = ctx.canvas;\r\n    }\r\n\r\n    if (ctx.mLetterSpacing !== textField.letterSpacing) {\r\n      ctx.mLetterSpacing = textField.letterSpacing;\r\n\r\n      let canvas = ctx.canvas;\r\n      document.getElementsByTagName(`body`)[0].appendChild(canvas);\r\n      canvas.style.letterSpacing = `${textField.letterSpacing}px`;\r\n      canvas.style.visibility = `hidden`; // todo\r\n      // canvas.style.display = `none`;  this doesn't work\r\n      // ctx = textField.context = canvas.getContext(`2d`);\r\n    }\r\n\r\n    ctx.font = `${style.style} ${style.weight} ${style.size}px \"${style.name}\"`;\r\n    ctx.textBaseline = `bottom`;\r\n\r\n    lines.length = 0;\r\n    widths.length = 0;\r\n    multiLine ? lines.push(...text.split(`\\n`)) : lines.push(text);\r\n\r\n    for (let i = 0, l = lines.length; i < l; i++) {\r\n      widths[i] = ctx.measureText(lines[i]).width + strokeThickness;\r\n    }\r\n\r\n    if (!textField.autoSize) {\r\n      bounds.set(0, 0, textField.fieldWidth, textField.fieldHeight);\r\n    } else {\r\n      bounds.set(0, 0, Math.max(...widths), lines.length * lineHeight * (style.size + strokeThickness));\r\n    }\r\n    \r\n    ctx.clearRect(0, 0, canvas.width, canvas.height);\r\n    canvas.width = canvas.naturalWidth = bounds.width;\r\n    canvas.height = canvas.naturalHeight = bounds.height;\r\n    textField.mTexture = new Texture(canvas); // todo cache\r\n    textField.mTexture.premultiplyAlpha = true;\r\n    \r\n    return bounds;\r\n  }\r\n}\r\n","\r\nconst WebGLConstants = {\r\n  FLOAT                        : 0x1406,\r\n  FLOAT_VEC2                   : 0x8B50,\r\n  FLOAT_VEC3                   : 0x8B51,\r\n  FLOAT_VEC4                   : 0x8B52,\r\n  INT                          : 0x1404,\r\n  INT_VEC2                     : 0x8B53,\r\n  INT_VEC3                     : 0x8B54,\r\n  INT_VEC4                     : 0x8B55,\r\n  BOOL                         : 0x8B56,\r\n  BOOL_VEC2                    : 0x8B57,\r\n  BOOL_VEC3                    : 0x8B58,\r\n  BOOL_VEC4                    : 0x8B59,\r\n  FLOAT_MAT2                   : 0x8B5A,\r\n  FLOAT_MAT3                   : 0x8B5B,\r\n  FLOAT_MAT4                   : 0x8B5C,\r\n  SAMPLER_2D                   : 0x8B5E,\r\n  SAMPLER_CUBE                 : 0x8B60,\r\n  SAMPLER_3D                   : 0x8B5F,\r\n  SAMPLER_2D_SHADOW            : 0x8B62,\r\n  FLOAT_MAT2x3                 : 0x8B65,\r\n  FLOAT_MAT2x4                 : 0x8B66,\r\n  FLOAT_MAT3x2                 : 0x8B67,\r\n  FLOAT_MAT3x4                 : 0x8B68,\r\n  FLOAT_MAT4x2                 : 0x8B69,\r\n  FLOAT_MAT4x3                 : 0x8B6A,\r\n  SAMPLER_2D_ARRAY             : 0x8DC1,\r\n  SAMPLER_2D_ARRAY_SHADOW      : 0x8DC4,\r\n  SAMPLER_CUBE_SHADOW          : 0x8DC5,\r\n  UNSIGNED_INT                 : 0x1405,\r\n  UNSIGNED_INT_VEC2            : 0x8DC6,\r\n  UNSIGNED_INT_VEC3            : 0x8DC7,\r\n  UNSIGNED_INT_VEC4            : 0x8DC8,\r\n  INT_SAMPLER_2D               : 0x8DCA,\r\n  INT_SAMPLER_3D               : 0x8DCB,\r\n  INT_SAMPLER_CUBE             : 0x8DCC,\r\n  INT_SAMPLER_2D_ARRAY         : 0x8DCF,\r\n  UNSIGNED_INT_SAMPLER_2D      : 0x8DD2,\r\n  UNSIGNED_INT_SAMPLER_3D      : 0x8DD3,\r\n  UNSIGNED_INT_SAMPLER_CUBE    : 0x8DD4,\r\n  UNSIGNED_INT_SAMPLER_2D_ARRAY: 0x8DD7,\r\n\r\n  TEXTURE_2D      : 0x0DE1,\r\n  TEXTURE_CUBE_MAP: 0x8513,\r\n  TEXTURE_3D      : 0x806F,\r\n  TEXTURE_2D_ARRAY: 0x8C1A\r\n};\r\n","/**\r\n * Maps black blend modes to WebGl blend functions.\r\n */\r\n\r\nclass WebGLBlendMode {\r\n  constructor(gl) {\r\n    return {\r\n      [BlendMode.NORMAL]     : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\r\n      [BlendMode.ADD]        : {src: gl.ONE, dst: gl.DST_ALPHA},\r\n      [BlendMode.MULTIPLY]   : {src: gl.DST_COLOR, dst: gl.ONE_MINUS_SRC_ALPHA},\r\n      [BlendMode.SCREEN]     : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_COLOR},\r\n      [BlendMode.OVERLAY]    : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\r\n      [BlendMode.DARKEN]     : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\r\n      [BlendMode.LIGHTEN]    : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\r\n      [BlendMode.COLOR_DODGE]: {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\r\n      [BlendMode.COLOR_BURN] : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\r\n      [BlendMode.HARD_LIGHT] : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\r\n      [BlendMode.SOFT_LIGHT] : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\r\n      [BlendMode.DIFFERENCE] : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\r\n      [BlendMode.EXCLUSION]  : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\r\n      [BlendMode.HUE]        : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\r\n      [BlendMode.SATURATE]   : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\r\n      [BlendMode.COLOR]      : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\r\n      [BlendMode.LUMINOSITY] : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA}\r\n    };\r\n  }\r\n}\r\n","const typeMap = {\r\n  [WebGLConstants.FLOAT]     : `uniform1f`,\r\n  [WebGLConstants.FLOAT_VEC2]: `uniform2fv`,\r\n  [WebGLConstants.FLOAT_VEC3]: `uniform3fv`,\r\n  [WebGLConstants.FLOAT_VEC4]: `uniform4fv`,\r\n  [WebGLConstants.INT]       : `uniform1i`,\r\n  [WebGLConstants.INT_VEC2]  : `uniform2iv`,\r\n  [WebGLConstants.INT_VEC3]  : `uniform3iv`,\r\n  [WebGLConstants.INT_VEC4]  : `uniform4iv`,\r\n  [WebGLConstants.FLOAT_MAT2]: `uniformMatrix2fv`,\r\n  [WebGLConstants.FLOAT_MAT3]: `uniformMatrix3fv`,\r\n  [WebGLConstants.FLOAT_MAT4]: `uniformMatrix4fv`,\r\n  [WebGLConstants.SAMPLER_2D]: `uniform1i`\r\n};\r\n\r\n\r\nclass WebGLBasePlugin {\r\n  constructor(renderer, vertexShaderSource, fragmentShaderSource, attributesInfo) {\r\n    this.mRenderer = renderer;\r\n    this.mBlendMode = BlendMode.NORMAL;\r\n    this.mTransform = new Matrix();\r\n    this.mGlobalAlpha = 1;\r\n\r\n    const gl = this.gl = renderer.gl;\r\n    const vertexShader = gl.createShader(gl.VERTEX_SHADER);\r\n    const fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\r\n    gl.shaderSource(vertexShader, vertexShaderSource);\r\n    gl.shaderSource(fragmentShader, fragmentShaderSource);\r\n    gl.compileShader(vertexShader);\r\n    gl.compileShader(fragmentShader);\r\n    const program = this.program = gl.createProgram();\r\n    gl.attachShader(program, vertexShader);\r\n    gl.attachShader(program, fragmentShader);\r\n    gl.linkProgram(program);\r\n    gl.useProgram(program); // set up uniforms for\r\n    gl.deleteShader(vertexShader);\r\n    gl.deleteShader(fragmentShader);\r\n\r\n    const uniforms = this.uniforms = {};\r\n    const uniformsAmount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n\r\n    for (let i = 0; i < uniformsAmount; i++) {\r\n      const uniformInfo = gl.getActiveUniform(program, i);\r\n      let name = uniformInfo.name;\r\n      const isArray = name.slice(-3) === `[0]`;\r\n      name = isArray ? name.slice(0, -3) : name;\r\n\r\n      const location = gl.getUniformLocation(program, uniformInfo.name);\r\n      const sSetter = typeMap[uniformInfo.type] + (isArray ? `v` : ``);\r\n      const setter = gl[sSetter].length === 2 ?\r\n        v => gl[sSetter](location, v) : v => gl[sSetter](location, false, v);\r\n\r\n      // setter.location = location;\r\n      Object.defineProperty(uniforms, name, {set: setter, get: () => location});\r\n    }\r\n  }\r\n\r\n  onResize(msg, rect) {\r\n\r\n  }\r\n\r\n  set globalBlendMode(blendMode) {\r\n    this.mBlendMode = blendMode;\r\n  }\r\n\r\n  setTransform(m) {\r\n    this.mTransform = m;\r\n  }\r\n\r\n  set globalAlpha(value) {\r\n    this.mGlobalAlpha = value;\r\n  }\r\n\r\n  drawImage(object, texture) {\r\n\r\n  }\r\n\r\n  drawText(textField, style, bounds) {\r\n\r\n  }\r\n\r\n  start() {\r\n    \r\n  }\r\n  \r\n  stop() {\r\n    \r\n  }\r\n}\r\n","\r\nclass WebGLTextures {\r\n  constructor(renderer) {\r\n    const gl = this.gl = renderer.gl;\r\n    const UNITS = renderer.MAX_TEXTURE_IMAGE_UNITS;\r\n    const glTextures = [];\r\n    const canvas = document.createElement(`canvas`);\r\n    const ctx = canvas.getContext(`2d`);\r\n    canvas.width = canvas.height = 8;\r\n    ctx.fillRect(0, 0, 8, 8);\r\n\r\n    for (let i = 0; i < UNITS; i++) {\r\n      const glTexture = glTextures[i] = gl.createTexture();\r\n      const texture = new Texture(canvas);\r\n      texture._vSlotWebGL = i;\r\n      renderer.boundTextures[i] = texture;\r\n\r\n      gl.activeTexture(gl.TEXTURE0 + i);\r\n      gl.bindTexture(gl.TEXTURE_2D, glTexture);\r\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, texture.native);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\r\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\r\n    }\r\n    \r\n    return glTextures;\r\n  }\r\n}\r\n","const vertexShaderSource = `\r\n  precision highp float;\r\n  \r\n  attribute vec2 aPosition; // 2 * float = 8\r\n  attribute vec2 aTexCoord; // 2 * unsigned short = 4\r\n  attribute vec4 aColor;    // 4 * UNSIGNED BYTE = 4\r\n  attribute float aTexSlot; // 1 * float = 4\r\n  \r\n  varying vec2 vTexCoord;\r\n  varying float vTexSlot;\r\n  varying vec4 vColor;\r\n\r\n  uniform vec2 uProjection;\r\n\r\n  void main() {\r\n    gl_Position = vec4(aPosition.x * uProjection.x - 1.0, -aPosition.y * uProjection.y + 1.0, 0.0, 1.0);\r\n    \r\n    vTexCoord = aTexCoord;\r\n    vTexSlot = aTexSlot;\r\n    vColor = aColor;\r\n  }\r\n`;\r\n\r\nconst fragmentShaderSource = `\r\n  precision lowp float;\r\n  \r\n  varying vec2 vTexCoord;\r\n  varying float vTexSlot;\r\n  varying vec4 vColor;\r\n  \r\n  uniform sampler2D uSamplers[MAX_TEXTURE_IMAGE_UNITS];\r\n  \r\n  void main() {\r\n    int texSlot = int(vTexSlot);\r\n    \r\n    for (int i = 0; i < MAX_TEXTURE_IMAGE_UNITS; i++) {\r\n      if (i == texSlot) {\r\n        gl_FragColor = texture2D(uSamplers[i], vTexCoord) * vColor;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet LAST_SLOT = 0;\r\n\r\n\r\nclass WebGLTexPlugin extends WebGLBasePlugin {\r\n  constructor(renderer) {\r\n    const gl = renderer.gl;\r\n    const UNITS = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\r\n\r\n    super(renderer, vertexShaderSource, fragmentShaderSource.replace(/MAX_TEXTURE_IMAGE_UNITS/g, UNITS));\r\n\r\n    this.MAX_TEXTURE_IMAGE_UNITS = UNITS;\r\n    this.batchSize = 2048;\r\n    this.objects = [];\r\n    this.batches = [];\r\n    this.buffers = [];\r\n\r\n    for (let i = 0, l = this.batchSize; i < l; i++) {\r\n      this.batches.push({textures: [], texturesLength: 0, slots: {}, start: 0, size: 0, blend: null});\r\n    }\r\n\r\n    for (let i = 1, l = this.nextPow2(this.batchSize); i <= l; i *= 2) {\r\n      const buffer = {data: new ArrayBuffer(i * 4 * 20)};\r\n      buffer.float32View = new Float32Array(buffer.data);\r\n      buffer.uint32View = new Uint32Array(buffer.data);\r\n      this.buffers[i] = buffer;\r\n    }\r\n\r\n\r\n    // Element Buffer\r\n    const len = this.batchSize * 6;\r\n    const indices = new Uint16Array(len);\r\n\r\n    for (let i = 0, j = 0; i < len; i += 6, j += 4) {\r\n      indices[i] = j;\r\n      indices[i + 1] = j + 1;\r\n      indices[i + 2] = j + 2;\r\n      indices[i + 3] = j + 3;\r\n      indices[i + 4] = j + 3;\r\n      indices[i + 5] = j + 4;\r\n    }\r\n\r\n    this.mElementBuffer = gl.createBuffer();\r\n    renderer.bindElementBuffer(this.mElementBuffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STREAM_DRAW);\r\n\r\n\r\n    // Array Buffer\r\n    this.mArrayBuffer = gl.createBuffer();\r\n    const location = {\r\n      aPosition: gl.getAttribLocation(this.program, `aPosition`),\r\n      aTexCoord: gl.getAttribLocation(this.program, `aTexCoord`),\r\n      aColor   : gl.getAttribLocation(this.program, `aColor`),\r\n      aTexSlot : gl.getAttribLocation(this.program, `aTexSlot`)\r\n    };\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.mArrayBuffer);\r\n    gl.vertexAttribPointer(location.aPosition, 2, gl.FLOAT, false, 20, 0);\r\n    gl.vertexAttribPointer(location.aTexCoord, 2, gl.UNSIGNED_SHORT, true, 20, 8);\r\n    gl.vertexAttribPointer(location.aColor, 4, gl.UNSIGNED_BYTE, true, 20, 12);\r\n    gl.vertexAttribPointer(location.aTexSlot, 1, gl.FLOAT, false, 20, 16);\r\n    gl.enableVertexAttribArray(location.aPosition);\r\n    gl.enableVertexAttribArray(location.aTexCoord);\r\n    gl.enableVertexAttribArray(location.aColor);\r\n    gl.enableVertexAttribArray(location.aTexSlot);\r\n\r\n\r\n    gl.uniform2f(this.uniforms.uProjection, 2 / renderer.mClientWidth, 2 / renderer.mClientHeight);\r\n    gl.uniform1iv(this.uniforms.uSamplers, new Int32Array(new Array(this.MAX_TEXTURE_IMAGE_UNITS).fill(0).map((v, i) => i)));\r\n\r\n    this.stop = this.flush;\r\n  }\r\n\r\n  onResize(msg, rect) {\r\n    this.gl.uniform2f(this.uniforms.uProjection, 2 / rect.width, 2 / rect.height);\r\n  }\r\n\r\n  drawImage(object) {\r\n    if (object.worldAlpha === 0) return;\r\n\r\n    this.objects.push(object);\r\n\r\n    if (this.objects.length === this.batchSize) {\r\n      this.flush();\r\n    }\r\n  }\r\n  \r\n  drawText(textField, style, bounds) {\r\n    if (!textField.mNeedInvalidate) {\r\n      return this.drawImage(textField);\r\n    }\r\n\r\n    let lines = textField.lines;\r\n    let widths = textField.lineWidths;\r\n    let lineOffset = textField.lineHeight * style.size;\r\n    let strokeThickness = style.strokeThickness;\r\n    let align = style.align;\r\n    let maxWidth = bounds.width;\r\n    let ctx = textField.context;\r\n\r\n    if (ctx.mLetterSpacing !== textField.letterSpacing) {\r\n      ctx.mLetterSpacing = textField.letterSpacing;\r\n\r\n      let canvas = ctx.canvas;\r\n      canvas.style.letterSpacing = `${textField.letterSpacing}px`;\r\n      // ctx = this.mCtx = canvas.getContext(`2d`);\r\n    }\r\n\r\n    ctx.font = `${style.style} ${style.weight} ${style.size}px \"${style.name}\"`;\r\n    ctx.fillStyle = this.mRenderer.hexColorToString(style.color);\r\n    ctx.textBaseline = `bottom`;\r\n\r\n    if (strokeThickness !== 0) {\r\n      ctx.lineJoin = `round`;\r\n      ctx.miterLimit = 2;\r\n      ctx.lineWidth = strokeThickness;\r\n      ctx.strokeStyle = this.mRenderer.hexColorToString(style.strokeColor);\r\n    }\r\n\r\n    // ctx.fillRect(0, 0, maxWidth, bounds.height);\r\n\r\n    for (let i = 0, l = lines.length; i < l; i++) {\r\n      let width = widths[i];\r\n      let y = bounds.height - strokeThickness / 2 - lineOffset * (l - i - 1);\r\n      let x = strokeThickness / 2;\r\n\r\n      if (align === `center`) {\r\n        x += maxWidth / 2 - width / 2;\r\n      } else if (align === `right`) {\r\n        x += maxWidth - width;\r\n      }\r\n\r\n      strokeThickness !== 0 && ctx.strokeText(lines[i], x, y);\r\n      ctx.fillText(lines[i], x, y);\r\n    }\r\n\r\n    this.drawImage(textField);\r\n  }\r\n\r\n  flush() {\r\n    const objects = this.objects;\r\n    const length = objects.length;\r\n\r\n    if (length === 0) return;\r\n\r\n    const gl = this.gl;\r\n    const renderer = this.mRenderer;\r\n    const rendererBoundTextures = renderer.boundTextures;\r\n    const vBoundTextures = rendererBoundTextures.slice();\r\n    const batches = this.batches;\r\n    const MAX_TEXTURE_IMAGE_UNITS = this.MAX_TEXTURE_IMAGE_UNITS;\r\n    const buffer = this.buffers[this.nextPow2(length)];\r\n    const uint32View = buffer.uint32View;\r\n    const float32View = buffer.float32View;\r\n\r\n    let index = 0;\r\n    let currentBatchIndex = 0;\r\n    let currentBatch = batches[0];\r\n    let currentBlend = currentBatch.blend = objects[0].blendMode;\r\n    let currentBatchSlots = currentBatch.slots;\r\n    currentBatch.texturesLength = 0;\r\n    let i;\r\n\r\n    for (i = 0; i < length; i++) {\r\n      const object = objects[i];\r\n      const alpha = object.worldAlpha;\r\n      const tint = object.tint;\r\n      const nextBlend = object.blendMode;\r\n      const texture = object.mTexture;\r\n      /* object.lateDirty && */object.refreshVertexData();  // todo late dirt\r\n\r\n      if (currentBlend !== nextBlend) {\r\n        currentBlend = nextBlend;\r\n\r\n        currentBatchSlots = 0;\r\n        currentBatch.texturesLength = MAX_TEXTURE_IMAGE_UNITS;\r\n      }\r\n\r\n      if (currentBatchSlots[texture.id] === undefined) {\r\n        if (currentBatch.texturesLength === MAX_TEXTURE_IMAGE_UNITS) {\r\n          currentBatch.size = i - currentBatch.start;\r\n          // currentBatch.texturesLength = currentBatch.textures.length;\r\n\r\n          currentBatch = batches[++currentBatchIndex];\r\n          currentBatch.start = i;\r\n          currentBatch.blend = nextBlend;\r\n          currentBatch.texturesLength = 0;\r\n          currentBatchSlots = currentBatch.slots;\r\n        }\r\n\r\n        if (texture._vSlotWebGL === -1) {\r\n          for (let j = 0; j < MAX_TEXTURE_IMAGE_UNITS; j++) {\r\n            const k = (j + LAST_SLOT) % MAX_TEXTURE_IMAGE_UNITS;\r\n            const tex = vBoundTextures[k];\r\n\r\n            if (currentBatchSlots[tex.mId] === undefined) {\r\n              tex._vSlotWebGL = -1;\r\n              texture._vSlotWebGL = k;\r\n              vBoundTextures[k] = texture;\r\n              LAST_SLOT++;\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        currentBatchSlots[texture.mId] = texture._vSlotWebGL;\r\n        currentBatch.textures[currentBatch.texturesLength++] = texture;\r\n      }\r\n\r\n      const vertexData = object.vertexData;\r\n      float32View[index] = vertexData[0];\r\n      float32View[index + 1] = vertexData[1];\r\n      float32View[index + 5] = vertexData[2];\r\n      float32View[index + 6] = vertexData[3];\r\n      float32View[index + 10] = vertexData[4];\r\n      float32View[index + 11] = vertexData[5];\r\n      float32View[index + 15] = vertexData[6];\r\n      float32View[index + 16] = vertexData[7];\r\n\r\n      const texCoord = texture.coord;\r\n      uint32View[index + 2] = texCoord[0];\r\n      uint32View[index + 7] = texCoord[1];\r\n      uint32View[index + 12] = texCoord[2];\r\n      uint32View[index + 17] = texCoord[3];\r\n\r\n      uint32View[index + 3] = uint32View[index + 8] = uint32View[index + 13] = uint32View[index + 18] = alpha === 1 ?\r\n      (alpha * 255 << 24) + tint :\r\n      (alpha * 255 << 24) + ((((tint >> 16) & 0xff) * alpha + 0.5 | 0) << 16) +\r\n      ((((tint >> 8) & 0xff) * alpha + 0.5 | 0) << 8) + ((tint & 0xff) * alpha + 0.5 | 0);\r\n\r\n      float32View[index + 4] = float32View[index + 9] = \r\n        float32View[index + 14] = float32View[index + 19] = texture._vSlotWebGL + 0.5;\r\n\r\n      index += 20;\r\n    }\r\n\r\n    currentBatch.size = i - currentBatch.start;\r\n    gl.bufferData(gl.ARRAY_BUFFER, buffer.data, gl.STREAM_DRAW);\r\n\r\n    for (let i = 0, len = currentBatchIndex + 1; i < len; i++) {\r\n      const batch = batches[i];\r\n      const textures = batch.textures;\r\n      const slots = batch.slots;\r\n\r\n      for (let j = 0, l = batch.textures.length; j < l; j++) {\r\n        const texture = textures[j];\r\n        const slot = slots[texture.id];\r\n        slots[texture.id] = undefined;\r\n\r\n        if (rendererBoundTextures[slot] !== texture) {\r\n          renderer.bindTexture(texture, slot);\r\n        }\r\n      }\r\n\r\n      if (renderer.blend !== batch.blend) {\r\n        renderer.setBlend(batch.blend);\r\n      }\r\n\r\n      gl.drawElements(gl.TRIANGLE_STRIP, batch.size * 6 - 2, gl.UNSIGNED_SHORT, batch.start * 12);\r\n    }\r\n\r\n    objects.length = 0;\r\n  }\r\n\r\n  start() {\r\n    this.gl.useProgram(this.program);\r\n  }\r\n\r\n  nextPow2(v) {\r\n    v += v === 0;\r\n    --v;\r\n    v |= v >>> 1;\r\n    v |= v >>> 2;\r\n    v |= v >>> 4;\r\n    v |= v >>> 8;\r\n    v |= v >>> 16;\r\n\r\n    return v + 1;\r\n  }\r\n}\r\n","const vertexShaderSource1 = `\r\n  precision highp float;\r\n  \r\n  attribute vec2 aPosition; // 2 * float = 8\r\n  attribute vec2 aTexCoord; // 2 * unsigned short = 4\r\n  attribute vec4 aColor;    // 4 * UNSIGNED BYTE = 4\r\n  attribute float aTexSlot; // 1 * float = 4\r\n  \r\n  varying vec2 vTexCoord;\r\n  varying float vTexSlot;\r\n  varying vec4 vColor;\r\n\r\n  uniform vec2 uProjection;\r\n\r\n  void main() {\r\n    gl_Position = vec4(aPosition.x * uProjection.x - 1.0, -aPosition.y * uProjection.y + 1.0, 0.0, 1.0);\r\n    \r\n    vTexCoord = aTexCoord;\r\n    vTexSlot = aTexSlot;\r\n    vColor = aColor;\r\n  }\r\n`;\r\n\r\nconst fragmentShaderSource1 = `\r\n  precision lowp float;\r\n  \r\n  varying vec2 vTexCoord;\r\n  varying float vTexSlot;\r\n  varying vec4 vColor;\r\n  \r\n  uniform sampler2D uSamplers[MAX_TEXTURE_IMAGE_UNITS];\r\n  \r\n  void main() {\r\n    int texSlot = int(vTexSlot);\r\n    \r\n    for (int i = 0; i < MAX_TEXTURE_IMAGE_UNITS; i++) {\r\n      if (i == texSlot) {\r\n        gl_FragColor = texture2D(uSamplers[i], vTexCoord) * vColor;\r\n        return;\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nlet LAST_SLOT_ = 0;\r\n\r\n\r\nclass WebGLParticlesPlugin extends WebGLBasePlugin {\r\n  constructor(renderer) {\r\n    const gl = renderer.gl;\r\n    const UNITS = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\r\n\r\n    super(renderer, vertexShaderSource1, fragmentShaderSource1.replace(/MAX_TEXTURE_IMAGE_UNITS/g, UNITS));\r\n\r\n    this.MAX_TEXTURE_IMAGE_UNITS = UNITS;\r\n    this.batchSize = 2048;\r\n    this.objects = new Array(this.batchSize).fill(``)\r\n      .map(v => {\r\n        return {transform: new Matrix(), vertexData: []}\r\n      });\r\n    this.objectsLength = 0;\r\n    this.batches = [];\r\n    this.buffers = [];\r\n\r\n    for (let i = 0, l = this.batchSize; i < l; i++) {\r\n      this.batches.push({textures: [], texturesLength: 0, slots: {}, start: 0, size: 0, blend: null});\r\n    }\r\n\r\n    for (let i = 1, l = this.nextPow2(this.batchSize); i <= l; i *= 2) {\r\n      const buffer = {data: new ArrayBuffer(i * 4 * 20)};\r\n      buffer.float32View = new Float32Array(buffer.data);\r\n      buffer.uint32View = new Uint32Array(buffer.data);\r\n      this.buffers[i] = buffer;\r\n    }\r\n\r\n\r\n    // Element Buffer\r\n    const len = this.batchSize * 6;\r\n    const indices = new Uint16Array(len);\r\n\r\n    for (let i = 0, j = 0; i < len; i += 6, j += 4) {\r\n      indices[i] = j;\r\n      indices[i + 1] = j + 1;\r\n      indices[i + 2] = j + 2;\r\n      indices[i + 3] = j + 3;\r\n      indices[i + 4] = j + 3;\r\n      indices[i + 5] = j + 4;\r\n    }\r\n\r\n    this.mElementBuffer = gl.createBuffer();\r\n    renderer.bindElementBuffer(this.mElementBuffer);\r\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STREAM_DRAW);\r\n\r\n\r\n    // Array Buffer\r\n    this.mArrayBuffer = gl.createBuffer();\r\n    const location = {\r\n      aPosition: gl.getAttribLocation(this.program, `aPosition`),\r\n      aTexCoord: gl.getAttribLocation(this.program, `aTexCoord`),\r\n      aColor   : gl.getAttribLocation(this.program, `aColor`),\r\n      aTexSlot : gl.getAttribLocation(this.program, `aTexSlot`)\r\n    };\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, this.mArrayBuffer);\r\n    gl.vertexAttribPointer(location.aPosition, 2, gl.FLOAT, false, 20, 0);\r\n    gl.vertexAttribPointer(location.aTexCoord, 2, gl.UNSIGNED_SHORT, true, 20, 8);\r\n    gl.vertexAttribPointer(location.aColor, 4, gl.UNSIGNED_BYTE, true, 20, 12);\r\n    gl.vertexAttribPointer(location.aTexSlot, 1, gl.FLOAT, false, 20, 16);\r\n    gl.enableVertexAttribArray(location.aPosition);\r\n    gl.enableVertexAttribArray(location.aTexCoord);\r\n    gl.enableVertexAttribArray(location.aColor);\r\n    gl.enableVertexAttribArray(location.aTexSlot);\r\n\r\n\r\n    gl.uniform2f(this.uniforms.uProjection, 2 / renderer.mClientWidth, 2 / renderer.mClientHeight);\r\n    gl.uniform1iv(this.uniforms.uSamplers, new Int32Array(new Array(this.MAX_TEXTURE_IMAGE_UNITS).fill(0).map((v, i) => i)));\r\n\r\n    this.stop = this.flush;\r\n  }\r\n\r\n  onResize(msg, rect) {\r\n    this.gl.uniform2f(this.uniforms.uProjection, 2 / rect.width, 2 / rect.height);\r\n  }\r\n\r\n  set globalBlendMode(blendMode) {\r\n    this.mBlendMode = blendMode;\r\n  }\r\n\r\n  setTransform(m) {\r\n    this.mTransform = m;\r\n  }\r\n\r\n  set globalAlpha(value) {\r\n    this.mGlobalAlpha = value;\r\n  }\r\n\r\n  refreshVertexData(object) {\r\n    const vertexData = object.vertexData;\r\n    const transform = object.transform.value;\r\n    const a = transform[0];\r\n    const b = transform[1];\r\n    const c = transform[2];\r\n    const d = transform[3];\r\n    const tx = transform[4];\r\n    const ty = transform[5];\r\n    const texture = object.mTexture;\r\n    const region = texture.mRegion;\r\n    const w = region.width;\r\n    const h = region.height;\r\n\r\n    if (texture.isTrimmed) {\r\n      const untrimmedRegion = texture.untrimmedRect;\r\n      const left = untrimmedRegion.x;\r\n      const top = untrimmedRegion.y;\r\n      const right = left + w;\r\n      const bottom = top + h;\r\n\r\n      // left top\r\n      vertexData[0] = a * left + c * top + tx;\r\n      vertexData[1] = d * top + b * left + ty;\r\n\r\n      // right top\r\n      vertexData[2] = a * right + c * top + tx;\r\n      vertexData[3] = d * top + b * right + ty;\r\n\r\n      // left bottom\r\n      vertexData[4] = a * left + c * bottom + tx;\r\n      vertexData[5] = d * bottom + b * left + ty;\r\n\r\n      // right bottom\r\n      vertexData[6] = a * right + c * bottom + tx;\r\n      vertexData[7] = d * bottom + b * right + ty;\r\n    } else {\r\n\r\n      // left top\r\n      vertexData[0] = tx;\r\n      vertexData[1] = ty;\r\n\r\n      // right top\r\n      vertexData[2] = a * w + tx;\r\n      vertexData[3] = b * w + ty;\r\n\r\n      // left bottom\r\n      vertexData[4] = c * h + tx;\r\n      vertexData[5] = d * h + ty;\r\n\r\n      // right bottom\r\n      vertexData[6] = a * w + c * h + tx;\r\n      vertexData[7] = d * h + b * w + ty;\r\n    }\r\n  }\r\n  \r\n  drawImage(particle, texture) {\r\n    if (particle.worldAlpha === 0) return;\r\n\r\n    let object = this.objects[this.objectsLength++];\r\n    object.transform.copyFrom(this.mTransform);\r\n    object.mTexture = texture;\r\n    object.worldAlpha = particle.worldAlpha;\r\n    object.tint = 0xffffff;\r\n    object.blendMode = this.mBlendMode;\r\n\r\n    if (this.objectsLength === this.batchSize) {\r\n      this.flush();\r\n    }\r\n  }\r\n\r\n  flush() {\r\n    const objects = this.objects;\r\n    const length = this.objectsLength;\r\n\r\n    if (length === 0) return;\r\n\r\n    const gl = this.gl;\r\n    const renderer = this.mRenderer;\r\n    const rendererBoundTextures = renderer.boundTextures;\r\n    const vBoundTextures = rendererBoundTextures.slice();\r\n    const batches = this.batches;\r\n    const MAX_TEXTURE_IMAGE_UNITS = this.MAX_TEXTURE_IMAGE_UNITS;\r\n    const buffer = this.buffers[this.nextPow2(length)];\r\n    const uint32View = buffer.uint32View;\r\n    const float32View = buffer.float32View;\r\n\r\n    let index = 0;\r\n    let currentBatchIndex = 0;\r\n    let currentBatch = batches[0];\r\n    let currentBlend = currentBatch.blend = objects[0].blendMode;\r\n    let currentBatchSlots = currentBatch.slots;\r\n    currentBatch.texturesLength = 0;\r\n    let i;\r\n\r\n    for (i = 0; i < length; i++) {\r\n      const object = objects[i];\r\n      const alpha = object.worldAlpha;\r\n      const tint = object.tint;\r\n      const nextBlend = object.blendMode;\r\n      const texture = object.mTexture;\r\n\r\n      if (currentBlend !== nextBlend) {\r\n        currentBlend = nextBlend;\r\n\r\n        currentBatchSlots = 0;\r\n        currentBatch.texturesLength = MAX_TEXTURE_IMAGE_UNITS;\r\n      }\r\n\r\n      if (currentBatchSlots[texture.id] === undefined) {\r\n        if (currentBatch.texturesLength === MAX_TEXTURE_IMAGE_UNITS) {\r\n          currentBatch.size = i - currentBatch.start;\r\n          // currentBatch.texturesLength = currentBatch.textures.length;\r\n\r\n          currentBatch = batches[++currentBatchIndex];\r\n          currentBatch.start = i;\r\n          currentBatch.blend = nextBlend;\r\n          currentBatch.texturesLength = 0;\r\n          currentBatchSlots = currentBatch.slots;\r\n        }\r\n\r\n        if (texture._vSlotWebGL === -1) {\r\n          for (let j = 0; j < MAX_TEXTURE_IMAGE_UNITS; j++) {\r\n            const k = (j + LAST_SLOT_) % MAX_TEXTURE_IMAGE_UNITS;\r\n            const tex = vBoundTextures[k];\r\n\r\n            if (currentBatchSlots[tex.mId] === undefined) {\r\n              tex._vSlotWebGL = -1;\r\n              texture._vSlotWebGL = k;\r\n              vBoundTextures[k] = texture;\r\n              LAST_SLOT_++;\r\n\r\n              break;\r\n            }\r\n          }\r\n        }\r\n\r\n        currentBatchSlots[texture.mId] = texture._vSlotWebGL;\r\n        currentBatch.textures[currentBatch.texturesLength++] = texture;\r\n      }\r\n\r\n      this.refreshVertexData(object);\r\n      const vertexData = object.vertexData;\r\n      float32View[index] = vertexData[0];\r\n      float32View[index + 1] = vertexData[1];\r\n      float32View[index + 5] = vertexData[2];\r\n      float32View[index + 6] = vertexData[3];\r\n      float32View[index + 10] = vertexData[4];\r\n      float32View[index + 11] = vertexData[5];\r\n      float32View[index + 15] = vertexData[6];\r\n      float32View[index + 16] = vertexData[7];\r\n\r\n      const texCoord = texture.coord;\r\n      uint32View[index + 2] = texCoord[0];\r\n      uint32View[index + 7] = texCoord[1];\r\n      uint32View[index + 12] = texCoord[2];\r\n      uint32View[index + 17] = texCoord[3];\r\n\r\n      uint32View[index + 3] = uint32View[index + 8] = uint32View[index + 13] = uint32View[index + 18] = alpha === 1 ?\r\n      (alpha * 255 << 24) + tint :\r\n      (alpha * 255 << 24) + ((((tint >> 16) & 0xff) * alpha + 0.5 | 0) << 16) +\r\n      ((((tint >> 8) & 0xff) * alpha + 0.5 | 0) << 8) + ((tint & 0xff) * alpha + 0.5 | 0);\r\n\r\n      float32View[index + 4] = float32View[index + 9] = \r\n        float32View[index + 14] = float32View[index + 19] = texture._vSlotWebGL + 0.5;\r\n\r\n      index += 20;\r\n    }\r\n\r\n    currentBatch.size = i - currentBatch.start;\r\n    gl.bufferData(gl.ARRAY_BUFFER, buffer.data, gl.STREAM_DRAW);\r\n\r\n    for (let i = 0, len = currentBatchIndex + 1; i < len; i++) {\r\n      const batch = batches[i];\r\n      const textures = batch.textures;\r\n      const slots = batch.slots;\r\n\r\n      for (let j = 0, l = batch.texturesLength; j < l; j++) {\r\n        const texture = textures[j];\r\n        const slot = slots[texture.id];\r\n        slots[texture.id] = undefined;\r\n\r\n        if (rendererBoundTextures[slot] !== texture) {\r\n          renderer.bindTexture(texture, slot);\r\n        }\r\n      }\r\n\r\n      if (renderer.blend !== batch.blend) {\r\n        renderer.setBlend(batch.blend);\r\n      }\r\n\r\n      gl.drawElements(gl.TRIANGLE_STRIP, batch.size * 6 - 2, gl.UNSIGNED_SHORT, batch.start * 12);\r\n    }\r\n\r\n    this.objectsLength = 0;\r\n  }\r\n\r\n  start() {\r\n    this.gl.useProgram(this.program);\r\n  }\r\n\r\n  nextPow2(v) {\r\n    v += v === 0;\r\n    --v;\r\n    v |= v >>> 1;\r\n    v |= v >>> 2;\r\n    v |= v >>> 4;\r\n    v |= v >>> 8;\r\n    v |= v >>> 16;\r\n\r\n    return v + 1;\r\n  }\r\n}\r\n","/**\r\n * The base class for all renderable objects. Adds `alpha` and `visible` properties to GameObject.\r\n *\r\n * @cat display\r\n * @extends GameObject\r\n */\r\n\r\nclass DisplayObject extends GameObject {\r\n  constructor() {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mAlpha = 1;\r\n\r\n    /**\r\n     * @public\r\n     * @type {string}\r\n     */\r\n    this.blendMode = BlendMode.NORMAL;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mVisible = true;\r\n    \r\n    this.pluginName = WebGLTexPlugin.name;\r\n    this.vertexData = [];\r\n    this.tint = 0xffffff;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {VideoNullDriver} video\r\n   * @param {number} time\r\n   * @param {number} parentAlpha\r\n   *\r\n   * @return {void}\r\n   */\r\n  __render(video, time, parentAlpha) {\r\n    if (this.mVisible === false)\r\n      return;\r\n    \r\n    this.onRender(video, time);\r\n\r\n    let child = null;\r\n    for (var i = 0; i < this.mChildren.length; i++) {\r\n      child = this.mChildren[i];\r\n      child.__render(video, time, parentAlpha);\r\n    }\r\n  }\r\n\r\n  refreshVertexData() {\r\n    const vertexData = this.vertexData;\r\n    const transform = this.worldTransformation.value;\r\n    const a = transform[0];\r\n    const b = transform[1];\r\n    const c = transform[2];\r\n    const d = transform[3];\r\n    const tx = transform[4];\r\n    const ty = transform[5];\r\n    const texture = this.mTexture;\r\n    const region = texture.mRegion;\r\n    const w = region.width;\r\n    const h = region.height;\r\n\r\n    if (texture.isTrimmed) {\r\n      const untrimmedRegion = texture.untrimmedRect;\r\n      const left = untrimmedRegion.x;\r\n      const top = untrimmedRegion.y;\r\n      const right = left + w;\r\n      const bottom = top + h;\r\n\r\n      // left top\r\n      vertexData[0] = a * left + c * top + tx;\r\n      vertexData[1] = d * top + b * left + ty;\r\n\r\n      // right top\r\n      vertexData[2] = a * right + c * top + tx;\r\n      vertexData[3] = d * top + b * right + ty;\r\n\r\n      // left bottom\r\n      vertexData[4] = a * left + c * bottom + tx;\r\n      vertexData[5] = d * bottom + b * left + ty;\r\n\r\n      // right bottom\r\n      vertexData[6] = a * right + c * bottom + tx;\r\n      vertexData[7] = d * bottom + b * right + ty;\r\n    } else {\r\n\r\n      // left top\r\n      vertexData[0] = tx;\r\n      vertexData[1] = ty;\r\n\r\n      // right top\r\n      vertexData[2] = a * w + tx;\r\n      vertexData[3] = b * w + ty;\r\n\r\n      // left bottom\r\n      vertexData[4] = c * h + tx;\r\n      vertexData[5] = d * h + ty;\r\n\r\n      // right bottom\r\n      vertexData[6] = a * w + c * h + tx;\r\n      vertexData[7] = d * h + b * w + ty;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Gets/Sets the opacity of the object.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get alpha() {\r\n    return this.mAlpha;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {number} value\r\n   * @return {void}\r\n   */\r\n  set alpha(value) {\r\n    this.mAlpha = MathEx.clamp(value, 0, 1);\r\n  }\r\n\r\n\r\n  /**\r\n   * Gets/Sets visibility of the object.\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  get visible() {\r\n    return this.mVisible;\r\n  }\r\n\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {boolean} value\r\n   * @return {void}\r\n   */\r\n  set visible(value) {\r\n    this.mVisible = value;\r\n  }\r\n}\r\n","/**\r\n * Holds TextField's style details.\r\n *\r\n * @cat display.text\r\n */\r\n\r\nclass TextInfo {\r\n  /**\r\n   * @param  {string=} name Font name\r\n   * @param  {number=} color = Text color as hexadecimal number eg 0xff0000 (total red)\r\n   * @param  {number=} size = Text size\r\n   * @param  {TextInfo.FontStyle=} style = Text style eg italic\r\n   * @param  {TextInfo.FontWeight=} weight = font thick. The value is set from 100 to 900 in increments of 100.\r\n   * @param  {TextInfo.FontAlign=} align = horizontal alignment left | center | right\r\n   * @param  {number=} strokeThickness = thickness of the stroke. 0 means that no stroke\r\n   * @param  {number=} strokeColor = stroke color as hexadecimal number eg 0x00ff00 (total green)\r\n   */\r\n  constructor(name = 'sans-serif', color = 0x000000, size = 14, style = TextInfo.FontStyle.NORMAL, weight = TextInfo.FontWeight.NORMAL, align = TextInfo.FontAlign.LEFT, strokeThickness = 0, strokeColor = 0xffffff) {\r\n\r\n    /** @type {string} */\r\n    this.name = name;\r\n\r\n    /** @type {number} */\r\n    this.size = size;\r\n\r\n    /** @type {number} */\r\n    this.color = color;\r\n\r\n    /** @type {TextInfo.FontStyle} */\r\n    this.style = style;\r\n\r\n    /** @type {TextInfo.FontWeight} */\r\n    this.weight = weight;\r\n\r\n    /** @type {TextInfo.FontAlign} */\r\n    this.align = align;\r\n\r\n    /** @type {number} */\r\n    this.strokeThickness = strokeThickness;\r\n\r\n    /** @type {number} */\r\n    this.strokeColor = strokeColor;\r\n  }\r\n}\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nTextInfo.FontStyle = {\r\n  NORMAL: 'normal',\r\n  ITALIC: 'italic'\r\n};\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nTextInfo.FontWeight = {\r\n  NORMAL: '400',\r\n  BOLD: '700',\r\n  SUPERBOLD: '800'\r\n};\r\n\r\n/**\r\n * @enum {string}\r\n */\r\nTextInfo.FontAlign = {\r\n  LEFT: 'left',\r\n  RIGHT: 'right',\r\n  CENTER: 'center'\r\n};\r\n","/**\r\n * Sprite is used to render Texture onto screen.\r\n *\r\n * @cat display\r\n * @extends DisplayObject\r\n */\r\n\r\nclass Sprite extends DisplayObject {\r\n\r\n  /**\r\n   * constructor - Creates a new Sprite object instance.\r\n   *\r\n   * @param {Texture|string|null} texture The Texture instance or null.\r\n   */\r\n  constructor(texture = null) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Texture|null} */\r\n    this.mTexture = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string|null} */\r\n    this.mTextureName = null;\r\n\r\n    if (texture !== null && texture.constructor === String) {\r\n      this.mTextureName = /** @type {string} */ (texture);\r\n      this.mTexture = AssetManager.default.getTexture(/** @type {string} */ (texture));\r\n    } else {\r\n      this.mTexture = /** @type {Texture} */ (texture);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @override\r\n   * @private\r\n   * @param {VideoNullDriver} video\r\n   * @param {number} time\r\n   * @param {number} parentAlpha\r\n   *\r\n   * @return {void}\r\n   */\r\n  __render(video, time, parentAlpha) {\r\n    if (this.mAlpha <= 0 || this.mVisible === false) return;\r\n\r\n    this.worldAlpha = parentAlpha * this.mAlpha;\r\n\r\n    if (this.mTexture !== null) {\r\n      video.setTransform(this.worldTransformation);\r\n      video.globalAlpha = parentAlpha * this.mAlpha;\r\n      video.globalBlendMode = this.blendMode;\r\n      video.drawImage(this, this.mTexture);\r\n    }\r\n\r\n    super.__render(video, time, this.worldAlpha);\r\n  }\r\n\r\n  /**\r\n   * onGetLocalBounds - Returns a rectangle that completely encloses the object in local coordinate system.\r\n   *\r\n   * @override\r\n   * @protected\r\n   * @param {Rectangle=} outRect Description\r\n   *\r\n   * @return {Rectangle} The new Rectangle or outRect with .\r\n   */\r\n  onGetLocalBounds(outRect = undefined) {\r\n    outRect = outRect || new Rectangle();\r\n\r\n    if (!this.mTexture)\r\n      return outRect;\r\n\r\n    return outRect.set(0, 0, this.mTexture.untrimmedRect.width, this.mTexture.untrimmedRect.height);\r\n  }\r\n\r\n  /**\r\n   * texture - Returns the current Texture on this sprite.\r\n   *\r\n   * @return {Texture|null} The current texture set on this Sprite or null.\r\n   */\r\n  get texture() {\r\n    return this.mTexture;\r\n  }\r\n\r\n  /**\r\n   * texture - Sets the Texture on this sprite.\r\n   *\r\n   * @param {Texture|null} texture Texture to apply on.\r\n   *\r\n   * @return {void}\r\n   */\r\n  set texture(texture) {\r\n    // if (this.mTexture !== null && this.mTexture === texture)\r\n    //   return;\r\n\r\n    if (this.mTexture !== texture)\r\n      this.mTexture = texture;\r\n  }\r\n\r\n  get textureName() {\r\n    return this.mTextureName;\r\n  }\r\n\r\n  /**\r\n   * @editor {TextureEditor}\r\n   */\r\n  set textureName(value) {\r\n    if (this.mTextureName === value)\r\n      return;\r\n\r\n    this.mTextureName = value;\r\n    this.texture = AssetManager.default.getTexture(value);\r\n  }\r\n\r\n  set touchable(value) {\r\n    let c = this.getComponent(InputComponent);\r\n\r\n    if (value === true) {\r\n      if (c === null)\r\n        this.addComponent(new InputComponent());\r\n      else\r\n        c.touchable = true;\r\n    } else {\r\n      if (c !== null)\r\n        this.removeComponent(c);\r\n    }\r\n  }\r\n\r\n  get touchable() {\r\n    let c = this.getComponent(InputComponent);\r\n    return c !== null && c.touchable === true;\r\n  }\r\n}\r\n","/**\r\n * This class is used to create display text.\r\n *\r\n * @cat display.text\r\n * @extends DisplayObject\r\n */\r\n\r\nclass TextField extends DisplayObject {\r\n  /**\r\n   * @param  {string=} text Text to be displayed inside this text field\r\n   * @param  {number=} size text size\r\n   * @param  {string=} name font name\r\n   * @param {TextInfo=} style TextInfo object\r\n   */\r\n  constructor(text = '', size = 14, name = 'sans-serif', style = undefined) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.mText = text;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mNeedInvalidate = true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Rectangle}\r\n     */\r\n    this.mCacheBounds = new Rectangle();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mTextWidth = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mTextHeight = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {TextInfo}\r\n     */\r\n    this.mStyle = style || new TextInfo();\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.mStyle.name = name || style.name;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mStyle.size = size || style.size;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mAutoSize = true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mMultiLine = true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mLineHeight = 1.2;\r\n\r\n    /**\r\n     * @public\r\n     * @type {string[]|string}\r\n     */\r\n    this.lines = [];\r\n\r\n    /**\r\n     * Useful for drivers\r\n     * @public\r\n     * @type {number[]}\r\n     */\r\n    this.lineWidths = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mLetterSpacing = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mFieldWidth = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mFieldHeight = this.mStyle.size * this.mLineHeight;\r\n    \r\n    this.onGetLocalBounds(this.mCacheBounds);\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @override\r\n   * @protected\r\n   * @param {VideoNullDriver} video\r\n   * @param {number} time\r\n   * @param {number} parentAlpha\r\n   *\r\n   * @return {void}\r\n   */\r\n  __render(video, time, parentAlpha) {\r\n    if (this.mAlpha <= 0 || this.mVisible === false) return;\r\n\r\n    this.worldAlpha = parentAlpha * this.mAlpha;\r\n\r\n    if (this.mNeedInvalidate) {\r\n      this.onGetLocalBounds(this.mCacheBounds);\r\n      // this.setTransformDirty();  // no anchor for rebound\r\n    }\r\n\r\n    video.setTransform(this.worldTransformation);\r\n    video.globalAlpha = parentAlpha * this.mAlpha;\r\n    video.globalBlendMode = this.blendMode;\r\n    video.drawText(this, this.mStyle, this.mCacheBounds);\r\n\r\n    this.mNeedInvalidate = false;\r\n    super.__render(video, time, this.worldAlpha);\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @override\r\n   * @ignore\r\n   * @param {Rectangle=} outRect\r\n   *\r\n   * @return {Rectangle}\r\n   */\r\n  onGetLocalBounds(outRect = undefined) {\r\n    outRect = outRect || new Rectangle();\r\n\r\n    if (this.mNeedInvalidate) {\r\n      Black.instance.video.measureText(this, this.mStyle, this.mCacheBounds);\r\n    }\r\n\r\n    return outRect.copyFrom(this.mCacheBounds);\r\n  }\r\n\r\n  /**\r\n   * @param {number} value\r\n   * @ignore\r\n   *\r\n   * @return {void}\r\n   */\r\n  set letterSpacing(value) {\r\n    if (this.mLetterSpacing === value) return;\r\n\r\n    this.mLetterSpacing = value;\r\n    // this.setTransformDirty();  // needs pivot update and there is no anchor to accomplish\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  /**\r\n   * Get/Set letterSpacing value. Default is 0 in pixels.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get letterSpacing() {\r\n    return this.mLetterSpacing;\r\n  }\r\n  \r\n  /**\r\n   * @param {boolean} value\r\n   * @ignore\r\n   *\r\n   * @return {void}\r\n   */\r\n  set multiLine(value) {\r\n    this.mMultiLine = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  /**\r\n   * Get/Set multiLine value switcher.\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  get multiLine() {\r\n    return this.mMultiLine;\r\n  }\r\n\r\n  /**\r\n   * @param {number} value\r\n   * @ignore\r\n   *\r\n   * @return {void}\r\n   */\r\n  set lineHeight(value) {\r\n    this.mLineHeight = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  /**\r\n   * Get/Set lines vertical offset. From top previous to top next line.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get lineHeight() {\r\n    return this.mLineHeight;\r\n  }\r\n\r\n  /**\r\n   * Get/Set text size.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get size() {\r\n    return this.mStyle.size;\r\n  }\r\n\r\n  /**\r\n   * @param {number} value\r\n   * @ignore\r\n   *\r\n   * @return {void}\r\n   */\r\n  set size(value) {\r\n    this.mStyle.size = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  /**\r\n   * Get/Set text font.\r\n   *\r\n   * @return {string}\r\n   */\r\n  get font() {\r\n    return this.mStyle.name;\r\n  }\r\n\r\n  /**\r\n   * @param {string} value\r\n   * @ignore\r\n   *\r\n   * @return {void}\r\n   */\r\n  set font(value) {\r\n    this.mStyle.name = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  /**\r\n   * Specifies text color as hexadecimal number eg 0xff0000 (total red)\r\n   *\r\n   * @return {number}\r\n   */\r\n  get color() {\r\n    return this.mStyle.color;\r\n  }\r\n\r\n  /**\r\n   * @param {number} value\r\n   * @ignore\r\n   *\r\n   * @return {void}\r\n   */\r\n  set color(value) {\r\n    this.mStyle.color = value;\r\n  }\r\n\r\n  /**\r\n   * Get/Set text style.\r\n   *\r\n   * @return {TextInfo.FontStyle}\r\n   */\r\n  get style() {\r\n    return this.mStyle.style;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {TextInfo.FontStyle} value\r\n   * @ignore\r\n   *\r\n   * @return {void}\r\n   */\r\n  set style(value) {\r\n    this.mStyle.style = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  /**\r\n   * Specifies the font thick. The value is set from 100 to 900 in increments of 100.\r\n   *\r\n   * @return {TextInfo.FontWeight}\r\n   */\r\n  get weight() {\r\n    return this.mStyle.weight;\r\n  }\r\n\r\n  /**\r\n   * @param {TextInfo.FontWeight} value\r\n   * @ignore\r\n   *\r\n   * @return {void}\r\n   */\r\n  set weight(value) {\r\n    this.mStyle.weight = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  /**\r\n   * Specifies the horizontal alignment left | center | right\r\n   *\r\n   * @return {TextInfo.FontAlign}\r\n   */\r\n  get align() {\r\n    return this.mStyle.align;\r\n  }\r\n\r\n  /**\r\n   * @param {TextInfo.FontAlign} value\r\n   * @ignore\r\n   *\r\n   * @return {void}\r\n   */\r\n  set align(value) {\r\n    this.mStyle.align = value;\r\n  }\r\n\r\n  /**\r\n   * Specifies stroke color as hexadecimal number eg 0xff0000 (total red)\r\n   * @return {number}\r\n   */\r\n  get strokeColor() {\r\n    return this.mStyle.strokeColor;\r\n  }\r\n\r\n  /**\r\n   * @param {number} value\r\n   * @ignore\r\n   *\r\n   * @return {void}\r\n   */\r\n  set strokeColor(value) {\r\n    this.mStyle.strokeColor = value;\r\n  }\r\n\r\n  /**\r\n   * Specifies the thickness of the stroke. 0 means that no stroke\r\n   * @return {number}\r\n   */\r\n  get strokeThickness() {\r\n    return this.mStyle.strokeThickness;\r\n  }\r\n\r\n  /**\r\n   * @param {number} value\r\n   * @ignore\r\n   *\r\n   * @return {void}\r\n   */\r\n  set strokeThickness(value) {\r\n    if (value === this.mStyle.strokeThickness) return;\r\n    this.mStyle.strokeThickness = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  /**\r\n   * Specifies the width of the text field. If autoSize set as false\r\n   *\r\n   * @return {number}\r\n   */\r\n  get fieldWidth() {\r\n    return this.mFieldWidth;\r\n  }\r\n\r\n  /**\r\n   * @param {number} value\r\n   * @ignore\r\n   *\r\n   * @return {void}\r\n   */\r\n  set fieldWidth(value) {\r\n    if (value === this.mFieldWidth) return;\r\n    this.mFieldWidth = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  /** Specifies the height of the text field, if autoSize set as false\r\n   *\r\n   * @return {number}\r\n   */\r\n  get fieldHeight() {\r\n    return this.mFieldHeight;\r\n  }\r\n\r\n\r\n  /**\r\n   * @param {number} value\r\n   * @ignore\r\n   *\r\n   * @return {void}\r\n   */\r\n  set fieldHeight(value) {\r\n    if (value === this.mFieldHeight) return;\r\n    this.mFieldHeight = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  /**Text to be displayed inside this text field.\r\n\r\n   * @return {string}\r\n   */\r\n  get text() {\r\n    return this.mText;\r\n  }\r\n\r\n  /**\r\n   * @param {string} value\r\n   * @ignore\r\n   *\r\n   * @return {void}\r\n   */\r\n  set text(value) {\r\n    if (this.mText === value)\r\n      return;\r\n\r\n    this.mText = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  /**\r\n   * Determines whether the size of the field will adjust to the size of the text. Note: if this set as true, you need to specify fieldHeight and fieldWidth manually\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  get autoSize() {\r\n    return this.mAutoSize;\r\n  }\r\n\r\n  /**\r\n   * @param {boolean} value\r\n   * @ignore\r\n   *\r\n   * @return {void}\r\n   */\r\n  set autoSize(value) {\r\n    if (this.mAutoSize === value) return;\r\n    this.mAutoSize = value;\r\n    this.mNeedInvalidate = true;\r\n  }\r\n\r\n  // alignPivot(ax, ay, includeChildren = false) {\r\n  //   this.mNeedInvalidate = true;\r\n  //   super.alignPivot(ax, ay, includeChildren);\r\n  // }\r\n}\r\n","/**\r\n * Contains system functions.\r\n * @static\r\n * @cat system\r\n */\r\n\r\nclass Device {\r\n  /**\r\n   * Static class.\r\n   */\r\n  constructor() {\r\n    /**\r\n     * @private\r\n     * @type {Device}\r\n     */\r\n    this.constructor.mInstance = this;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mPixelRatio = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    Device.mInstance.mPixelRatio = Device.getDevicePixelRatio();\r\n  }\r\n\r\n  /**\r\n   * Returns current OS name.\r\n   * @return {string}\r\n   */\r\n  static get os() {\r\n    var userAgent = navigator.userAgent || navigator.vendor || window.opera;\r\n\r\n    if (/windows phone/i.test(userAgent))\r\n      return 'Windows Phone';\r\n\r\n    if (/android/i.test(userAgent))\r\n      return 'Android';\r\n\r\n    if (/iPad|iPhone|iPod/.test(userAgent)/* && !window.MSStream*/)\r\n      return 'iOS';\r\n\r\n    return 'unknown';\r\n  }\r\n\r\n  /**\r\n   * Returns True if touch screen is present.\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  static get isTouch() {\r\n    let hasEvent = 'ontouchstart' in window;\r\n    if (hasEvent)\r\n      return true;\r\n\r\n    if (navigator.maxTouchPoints > 0)\r\n      return true;\r\n\r\n    return false;\r\n  }\r\n\r\n  /**\r\n   * Returns True if engine is running on mobile device.\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  static get isMobile() {\r\n    return /Mobi/.test(navigator.userAgent);\r\n  }\r\n\r\n  /**\r\n   * Returns screen pixel ratio.\r\n   *\r\n   * @return {number}\r\n   */\r\n  static get pixelRatio() {\r\n    return Device.mInstance.mPixelRatio;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * @suppress {missingProperties}\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static getDevicePixelRatio() {\r\n    if (window.screen.systemXDPI !== undefined && window.screen.logicalXDPI !== undefined && window.screen.systemXDPI > window.screen.logicalXDPI)\r\n      return window.screen.systemXDPI / window.screen.logicalXDPI;\r\n    else if (window.devicePixelRatio !== undefined)\r\n      return window.devicePixelRatio;\r\n\r\n    return 1;\r\n  }\r\n\r\n}\r\n\r\n/**\r\n * @private\r\n * @type {Device}\r\n * @nocollapse\r\n */\r\nDevice.mInstance = null;\r\n","/**\r\n * Base class for distribution objects.\r\n *\r\n * @cat scatters\r\n */\r\n\r\nclass Scatter {\r\n  /**\r\n   * Creates new Scatter instance.\r\n   */\r\n  constructor() {}\r\n\r\n  /**\r\n   * Returns random value.\r\n   * @return {*} Any object.\r\n   */\r\n  getValue() {}\r\n\r\n  /**\r\n   * Returns value at given position.\r\n   *\r\n   * @param {number} t Position to get value at.\r\n   *\r\n   * @return {*} Any object.\r\n   */\r\n  getValueAt(t) {}\r\n}\r\n","/**\r\n * A number scatter for defining a range in 1D space.\r\n *\r\n * @cat scatters\r\n * @extends Scatter\r\n */\r\n\r\nclass FloatScatter extends Scatter {\r\n  /**\r\n   * Creates new FloatScatter instance.\r\n   *\r\n   * @param {number}      min             The min value along x-axis.\r\n   * @param {number}      [max=undefined] The max value along x-axis.\r\n   * @param {function(number):number} [ease=null]     Easing function.\r\n   */\r\n  constructor(min, max = undefined, ease = null) {\r\n    super();\r\n\r\n    // NOTE: dont make us @private @member\r\n\r\n    /** @type {number} */\r\n    this.min = min;\r\n\r\n    /** @type {number} */\r\n    this.max = max == null ? min : max;\r\n\r\n    /** @type {function(number):number} */\r\n    this.ease = ease;\r\n  }\r\n\r\n  /**\r\n   * Returns random number withing defined range.\r\n   *\r\n   * @override\r\n   *\r\n   * @return {number} Random number.\r\n   */\r\n  getValue() {\r\n    return Math.random() * (this.max - this.min) + this.min;\r\n  }\r\n\r\n  /**\r\n   * Returns value at given position within defined range.\r\n   *\r\n   * @override\r\n   * @param {number} t The position.\r\n   *\r\n   * @return {number} Number at given position.\r\n   */\r\n  getValueAt(t) {\r\n    if (this.ease !== null)\r\n      t = this.ease(t);\r\n\r\n    return this.min + t * (this.max - this.min);\r\n  }\r\n}\r\n","/**\r\n * A number scatter for defining a range in 2D space.\r\n *\r\n * @cat scatters\r\n * @extends Scatter\r\n */\r\n\r\nclass VectorScatter extends Scatter {\r\n  /**\r\n   * Creates new VectorScatter instance.\r\n   *\r\n   * @param {number} minX The min value along x-axis.\r\n   * @param {number} minY The min value along y-axis.\r\n   * @param {number} maxX The max value along x-axis.\r\n   * @param {number} maxY The max value along y-axis.\r\n   */\r\n  constructor(minX, minY, maxX, maxY) {\r\n    super();\r\n\r\n    // NOTE: dont make us @private @member\r\n    this.minX = minX;\r\n    this.minY = minY;\r\n    this.maxX = maxX;\r\n    this.maxY = maxY;\r\n  }\r\n\r\n  /**\r\n   * Returns a random Vector object at given position within a range specified\r\n   * in the constructor.\r\n   * @override\r\n   *\r\n   * @return {Vector} Vector object with random values withing defined range.\r\n   */\r\n  getValue() {\r\n    let outVector = new Vector();\r\n    outVector.x = Math.random() * (this.maxX - this.minX) + this.minX;\r\n    outVector.y = Math.random() * (this.maxY - this.minY) + this.minY;\r\n    return outVector;\r\n  }\r\n\r\n  /**\r\n   * Returns a Vector object at given position.\r\n   * @override\r\n   *\r\n   * @param {number} t The position.\r\n   *\r\n   * @return {Vector} Vector object representing values in a range at\r\n   * given position.\r\n   */\r\n  getValueAt(t) {\r\n    let outVector = new Vector();\r\n    outVector.x = this.minX + t * (this.maxX - this.minX);\r\n    outVector.y = this.minY + t * (this.maxY - this.minY);\r\n    return outVector;\r\n  }\r\n}\r\n","/**\r\n * A number scatter for defining a range in 2D space on a curve.\r\n *\r\n * @cat scatters\r\n * @extends Scatter\r\n */\r\n\r\nclass FloatCurveScatter extends Scatter {\r\n  /**\r\n   * Creates new FloatCurveScatter instance.\r\n   * @param {...number} points Coordinates: startX, startY, cpStartX, cpStartY, cpEndX, cpEndY, endX/start2X, endY/start2Y, cp2StartX, cp2StartX... 8 or 14 or 20...\r\n   */\r\n  constructor(...points) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Curve}\r\n     */\r\n    this.mCurve = new Curve();\r\n    this.mCurve.baked = true;\r\n    this.mCurve.set(...points);\r\n\r\n    /**\r\n     * @private\r\n     * @type {Vector}\r\n     */\r\n    this.mCache = new Vector();\r\n  }\r\n\r\n  /**\r\n   * Returns a value on a curve at random position.\r\n   * @override\r\n   *\r\n   * @return {number} A random number value on a defined curve.\r\n   */\r\n  getValue() {\r\n    let t = Math.random();\r\n    this.mCurve.interpolate(t, this.mCache);\r\n    return this.mCache.y;\r\n  }\r\n\r\n  /**\r\n   * Returns a number at given position on a curve.\r\n   * @override\r\n   *\r\n   * @param {number} t The position.\r\n   *\r\n   * @return {number} A value on a curve at given position.\r\n   */\r\n  getValueAt(t) {\r\n    this.mCurve.interpolate(t, this.mCache);\r\n    return this.mCache.y;\r\n  }\r\n}\r\n","/**\r\n * A base class for particle system actions. Every frame each action executed over each particle.\r\n *\r\n * @cat particles.actions\r\n * @abstract\r\n * @class\r\n */\r\n\r\nclass Action {\r\n  /**\r\n   * Creates new Action instance.\r\n   */\r\n  constructor(){\r\n  }\r\n\r\n  /**\r\n   * Called for every particle before any update method called.\r\n   *\r\n   * @protected\r\n   * @param {number} dt Amount of seconds since the last update.\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  preUpdate(dt) {}\r\n\r\n\r\n  /**\r\n   * Called for every particle.\r\n   *\r\n   * @param {Emitter} emmiter   The owner of the particle.\r\n   * @param {Particle} particle The particle to execute update on.\r\n   * @param {number} dt         Amount of seconds since the last update.\r\n   *\r\n   * @return {void}\r\n   */\r\n  update(emmiter, particle, dt) {}\r\n\r\n\r\n  /**\r\n   * Called after all updates have been executed.\r\n   *\r\n   * @param {number} dt Amount of seconds since the last update.\r\n   *\r\n   * @return {void}\r\n   */\r\n  postUpdate(dt) {}\r\n}\r\n","/**\r\n * Adds acceleration to particles along given direction.\r\n *\r\n * @cat particles.actions\r\n * @extends Action\r\n * @class\r\n */\r\n\r\nclass Acceleration extends Action {\r\n  /**\r\n   * Creates new Acceleration instance.\r\n   *\r\n   * @param {VectorScatter} vectorScatter An VectorScatter which defines acceleration direction.\r\n   */\r\n  constructor(vectorScatter) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {VectorScatter}\r\n     */\r\n    this.mScatter = vectorScatter;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   *\r\n   * @param {Emitter} emmiter\r\n   * @param {Particle} particle\r\n   * @param {number} dt\r\n   *\r\n   * @return {void}\r\n   */\r\n  update(emmiter, particle, dt) {\r\n    let v = this.mScatter.getValue();\r\n\r\n    particle.ax += v.x;\r\n    particle.ay += v.y;\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns VectorScatter object that defines acceleration direction.\r\n   * @member {VectorScatter}\r\n   * @return {VectorScatter}\r\n   */\r\n  get scatter() {\r\n    return this.mScatter;\r\n  }\r\n}\r\n","/**\r\n * Sets particle's alpha value according to its energy value.\r\n *\r\n * @cat particles.actions\r\n * @extends Action\r\n * @class\r\n */\r\n\r\nclass AlphaOverLife extends Action {\r\n  /**\r\n   * Creates new AlphaOverLife instance.\r\n   *\r\n   * @param {FloatScatter} floatScatter A starting and ending values of alpha property.\r\n   */\r\n  constructor(floatScatter) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {FloatScatter}\r\n     */\r\n    this.mScatter = floatScatter;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   *\r\n   * @param {Emitter} emmiter\r\n   * @param {Particle} particle\r\n   * @param {number} dt\r\n   *\r\n   * @return {void}\r\n   */\r\n  update(emmiter, particle, dt) {\r\n    particle.alpha = this.mScatter.getValueAt(particle.energy);\r\n  }\r\n\r\n  /**\r\n   * Returns FloatScatter object that defines alpha value over particle life.\r\n   * @member {FloatScatter}\r\n   * @return {FloatScatter}\r\n   */\r\n  get scatter() {\r\n    return this.mScatter;\r\n  }\r\n}\r\n","/**\r\n * Sets particle's scale value according to its energy value.\r\n *\r\n * @cat particles.actions\r\n * @extends Action\r\n * @class\r\n */\r\n\r\nclass ScaleOverLife extends Action {\r\n  constructor(floatScatter) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {FloatScatter}\r\n     */\r\n    this.mScatter = floatScatter;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * \r\n   * @param {Emitter} emmiter\r\n   * @param {Particle} particle\r\n   * @param {number} dt\r\n   *\r\n   * @return {void}\r\n   */\r\n  update(emmiter, particle, dt) {\r\n    particle.scale = this.mScatter.getValueAt(particle.energy);\r\n  }\r\n\r\n  /**\r\n   * Returns FloatScatter object that defines scale value over particle life.\r\n   * @member {FloatScatter}\r\n   * @return {FloatScatter}\r\n   */\r\n  get scatter() {\r\n    return this.mScatter;\r\n  }\r\n}\r\n","/**\r\n * Sets particle's rotation value according to its energy value.\r\n *\r\n * @cat particles.actions\r\n * @extends Action\r\n * @class\r\n */\r\n\r\nclass RotationOverLife extends Action {\r\n  constructor(floatScatter) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {FloatScatter}\r\n     */\r\n    this.mScatter = floatScatter;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   *\r\n   * @param {Emitter} emmiter\r\n   * @param {Particle} particle\r\n   * @param {number} dt\r\n   *\r\n   * @return {void}\r\n   */\r\n  update(emmiter, particle, dt) {\r\n    particle.r = this.mScatter.getValueAt(particle.energy);\r\n  }\r\n\r\n  /**\r\n   * Returns FloatScatter object that defines rotation value over particle life.\r\n   * @member {FloatScatter}\r\n   * @return {FloatScatter}\r\n   */\r\n  get scatter() {\r\n    return this.mScatter;\r\n  }\r\n}\r\n","/**\r\n * Sets particle's texture according to its energy value.\r\n *\r\n * @cat particles.actions\r\n * @extends Action\r\n * @class\r\n */\r\n\r\nclass TextureOverLife extends Action {\r\n  constructor(floatScatter) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {FloatScatter}\r\n     */\r\n    this.mScatter = floatScatter;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   *\r\n   * @param {Emitter} emmiter\r\n   * @param {Particle} particle\r\n   * @param {number} dt\r\n   *\r\n   * @return {void}\r\n   */\r\n  update(emmiter, particle, dt) {\r\n    particle.textureIndex = ~~this.mScatter.getValueAt(particle.energy);\r\n  }\r\n\r\n  /**\r\n   * Returns FloatScatter object that defines texture value over particle life.\r\n   * @member {FloatScatter}\r\n   * @return {FloatScatter}\r\n   */\r\n  get scatter() {\r\n    return this.mScatter;\r\n  }\r\n}\r\n","/**\r\n * Base class for particle's initializators. Each initializer updates particle data once at start, eg when particle added to scene.\r\n *\r\n * @cat particles.initializers\r\n */\r\n\r\nclass Initializer {\r\n  /**\r\n   * Creates new Initializer instance.\r\n   */\r\n  constructor() {\r\n  }\r\n\r\n  /**\r\n   * This method is called on every new particle and sets its starting values.\r\n   * Override this method when creating custom initializers.\r\n   *\r\n   * @param {Particle} particle\r\n   *\r\n   * @return {void}\r\n   */\r\n  initialize(particle) {}\r\n}\r\n","/**\r\n * Sets starting particle's life.\r\n *\r\n * @cat particles.initializers\r\n * @extends Initializer\r\n */\r\n\r\nclass Life extends Initializer {\r\n  /**\r\n   * Creates new LIfe instance.\r\n   *\r\n   * @param {FloatScatter} floatScatter The min/max range.\r\n   */\r\n  constructor(floatScatter) {\r\n    super();\r\n\r\n    /**\r\n     * The min-max range.\r\n     * @type {FloatScatter}\r\n     */\r\n    this.scatter = floatScatter;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @param {Particle} particle\r\n   *\r\n   * @return {void}\r\n   */\r\n  initialize(particle) {\r\n    particle.life = this.scatter.getValue();\r\n  }\r\n}\r\n","/**\r\n * Sets starting particle's mass.\r\n *\r\n * @cat particles.initializers\r\n * @extends Initializer\r\n * @class\r\n */\r\n\r\nclass Mass extends Initializer {\r\n  /**\r\n   * Creates new Mass instance.\r\n   *\r\n   * @param {number} mass The mass.\r\n   */\r\n  constructor(mass) {\r\n    super();\r\n\r\n    /**\r\n     * The mass value.\r\n     * @type {number}\r\n     */\r\n    this.mass = mass;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @param {Particle} particle\r\n   *\r\n   * @return {void}\r\n   */\r\n  initialize(particle) {\r\n    particle.mass = this.mass;\r\n  }\r\n}\r\n","/**\r\n * Sets particle's starting scale.\r\n *\r\n * @cat particles.initializers\r\n * @extends Initializer\r\n * @class\r\n */\r\n\r\nclass Scale extends Initializer {\r\n  /**\r\n   * Creates new Scale instance.\r\n   *\r\n   * @param {FloatScatter} floatScatter The min-max range for starting scale.\r\n   */\r\n  constructor(floatScatter) {\r\n    super();\r\n\r\n    /**\r\n     * The min-max range for starting scale.\r\n     * @type {FloatScatter}\r\n     */\r\n    this.scatter = floatScatter;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @param {Particle} particle\r\n   *\r\n   * @return {void}\r\n   */\r\n  initialize(particle) {\r\n    particle.scale = this.scatter.getValue();\r\n  }\r\n}\r\n","/**\r\n * Sets particle's starting velocity.\r\n *\r\n * @cat particles.initializers\r\n * @extends Initializer\r\n * @class\r\n */\r\n\r\nclass Velocity extends Initializer {\r\n  /**\r\n   * Creates new Velocity instance.\r\n   *\r\n   * @param {VectorScatter} vectorScatter The min-max range for starting velocity.\r\n   */\r\n  constructor(vectorScatter) {\r\n    super();\r\n\r\n    /**\r\n     * The min-max range for starting velocity.\r\n     * @type {VectorScatter}\r\n     */\r\n    this.scatter = vectorScatter;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @param {Particle} particle\r\n   *\r\n   * @return {void}\r\n   */\r\n  initialize(particle) {\r\n    // TODO: optimize!\r\n    let v = this.scatter.getValue();\r\n    particle.vx = v.x;\r\n    particle.vy = v.y;\r\n  }\r\n}\r\n","/**\r\n * Sets starting particle's position.\r\n *\r\n * @cat particles.initializers\r\n * @extends Initializer\r\n * @class\r\n */\r\n\r\nclass Position extends Initializer {\r\n  /**\r\n   * Creates new Position instance.\r\n   *\r\n   * @param {VectorScatter} vectorScatter The min/max range.\r\n   */\r\n  constructor(vectorScatter) {\r\n    super();\r\n\r\n    /**\r\n     * The min-max range for position distribution.\r\n     * @type {VectorScatter}\r\n     */\r\n    this.scatter = vectorScatter;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @param {Particle} particle\r\n   *\r\n   * @return {void}\r\n   */\r\n  initialize(particle) {\r\n    // TODO: optimize!\r\n    let v = this.scatter.getValue();\r\n    particle.x = v.x;\r\n    particle.y = v.y;\r\n  }\r\n}\r\n","/**\r\n * Sets particle's default rotation.\r\n *\r\n * @cat particles.initializers\r\n * @extends Initializer\r\n */\r\n\r\nclass Rotation extends Initializer {\r\n  /**\r\n   * Creates new Rotation instance.\r\n   *\r\n   * @param {FloatScatter} floatScatter The min-max range for starting rotation.\r\n   */\r\n  constructor(floatScatter) {\r\n    super();\r\n\r\n    /**\r\n     * The min-max range for starting rotation\r\n     * @type {FloatScatter}\r\n     */\r\n    this.scatter = floatScatter;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @param {Particle} particle\r\n   *\r\n   * @return {void}\r\n   */\r\n  initialize(particle) {\r\n    particle.r = this.scatter.getValue();\r\n  }\r\n}\r\n","/**\r\n * Sets particle's texture.\r\n *\r\n * @cat particles.initializers\r\n * @extends Initializer\r\n * @class\r\n */\r\n\r\nclass RandomTexture extends Initializer {\r\n  /**\r\n   * Creates new RandomTexture instance.\r\n   *\r\n   * @param {FloatScatter} floatScatter\r\n   */\r\n  constructor(floatScatter) {\r\n    super();\r\n\r\n    /**\r\n     * The float scatter defines the index of the texture. All values will be\r\n     * rounded.\r\n     *\r\n     * @see {Particle.textureIndex}\r\n     * @type {FloatScatter}\r\n     */\r\n    this.scatter = floatScatter;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * @param {Particle} particle\r\n   *\r\n   * @return {void}\r\n   */\r\n  initialize(particle) {\r\n    particle.textureIndex = ~~this.scatter.getValue();\r\n  }\r\n}\r\n","/**\r\n * @enum {number}\r\n */\r\nvar EmitterState = {\r\n  PENDING: 0,\r\n  EMITTING: 1,\r\n  FINISHED: 2\r\n};\r\n","/**\r\n * The particle!\r\n *\r\n * @cat particles\r\n * @class\r\n */\r\n\r\nclass Particle {\r\n  constructor() {\r\n    this.reset();\r\n  }\r\n\r\n  /**\r\n   * Resets particle to default state.\r\n   *\r\n   * @returns {void}\r\n   */\r\n  reset() {\r\n    /**\r\n     * The index of a texture.\r\n     * @type {number}\r\n     */\r\n    this.textureIndex = 0;\r\n\r\n    /**\r\n     * The x/y scale of this particle.\r\n     * @type {number}\r\n     */\r\n    this.scale = 1;\r\n\r\n    /**\r\n     * Alpha value.\r\n     * @type {number}\r\n     */\r\n    this.alpha = 1;\r\n\r\n    /**\r\n     * The life of this particle.\r\n     * @type {number}\r\n     */\r\n    this.life = 1;\r\n\r\n    /**\r\n     * The age of this particle.\r\n     * @type {number}\r\n     */\r\n    this.age = 0;\r\n\r\n    /**\r\n     * Relation of life to age.\r\n     * @type {number}\r\n     */\r\n    this.energy = this.age / this.life;\r\n\r\n    /**\r\n     * The mass.\r\n     * @type {number}\r\n     */\r\n    this.mass = 0;\r\n\r\n    /**\r\n     * X-component.\r\n     * @type {number}\r\n     */\r\n    this.x = 0;\r\n\r\n    /**\r\n     * Y-component.\r\n     * @type {number}\r\n     */\r\n    this.y = 0;\r\n\r\n    /**\r\n     * Rotation of this particle.\r\n     * @type {number}\r\n     */\r\n    this.r = 0\r\n\r\n    /**\r\n     * Velocity by x.\r\n     * @type {number}\r\n     */\r\n    this.vx = 0;\r\n\r\n    /**\r\n     * Velocity by y.\r\n     * @type {number}\r\n     */\r\n    this.vy = 0;\r\n\r\n    /**\r\n     * Particle x-acceleration.\r\n     * @type {number}\r\n     */\r\n    this.ax = 0;\r\n\r\n    /**\r\n     * Particle y-acceleration.\r\n     * @type {number}\r\n     */\r\n    this.ay = 0;\r\n    \r\n    this.pluginName = WebGLParticlesPlugin.name;\r\n  }\r\n\r\n  /**\r\n   * Internal update method.\r\n   *\r\n   * @param {number} dt Time since last update.\r\n   *\r\n   * @return {void}\r\n   */\r\n  update(dt) {\r\n    if (this.life <= 0) {\r\n      this.life = 0;\r\n      return;\r\n    }\r\n\r\n    this.x += this.vx * dt;\r\n    this.y += this.vy * dt;\r\n\r\n    if (this.mass > 0) {\r\n      this.ax *= 1 / this.mass;\r\n      this.ay *= 1 / this.mass;\r\n    }\r\n\r\n    this.vx += this.ax * dt;\r\n    this.vy += this.ay * dt;\r\n\r\n    this.ax = 0;\r\n    this.ay = 0;\r\n\r\n    this.life -= dt;\r\n    this.age += dt;\r\n\r\n    this.energy = this.age / (this.age + this.life);\r\n  }\r\n}\r\n","/**\r\n * Particle emitter.\r\n *\r\n * @cat particles\r\n * @extends DisplayObject\r\n * @class\r\n */\r\n\r\nclass Emitter extends DisplayObject {\r\n  /**\r\n   * Creates new Emitter instance.\r\n   */\r\n  constructor() {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Texture>}\r\n     */\r\n    this.mTextures = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Particle>}\r\n     */\r\n    this.mParticles = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Particle>}\r\n     */\r\n    this.mRecycled = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Initializer>}\r\n     */\r\n    this.mInitializers = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Action>}\r\n     */\r\n    this.mActions = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {GameObject}\r\n     */\r\n    this.mSpace = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mIsLocal = true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mMaxParticles = 10000;\r\n\r\n    /**\r\n     * @private\r\n     * @type {FloatScatter}\r\n     */\r\n    this.mEmitCount = new FloatScatter(10);\r\n\r\n    /**\r\n     * @private\r\n     * @type {FloatScatter}\r\n     */\r\n    this.mEmitNumRepeats = new FloatScatter(Infinity);\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mEmitNumRepeatsLeft = this.mEmitNumRepeats.getValue();\r\n\r\n    /**\r\n     * @private\r\n     * @type {FloatScatter}\r\n     */\r\n    this.mEmitDuration = new FloatScatter(1);\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mEmitDurationLeft = this.mEmitDuration.getValue();\r\n\r\n    /**\r\n     * @private\r\n     * @type {FloatScatter}\r\n     */\r\n    this.mEmitInterval = new FloatScatter(0.1);\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mEmitIntervalLeft = this.mEmitInterval.getValue();\r\n\r\n    /**\r\n     * @private\r\n     * @type {FloatScatter}\r\n     */\r\n    this.mEmitDelay = new FloatScatter(1);\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mEmitDelayLeft = this.mEmitDelay.getValue();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mNextUpdateAt = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {EmitterState}\r\n     */\r\n    this.mState = EmitterState.PENDING;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Matrix}\r\n     */\r\n    this.__tmpLocal = new Matrix();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Matrix}\r\n     */\r\n    this.__tmpWorld = new Matrix();\r\n\r\n    /**\r\n     * @private\r\n     * @type {EmitterSortOrder}\r\n     */\r\n    this.__sortOrder = EmitterSortOrder.FRONT_TO_BACK;\r\n\r\n\r\n    // /** @type {function(a:Particle, b:Particle):number} */\r\n    // this.mComparer = null;\r\n  }\r\n\r\n  resetState() {\r\n    this.mState = EmitterState.PENDING;\r\n  }\r\n\r\n  /**\r\n   * updateNextTick - Updates delay, duration, interval. Use this function each time you change one of those values.\r\n   *\r\n   * @param {number} [dt=0]\r\n   *\r\n   * @return {void}\r\n   */\r\n  updateNextTick(dt = 0) {\r\n    let t = Black.instance.uptime;\r\n    let firstEmit = false;\r\n\r\n    if (this.mState === EmitterState.PENDING) {\r\n      this.mNextUpdateAt = t + this.mEmitDelayLeft;\r\n      this.mEmitDelayLeft -= dt;\r\n\r\n      if (this.mEmitDelayLeft <= 0) {\r\n        this.mEmitDelayLeft = this.mEmitDelay.getValue();\r\n        this.mState = EmitterState.EMITTING;\r\n        firstEmit = true;\r\n      }\r\n    }\r\n\r\n    if (this.mState === EmitterState.EMITTING) {\r\n      if (this.mEmitDurationLeft <= 0) {\r\n        this.mEmitDurationLeft = this.mEmitDuration.getValue();\r\n\r\n        this.mEmitNumRepeatsLeft--;\r\n\r\n        if (this.mEmitNumRepeatsLeft <= 0) {\r\n          this.mState = EmitterState.FINISHED;\r\n\r\n          this.post('complete');\r\n          return;\r\n        } else {\r\n          this.mState = EmitterState.PENDING;\r\n          return;\r\n        }\r\n      } else {\r\n        // we are getting value here each update to make sure we are up to date!\r\n        if (firstEmit) {\r\n          // for a first emit we do not want to add an extra delay. emit now!\r\n          this.mNextUpdateAt = t\r\n          this.mEmitIntervalLeft = this.mEmitInterval.getValue();\r\n        }\r\n        else {\r\n          this.mEmitIntervalLeft -= dt;\r\n          this.mNextUpdateAt = t + this.mEmitIntervalLeft;\r\n          //console.log(this.mEmitIntervalLeft);\r\n\r\n          // reset interval\r\n          if (this.mEmitIntervalLeft <= 0)\r\n            this.mEmitIntervalLeft = this.mEmitInterval.getValue();\r\n        }\r\n      }\r\n\r\n      this.mEmitDurationLeft -= dt;\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * addInitializer - Adds Initializer to the end of the list.\r\n   *\r\n   * @param {Initializer} initializer\r\n   *\r\n   * @return {Initializer}\r\n   */\r\n  addInitializer(initializer) {\r\n    this.mInitializers.push(initializer);\r\n    return initializer;\r\n  }\r\n\r\n\r\n  /**\r\n   * addAction - Adds action to the end of the list.\r\n   *\r\n   * @param {Action} action\r\n   *\r\n   * @return {Action}\r\n   */\r\n  addAction(action) {\r\n    this.mActions.push(action);\r\n    return action;\r\n  }\r\n\r\n  __render(video, time, parentAlpha) {\r\n\r\n    // set blend mode\r\n    video.globalBlendMode = this.blendMode;\r\n    let emitterWorldAlpha = parentAlpha * this.alpha;\r\n\r\n    // tmp matrices\r\n    let localTransform = this.__tmpLocal;\r\n    let worldTransform = this.__tmpWorld;\r\n    localTransform.identity();\r\n\r\n    let texture = null;\r\n\r\n    if (this.mTextures.length > 0) {\r\n      let plength = this.mParticles.length;\r\n\r\n      if (this.__sortOrder == EmitterSortOrder.FRONT_TO_BACK) {\r\n        for (let i = 0; i < plength; i++)\r\n          this.__renderParticle(this.mParticles[i], video, parentAlpha, localTransform, worldTransform);\r\n      }\r\n      else {\r\n        for (let i = plength - 1; i > 0; i--)\r\n          this.__renderParticle(this.mParticles[i], video, parentAlpha, localTransform, worldTransform);\r\n      }\r\n\r\n    }\r\n\r\n    super.__render(video, time, parentAlpha);\r\n  }\r\n\r\n  __renderParticle(particle, video, parentAlpha, localTransform, worldTransform) {\r\n    let texture = this.mTextures[particle.textureIndex];\r\n\r\n    let tw = texture.width * 0.5;\r\n    let th = texture.height * 0.5;\r\n\r\n    if (particle.r === 0) {\r\n      let tx = particle.x - tw * particle.scale;\r\n      let ty = particle.y - th * particle.scale;\r\n      localTransform.set(particle.scale, 0, 0, particle.scale, tx, ty);\r\n    } else {\r\n      let cos = Math.cos(particle.r);\r\n      let sin = Math.sin(particle.r);\r\n      let a = particle.scale * cos;\r\n      let b = particle.scale * sin;\r\n      let c = particle.scale * -sin;\r\n      let d = particle.scale * cos;\r\n\r\n      let tx = particle.x - tw * a - th * c;\r\n      let ty = particle.y - tw * b - th * d;\r\n      localTransform.set(a, b, c, d, tx, ty);\r\n    }\r\n\r\n    if (this.mIsLocal === true) {\r\n      worldTransform.identity();\r\n      worldTransform.copyFrom(localTransform);\r\n      worldTransform.prepend(this.worldTransformation);\r\n    } else {\r\n      this.mSpace.worldTransformation.copyTo(worldTransform);\r\n      worldTransform.append(localTransform);\r\n    }\r\n\r\n    particle.worldAlpha = parentAlpha * particle.alpha;\r\n\r\n    video.setTransform(worldTransform);\r\n    video.globalAlpha = particle.worldAlpha;\r\n\r\n    video.drawImage(particle, texture);\r\n  }\r\n\r\n  onUpdate(dt) {\r\n    // rate logic\r\n    this.updateNextTick(dt);\r\n\r\n    if (Black.instance.uptime >= this.mNextUpdateAt && this.mState === EmitterState.EMITTING)\r\n      this.__create(this.mEmitCount.getValue());\r\n\r\n    // main update login\r\n    let alength = this.mActions.length;\r\n    let plength = this.mParticles.length;\r\n\r\n    for (let i = 0; i < alength; i++)\r\n      this.mActions[i].preUpdate(dt);\r\n\r\n    let particle;\r\n\r\n    let i = this.mParticles.length;\r\n    while (i--) {\r\n      particle = this.mParticles[i];\r\n\r\n      for (let k = 0; k < alength; k++)\r\n        this.mActions[k].update(this, particle, dt);\r\n\r\n      particle.update(dt);\r\n\r\n      if (particle.life === 0) {\r\n        this.mRecycled.push(particle);\r\n        this.mParticles.splice(i, 1);\r\n      }\r\n    }\r\n\r\n    for (let j = 0; j < alength; j++)\r\n      this.mActions[j].postUpdate(dt);\r\n  }\r\n\r\n  __create(amount) {\r\n    let matrix = this.worldTransformation.clone();\r\n    let minv = null;\r\n\r\n    if (this.mIsLocal === false) {\r\n      minv = this.mSpace.worldTransformationInversed.clone();\r\n      matrix.prepend(minv);\r\n    }\r\n\r\n    for (let i = 0; i < amount; i++) {\r\n      let p = null;\r\n\r\n      if (this.mRecycled.length > 0) {\r\n        p = this.mRecycled.pop();\r\n      } else {\r\n        if (this.mParticles.length >= this.mMaxParticles)\r\n          return;\r\n\r\n        p = new Particle();\r\n      }\r\n\r\n      p.reset();\r\n\r\n      for (let k = 0; k < this.mInitializers.length; k++) {\r\n        let initer = this.mInitializers[k];\r\n        initer.initialize(p);\r\n      }\r\n\r\n      if (this.mIsLocal === false) {\r\n        matrix.transformDirectionXY(p.ax, p.ay, Vector.__cache);\r\n        p.ax = Vector.__cache.x;\r\n        p.ay = Vector.__cache.y;\r\n\r\n        matrix.transformDirectionXY(p.vx, p.vy, Vector.__cache);\r\n        p.vx = Vector.__cache.x;\r\n        p.vy = Vector.__cache.y;\r\n\r\n        matrix.transformXY(p.x, p.y, Vector.__cache);\r\n        p.x = Vector.__cache.x;\r\n        p.y = Vector.__cache.y;\r\n      }\r\n\r\n      this.mParticles.push(p);\r\n    }\r\n  }\r\n\r\n\r\n  /**\r\n   * maxParticles\r\n   *\r\n   * @return {number}\r\n   */\r\n  get maxParticles() {\r\n    return this.mMaxParticles;\r\n  }\r\n\r\n\r\n  /**\r\n   * maxParticles\r\n   *\r\n   * @param {number} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set maxParticles(value) {\r\n    if (value < 0)\r\n      throw new Error('Bad argument error.');\r\n\r\n    this.mMaxParticles = value;\r\n  }\r\n\r\n\r\n  /**\r\n   * emitCount\r\n   *\r\n   * @return {FloatScatter}\r\n   */\r\n  get emitCount() {\r\n    return this.mEmitCount;\r\n  }\r\n\r\n\r\n  /**\r\n   * emitCount\r\n   *\r\n   * @param {FloatScatter} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set emitCount(value) {\r\n    this.mEmitCount = value;\r\n  }\r\n\r\n\r\n  /**\r\n   * emitNumRepeats\r\n   *\r\n   * @return {FloatScatter}\r\n   */\r\n  get emitNumRepeats() {\r\n    return this.mEmitNumRepeats;\r\n  }\r\n\r\n  /**\r\n   * emitNumRepeats\r\n   *\r\n   * @param {FloatScatter} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set emitNumRepeats(value) {\r\n    this.mEmitNumRepeats = value;\r\n    this.mEmitNumRepeatsLeft = this.mEmitNumRepeats.getValue();\r\n  }\r\n\r\n\r\n  /**\r\n   * emitDuration\r\n   *\r\n   * @return {FloatScatter}\r\n   */\r\n  get emitDuration() {\r\n    return this.mEmitDuration;\r\n  }\r\n\r\n  /**\r\n   * emitDuration\r\n   *\r\n   * @param {FloatScatter} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set emitDuration(value) {\r\n    this.mEmitDuration = value;\r\n    this.mEmitDurationLeft = this.mEmitDuration.getValue();\r\n  }\r\n\r\n\r\n  /**\r\n   * emitInterval\r\n   *\r\n   * @return {FloatScatter}\r\n   */\r\n  get emitInterval() {\r\n    return this.mEmitInterval;\r\n  }\r\n\r\n  /**\r\n   * emitInterval\r\n   *\r\n   * @param {FloatScatter} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set emitInterval(value) {\r\n    this.mEmitInterval = value;\r\n    this.mEmitIntervalLeft = this.mEmitInterval.getValue();\r\n  }\r\n\r\n\r\n  /**\r\n   * emitDelay\r\n   *\r\n   * @return {FloatScatter}\r\n   */\r\n  get emitDelay() {\r\n    return this.mEmitDelay;\r\n  }\r\n\r\n  /**\r\n   * emitDelay\r\n   *\r\n   * @param {FloatScatter} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set emitDelay(value) {\r\n    this.mEmitDelay = value;\r\n    this.mEmitDelayLeft = this.mEmitDelay.getValue();\r\n  }\r\n\r\n\r\n  /**\r\n   * space\r\n   *\r\n   * @return {GameObject}\r\n   */\r\n  get space() {\r\n    return this.mSpace;\r\n  }\r\n\r\n  /**\r\n   * space\r\n   *\r\n   * @param {GameObject} gameObject\r\n   *\r\n   * @return {void}\r\n   */\r\n  set space(gameObject) {\r\n    this.mSpace = gameObject;\r\n    this.mIsLocal = this.mSpace === null || this.mSpace === this;\r\n  }\r\n\r\n\r\n  /**\r\n   * textures\r\n   *\r\n   * @return {Array<Texture>}\r\n   */\r\n  get textures() {\r\n    return this.mTextures;\r\n  }\r\n\r\n\r\n  /**\r\n   * textures\r\n   *\r\n   * @param {Array<Texture>} value\r\n   *\r\n   * @return {void}\r\n   */\r\n  set textures(value) {\r\n    if (value.length === 0)\r\n      throw new Error('At least one texture must be provided.');\r\n\r\n    this.mTextures = value;\r\n  }\r\n\r\n  /**\r\n   * @return {EmitterSortOrder}\r\n   */\r\n  get sortOrder() {\r\n    return this.__sortOrder;\r\n  }\r\n\r\n  /**\r\n   *\r\n   * @param {EmitterSortOrder} value The order in which particles will be sorted when rendering.\r\n   *\r\n   * @return {void}\r\n   */\r\n  set sortOrder(value) {\r\n    this.__sortOrder = value;\r\n  }\r\n}\r\n\r\n/**\r\n * A blend mode enum.\r\n * @cat particles\r\n * @enum {string}\r\n */\r\n\r\nvar EmitterSortOrder = {\r\n  FRONT_TO_BACK: 'frontToBack',\r\n  BACK_TO_FRONT: 'backToFront'\r\n};\r\n","// TODO: fix jsdoc to display this enum\r\n\r\n/**\r\n * @readonly\r\n * @enum {number}\r\n * @cat input\r\n */\r\n\r\nvar Key = {\r\n  /**\r\n   * @type {number}\r\n   */\r\n  A: 65,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  B: 66,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  C: 67,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  D: 68,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  E: 69,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  F: 70,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  G: 71,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  H: 72,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  I: 73,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  J: 74,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  K: 75,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  L: 76,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  M: 77,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  N: 78,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  O: 79,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  P: 80,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  Q: 81,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  R: 82,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  S: 83,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  T: 84,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  U: 85,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  V: 86,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  W: 87,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  X: 88,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  Y: 89,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  Z: 90,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  DIGIT_0: 48,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  DIGIT_1: 49,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  DIGIT_2: 50,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  DIGIT_3: 51,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  DIGIT_4: 52,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  DIGIT_5: 53,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  DIGIT_6: 54,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  DIGIT_7: 55,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  DIGIT_8: 56,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  DIGIT_9: 57,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  NUMPAD_0: 96,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  NUMPAD_1: 97,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  NUMPAD_2: 98,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  NUMPAD_3: 99,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  NUMPAD_4: 100,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  NUMPAD_5: 101,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  NUMPAD_6: 102,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  NUMPAD_7: 103,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  NUMPAD_8: 104,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  NUMPAD_9: 105,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  NUMPAD_MULTIPLY: 106,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  NUMPAD_ADD: 107,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  NUMPAD_SUBTRACT: 109,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  NUMPAD_DECIMAL: 110,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  NUMPAD_DIVIDE: 111,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  LEFT_ARROW: 37,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  UP_ARROW: 38,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  RIGHT_ARROW: 39,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  DOWN_ARROW: 40,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  BACKSPACE: 8,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  TAB: 9,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  ENTER: 13,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  SHIFT: 16,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  CTRL: 17,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  ALT: 18,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  F1: 112,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  F2: 113,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  F3: 114,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  F4: 115,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  F5: 116,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  F6: 117,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  F7: 118,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  F8: 119,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  F9: 120,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  F10: 121,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  F11: 122,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  F12: 123,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  PAUSE_BREAK: 19,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  CAPS_LOCK: 20,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  ESCAPE: 27,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  PAGE_UP: 33,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  PAGE_DOWN: 34,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  END: 35,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  HOME: 36,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  INSERT: 45,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  DELETE: 46,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  LEFT_WINDOW: 91,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  RIGHT_WINDOW: 92,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  CONTEXT_MENU: 93,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  NUM_LOCK: 144,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  SCROLL_LOCK: 145,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  SEMI_COLON: 186,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  EQUAL_SIGN: 187,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  COMMA: 188,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  DASH: 189,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  PERIOD: 190,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  FORWARD_SLASH: 191,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  BACKQUOTE: 192,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  BRAKET_LEFT: 219,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  BACK_SLASH: 220,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  BRAKET_RIGHT: 221,\r\n  /**\r\n   * @type {number}\r\n   */\r\n  SINGLE_QUOTE: 222,\r\n};\r\n","/**\r\n * Holds information about keyboard event.\r\n *\r\n * @cat input\r\n */\r\n\r\nclass KeyInfo {\r\n\r\n  /**\r\n   * constructor - Description\r\n   *\r\n   * @param {Event} nativeEvent Description\r\n   *\r\n   * @return {void} Description\r\n   */\r\n  constructor(nativeEvent) {\r\n    this.keyCode = nativeEvent.keyCode;\r\n    this.code = nativeEvent.code;\r\n    this.char = nativeEvent.key;\r\n    this.shiftKey = nativeEvent.shiftKey;\r\n    this.altKey = nativeEvent.altKey;\r\n    this.ctrlKey = nativeEvent.ctrlKey;\r\n  }\r\n}\r\n","/**\r\n * A input system class is reponsible for mouse, touch and keyboard input events.\r\n * Pointer events works for a single target only.\r\n * Global Input messages has higher priority.\r\n *\r\n * When GameObject gets a `pointerDown` message it gets target locked. Other\r\n * objects will not receive `pointerMove` or `pointerUp` messages. Target locked\r\n * object will receive `pointerUp` message even if pointer is outside of its\r\n * bounds.\r\n *\r\n * @cat input\r\n * @extends System\r\n */\r\n\r\nclass Input extends System {\r\n  /**\r\n   * Private constructor.\r\n   */\r\n  constructor() {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Input}\r\n     */\r\n    this.constructor.instance = this;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Vector}\r\n     */\r\n    this.mPointerPosition = new Vector();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Element}\r\n     */\r\n    this.mDom = Black.instance.containerElement;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<string>}\r\n     */\r\n    this.mEventList = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<string>}\r\n     */\r\n    this.mKeyEventList = null;\r\n\r\n    this.__initListeners();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<{e: Event, x: number, y:number}>}\r\n     */\r\n    this.mPointerQueue = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Event>}\r\n     */\r\n    this.mKeyQueue = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<number>}\r\n     */\r\n    this.mPressedKeys = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mIsPointerDown = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mNeedUpEvent = false;\r\n\r\n    /**\r\n     * NOTE: we need guarantee that keys are not going to chage theirs order\r\n     * when iterating.\r\n     * @private\r\n     * @type {Map}\r\n     */\r\n    this.mInputListeners = new Map();\r\n\r\n    this.mTarget = null;\r\n    this.mTargetComponent = null;\r\n    this.mLockedTarget = null;\r\n\r\n    this.mLastInTargetComponent = null;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * @returns {void}\r\n   */\r\n  __initListeners() {\r\n    this.mKeyEventList = Input.mKeyEventList;\r\n    //debugger;\r\n\r\n    if (window.PointerEvent)\r\n      this.mEventList = Input.mPointerEventList;\r\n    else if (Device.isTouch && Device.isMobile)\r\n      this.mEventList = Input.mTouchEventList;\r\n    else\r\n      this.mEventList = Input.mMouseEventList;\r\n\r\n    for (let i = 0; i < 6; i++)\r\n      this.mDom.addEventListener(this.mEventList[i], e => this.__onPointerEvent(e), false);\r\n\r\n    document.addEventListener(this.mEventList[Input.IX_POINTER_UP], e => this.__onPointerEventDoc(e), false);\r\n\r\n    for (let i = 0; i < this.mKeyEventList.length; i++)\r\n      document.addEventListener(this.mKeyEventList[i], e => this.__onKeyEvent(e), false);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  __onKeyEvent(e) {\r\n    if (Black.instance.isPaused === true)\r\n      return false;\r\n\r\n    this.mKeyQueue.push(e);\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e\r\n   *\r\n   * @returns {void}\r\n   */\r\n  __onPointerEventDoc(e) {\r\n    if (Black.instance.isPaused === true)\r\n      return;\r\n\r\n    // dirty check\r\n    let over = e.target == this.mDom || e.target.parentElement == this.mDom;\r\n\r\n    if (over === false && this.mNeedUpEvent === true) {\r\n      this.mNeedUpEvent = false;\r\n      this.__pushEvent(e);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  __onPointerEvent(e) {\r\n    if (Black.instance.isPaused === true)\r\n      return false;\r\n\r\n    e.preventDefault();\r\n\r\n    this.__pushEvent(e);\r\n\r\n    return true;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Event} e\r\n   *\r\n   * @returns {void}\r\n   */\r\n  __pushEvent(e) {\r\n    let /** @type {Vector|null} */ p = null;\r\n    if (e.type.indexOf('touch') === 0)\r\n      p = this.__getTouchPos(this.mDom, /** @type {TouchEvent} */ (e));\r\n    else\r\n      p = this.__getPointerPos(this.mDom, e);\r\n\r\n    this.mPointerQueue.push({\r\n      e: e,\r\n      x: p.x,\r\n      y: p.y\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Element} canvas\r\n   * @param {Event} evt\r\n   *\r\n   * @return {Vector}\r\n   */\r\n  __getPointerPos(canvas, evt) {\r\n    let rect = canvas.getBoundingClientRect();\r\n    let scaleX = canvas.clientWidth / rect.width;\r\n    let scaleY = canvas.clientHeight / rect.height;\r\n    return new Vector((evt.clientX - rect.left) * scaleX, (evt.clientY - rect.top) * scaleY);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {Element} canvas\r\n   * @param {TouchEvent} evt\r\n   *\r\n   * @return {Vector}\r\n   */\r\n  __getTouchPos(canvas, evt) {\r\n    let rect = canvas.getBoundingClientRect();\r\n\r\n    /** @type {Touch} */\r\n    let touch = evt.changedTouches[0]; // ios? what about android?\r\n    let x = touch.clientX;\r\n    let y = touch.clientY;\r\n\r\n    let scaleX = canvas.clientWidth / rect.width;\r\n    let scaleY = canvas.clientHeight / rect.height;\r\n    return new Vector((x - rect.left) * scaleX, (y - rect.top) * scaleY);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * \r\n   * @param {number} dt\r\n   *\r\n   * @return {void}\r\n   */\r\n  onUpdate(dt) {\r\n    // omg, who gave you keyboard?\r\n    this.__updateKeyboard();\r\n\r\n    // we had no actual events but still we need to know if something were moved\r\n    if (this.mPointerQueue.length === 0) {\r\n      this.__findTarget(Input.pointerPosition);\r\n      this.__processInOut(Input.pointerPosition);\r\n    }\r\n\r\n    for (var i = 0; i < this.mPointerQueue.length; i++) {\r\n      let nativeEvent =  this.mPointerQueue[i];\r\n\r\n      // update to the lattest position\r\n      this.mPointerPosition.x = nativeEvent.x;\r\n      this.mPointerPosition.y = nativeEvent.y;\r\n\r\n      let pointerPos = new Vector(nativeEvent.x, nativeEvent.y);\r\n      let eventType = Input.mInputEventsLookup[this.mEventList.indexOf(nativeEvent.e.type)];\r\n\r\n      this.__findTarget(pointerPos);\r\n      this.__processInOut(Input.pointerPosition);\r\n      this.__processNativeEvent(nativeEvent, pointerPos, eventType);\r\n    }\r\n\r\n    // Erase the pointer queue\r\n    this.mPointerQueue.splice(0, this.mPointerQueue.length);\r\n    this.mKeyQueue.splice(0, this.mKeyQueue.length);\r\n  }\r\n\r\n  __findTarget(pos) {\r\n    let obj = GameObject.hits(Black.instance.root, pos);\r\n\r\n    if (obj === null) {\r\n      this.mTarget = null;\r\n      this.mTargetComponent = null;\r\n      return;\r\n    }\r\n\r\n    let c = obj.getComponent(InputComponent);\r\n    if (c === null) {\r\n      this.mTarget = null;\r\n      this.mTargetComponent = null;\r\n      return;\r\n    }\r\n\r\n    if (c.touchable === false) {\r\n      this.mTarget = null;\r\n      this.mTargetComponent = null;\r\n      return;\r\n    }\r\n\r\n    this.mTarget = obj;\r\n    this.mTargetComponent = c;\r\n  }\r\n\r\n  __processNativeEvent(nativeEvent, pos, type) {\r\n    if (type === Input.POINTER_DOWN) {\r\n      this.mIsPointerDown = true;\r\n      this.mNeedUpEvent = true;\r\n    }\r\n    else if (type === Input.POINTER_UP) {\r\n      this.mIsPointerDown = false;\r\n    }\r\n\r\n    this.post(type);\r\n\r\n    if (this.mTarget === null && this.mLockedTarget === null)\r\n      return;\r\n\r\n    let info = new PointerInfo(this.mTarget, pos.x, pos.y);\r\n\r\n    if (type === Input.POINTER_DOWN) {\r\n      this.mLockedTarget = this.mTarget;\r\n    }\r\n    else if (type === Input.POINTER_UP && this.mLockedTarget !== null) {\r\n      this.mLockedTarget.post('~pointerUp', info);\r\n      this.mLockedTarget = null;\r\n      return;\r\n    }\r\n\r\n    let sameTarget = this.mTarget === this.mLockedTarget;\r\n\r\n    if (this.mLockedTarget === null) {\r\n      if (this.mTarget !== null) {\r\n        // regular non locked post\r\n        //console.log('regular');\r\n        this.mTarget.post('~' + type, info);\r\n      }\r\n    } else {\r\n      if (sameTarget === true) {\r\n        // just bubble the event\r\n        this.mLockedTarget.post('~' + type, info);\r\n      }\r\n      else {\r\n        // send skipping this gameObject\r\n        if (this.mLockedTarget.mParent !== null && this.mTarget !== null) {\r\n          console.log('parent');\r\n          this.mLockedTarget.mParent.post('~' + type, info);\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  __postInMessage() {\r\n    if (this.mLockedTarget !== null) {\r\n      if (this.mLockedTarget !== this.mTargetComponent.gameObject && this.mTargetComponent.gameObject !== null)\r\n        return;\r\n    }\r\n\r\n    this.mTargetComponent.mPointerInDispatched = true;\r\n    this.mTargetComponent.gameObject.post('~pointerIn');\r\n    this.mLastInTargetComponent = this.mTargetComponent;\r\n  }\r\n\r\n  __postOutMessage() {\r\n    if (this.mLockedTarget !== null && this.mTargetComponent !== null) {\r\n      if (this.mLockedTarget !== this.mTargetComponent.gameObject)\r\n        return;\r\n    }\r\n\r\n    this.mLastInTargetComponent.mPointerInDispatched = false;\r\n    this.mLastInTargetComponent.gameObject.post('~pointerOut');\r\n    this.mLastInTargetComponent = null;\r\n  }\r\n\r\n  __processInOut(pos) {\r\n\r\n    if (this.mTargetComponent === null) {\r\n      if (this.mLastInTargetComponent !== null)\r\n        this.__postOutMessage();\r\n    } else {\r\n      if (this.mLastInTargetComponent !== null && this.mLastInTargetComponent !== this.mTargetComponent) {\r\n        this.__postOutMessage();\r\n        return;\r\n      }\r\n\r\n      if (this.mTargetComponent.mPointerInDispatched === false)\r\n        this.__postInMessage();\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   *\r\n   * @returns {void}\r\n   */\r\n  __updateKeyboard() {\r\n    for (let i = 0; i < this.mKeyQueue.length; i++) {\r\n      let nativeEvent = this.mKeyQueue[i];\r\n\r\n      let ix = this.mKeyEventList.indexOf(nativeEvent.type);\r\n      let pIx = this.mPressedKeys.indexOf(nativeEvent.keyCode);\r\n      let fnName = Input.mKeyEventsLookup[ix];\r\n\r\n      if (fnName === 'keyUp' && pIx !== -1)\r\n        this.mPressedKeys.splice(pIx, 1);\r\n\r\n      else if (fnName === 'keyDown' && pIx === -1) {\r\n        this.mPressedKeys.push(nativeEvent.keyCode);\r\n        fnName = 'keyPress';\r\n      }\r\n\r\n      this.post(fnName, new KeyInfo(nativeEvent), nativeEvent);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Listens for global input event by given message name.\r\n   *\r\n   * @param {string} name            The name of the message to listen for.\r\n   * @param {Function} callback      The callback function that will be called when message received.\r\n   * @param {Object=} [context=null] Optional context.\r\n   *\r\n   * @return {void}\r\n   */\r\n  static on(name, callback, context = null) {\r\n    Input.instance.on(name, callback, context);\r\n  }\r\n\r\n  /**\r\n   * Indicates if mouse or touch in down at this moment.\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  static get isPointerDown() {\r\n    return Input.instance.mIsPointerDown;\r\n  }\r\n\r\n  /**\r\n   * Returns mouse or touch pointer x-component.\r\n   * @return {number}\r\n   */\r\n  static get pointerX() {\r\n    return Input.instance.mPointerPosition.x;\r\n  }\r\n\r\n  /**\r\n   * Returns mouse or touch pointer x-component.\r\n   *\r\n   * @return {number} Description\r\n   */\r\n  static get pointerY() {\r\n    return Input.instance.mPointerPosition.y;\r\n  }\r\n\r\n  /**\r\n   * Returns mouse or touch pointer position.\r\n   *\r\n   * @return {Vector}\r\n   */\r\n  static get pointerPosition() {\r\n    return Input.instance.mPointerPosition;\r\n  }\r\n\r\n  /**\r\n   * Returns list of pressed keys.\r\n   *\r\n   * @returns {Array<number>}\r\n   */\r\n  static get pressedKeys() {\r\n    return Input.instance.mPressedKeys;\r\n  }\r\n}\r\n\r\nInput.POINTER_DOWN = 'pointerDown';\r\nInput.POINTER_MOVE = 'pointerMove';\r\nInput.POINTER_UP   = 'pointerUp';\r\nInput.POINTER_IN   = 'pointerIn';\r\nInput.POINTER_OUT  = 'pointerOut';\r\n\r\n/**\r\n * @type {Input}\r\n * @nocollapse\r\n */\r\nInput.instance = null;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n */\r\nInput.IX_POINTER_MOVE = 0;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n */\r\nInput.IX_POINTER_DOWN = 1;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n */\r\nInput.IX_POINTER_UP = 2;\r\n\r\n// /**\r\n//  * @type {number}\r\n//  * @const\r\n//  */\r\n// Input.IX_POINTER_IN = 3;\r\n//\r\n// /**\r\n//  * @type {number}\r\n//  * @const\r\n//  */\r\n// Input.IX_POINTER_OUT = 4;\r\n\r\n/**\r\n * @private\r\n * @type {Array<string>}\r\n * @const\r\n */\r\nInput.mKeyEventList = ['keydown', 'keyup'];\r\n\r\n/**\r\n * @private\r\n * @type {Array<string>}\r\n * @const\r\n */\r\nInput.mKeyEventsLookup = ['keyDown', 'keyUp', 'keyPress'];\r\n\r\n/**\r\n * @private\r\n * @type {Array<string>}\r\n * @const\r\n */\r\nInput.mInputEventsLookup = ['pointerMove', 'pointerDown', 'pointerUp', 'pointerIn', 'pointerOut'];\r\n\r\n/**\r\n * @private\r\n * @type {Array<string>}\r\n * @const\r\n */\r\nInput.mPointerEventList = ['pointermove', 'pointerdown', 'pointerup', 'pointerenter', 'pointerleave'];\r\n\r\n/**\r\n * @private\r\n * @type {Array<string>}\r\n * @const\r\n */\r\nInput.mMouseEventList = ['mousemove', 'mousedown', 'mouseup', 'mouseenter', 'mouseleave'];\r\n\r\n/**\r\n * @private\r\n * @type {Array<string>}\r\n * @const\r\n */\r\nInput.mTouchEventList = ['touchmove', 'touchstart', 'touchend', 'touchenter', 'touchleave'];\r\n\r\n\r\n/**\r\n * Stores additional information about pointer events.\r\n *\r\n * @cat input\r\n */\r\n\r\nclass PointerInfo {\r\n  /**\r\n   * Creates new PointerInfo instance. For internal use only.\r\n   *\r\n   * @param {GameObject} activeObject\r\n   * @param {number} x\r\n   * @param {number} y\r\n   */\r\n  constructor(activeObject, x, y) {\r\n    /**\r\n     * @private\r\n     * @type {GameObject}\r\n     */\r\n    this.mActiveObject = activeObject;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mX = x;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mY = y;\r\n  }\r\n\r\n  /**\r\n   * Returns the object under cursor right now.\r\n   * @readonly\r\n   *\r\n   * @returns {GameObject}\r\n   */\r\n  get activeObject() {\r\n    return this.mActiveObject;\r\n  }\r\n\r\n  get x() {\r\n    return this.mX;\r\n  }\r\n\r\n  get y() {\r\n    return this.mY;\r\n  }\r\n}\r\n","/**\r\n * This component will allow you to subscribe for some input messages.\r\n *\r\n * @cat input\r\n * @extends Component\r\n */\r\n\r\nclass InputComponent extends Component {\r\n  /**\r\n   * @return {void}\r\n   */\r\n  constructor() {\r\n    super();\r\n\r\n    /** @type {boolean} */\r\n    this.touchable = true;\r\n\r\n    /* INTERNAL */\r\n    /** @type {boolean} */\r\n    this.mPointerInDispatched = false;\r\n  }\r\n}\r\n","/**\r\n * Basic FPS component. Shows frame rate.\r\n *\r\n * @cat components\r\n * @extends Component\r\n */\r\n\r\nclass FPSComponent extends Component  {\r\n  constructor() {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {TextField}\r\n     */\r\n    this.txtFPS = null;\r\n  }\r\n\r\n  onAdded(){\r\n    this.txtFPS = new TextField('FPS: 0');\r\n    this.txtFPS.x = 0;\r\n    this.txtFPS.y = 0;\r\n    this.gameObject.addChild(this.txtFPS);\r\n  }\r\n\r\n  onRemoved(){\r\n  }\r\n\r\n  onUpdate(){\r\n    this.txtFPS.text = 'FPS: ' + Black.instance.FPS;\r\n  }\r\n}\r\n","/**\r\n * Basic multi resolution utility component. Resizes an GameObject to match desired resolution.\r\n *\r\n * @cat components\r\n * @extends Component\r\n */\r\n\r\nclass MRComponent extends Component {\r\n  /**\r\n   * Creates new instance of MRComponent. Used to scale and position GameObject to a specified width and height.\r\n   * Simplified version of scale manager.\r\n   *\r\n   * @param {number} [width=960]  The width.\r\n   * @param {number} [height=640] The height.\r\n   */\r\n  constructor(width = 960, height = 640) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mWidth = width;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mHeight = height;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mScale = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mInvScale = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mAspect = 0;\r\n\r\n    let size = Black.instance.viewport.size;\r\n    this.mCacheWidth = size.width;\r\n    this.mCacheHeight = size.height;\r\n\r\n    Black.instance.viewport.on('resize', this.__onResize, this);\r\n  }\r\n\r\n  onUpdate() {\r\n    // TODO: performance wise\r\n    let size = Black.instance.viewport.size;\r\n\r\n    if (this.mCacheWidth !== size.width || this.mCacheHeight !== size.height)\r\n      this.setSize(this.mWidth, this.mHeight);\r\n  }\r\n\r\n  __onResize(msg, rect) {\r\n    this.setSize(this.mWidth, this.mHeight);\r\n  }\r\n\r\n  /**\r\n   * Sets size of the latout.\r\n   *\r\n   * @param  {number} width = 960  The width.\r\n   * @param  {number} height = 640 The height.\r\n   * @return {void}\r\n   */\r\n  setSize(width = 960, height = 640){\r\n    this.mWidth = width;\r\n    this.mHeight = height;\r\n\r\n    this.updateLayout();\r\n\r\n    this.post('~resize', this.isLandscape);\r\n  }\r\n\r\n  /**\r\n   * Updates layout to match specified settings.\r\n   *\r\n   * @return {void}\r\n   */\r\n  updateLayout() {\r\n    if (!this.gameObject)\r\n      return;\r\n\r\n    /** @type {Rectangle} */\r\n    let size = Black.instance.viewport.size;\r\n    let width = this.mWidth;\r\n    let height = this.mHeight;\r\n\r\n    if (size.width <= size.height) {\r\n      width = this.mHeight;\r\n      height = this.mWidth;\r\n    }\r\n\r\n    /** @type {number} */\r\n    let scaleX = size.width / width;\r\n\r\n    /** @type {number} */\r\n    let scaleY = size.height / height;\r\n\r\n    this.mScale = Math.min(scaleX, scaleY);\r\n    this.mInvScale = 1 / this.mScale;\r\n\r\n    this.gameObject.scaleX = this.gameObject.scaleY = this.mScale;\r\n    this.gameObject.x = (size.width / 2) - (width / 2) * this.mScale;\r\n    this.gameObject.y = (size.height / 2) - (height / 2) * this.mScale;\r\n  }\r\n\r\n  onAdded() {\r\n    this.updateLayout();\r\n  }\r\n\r\n  get isLandscape() {\r\n    let size = Black.instance.viewport.size;\r\n    return size.width >= size.height;\r\n  }\r\n\r\n  get isPortrait() {\r\n    return !this.isLandscape;\r\n  }\r\n}\r\n","/**\r\n * A static class with many static easing functions.\r\n *\r\n * @cat animation\r\n * @static\r\n */\r\n\r\nclass Ease {\r\n  /**\r\n   * linear\r\n   * @param {number} k\r\n   * @return {number}\r\n   */\r\n  static linear(k) {\r\n    return k;\r\n  }\r\n\r\n  /**\r\n   * quadraticIn\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static quadraticIn(k) {\r\n    return k * k;\r\n  }\r\n\r\n  /**\r\n   * quadraticOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static quadraticOut(k) {\r\n    return k * (2 - k);\r\n  }\r\n\r\n  /**\r\n   * quadraticInOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static quadraticInOut(k) {\r\n    if ((k *= 2) < 1)\r\n      return 0.5 * k * k;\r\n\r\n    return -0.5 * (--k * (k - 2) - 1);\r\n  }\r\n\r\n  /**\r\n   * cubicIn\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static cubicIn(k) {\r\n    return k * k * k;\r\n  }\r\n\r\n  /**\r\n   * cubicOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static cubicOut(k) {\r\n    return --k * k * k + 1;\r\n  }\r\n\r\n  /**\r\n   * cubicInOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static cubicInOut(k) {\r\n    if ((k *= 2) < 1)\r\n      return 0.5 * k * k * k;\r\n\r\n    return 0.5 * ((k -= 2) * k * k + 2);\r\n  }\r\n\r\n  /**\r\n   * quarticIn\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static quarticIn(k) {\r\n    return k * k * k * k;\r\n  }\r\n\r\n  /**\r\n   * quarticOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static quarticOut(k) {\r\n    return 1 - (--k * k * k * k);\r\n  }\r\n\r\n  /**\r\n   * quarticInOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static quarticInOut(k) {\r\n    if ((k *= 2) < 1)\r\n      return 0.5 * k * k * k * k;\r\n\r\n    return -0.5 * ((k -= 2) * k * k * k - 2);\r\n  }\r\n\r\n  /**\r\n   * quinticIn\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static quinticIn(k) {\r\n    return k * k * k * k * k;\r\n  }\r\n\r\n  /**\r\n   * quinticOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static quinticOut(k) {\r\n    return --k * k * k * k * k + 1;\r\n  }\r\n\r\n  /**\r\n   * quinticInOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static quinticInOut(k) {\r\n    if ((k *= 2) < 1)\r\n      return 0.5 * k * k * k * k * k;\r\n\r\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\r\n  }\r\n\r\n  /**\r\n   * sinusoidalIn\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static sinusoidalIn(k) {\r\n    return 1 - Math.cos(k * Math.PI / 2);\r\n  }\r\n\r\n  /**\r\n   * sinusoidalOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static sinusoidalOut(k) {\r\n    return Math.sin(k * Math.PI / 2);\r\n  }\r\n\r\n  /**\r\n   * sinusoidalInOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static sinusoidalInOut(k) {\r\n    return 0.5 * (1 - Math.cos(Math.PI * k));\r\n  }\r\n\r\n  /**\r\n   * exponentialIn\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static exponentialIn(k) {\r\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\r\n  }\r\n\r\n  /**\r\n   * exponentialOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static exponentialOut(k) {\r\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\r\n  }\r\n\r\n  /**\r\n   * exponentialInOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static exponentialInOut(k) {\r\n    if (k === 0)\r\n      return 0;\r\n\r\n    if (k === 1)\r\n      return 1;\r\n\r\n    if ((k *= 2) < 1)\r\n      return 0.5 * Math.pow(1024, k - 1);\r\n\r\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\r\n  }\r\n\r\n  /**\r\n   * circularIn\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static circularIn(k) {\r\n    return 1 - Math.sqrt(1 - k * k);\r\n  }\r\n\r\n  /**\r\n   * circularOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static circularOut(k) {\r\n    return Math.sqrt(1 - (--k * k));\r\n  }\r\n\r\n  /**\r\n   * circularInOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static circularInOut(k) {\r\n    if ((k *= 2) < 1)\r\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\r\n\r\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\r\n  }\r\n\r\n  /**\r\n   * elasticIn\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static elasticIn(k) {\r\n    if (k === 0)\r\n      return 0;\r\n\r\n    if (k === 1)\r\n      return 1;\r\n\r\n    return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\r\n  }\r\n\r\n  /**\r\n   * elasticOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static elasticOut(k) {\r\n    if (k === 0)\r\n      return 0;\r\n\r\n    if (k === 1)\r\n      return 1;\r\n\r\n    return Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\r\n  }\r\n\r\n  /**\r\n   * elasticInOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static elasticInOut(k) {\r\n    if (k === 0)\r\n      return 0;\r\n\r\n    if (k === 1)\r\n      return 1;\r\n\r\n    k *= 2;\r\n\r\n    if (k < 1)\r\n      return -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\r\n\r\n    return 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\r\n\r\n  }\r\n\r\n  /**\r\n   * backIn\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static backIn(k) {\r\n    const s = 1.70158;\r\n    return k * k * ((s + 1) * k - s);\r\n  }\r\n\r\n  /**\r\n   * backOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static backOut(k) {\r\n    const s = 1.70158;\r\n    return --k * k * ((s + 1) * k + s) + 1;\r\n  }\r\n\r\n  /**\r\n   * backInOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static backInOut(k) {\r\n    const s = 1.70158 * 1.525;\r\n\r\n    if ((k *= 2) < 1)\r\n      return 0.5 * (k * k * ((s + 1) * k - s));\r\n\r\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\r\n  }\r\n\r\n  /**\r\n   * bounceIn\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static bounceIn(k) {\r\n    return 1 - Ease.bounceOut(1 - k);\r\n  }\r\n\r\n  /**\r\n   * bounceOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static bounceOut(k) {\r\n    if (k < (1 / 2.75))\r\n      return 7.5625 * k * k;\r\n    else if (k < (2 / 2.75))\r\n      return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\r\n    else if (k < (2.5 / 2.75))\r\n      return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\r\n\r\n    return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\r\n  }\r\n\r\n  /**\r\n   * bounceInOut\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static bounceInOut(k) {\r\n    if (k < 0.5)\r\n      return Ease.bounceIn(k * 2) * 0.5;\r\n\r\n    return Ease.bounceOut(k * 2 - 1) * 0.5 + 0.5;\r\n  }\r\n\r\n  /**\r\n   * smoothstep\r\n   *\r\n   * @param {number} k\r\n   *\r\n   * @return {number}\r\n   */\r\n  static smootherStep(k) {\r\n    return k * k * k * (k * (6.0 * k - 15.0) + 10.0);\r\n  }\r\n}\r\n","/**\r\n * Interpolation functions.\r\n *\r\n * @cat animation\r\n * @static\r\n */\r\n\r\nclass Interpolation {\r\n  /**\r\n   * Singleton.\r\n   */\r\n  constructor() {}\r\n\r\n  /**\r\n   * linear\r\n   *\r\n   * @param {Array}  v The input array of values to interpolate between.\r\n   * @param {number} k The percentage of interpolation, between 0 and 1.\r\n   * @return {number}  The interpolated value\r\n   */\r\n  static linear(v, k) {\r\n    let m = v.length - 1;\r\n    let f = m * k;\r\n    let i = Math.floor(f);\r\n\r\n    let fn = (p0, p1, t) => {\r\n      return (p1 - p0) * t + p0;\r\n    };\r\n\r\n    if (k < 0) {\r\n      return fn(v[0], v[1], f);\r\n    }\r\n\r\n    if (k > 1) {\r\n      return fn(v[m], v[m - 1], m - f);\r\n    }\r\n\r\n    return fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\r\n  }\r\n\r\n  /**\r\n   * bezier\r\n   *\r\n   * @param {Array}  v The input array of values to interpolate between.\r\n   * @param {number} k The percentage of interpolation, between 0 and 1.\r\n   * @return {number}  The interpolated value\r\n   */\r\n  static bezier(v, k) {\r\n    let b = 0;\r\n    let n = v.length;\r\n    let pow = Math.pow;\r\n    // Bernstein basis polynomials\r\n    let bn = (n, i) => {\r\n      let fc = Interpolation.__factorial;\r\n      return fc(n) / fc(i) / fc(n - i);\r\n    };\r\n\r\n    for (let i = 0; i < n; i++) {\r\n      b += pow(1 - k, n - i) * pow(k, i) * v[i] * bn(n, i);\r\n    }\r\n\r\n    return b;\r\n  }\r\n\r\n  /**\r\n   * catmullRom\r\n   *\r\n   * @param {Array}  v The input array of values to interpolate between.\r\n   * @param {number} k The percentage of interpolation, between 0 and 1.\r\n   * @return {number}  The interpolated value\r\n   */\r\n  static catmullRom(v, k) {\r\n    let m = v.length - 1;\r\n    let f = m * k;\r\n    let i = Math.floor(f);\r\n    let fn = (p0, p1, p2, p3, t) => {\r\n      let v0 = (p2 - p0) * 0.5;\r\n      let v1 = (p3 - p1) * 0.5;\r\n      let t2 = t * t;\r\n      let t3 = t * t2;\r\n\r\n      return ((p1 - p2) * 2 + v0 + v1) * t3 + ((p2 - p1) * 3 - 2 * v0 - v1) * t2 + v0 * t + p1;\r\n    };\r\n\r\n    if (v[0] === v[m]) {\r\n      if (k < 0) {\r\n        i = Math.floor(f = m * (1 + k));\r\n      }\r\n\r\n      return fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\r\n    } else {\r\n      if (k < 0) {\r\n        return v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\r\n      }\r\n\r\n      if (k > 1) {\r\n        return v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\r\n      }\r\n\r\n      return fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\r\n    }\r\n  }\r\n}\r\n\r\n/**\r\n * @private\r\n * @param {number} n\r\n *\r\n * @return {number}\r\n */\r\nInterpolation.__factorial = (function() {\r\n  let a = [1];\r\n\r\n  return function(n) {\r\n    if (a[n]) {\r\n      return a[n];\r\n    }\r\n\r\n    let s = n;\r\n\r\n    while (--n) {\r\n      s *= n;\r\n    }\r\n\r\n    a[n] = s;\r\n    return s;\r\n  };\r\n})();\r\n","/**\r\n * A tweening component.\r\n *\r\n * @cat animation\r\n * @unrestricted\r\n * @extends Component\r\n */\r\n\r\nclass Tween extends Component {\r\n  /**\r\n   * Creates new instance of Tween Component.\r\n   * @param {Object}        values            The values to tween.\r\n   * @param {number}        [duration=0.25]   Duraction in seconds.\r\n   * @param {Object|null}   [properties=null] Tween properties Object.\r\n   */\r\n  constructor(values, duration = 0.250, properties = null) {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @dict\r\n     */\r\n    this.mValues = values;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mDuration = duration;\r\n\r\n    /**\r\n     * @private\r\n     * @dict\r\n     */\r\n    this.mProperties = properties;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mIsPlaying = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mIsPaused = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mStartTime = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mPausedTime = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @dict\r\n     */\r\n    this.mValuesStart = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mElapsed = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {function (Array, number):number}\r\n     */\r\n    this.mInterpolation = Interpolation.linear;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mDelay = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mRepeatTimes = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mInitiated = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mStarted = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mReverse = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mRemoveOnComplete = true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mPlayOnAdded = true;\r\n\r\n   /**\r\n    * @private\r\n    * @type {function(number):number}\r\n    */\r\n    this.mEase = Ease.smootherStep;\r\n\r\n    // TODO: fix ESDOC issue\r\n    if (this.mProperties !== null) {\r\n      for (let f in this.mProperties) {\r\n        this[f] = /** @dict */ (this.mProperties[f]);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Returns active ease function.\r\n   *\r\n   * @return {function(number):number}\r\n   */\r\n  get ease() {\r\n    return this.mEase;\r\n  }\r\n\r\n  /**\r\n   * Sets easing function to use.\r\n   *\r\n   * @param {function(number):number} value The easing function.\r\n   * @return {void}\r\n   */\r\n  set ease(value) {\r\n    this.mEase = value;\r\n  }\r\n\r\n  /**\r\n   * Returns the interpolation algorithm.\r\n   *\r\n   * @return {function(Array, number):number}\r\n   */\r\n  get interpolation() {\r\n    return this.mInterpolation;\r\n  }\r\n\r\n  /**\r\n   * Sets the interpolation algorithm. Possible values Interpolation.linear, Interpolation.bezier, Interpolation.catmullRom or your custom function.\r\n   *\r\n   * @param {function(Array, number):number} value The interpolation function.\r\n   * @return {void}\r\n   */\r\n  set interpolation(value) {\r\n    this.mInterpolation = value;\r\n  }\r\n\r\n  /**\r\n   * Time elapsed since tween start in seconds.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get elapsed() {\r\n    return this.mElapsed;\r\n  }\r\n\r\n  /**\r\n   * Returns amount of seconds to wait before tweening.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get delay() {\r\n    return this.mDelay;\r\n  }\r\n\r\n  /**\r\n   * Set amount of seconds to wait before tweening.\r\n   *\r\n   * @param {number} value Seconds to wait.\r\n   * @return {void}\r\n   */\r\n  set delay(value) {\r\n    this.mDelay = value;\r\n  }\r\n\r\n  /**\r\n   * Returns if Tween Component should be automatically detached from owner GameObject after completation.\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  get removeOnComplete() {\r\n    return this.mRemoveOnComplete;\r\n  }\r\n\r\n  /**\r\n   * Sets if Tween Component should be automatically detached from owner GameObject after completation.\r\n   *\r\n   * @param {boolean} value\r\n   * @return {void}\r\n   */\r\n  set removeOnComplete(value) {\r\n    this.mRemoveOnComplete = value;\r\n  }\r\n\r\n  /**\r\n   * Returns whether the tween should start playing automatically when added to the root.\r\n   * @return {boolean}\r\n   */\r\n  get playOnAdded() {\r\n    return this.mPlayOnAdded;\r\n  }\r\n\r\n  /**\r\n   * Sets whether the tween should start playing automatically when added to the root.\r\n   *\r\n   * @param {boolean} value\r\n   * @return {void}\r\n   */\r\n  set playOnAdded(value) {\r\n    this.mPlayOnAdded = value;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {number} t\r\n   *\r\n   * @return {void}\r\n   */\r\n  __start(t) {\r\n    this.mIsPlaying = true;\r\n    this.mStartTime = t + this.mDelay;\r\n  }\r\n\r\n  /**\r\n   * Starts tweening.\r\n   *\r\n   * @return {Tween} Returns this.\r\n   */\r\n  play() {\r\n    if (!this.mIsPaused) {\r\n      this.__start(Black.instance.uptime);\r\n    } else {\r\n      this.__resume();\r\n    }\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Stops current tween.\r\n   *\r\n   * @return {Tween} Returns this.\r\n   */\r\n  stop() {\r\n    if (!this.mIsPlaying)\r\n      return this;\r\n\r\n    this.mIsPlaying = false;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets the values for tweening.\r\n   *\r\n   * @param {Object} values   Values to tween.\r\n   * @param {number} duration Duration in seconds.\r\n   *\r\n   * @return {Tween} Returns this.\r\n   */\r\n  to(values = {}, duration = 0.250) {\r\n    this.mValues = values;\r\n\r\n    this.mDuration = duration;\r\n\r\n    this.mInitiated = false;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Pauses current tween.\r\n   *\r\n   * @return {Tween} Returns this.\r\n   */\r\n  pause() {\r\n    if (!this.mIsPlaying)\r\n      return this;\r\n\r\n    this.mIsPaused = true;\r\n    this.mPausedTime = Black.instance.uptime;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @return {void} Description\r\n   */\r\n  __resume() {\r\n    if (!this.mIsPaused)\r\n      return;\r\n\r\n    this.mIsPaused = false;\r\n    this.mStartTime += Black.instance.uptime - this.mPausedTime;\r\n  }\r\n\r\n\r\n  /**\r\n   * @protected\r\n   * @return {void}\r\n   */\r\n  removeFromParent() {\r\n    if (this.mIsPlaying)\r\n      this.stop();\r\n\r\n    super.removeFromParent();\r\n  }\r\n\r\n  // /**\r\n  //  * @return {void}\r\n  //  */\r\n  // dispose() {\r\n  //   this.remove();\r\n  // }\r\n\r\n  /**\r\n   * Sets the number of times the tween wiil be repeated after first execution.\r\n   *\r\n   * @return {Tween} Returns this.\r\n   */\r\n  repeat(times) {\r\n    this.mRepeatTimes = times;\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Sets if tween should be looped over.\r\n   *\r\n   * @return {Tween} Return this.\r\n   */\r\n  loop(value = true) {\r\n    this.mRepeatTimes = value ? Infinity : 0;\r\n    return this;\r\n  }\r\n\r\n   /**\r\n   * Enables/disables reversing of tween values.\r\n   *\r\n   * @return {Tween} Returns this.\r\n   */\r\n  reverse(value = true) {\r\n    this.mReverse = value;\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * Add specified tween object into the queue. The specified tween will be executed after completation of this tween,\r\n   *\r\n   * @return {Tween} Returns this.\r\n   */\r\n  chain(tween) {\r\n    if (!tween) {\r\n      return this;\r\n    }\r\n\r\n    this.mRemoveOnComplete = false;\r\n\r\n    this.on('complete', () => {\r\n      tween.play();\r\n    });\r\n\r\n    return this;\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * \r\n   * @param  {GameObject} gameObject\r\n   * @return {void}\r\n   */\r\n  onAdded(gameObject) {\r\n    if (this.mPlayOnAdded) {\r\n      this.__start(Black.instance.uptime);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {number} t\r\n   *\r\n   * @return {void}\r\n   */\r\n  __update(t) {\r\n\r\n  }\r\n\r\n  /**\r\n   * Updates tween values.\r\n   *\r\n   * @param {Object} values The Object to get values from.\r\n   * @return {void}\r\n   */\r\n  set(values) {\r\n    this.mValues = values;\r\n\r\n    for (let f in this.mValues)\r\n      this.mValuesStart[f] = parseFloat(this.gameObject[f]);\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   *\r\n   * @param {number} dt\r\n   *\r\n   * @returns {void}\r\n   */\r\n  onPostUpdate(dt){\r\n    let t = Time.time;\r\n\r\n    if (t < this.mStartTime || !this.mIsPlaying || this.mIsPaused)\r\n      return;\r\n\r\n    // copy values only when starting tween...\r\n    // since values may change\r\n    if (this.mStarted === false) {\r\n      this.mStarted = true;\r\n      this.post('start', this.gameObject);\r\n\r\n      for (let f in this.mValues) {\r\n        if (!this.mInitiated && Array.isArray(this.mValues[f])) {\r\n          this.mValues[f] = [this.gameObject[f]].concat(this.mValues[f]);\r\n        }\r\n        this.mValuesStart[f] = parseFloat(this.gameObject[f]);\r\n      }\r\n\r\n      this.mInitiated = true;\r\n    }\r\n\r\n    this.mElapsed = (t - this.mStartTime) / this.mDuration;\r\n\r\n    if (this.mElapsed > 1)\r\n      this.mElapsed = 1;\r\n\r\n    let value = this.mEase(this.mElapsed);\r\n\r\n    for (let f in this.mValues) {\r\n      let start = /** @type {number} */ (this.mValuesStart[f]);\r\n      let end = /** @type {number|Array} */ (this.mValues[f]);\r\n\r\n      if (Array.isArray(end)) {\r\n        this.gameObject[f] = this.mInterpolation(end, value);\r\n      } else {\r\n        this.gameObject[f] = /** @type {number} */ (start + (end - start) * value);\r\n      }\r\n    }\r\n\r\n    this.post('update', this.gameObject);\r\n\r\n    if (this.mElapsed === 1) {\r\n      if (this.mRepeatTimes-- > 0) {\r\n        if (this.mReverse) {\r\n          for (let f in this.mValues) {\r\n            [this.mValues[f], this.mValuesStart[f]] = [this.mValuesStart[f], this.mValues[f]];\r\n          }\r\n        }\r\n\r\n        this.mStartTime = t + this.mDelay;\r\n\r\n        this.post('loop', this.gameObject);\r\n      } else {\r\n        this.mIsPlaying = false;\r\n        this.post('complete', this.gameObject);\r\n\r\n        if (this.mRemoveOnComplete) {\r\n          this.removeFromParent();\r\n        } else {\r\n          for (let f in this.mValues) {\r\n            this.mValuesStart[f] = this.mValues[f];\r\n          }\r\n\r\n          this.mStarted = false;\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n","/**\r\n * Holds details about sprite animation.\r\n *\r\n * @cat animation\r\n */\r\n\r\nclass AnimationInfo {\r\n  /**\r\n   * Creates an instance of Animation class\r\n   *\r\n   * @param {AnimationController}    controller  Animation controller\r\n   * @param {string}                 name        The name of animation\r\n   * @param {Array<Texture>}         frames      Array of Textures for this animation\r\n   * @param {number}                 [fps=14]    Frame rate\r\n   * @param {boolean}                [loop=true] Is animations should be looped\r\n   */\r\n  constructor(controller, name, frames, fps = 14, loop = true) {\r\n    Debug.assert(fps > 0, 'FPS must be greater than 0.');\r\n\r\n    /**\r\n     * @private\r\n     * @type {AnimationController}\r\n     */\r\n    this.mController = controller;\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.mName = name;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<Texture>}\r\n     */\r\n    this.mFrames = frames;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mCurrentFrame = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mNextFrameAt = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mFPS = fps;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mFrameDuration = 1 / this.mFPS;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mLoop = loop;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mPaused = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mElapsed = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mStopped = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mCompleted = false;\r\n  }\r\n\r\n  /**\r\n   * Plays animation. If Animation is completed, current frame is reset to 0.\r\n   *\r\n   * @return {Texture} Returns the current frame Texture.\r\n   */\r\n  play() {\r\n    if (this.mCompleted === true) {\r\n      this.mCurrentFrame = 0;\r\n      this.mElapsed = 0;\r\n    }\r\n\r\n    this.mPaused = false;\r\n    this.mStopped = false;\r\n    this.mCompleted = false;\r\n\r\n    this.mNextFrameAt = Black.instance.uptime + this.mFrameDuration - this.mElapsed;\r\n    this.mElapsed = 0;\r\n\r\n    return this.mFrames[this.mCurrentFrame];\r\n  }\r\n\r\n  /**\r\n   * Stops animation and resets the value of current frame.\r\n   *\r\n   * @return {void}\r\n   */\r\n  stop() {\r\n    this.mStopped = true;\r\n    this.mCurrentFrame = 0;\r\n  }\r\n\r\n  /**\r\n   * Pauses animation.\r\n   *\r\n   * @return {void}\r\n   */\r\n  pause() {\r\n    this.mPaused = true;\r\n    this.mElapsed = this.mNextFrameAt - Black.instance.uptime;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {number} dt\r\n   * @param {number} t\r\n   *\r\n   * @return {Texture|null}\r\n   */\r\n  __update(dt, t) {\r\n    if (t < this.mNextFrameAt || this.mPaused === true || this.mStopped === true || this.mCompleted === true)\r\n      return null;\r\n\r\n    this.mCurrentFrame++;\r\n\r\n    if (this.mCurrentFrame >= this.mFrames.length) {\r\n      if (this.mLoop === true) {\r\n        this.mCurrentFrame = 0;\r\n      } else {\r\n        this.mCurrentFrame = this.mFrames.length - 1;\r\n        this.mController.post('complete', this);\r\n        this.mCompleted = true;\r\n        return null;\r\n      }\r\n    }\r\n\r\n    this.mNextFrameAt = Black.instance.uptime + this.mFrameDuration;\r\n    let texture = this.mFrames[this.mCurrentFrame];\r\n    return texture;\r\n  }\r\n\r\n  /**\r\n   * Get/Set animation speed in frames per second.\r\n   *\r\n   * @return {number}\r\n   */\r\n  get fps() {\r\n    return this.mFPS;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {number} value\r\n   * @return {void}\r\n   */\r\n  set fps(value) {\r\n    Debug.assert(value > 0, 'FPS must be greater than 0.');\r\n\r\n    this.mFPS = value;\r\n    this.mFrameDuration = 1 / this.mFPS;\r\n\r\n    // update next frame start time\r\n    let diff = this.mNextFrameAt - Black.instance.uptime;\r\n    this.mNextFrameAt += diff;\r\n  }\r\n\r\n  /**\r\n   * Get/Set if animation should be looped.\r\n   * @return {boolean}\r\n   */\r\n  get loop() {\r\n    return this.mLoop;\r\n  }\r\n\r\n  /**\r\n   * @ignore\r\n   * @param {boolean} value\r\n   * @return {void}\r\n   */\r\n  set loop(value) {\r\n    this.mLoop = value;\r\n  }\r\n\r\n  /**\r\n   * Gets array of Texture.\r\n   *\r\n   * @return {Array<Texture>}\r\n   */\r\n  get frames() {\r\n    return this.mFrames;\r\n  }\r\n\r\n  /**\r\n   * Returns true if Animation is playing (neither stopped nor paused).\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  get isPlaying() {\r\n    return this.mPaused === false && this.mStopped === false;\r\n  }\r\n\r\n  /**\r\n   * Returns true if animation is completed.\r\n   *\r\n   * @return {boolean}\r\n   */\r\n  get isComplete() {\r\n    return this.mCompleted;\r\n  }\r\n\r\n  /**\r\n   * Returns name of this animation.\r\n   *\r\n   * @return {string}\r\n   */\r\n  get name() {\r\n    return this.mName;\r\n  }\r\n}\r\n","/**\r\n * A Component which allows to play sprite animations.\r\n *\r\n * @cat animation\r\n * @extends Component\r\n */\r\n\r\nclass AnimationController extends Component {\r\n  /**\r\n   * Creates an instance of AnimationController\r\n   */\r\n  constructor() {\r\n    super();\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, AnimationInfo>}\r\n     */\r\n    this.mAnimations = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {AnimationInfo|null}\r\n     */\r\n    this.mCurrentAnim = null;\r\n  }\r\n\r\n  /**\r\n   * Returns the Animation object that exists with the specified name.\r\n   *\r\n   * @param {string} name The name of the child to return.\r\n   * @returns {AnimationInfo} Returns the Animation object that exists with the specified name.\r\n   */\r\n  getByName(name){\r\n    Debug.assert(name !== null, 'Animation must be set first.');\r\n    Debug.assert(this.mAnimations.hasOwnProperty(name), 'Animation must be set first.');\r\n\r\n    return this.mAnimations[name];\r\n  }\r\n\r\n  /**\r\n   * Removes Animation object that exists with the specified name. If animation is playing right now it will be stopped.\r\n   *\r\n   * @param {string} name The name of the animation to remove.\r\n   * @returns {void}\r\n   */\r\n  remove(name) {\r\n    Debug.assert(name !== null, 'Animation name shall not be null.');\r\n    Debug.assert(this.mAnimations.hasOwnProperty(name) === true, 'Unable to find animation.');\r\n\r\n    let anim = this.mAnimations[name];\r\n\r\n    if (this.mCurrentAnim !== null && this.mCurrentAnim === anim) {\r\n      this.stop();\r\n      delete this.mAnimations[name];\r\n    }\r\n\r\n    this.mCurrentAnim = null;\r\n  }\r\n\r\n  /**\r\n   * Add the Animation object into the list of animations. If animation with given name already exists exception will be thrown.\r\n   *\r\n   * @param {string}          name        The name of animation to update\r\n   * @param {Array<Texture>}  textures    Array of Textures\r\n   * @param {number}          [fps=14]    Frames Per Second\r\n   * @param {boolean}         [loop=true] Indicated if animation should be started over at the end.\r\n   *\r\n   * @return {AnimationInfo} The newly created Animation Object.\r\n   */\r\n  add(name, textures, fps = 14, loop = true) {\r\n    Debug.assert(textures.length > 0, 'Animation cannot be empty.');\r\n    Debug.assert(fps > 0, 'FPS must be greater than 0.');\r\n    Debug.assert(this.mAnimations.hasOwnProperty(name) == false, 'Animatation with same name alredy exists');\r\n\r\n    let anim = new AnimationInfo(this, name, textures, fps, loop);\r\n    this.mAnimations[name] = anim;\r\n\r\n    return anim;\r\n  }\r\n\r\n  /**\r\n   * Plays animation that exists with the specified name.\r\n   *\r\n   * @param {string} name The name of animation to play.\r\n   * @return {void}\r\n   */\r\n  play(name) {\r\n    Debug.assert(this.mAnimations.hasOwnProperty(name), 'Animation must be set first.');\r\n\r\n    this.mCurrentAnim = this.mAnimations[name];\r\n\r\n    let texture = this.mCurrentAnim.play();\r\n\r\n    let sprite = /** @type {Sprite} */ (this.gameObject);\r\n    if (sprite === null)\r\n      return;\r\n\r\n    if (texture !== null)\r\n      sprite.texture = texture;\r\n  }\r\n\r\n  /**\r\n   * Stops active animation. If no animations are playing at the moment nothing will happen.\r\n   *\r\n   * @return {void}\r\n   */\r\n  stop() {\r\n    if (this.mCurrentAnim === null)\r\n      return;\r\n\r\n    this.mCurrentAnim.stop();\r\n  }\r\n\r\n  /**\r\n   * Pauses active animation.\r\n   * @return {void}\r\n   */\r\n  pause() {\r\n    if (this.mCurrentAnim === null)\r\n      return;\r\n\r\n    this.mCurrentAnim.pause();\r\n  }\r\n\r\n  /**\r\n   * @inheritDoc\r\n   * \r\n   * @param  {number} dt\r\n   * @return {void}\r\n   */\r\n  onPostUpdate(dt) {\r\n    if (this.mCurrentAnim === null)\r\n      return;\r\n\r\n    // TODO: replace with time.time\r\n    let newTexture = this.mCurrentAnim.__update(dt, Black.instance.uptime);\r\n    if (newTexture === null)\r\n      return;\r\n\r\n    let sprite = /** @type {Sprite} */ (this.gameObject);\r\n    sprite.texture = newTexture;\r\n  }\r\n\r\n  /**\r\n   * Returns current active animation.\r\n   *\r\n   * @returns {AnimationInfo|null}\r\n   */\r\n  get currentAnimation() {\r\n    return this.mCurrentAnim;\r\n  }\r\n}\r\n","/**\r\n * THE BLACK ENGINE ITSELF.\r\n *\r\n * @extends MessageDispatcher\r\n */\r\n\r\nclass Black extends MessageDispatcher {\r\n\r\n  /**\r\n   * Creates a new Black instance.\r\n   * @param {string}                          containerElementId The id of an DOM element.\r\n   * @param {function(new: GameObject)}       rootClass          Type name of an GameObject to start execution from.\r\n   * @param {function(new: VideoNullDriver)}  [videoDriverClass] Type name of an VideoDriver (VideoNullDriver, DOMDriver or CanvasDriver)\r\n   */\r\n  constructor(containerElementId, rootClass, videoDriverClass) {\r\n    super();\r\n\r\n    // Dirty GCC workaround\r\n    window['Black'] = {};\r\n    window['Black']['instance'] = this;\r\n\r\n    console.log('%c                         >>> BLACK <<<                         ', 'background: #000; color: #fff;');\r\n\r\n    /**\r\n     * @private\r\n     * @type {string}\r\n     */\r\n    this.mContainerElementId = containerElementId;\r\n\r\n    /**\r\n     * @private\r\n     * @type {HTMLElement}\r\n     */\r\n    this.mContainerElement = /** @type {!HTMLElement} */ (document.getElementById(this.mContainerElementId));\r\n\r\n    if (!this.mContainerElement)\r\n      throw new Error('Container element was not found');\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(new: VideoNullDriver)}\r\n     */\r\n    this.mVideoDriverClass = videoDriverClass;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mStageWidth = this.mContainerElement.clientWidth;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mStageHeight = this.mContainerElement.clientHeight;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mSimulationTimestep = 1000 / 60;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mUptime = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mFrameAccum = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mLastFrameTimeMs = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mCurrentTime = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mFPS = 60;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mLastFpsUpdate = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mFramesThisSecond = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mNumUpdateSteps = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mMinFrameDelay = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Array<System>}\r\n     */\r\n    this.mSystems = [];\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mIsRunning = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mIsStarted = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mIsPanic = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mLastFrameUpdateTime = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mLastFrameRenderTime = 0;\r\n\r\n    /**\r\n     * @private\r\n     * @type {number}\r\n     */\r\n    this.mRAFHandle = -1; // not sure\r\n\r\n    /**\r\n     * @private\r\n     * @type {Viewport}\r\n     */\r\n    this.mViewport = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {VideoNullDriver}\r\n     */\r\n    this.mVideo = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mPaused = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mUnpausing = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mPauseOnHide = true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mPauseOnBlur = true;\r\n\r\n    /**\r\n     * @private\r\n     * @type {Object<string, Array>}\r\n     */\r\n    this.mTagCache = {};\r\n\r\n    /**\r\n     * @private\r\n     * @type {function(new: GameObject)|null}\r\n     */\r\n    this.mRootClass = rootClass;\r\n\r\n    /**\r\n     * @private\r\n     * @type {GameObject|null}\r\n     */\r\n    this.mRoot = null;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mEnableFixedTimeStep = false;\r\n\r\n    /**\r\n     * @private\r\n     * @type {boolean}\r\n     */\r\n    this.mWasStopped = false;\r\n  }\r\n\r\n  /**\r\n   * Pauses all engine update logic. Note: RAF is not going to be paused and will work in background.\r\n   *\r\n   * @return {void}\r\n   */\r\n  pause() {\r\n    this.mPaused = true;\r\n  }\r\n\r\n  /**\r\n   * Resumes update execution.\r\n   *\r\n   * @return {void}\r\n   */\r\n  resume() {\r\n    this.mUnpausing = true;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @returns {void}\r\n   */\r\n  __bootViewport() {\r\n    this.mViewport = new Viewport(this.mContainerElement);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @returns {void}\r\n   */\r\n  __bootSystems() {\r\n    //this.addSystem(new Input());\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @returns {void}\r\n   */\r\n  __bootStage() {\r\n    window.onblur = event => this.__onVisbilityChange(event);\r\n    window.onfocus = event => this.__onVisbilityChange(event);\r\n    window.onpagehide = event => this.__onVisbilityChange(event);\r\n    window.onpageshow = event => this.__onVisbilityChange(event);\r\n\r\n    if (document.hidden && this.mPauseOnHide === true)\r\n      this.mPaused = true;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @returns {void}\r\n   */\r\n  __onVisbilityChange(event) {\r\n    let type = event.type;\r\n\r\n    if (type === 'blur' && this.mPauseOnBlur === true)\r\n      this.mPaused = true;\r\n    else if (type === 'pagehide' && this.mPauseOnHide === true)\r\n      this.mPaused = true;\r\n    else if (type === 'focus' || type === 'pageshow') {\r\n      if (document.hidden === false)\r\n        this.mUnpausing = true;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Adds a given system to the execution list.\r\n   *\r\n   * @param  {System} system The System object you want to add.\r\n   * @return {System}\r\n   */\r\n  addSystem(system) {\r\n    this.mSystems.push(system);\r\n    return system;\r\n  }\r\n\r\n  /**\r\n   * Removes the given system from execution list.\r\n   *\r\n   * @param {System} system The System instance to remove.\r\n   * @return {System|null}\r\n   */\r\n  removeSystem(system) {\r\n    // TODO: remove system on next frame\r\n    var ix = this.mSystems.indexOf(system);\r\n    if (ix === -1)\r\n      return null;\r\n\r\n    this.mSystems.splice(ix, 1);\r\n    return system;\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @returns {void}\r\n   */\r\n  __bootVideo() {\r\n    this.mVideo = new this.mVideoDriverClass(this.mContainerElement, this.mStageWidth, this.mStageHeight);\r\n  }\r\n\r\n  /**\r\n   * Boots up the engine!\r\n   *\r\n   * @return {void}\r\n   */\r\n  start() {\r\n    if (this.mWasStopped === true) {\r\n      Debug.error('Black engine cannot be re-started.');\r\n      return;\r\n    }\r\n\r\n    this.constructor.instance = this;\r\n\r\n    if (this.mIsStarted === true)\r\n      return;\r\n\r\n    this.__bootViewport();\r\n    this.__bootSystems();\r\n    this.__bootVideo();\r\n    this.__bootStage();\r\n\r\n    this.mRoot = new this.mRootClass();\r\n    this.mRoot.name = 'root';\r\n    this.mRoot.mAdded = true; // why are not added actually?\r\n    this.mRoot.onAdded();\r\n\r\n    const self = this;\r\n\r\n    this.mIsStarted = true;\r\n    this.mVideo.start();\r\n\r\n    this.mRAFHandle = requestAnimationFrame(function (timestamp) {\r\n      // TODO: do first update here\r\n      self.mIsRunning = true;\r\n\r\n      self.mLastFrameTimeMs = timestamp;\r\n      self.mLastFpsUpdate = timestamp;\r\n      self.mFramesThisSecond = 0;\r\n\r\n      // Start the main loop.\r\n      self.mRAFHandle = requestAnimationFrame((x) => {\r\n        self.__update(x);\r\n      });\r\n    });\r\n\r\n    // TODO: show only when needed, eg required by any system\r\n    if (this.mEnableFixedTimeStep === false)\r\n      Debug.info('Fixed time-step is disabled, some systems may not work.');\r\n  }\r\n\r\n  /**\r\n   * Stops any executions, destroys resources and scene.\r\n   *\r\n   * @return {void}\r\n   */\r\n  stop() {\r\n    this.mIsStarted = false;\r\n    this.mIsRunning = false;\r\n    cancelAnimationFrame(this.mRAFHandle);\r\n\r\n    console.log('%c                        <<< BUY BUY >>>                        ', 'background: #000; color: #fff;');\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {number} timestamp\r\n   *\r\n   * @return {void}\r\n   */\r\n  __update(timestamp) {\r\n    // TODO: this method seems to be totaly broken. maxAllowedFPS is not working correctly\r\n    this.constructor.instance = this;\r\n\r\n    const self = this;\r\n\r\n    if (this.mPaused === true && this.mUnpausing === true) {\r\n      this.mUnpausing = this.mPaused = false;\r\n\r\n      this.mLastFrameTimeMs = 0;\r\n      this.mLastFpsUpdate = timestamp;\r\n      this.mLastFrameTimeMs = timestamp;\r\n      this.mCurrentTime = 0; // same as first update\r\n      this.mFrameAccum = 0;\r\n    }\r\n\r\n    if (timestamp < this.mLastFrameTimeMs + this.mMinFrameDelay) {\r\n      this.mRAFHandle = window.requestAnimationFrame(this.__update.bind(this));\r\n      return;\r\n    }\r\n\r\n    if (this.mPaused === false) {\r\n      this.mFrameAccum += (timestamp - this.mLastFrameTimeMs);\r\n      this.mLastFrameTimeMs = timestamp;\r\n\r\n      // BEGIN\r\n      if (timestamp > this.mLastFpsUpdate + 1000) {\r\n        this.mFPS = this.mFramesThisSecond;\r\n\r\n        this.mLastFpsUpdate = timestamp;\r\n        this.mFramesThisSecond = 0;\r\n      }\r\n      this.mFramesThisSecond++;\r\n\r\n      this.mNumUpdateSteps = 0;\r\n\r\n      // fix first update\r\n      if (this.mCurrentTime === 0)\r\n        this.mCurrentTime = timestamp - this.mMinFrameDelay;\r\n\r\n      const dt = Time.scale * ((timestamp - this.mCurrentTime) * 0.001);\r\n      this.mCurrentTime = timestamp;\r\n      Time.mDeltaTime = dt;\r\n\r\n      if (this.mEnableFixedTimeStep === true) {\r\n        while (this.mFrameAccum >= this.mSimulationTimestep) {\r\n          this.__internalFixedUpdate(this.mSimulationTimestep * 0.001);\r\n\r\n          this.mFrameAccum -= this.mSimulationTimestep;\r\n\r\n          if (++this.mNumUpdateSteps >= (60 * 3)) { // 3 seconds window\r\n            console.log('[BLACK]: Not enough time to calculate update logic.');\r\n            this.mIsPanic = true;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      this.__internalUpdate(dt);\r\n      this.__internalPostUpdate(dt);\r\n\r\n      this.mVideo.beginFrame();\r\n      this.mRoot.__render(this.mVideo, this.mUptime, 1, BlendMode.AUTO);\r\n      this.mVideo.endFrame();\r\n\r\n      // TODO: remove uptime\r\n      this.mUptime += dt;\r\n      Time.mTime = this.mUptime;\r\n\r\n      this.mIsPanic = false;\r\n    }\r\n\r\n    this.mRAFHandle = window.requestAnimationFrame(this.__update.bind(this));\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {number} dt\r\n   * @return {void}\r\n   */\r\n  __internalFixedUpdate(dt) {\r\n    for (let i = 0; i < this.mSystems.length; i++)\r\n      this.mSystems[i].onFixedUpdate(dt);\r\n\r\n    this.mRoot.__fixedUpdate(dt);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {number} dt\r\n   * @return {void}\r\n   */\r\n  __internalUpdate(dt) {\r\n    for (let i = 0; i < this.mSystems.length; i++)\r\n      this.mSystems[i].onUpdate(dt, this.mUptime);\r\n\r\n    this.mRoot.__update(dt);\r\n  }\r\n\r\n  /**\r\n   * @private\r\n   * @param {number} dt\r\n   * @return {void}\r\n   */\r\n  __internalPostUpdate(dt) {\r\n    for (let i = 0; i < this.mSystems.length; i++)\r\n      this.mSystems[i].onPostUpdate(dt, this.mUptime);\r\n\r\n    this.mRoot.__postUpdate(dt);\r\n  }\r\n\r\n  /**\r\n   * Returns the root GameObject.\r\n   * @return {GameObject}\r\n   */\r\n  get root() {\r\n    return this.mRoot;\r\n  }\r\n\r\n  /**\r\n   * Returns current video driver instance.\r\n   * @return {VideoNullDriver}\r\n   */\r\n  get video() {\r\n    return this.mVideo;\r\n  }\r\n\r\n  /**\r\n   * If `enableFixedTimeStep` is set to `true` returns number of milliseconds fixed-time-step will run over.\r\n   * @return {number}\r\n   */\r\n  get simulationTimestep() {\r\n    return this.mSimulationTimestep;\r\n  }\r\n\r\n  /**\r\n   * Sets the number of milliseconds for fixed-time-step to run over.\r\n   *\r\n   * @param {number} timestep\r\n   * @return {void}\r\n   */\r\n  set simulationTimestep(timestep) {\r\n    this.mSimulationTimestep = timestep;\r\n  }\r\n\r\n  /**\r\n   * Returns current frame rate\r\n   * @return {number}\r\n   */\r\n  get FPS() {\r\n    return this.mFPS;\r\n  }\r\n\r\n  /**\r\n   * Returns max number of updates engine must do in a second.\r\n   * @return {number}\r\n   */\r\n  get maxAllowedFPS() {\r\n    return 1000 / this.mMinFrameDelay;\r\n  }\r\n\r\n  /**\r\n   * maxAllowedFPS - Sets the number of update engine must do per second.\r\n   * @param {number} fps The max allowed FPS. If less then zero engine will be stopped.\r\n   * @return {void}\r\n   */\r\n  set maxAllowedFPS(fps) {\r\n    if (fps <= 0)\r\n      this.stop();\r\n    else\r\n      this.mMinFrameDelay = 1000 / fps;\r\n  }\r\n\r\n  /**\r\n   * Returns the current viewport instance. Used to get size of a game screen, or listen for resize messages.\r\n   * @return {Viewport}\r\n   */\r\n  get viewport() {\r\n    return this.mViewport;\r\n  }\r\n\r\n  /**\r\n   * Retruns the DOM element the engine runs in.\r\n   * @return {Element}\r\n   */\r\n  get containerElement() {\r\n    return this.mContainerElement;\r\n  }\r\n\r\n  /**\r\n   * Returns amount of seconds since engine start.\r\n   * @return {number}\r\n   */\r\n  get uptime() {\r\n    return this.mUptime;\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param {GameObject} child\r\n   * @param {string|null} oldTag\r\n   * @param {string|null} newTag\r\n   *\r\n   * @return {void}\r\n   */\r\n  onTagUpdated(child, oldTag, newTag) {\r\n    if (oldTag !== null) {\r\n      let arr = this.mTagCache[oldTag];\r\n      arr.splice(arr.indexOf(child), 1);\r\n\r\n      if (arr.length === 0)\r\n        delete this.mTagCache[oldTag];\r\n    }\r\n\r\n    if (newTag !== null) {\r\n      if (this.mTagCache.hasOwnProperty(newTag) === false)\r\n        this.mTagCache[newTag] = [];\r\n\r\n      this.mTagCache[newTag].push(child);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param  {GameObject} child\r\n   * @return {void}\r\n   */\r\n  onChildrenAdded(child) {\r\n    for (let i = 0; i < this.mSystems.length; i++)\r\n      this.mSystems[i].onChildrenAdded(child);\r\n\r\n    GameObject.forEach(child, (x) => {\r\n      if (x.mAdded === true)\r\n        return;\r\n\r\n      this.onTagUpdated(x, null, x.mTag);\r\n\r\n      x.mAdded = true;\r\n      x.onAdded();\r\n\r\n      for (let i = 0; i < x.mComponents.length; i++) {\r\n        let c = x.mComponents[i];\r\n\r\n        if (c.mAdded === true)\r\n          continue;\r\n\r\n        c.mAdded = true;\r\n        c.onAdded(x);\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param  {GameObject} child\r\n   * @return {void}\r\n   */\r\n  onChildrenRemoved(child) {\r\n    for (let i = 0; i < this.mSystems.length; i++)\r\n      this.mSystems[i].onChildrenRemoved(child);\r\n\r\n    GameObject.forEach(child, (x) => {\r\n      if (x.mAdded === true) {\r\n        this.onTagUpdated(x, x.mTag, null);\r\n\r\n        x.mAdded = false;\r\n        x.onRemoved();\r\n\r\n        for (let i = 0; i < x.mComponents.length; i++) {\r\n          let c = x.mComponents[i];\r\n\r\n          if (c.mAdded === false)\r\n            continue;\r\n\r\n          c.mAdded = false;\r\n          c.onRemoved(x);\r\n        }\r\n      }\r\n    });\r\n  }\r\n\r\n  /**\r\n   * @protected\r\n   * @param  {GameObject} child\r\n   * @param  {Component} component\r\n   * @return {void}\r\n   */\r\n  onComponentAdded(child, component) {\r\n    for (let i = 0; i < this.mSystems.length; i++)\r\n      this.mSystems[i].onComponentAdded(child, component);\r\n\r\n    if (component.mAdded === true)\r\n      return;\r\n\r\n    component.mAdded = true;\r\n    component.onAdded(child);\r\n  }\r\n\r\n  /**\r\n   * @param  {GameObject} child\r\n   * @param  {Component} component\r\n   * @return {void}\r\n   */\r\n  onComponentRemoved(child, component) {\r\n    for (let i = 0; i < this.mSystems.length; i++)\r\n      this.mSystems[i].onComponentRemoved(child, component);\r\n\r\n    if (component.mAdded === false)\r\n      return;\r\n\r\n    component.mAdded = false;\r\n    component.onRemoved(child);\r\n  }\r\n\r\n  /**\r\n   * Returns if engine should be automatically paused when window is hidden.\r\n   * @return {boolean}\r\n   */\r\n  get pauseOnHide() {\r\n    return this.mPauseOnHide;\r\n  }\r\n\r\n  /**\r\n   * Sets if engine should be automatically paused when window is hidden.\r\n   * @param {boolean} value\r\n   * @return {void}\r\n   */\r\n  set pauseOnHide(value) {\r\n    this.mPauseOnHide = value;\r\n  }\r\n\r\n  /**\r\n   * Returns if engine should be automatically paused when container element is blured.\r\n   * @return {boolean}\r\n   */\r\n  get pauseOnBlur() {\r\n    return this.mPauseOnBlur;\r\n  }\r\n\r\n  /**\r\n   * Sets if engine should be automatically paused when container element is blured.\r\n   * @param {boolean} value\r\n   * @return {void}\r\n   */\r\n  set pauseOnBlur(value) {\r\n    this.mPauseOnBlur = value;\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns if fixed-time-step update should happen. When disabled the physics system and other systems may not work.\r\n   * @return {boolean}\r\n   */\r\n  get enableFixedTimeStep() {\r\n    return this.mEnableFixedTimeStep;\r\n  }\r\n\r\n\r\n  /**\r\n   * Returns True if engine is paused.\r\n   *\r\n   * @returns {boolean}\r\n   */\r\n  get isPaused() {\r\n    return this.mPaused;\r\n  }\r\n\r\n  /**\r\n   * Sets if fixed-time-step update should happen. When disabled the physics system and other systems may not work.\r\n   *\r\n   * @param {boolean} value\r\n   * @return {void}\r\n   */\r\n  set enableFixedTimeStep(value) {\r\n    this.mEnableFixedTimeStep = value;\r\n  }\r\n\r\n  dispose() {\r\n    // todo: call dispose on eveyrthing!\r\n  }\r\n\r\n  get magic() {\r\n    return Math.random();\r\n  }\r\n}"]}