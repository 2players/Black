{"version":3,"sources":["MathEx.js","Helpers.js","Vector.js","Matrix.js","Rectangle.js","Circle.js","Line.js","Polygon.js","Curve.js","Debug.js","MessageDispatcher.js","Time.js","System.js","Viewport.js","Component.js","GameObject.js","Texture.js","AtlasTexture.js","Asset.js","TextureAsset.js","JSONAsset.js","AtlasTextureAsset.js","AssetManager.js","BlendMode.js","VideoNullDriver.js","CanvasDriver.js","DOMDriver.js","DisplayObject.js","TextInfo.js","Sprite.js","TextField.js","Device.js","Scatter.js","FloatScatter.js","VectorScatter.js","CurveScatter.js","Action.js","Acceleration.js","AlphaOverLife.js","ScaleOverLife.js","RotationOverLife.js","TextureOverLife.js","Initializer.js","Life.js","Mass.js","Scale.js","Velocity.js","Position.js","Rotation.js","RandomTexture.js","EmitterState.js","Particle.js","Emitter.js","Key.js","KeyInfo.js","Input.js","InputComponent.js","FPSComponent.js","MRComponent.js","Ease.js","Interpolation.js","Tween.js","Animation.js","AnimationController.js","Black.js"],"names":["Math","randomBetween","a","b","floor","random","clamp","value","min","max","lerp","t","lerpp","PI_Q","PI","PI2","DEG2RAD","RAD2DEG","Vector","x","y","vector","sqrt","scalar","sum","lengthSqr","epsilon","Number","EPSILON","abs","rotation","subtract","setRotation","add","cos","toFixed","sin","set","acos","dot","length","angle","vectorMin","vectorMax","outVector","undefined","__cache","Matrix","c","d","tx","ty","_matrix","Float32Array","m","dx","dy","a0","a1","a2","a3","a4","a5","theta","scale","sx","sy","bv","b0","b1","b2","b3","b4","b5","a11","c11","tx11","rect","outRect","Rectangle","minX","MAX_VALUE","maxX","minY","maxY","xx","yy","tmpVector","points","width","height","i","transformXY","aa","ab","ac","ad","atx","aty","det","skewX","atan2","skewY","delta","r_rotation","r_skewX","r_skewY","r_scaleX","r_scaleY","r_x","r_y","v","matrix","copyTo","w","h","right","bottom","toUnion","clone","x0","x1","y0","y1","volume","cacheRight","cacheBottom","left","top","Line","topLeft","topRight","bottomRight","bottomLeft","Circle","r","circle","contains","distance","start","end","line","equals","normalize","multyplier","multiplyScalar","start1","end1","start2","end2","denominator","numerator1","numerator2","directionX","directionY","nearest","nearestDistance","dt","pow","x2","y2","__isInBoundsXY","Polygon","vertices","lines","bounds","center","refresh","polygon","len","push","polygonVertices","thisVertices","intersectionLine","intersects","thisLines","thisLen","polygonLines","polygonLen","j","intersectsCircle","rectangle","rectangleLines","rectangleLen","containsXY","point","perimeter","path","path2","split","Curve","mPoints","mLookup","mBaked","mStep","mEachT","__initPoints","__refreshEachT","__refreshCache","res","concat","slice","lookup","getFullLength","pointsLen","getLength","step","eachT","eachLength","s","ceil","p","copyFrom","minT","maxT","bezier","mPointsLen","label","startX","startY","cpStartX","cpStartY","cpEndX","cpEndY","endX","endY","u","tt","uu","uuu","ttt","p0","p1","p2","p3","Debug","assert","message","logOnFail","console","error","throwOnFail","Error","info","warn","MessageDispatcher","mListeners","name","callback","context","filterIx","indexOf","pureName","substring","pathMask","mGlobalHandlers","hasOwnProperty","dispatchers","splice","__parseMessage","isGameObject","GameObject","mDirection","params","__invoke","__invokeGlobal","mOrigin","root","mSibblings","__sendGlobal","__sendBubbles","sender","toTop","list","current","parent","dispatcher","origin","numChildren","child","getChildAt","mName","mPathMask","inPath","__checkPath","mTarget","call","RegExp","join","test","result","Message","mSender","mComponentMask","charAt","ixAt","ixHash","substr","mCanceled","Time","mTime","mDeltaTime","mScale","System","component","Viewport","containerElement","mContainerElement","style","userSelect","touchAction","overflow","cursor","WebkitTapHighlightColor","size","getBoundingClientRect","mSize","window","addEventListener","__onResize","post","Component","mId","ID","gameObject","mAdded","removeComponent","mComponents","mChildren","mX","mY","mScaleX","mScaleY","mPivotX","mPivotY","mRotation","mBounds","mLocalTransform","mWorldTransform","mDirty","DirtyFlag","DIRTY","mParent","mTag","mIndex","gameObjectsAndOrComponents","gooc","addChild","addComponent","addChildAt","index","setChildIndex","removeFromParent","__setParent","Black","instance","onChildrenAdded","setTransformDirty","ix","dispose","removeChild","removeChildAt","hadRoot","onChildrenRemoved","onComponentAdded","onAdded","onRemoved","onComponentRemoved","typeName","onFixedUpdate","k","__fixedUpdate","onUpdate","__update","onPostUpdate","__postUpdate","video","time","parentAlpha","parentBlendMode","onRender","__render","space","includeChildren","worldTransformation","prepend","invert","onGetLocalBounds","transformRect","expand","getBounds","scaleX","scaleY","anchorX","anchorY","zero","localPoint","transformVector","globalPoint","worldTransformationInversed","ax","ay","gen","ctx","iter","apply","it","done","next","seconds","setTimeout","cb","bind","on","flag","forEach","setDirty","LOCAL","WORLD","append","localTransformation","depth","currentWidth","currentHeight","old","onTagUpdated","inv","obj","intersectsWith","inside","tag","mTagCache","type","f","node","action","find","Texture","nativeTexture","region","untrimmedRect","mTexture","mRegion","mIsSubtexture","__ID","naturalWidth","naturalHeight","mTrimmed","mUntrimmedRect","mIsLoaded","string","imgElement","Image","src","canvas","quality","toDataURL","getTextureFromCanvas","MISSING_IMAGE_CACHE","AtlasTexture","texture","jsonObject","native","mMeta","mSubTextures","__parseJson","o","NEGATIVE_HALF_PI","key","frames","data","nameMask","outTextures","out","names","re","sort","__naturalComparer","NUMBER_GROUPS","String","bb","parseFloat","toLowerCase","Asset","url","mUrl","mData","mMimeType","mResponseType","mExtension","getExtension","mRequest","XMLHttpRequest","overrideMimeType","responseType","open","onreadystatechange","readyState","status","responseText","onLoaded","send","TextureAsset","mImageElement","onload","JSONAsset","mimeType","JSON","parse","AtlasTextureAsset","imageUrl","dataUrl","dataAsset","onJsonLoaded","load","AssetManager","mDefaultPath","mTotalLoaded","mIsAllLoaded","mLoadingProgress","mQueue","mTextures","mAtlases","mJsons","item","COMPLETE","onAssetLoaded","msg","constructor","PROGRESS","getTexture","default","BlendMode","AUTO","NORMAL","ADD","MULTIPLY","SCREEN","OVERLAY","DARKEN","LIGHTEN","COLOR_DODGE","COLOR_BURN","HARD_LIGHT","SOFT_LIGHT","DIFFERENCE","EXCLUSION","HUE","SATURATE","COLOR","LUMINOSITY","VideoNullDriver","mGlobalBlendMode","mClientWidth","mClientHeight","mTransform","mGlobalAlpha","mMeasureElement","document","createElement","position","appendChild","viewport","clientWidth","clientHeight","text","textWidth","textHeight","color","parsedColor","toString","el","innerHTML","whiteSpace","fontSize","fontFamily","fontStyle","fontWeight","weight","offsetWidth","strokeThickness","offsetHeight","CanvasDriver","mCtx","__createCanvas","cvs","id","getContext","setTransform","ox","oy","drawImage","beginPath","clip","font","fillStyle","hexColorToString","align","textBaseline","fillText","lineWidth","strokeStyle","strokeColor","strokeText","closePath","clearRect","clear","save","restore","globalAlpha","blendMode","globalCompositeOperation","DOMDriver","mCache","mCounter","mPixelated","mCurrentObject","__initCSS","imgRendering","sSprite","getElementsByTagName","sSpritePixelated","sText","sViewport","className","parentNode","fromCanvasAsImage","oldTransform","__popElement","__updateElementCommon","__updateImageElement","__updateTextElement","transform","webkitTransform","opacity","backgroundImage","isSubTexture","vBackgroundPosition","backgroundPosition","textAlign","webkitTextStrokeColor","webkitTextStrokeWidth","DisplayObject","mAlpha","mVisible","TextInfo","FontStyle","FontWeight","FontAlign","LEFT","ITALIC","BOLD","SUPERBOLD","RIGHT","CENTER","Sprite","tmpBlendMode","globalBlendMode","getComponent","InputComponent","touchable","TextField","mText","mNeedInvalidate","mCacheBounds","mFieldWidth","mFieldHeight","mTextWidth","mTextHeight","mStyle","mAutoSize","__validate","drawText","strokeCorrection","driver","vSize","measureText","Device","mInstance","mPixelRatio","getDevicePixelRatio","screen","systemXDPI","logicalXDPI","devicePixelRatio","userAgent","navigator","vendor","opera","hasEvent","maxTouchPoints","Scatter","FloatScatter","ease","VectorScatter","FloatCurveScatter","mCurve","baked","interpolate","VectorCurveScatter","Action","emmiter","particle","Acceleration","vectorScatter","scatter","getValue","AlphaOverLife","floatScatter","alpha","getValueAt","energy","ScaleOverLife","RotationOverLife","TextureOverLife","textureIndex","Initializer","Life","life","Mass","mass","Scale","Velocity","vx","vy","Position","Rotation","RandomTexture","EmitterState","PENDING","EMITTING","FINISHED","Particle","reset","age","Emitter","mParticles","mRecycled","mInitializers","mActions","mSpace","mIsLocal","mMaxParticles","mEmitCount","mEmitNumRepeats","Infinity","mEmitNumRepeatsLeft","mEmitDuration","mEmitDurationLeft","mEmitInterval","mEmitIntervalLeft","mEmitDelay","mEmitDelayLeft","mNextUpdateAt","mState","__tmpLocal","__tmpWorld","uptime","firstEmit","initializer","localTransform","worldTransform","identity","plength","tw","th","updateNextTick","__create","alength","preUpdate","update","postUpdate","amount","minv","pop","initer","initialize","transformDirectionXY","Key","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","DIGIT_0","DIGIT_1","DIGIT_2","DIGIT_3","DIGIT_4","DIGIT_5","DIGIT_6","DIGIT_7","DIGIT_8","DIGIT_9","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_MULTIPLY","NUMPAD_ADD","NUMPAD_SUBTRACT","NUMPAD_DECIMAL","NUMPAD_DIVIDE","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","PAUSE_BREAK","CAPS_LOCK","ESCAPE","PAGE_UP","PAGE_DOWN","END","HOME","INSERT","DELETE","LEFT_WINDOW","RIGHT_WINDOW","CONTEXT_MENU","NUM_LOCK","SCROLL_LOCK","SEMI_COLON","EQUAL_SIGN","COMMA","DASH","PERIOD","FORWARD_SLASH","BACKQUOTE","BRAKET_LEFT","BACK_SLASH","BRAKET_RIGHT","SINGLE_QUOTE","KeyInfo","nativeEvent","keyCode","code","char","shiftKey","altKey","ctrlKey","Input","mPointerPosition","mDom","mEventList","mKeyEventList","__initListeners","mPointerQueue","mKeyQueue","mPressedKeys","mIsPointerDown","mNeedUpEvent","mInputListeners","PointerEvent","mPointerEventList","isTouch","isMobile","mTouchEventList","mMouseEventList","__onPointerEvent","e","POINTER_UP","__onPointerEventDoc","__onKeyEvent","over","target","parentElement","__pushEvent","preventDefault","__getTouchPos","__getPointerPos","evt","clientX","clientY","touch","changedTouches","array","__sortListeners","cs","findComponents","__addListener","pointerPos","fnName","mInputEventsLookup","currentComponent","mPointerInside","POINTER_DOWN","pIx","mKeyEventsLookup","POINTER_MOVE","POINTER_CANCEL","POINTER_IN","POINTER_OUT","FPSComponent","txtFPS","FPS","MRComponent","mWidth","mHeight","mInvScale","mAspect","setSize","updateLayout","Ease","bounceOut","bounceIn","Interpolation","fn","n","bn","fc","__factorial","v0","v1","t2","t3","Tween","values","duration","properties","mValues","mDuration","mProperties","mIsPlaying","mIsPaused","mStartTime","mPausedTime","mValuesStart","mElapsed","mInterpolation","linear","mDelay","mRepeatTimes","mInitiated","mStarted","mReverse","mRemoveOnComplete","mPlayOnAdded","mEase","smootherStep","__start","__resume","stop","remove","times","tween","play","Array","isArray","Animation","controller","fps","loop","mController","mFrames","mCurrentFrame","mNextFrameAt","mFPS","mFrameDuration","mLoop","mPaused","mStopped","mCompleted","diff","AnimationController","mAnimations","mCurrentAnim","textures","anim","sprite","pause","newTexture","containerElementId","rootClass","videoDriverClass","css","log","mContainerElementId","getElementById","mVideoDriverClass","mStageWidth","mStageHeight","mSimulationTimestep","mUptime","mFrameAccum","mLastFrameTimeMs","mCurrentTime","mLastFpsUpdate","mFramesThisSecond","mNumUpdateSteps","mMinFrameDelay","mSystems","mIsRunning","mIsStarted","mIsPanic","mLastFrameUpdateTime","mLastFrameRenderTime","mRAFHandle","mViewport","mVideo","mUnpausing","mPauseOnHide","mPauseOnBlur","mRootClass","mRoot","mEnableFixedTimeStep","addSystem","onblur","__onVisbilityChange","event","onfocus","onpagehide","onpageshow","hidden","system","__bootViewport","__bootSystems","__bootVideo","__bootStage","self","requestAnimationFrame","timestamp","cancelAnimationFrame","__internalFixedUpdate","__internalUpdate","__internalPostUpdate","beginFrame","endFrame","oldTag","newTag","arr","timestep"],"mappings":"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","file":"black-es5.js","sourcesContent":["/**\n * randomBetween\n *\n * @param {number} a\n * @param {number} b\n *\n * @return {number}\n */\nMath.randomBetween = function (a, b) {\n  return Math.floor(Math.random() * (b - a + 1) + a);\n};\n\n\n/**\n * clamp\n *\n * @param {number} value\n * @param {number} min\n * @param {number} max\n *\n * @return {number}\n */\nMath.clamp = function (value, min, max) {\n  return (value < min) ? min : (value > max) ? max : value;\n};\n\n\n/**\n * lerp\n *\n * @param {number} a\n * @param {number} b\n * @param {number} t\n *\n * @return {number}\n */\nMath.lerp = function (a, b, t) {\n  return a + t * (b - a);\n};\n\n\n/**\n * lerpp\n *\n * @param {number} a\n * @param {number} b\n * @param {number} t\n *\n * @return {number}\n */\nMath.lerpp = function (a, b, t) {\n  return (1 - t) * a + t * b;\n};\n\n/** @const\n *  @type {number}\n */\nMath.PI_Q = Math.PI / 4;\n\n/** @const\n *  @type {number}\n */\nMath.PI2 = Math.PI * 2;\n\n/** @const\n *  @type {number}\n */\nMath.DEG2RAD = 0.01745329251994329576923690768489;\n\n/** @const\n *  @type {number}\n */\nMath.RAD2DEG = 57.295779513082320876798154814105;\n// \n//\n//\n// /**\n//  * fsin - Fast sin\n//  *\n//  * @param {number} x\n//  *\n//  * @return {number}\n//  */\n// Math.fsin = function(x) {\n//   if (x === 0)\n//     return 0;\n//\n//   // modulo to range of -PI..PI\n//   const width = 3.14159265 - -3.14159265;\n//   const offsetValue = x - -3.14159265;\n//   x = (offsetValue - (Math.floor(offsetValue / width) * width)) + -3.14159265;\n//\n//   return x < 0 ? 1.27323954 * x + 0.405284735 * x * x : 1.27323954 * x - 0.405284735 * x * x;\n// }\n//\n//\n// /**\n//  * fcos - Fast cos\n//  *\n//  * @param {number} x\n//  *\n//  * @return {number}\n//  */\n// Math.fcos = function(x) {\n//   x += 1.57079632;\n//\n//   // modulo to range of -PI..PI\n//   const width = 3.14159265 - -3.14159265;\n//   const offsetValue = x - -3.14159265;\n//   x = (offsetValue - (Math.floor(offsetValue / width) * width)) + -3.14159265;\n//\n//   return x < 0 ? 1.27323954 * x + 0.405284735 * x * x : 1.27323954 * x - 0.405284735 * x * x;\n// }\n","// function assert(title, condition) {\n//   if (condition)\n//     console.log('%s %c[  OK  ]', title + ' ' + '.'.repeat(88 - title.length), 'color:green;')\n//   else\n//     console.log('%s %c[FAILED]', title + ' ' + '.'.repeat(88 - title.length), 'color:red;')\n// }\n//\n// function perfTest(testName, fn, ctx, count = 1000) {\n//   let startTime = new Date().getTime();\n//\n//   for (var i = 0; i < count; i++)\n//     fn.apply(ctx);\n//     //fn();\n//\n//   return (new Date().getTime() - startTime);\n// }\n//\n// function perfCompare(testsName, fn1, fn2, ctx, count = 1000) {\n//   let t1 = perfTest(testsName, fn1, ctx, count);\n//   let t2 = perfTest(testsName, fn2, ctx, count);\n//\n//   let c1 = 'color:green;'\n//   let c2 = 'color:red;'\n//\n//   if (t1 > t2) {\n//     c1 = c2;\n//     c2 = 'color:green;'\n//   }\n//\n//   console.log('%s:%c %dms %cvs%c %dms', testsName, c1, t1, 'color:black;', c2, t2);\n// }\n//\n// function assertf(title, func) {\n//   const r = func();\n//\n//   const statuses = ['[  OK  ]', '[FAILED]'];\n//   const colors = ['color:green;', 'color:red;'];\n//\n//   console.log('%s %c%s', title + ' ' + '.'.repeat(88 - title.length), r ? colors[0] : colors[1], r ? statuses[0] : statuses[1]);\n// }\n","\nclass Vector {\n  /**\n   * @param  {number=} x = 0 description\n   * @param  {number=} y = 0 description\n   */\n  constructor(x = 0, y = 0) {\n    /** @type {number} */\n    this.x = x;\n\n    /** @type {number} */\n    this.y = y;\n  }\n\n  /**\n   * set - Description\n   *\n   * @param {number=} [x=0] Description\n   * @param {number=} [y=0] Description\n   *\n   * @return {Vector} Description\n   */\n  set(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n\n    return this;\n  }\n\n  /**\n   * add - Description\n   *\n   * @param {Vector} vector Description\n   *\n   * @return {Vector} Description\n   */\n  add(vector) {\n    this.x += vector.x;\n    this.y += vector.y;\n\n    return this;\n  }\n\n  /**\n   * subtract - Description\n   *\n   * @param {Vector} vector Description\n   *\n   * @return {Vector} Description\n   */\n  subtract(vector) {\n    this.x -= vector.x;\n    this.y -= vector.y;\n\n    return this;\n  }\n\n  /**\n   * distance - Description\n   *\n   * @param {Vector} vector Description\n   *\n   * @return {number} Description\n   */\n  distance(vector) {\n    let x = this.x - vector.x;\n    let y = this.y - vector.y;\n\n    return Math.sqrt((x * x) + (y * y));\n  }\n\n  /**\n   * multiply - Description\n   *\n   * @param {Vector} vector Description\n   *\n   * @return {Vector} Description\n   */\n  multiply(vector) {\n    this.x *= vector.x;\n    this.y *= vector.y;\n\n    return this;\n  }\n\n  /**\n   * multiplyScalar - Description\n   *\n   * @param {number} scalar Description\n   *\n   * @return {Vector} Description\n   */\n  multiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n\n    return this;\n  }\n\n  /**\n   * dot - Description\n   *\n   * @param {Vector} vector Description\n   *\n   * @return {number} Description\n   */\n  dot(vector) {\n    return this.x * vector.x + this.y * vector.y;\n  }\n\n  /**\n   * length - Description\n   *\n   * @return {number} Description\n   */\n  length() {\n    let x = this.x;\n    let y = this.y;\n\n    return Math.sqrt(x * x + y * y);\n  }\n\n  /**\n   * lengthSqr - Description\n   *\n   * @return {number} Description\n   */\n  lengthSqr() {\n    let x = this.x;\n    let y = this.y;\n\n    return x * x + y * y;\n  }\n\n  normalize() {\n    let sum = this.lengthSqr();\n\n    if (sum > 0) {\n      sum = Math.sqrt(sum);\n      this.x /= sum;\n      this.y /= sum;\n    } else {\n      this.x = 0;\n      this.y = 0;\n    }\n\n    return this;\n  }\n\n  /**\n   * clamp - Description\n   *\n   * @param {number} min Description\n   * @param {number} max Description\n   *\n   * @return {Vector} Description\n   */\n  clamp(min, max) {\n    this.x = Math.clamp(this.x, min, max);\n    this.y = Math.clamp(this.y, min, max);\n\n    return this;\n  }\n\n  /**\n   * lerp - Description\n   *\n   * @param {Vector} vector Description\n   * @param {number} t      Description\n   *\n   * @return {Vector} Description\n   */\n  lerp(vector, t) {\n    this.x = Math.lerp(this.x, vector.x, t);\n    this.y = Math.lerp(this.y, vector.y, t);\n\n    return this;\n  }\n\n  /**\n   * copyTo - Description\n   *\n   * @param {Vector} vector Description\n   *\n   * @return {Vector} Description\n   */\n  copyTo(vector) {\n    vector.x = this.x;\n    vector.y = this.y;\n\n    return vector;\n  }\n\n  /**\n   * copyFrom - Description\n   *\n   * @param {Vector} vector Description\n   *\n   * @return {Vector} Description\n   */\n  copyFrom(vector) {\n    this.x = vector.x;\n    this.y = vector.y;\n\n    return this;\n  }\n\n  /**\n   * clone - Description\n   *\n   * @return {Vector} Description\n   */\n  clone() {\n    return new Vector(this.x, this.y);\n  }\n\n  /**\n   * equals - Description\n   *\n   * @param {Vector} vector Description\n   * @param {number=} epsilon Description\n   *\n   * @return {boolean}\n   */\n  equals(vector, epsilon = Number.EPSILON) {\n    return vector !== null && (Math.abs(vector.x - this.x) < epsilon) && (Math.abs(vector.y - this.y) < epsilon);\n  }\n\n  /**\n   * isEmpty - Description\n   *\n   * @return {boolean} Description\n   */\n  isEmpty() {\n    return this.x === 0 && this.y === 0;\n  }\n\n  /**\n   * setRotationFrom - Rotates this vector around specified point.\n   *\n   * @param {Vector} vector Center vector.\n   * @param {number} rotation Angle in radians.\n   *\n   * @return {Vector} This rotated vector.\n   */\n  setRotationFrom(vector, rotation) {\n    return this\n      .subtract(vector)\n      .setRotation(rotation)\n      .add(vector);\n  }\n\n  /**\n   * setRotation - Rotates this vector around zero vector\n   *\n   * @param {number} rotation Angle in radians\n   *\n   * @return {Vector} This rotated vector.\n   */\n  setRotation(rotation) {\n    let cos = Math.cos(rotation).toFixed(15);\n    let sin = Math.sin(rotation).toFixed(15);\n\n    return this.set(this.x * cos - this.y * sin, this.x * sin + this.y * cos);\n  }\n\n  /**\n   * theta - Calculates angle in radians within this and specified vectors.\n   *\n   * @return {number} Angle in radians.\n   */\n  theta(vector) {\n    return Math.acos(this.dot(vector) / this.length() / vector.length());\n  }\n\n  /**\n   * perp - Rotates this vector to normal.\n   *\n   * @return {Vector} This vector.\n   */\n  perp() {\n    return this.set(this.y, -this.x);\n  }\n\n  /**\n   * fromAngle - Description\n   *\n   * @param {number=} [angle=0] Description\n   *\n   * @return {Vector} Description\n   */\n  static fromAngle(angle = 0) {\n    return new Vector(Math.cos(angle), Math.sin(angle));\n  }\n\n  /**\n   * randomRange\n   *\n   * @param {Vector} vectorMin\n   * @param {Vector} vectorMax\n   * @param {Vector=} outVector\n   *\n   * @return {Vector}\n   */\n  static randomRange(vectorMin, vectorMax, outVector = undefined) {\n    outVector = outVector || new Vector();\n\n    outVector.x = Math.random() * (vectorMax.x - vectorMin.x) + vectorMin.x;\n    outVector.y = Math.random() * (vectorMax.y - vectorMin.y) + vectorMin.y;\n\n    return outVector;\n  }\n\n}\n\n/** @type {Vector}\n * @nocollapse\n */\nVector.__cache = new Vector();\n","\nclass Matrix {\n  /**\n   * @param  {number} a = 1  description\n   * @param  {number} b = 0  description\n   * @param  {number} c = 0  description\n   * @param  {number} d = 1  description\n   * @param  {number} tx = 0 description\n   * @param  {number} ty = 0 description\n   * @return {number}        description\n   */\n  constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n    /** @type {Float32Array} */\n    this._matrix = new Float32Array(6);\n\n    this.set(a, b, c, d, tx, ty);\n  }\n\n  /**\n\n   * @param  {number} a  description\n   * @param  {number} b  description\n   * @param  {number} c  description\n   * @param  {number} d  description\n   * @param  {number} tx description\n   * @param  {number} ty description\n   * @return {Matrix}    description\n   */\n  set(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n    let m = this._matrix;\n\n    m[0] = a;\n    m[1] = b;\n    m[2] = c;\n    m[3] = d;\n    m[4] = tx;\n    m[5] = ty;\n\n    return this;\n  }\n\n  /**\n   * translate - Description\n   *\n   * @param {number} dx Description\n   * @param {number} dy Description\n   *\n   * @return {Matrix} Description\n   */\n  translate(dx, dy) {\n    let a = this._matrix;\n\n    let /** @type {number} */ a0 = a[0]; // a\n    let /** @type {number} */ a1 = a[1]; // b\n    let /** @type {number} */ a2 = a[2]; // c\n    let /** @type {number} */ a3 = a[3]; // d\n    let /** @type {number} */ a4 = a[4]; // tx\n    let /** @type {number} */ a5 = a[5]; // ty\n\n    this._matrix[4] += dx;\n    this._matrix[5] += dy;\n\n    return this;\n  }\n\n  /**\n   * setTranslation - Description\n   *\n   * @param {number} x Description\n   * @param {number} y Description\n   *\n   * @return {Matrix} Description\n   */\n  setTranslation(x, y) {\n    this._matrix[4] = x;\n    this._matrix[5] = y;\n\n    return this;\n  }\n\n  /**\n   * @param  {number} theta     description\n   * @param  {number} scale = 1 description\n   */\n  setRotation(theta, scale = 1) {\n    let m = this._matrix;\n    m[0] = Math.cos(theta) * scale;\n    m[2] = Math.sin(theta) * scale;\n    m[1] = -m[2];\n    m[3] = m[0];\n\n    return this;\n  }\n\n  /**\n   * rotate - angle\n   *\n   * @param  {number} angle description\n   * @return {Matrix}       description\n   */\n  rotate(angle) {\n    let a = this._matrix;\n    let cos = Math.cos(angle);\n    let sin = Math.sin(angle);\n    let a0 = a[0];\n    let a2 = a[2];\n    let a4 = a[4];\n\n    a[0] = a0 * cos - a[1] * sin;\n    a[1] = a0 * sin + a[1] * cos;\n    a[2] = a2 * cos - a[3] * sin;\n    a[3] = a2 * sin + a[3] * cos;\n    a[4] = a4 * cos - a[5] * sin;\n    a[5] = a4 * sin + a[5] * cos;\n\n    return this;\n  }\n\n  /**\n   * scale - Description\n   *\n   * @param {number} sx Description\n   * @param {number} sy Description\n   *\n   * @return {Matrix} Description\n   */\n  scale(sx, sy) {\n    let a = this._matrix;\n    let /** @type {number} */ a0 = a[0]; // a\n    let /** @type {number} */ a1 = a[1]; // b\n    let /** @type {number} */ a2 = a[2]; // c\n    let /** @type {number} */ a3 = a[3]; // d\n    let /** @type {number} */ a4 = a[4]; // tx\n    let /** @type {number} */ a5 = a[5]; // ty\n\n    this._matrix[0] = a0 * sx;\n    this._matrix[1] = a1 * sx;\n    this._matrix[2] = a2 * sy;\n    this._matrix[3] = a3 * sy;\n\n    return this;\n  }\n\n  /**\n   * identity - Description\n   *\n   * @return {Matrix} Description\n   */\n  identity() {\n    return this.set(1, 0, 0, 1, 0, 0);\n  }\n\n  /**\n   * Same as concat in flash\n   * @param  {Matrix} b description\n   * @return {Matrix}   description\n   */\n  prepend(b) {\n    let a = this._matrix;\n    let bv = b._matrix;\n\n    let /** @type {number} */ a0 = a[0]; // a\n    let /** @type {number} */ a1 = a[1]; // b\n    let /** @type {number} */ a2 = a[2]; // c\n    let /** @type {number} */ a3 = a[3]; // d\n    let /** @type {number} */ a4 = a[4]; // tx\n    let /** @type {number} */ a5 = a[5]; // ty\n\n    let /** @type {number} */ b0 = bv[0]; // a\n    let /** @type {number} */ b1 = bv[1]; // b\n    let /** @type {number} */ b2 = bv[2]; // c\n    let /** @type {number} */ b3 = bv[3]; // d\n    let /** @type {number} */ b4 = bv[4]; // tx\n    let /** @type {number} */ b5 = bv[5]; // ty\n\n    let a11 = (a0 * b0 + a1 * b2);\n    a[1] = a0 * b1 + a1 * b3;\n    a[0] = a11;\n\n    let c11 = (a2 * b0 + a3 * b2);\n    a[3] = a2 * b1 + a3 * b3;\n    a[2] = c11;\n\n    let tx11 = (a4 * b0 + a5 * b2 + b4);\n    a[5] = a4 * b1 + a5 * b3 + b5;\n    a[4] = tx11;\n    return this;\n  }\n\n  /**\n   * @param  {Matrix} b description\n   * @return {Matrix}   description\n   */\n  append(b) {\n    let a = this._matrix;\n    let bv = b._matrix;\n\n    let /** @type {number} */ a0 = a[0];\n    let /** @type {number} */ a1 = a[1];\n    let /** @type {number} */ a2 = a[2];\n    let /** @type {number} */ a3 = a[3];\n    let /** @type {number} */ a4 = a[4];\n    let /** @type {number} */ a5 = a[5];\n    let /** @type {number} */ b0 = bv[0];\n    let /** @type {number} */ b1 = bv[1];\n    let /** @type {number} */ b2 = bv[2];\n    let /** @type {number} */ b3 = bv[3];\n    let /** @type {number} */ b4 = bv[4];\n    let /** @type {number} */ b5 = bv[5];\n\n    a[0] = a0 * b0 + a2 * b1;\n    a[1] = a1 * b0 + a3 * b1;\n    a[2] = a0 * b2 + a2 * b3;\n    a[3] = a1 * b2 + a3 * b3;\n    a[4] = a0 * b4 + a2 * b5 + a4;\n    a[5] = a1 * b4 + a3 * b5 + a5;\n    return this;\n  }\n\n  /**\n   * @param  {number} x         description\n   * @param  {number} y         description\n   * @param  {Vector=} outVector description\n   * @return {Vector}           description\n   */\n  transformXY(x, y, outVector) {\n    outVector = outVector || new Vector();\n    let m = this._matrix;\n\n    outVector.x = m[0] * x + m[2] * y + m[4];\n    outVector.y = m[1] * x + m[3] * y + m[5];\n\n    return outVector;\n  }\n\n  /**\n   * @param  {number} x         description\n   * @param  {number} y         description\n   * @param  {Vector=} outVector description\n   * @return {Vector}           description\n   */\n  transformDirectionXY(x, y, outVector) {\n    let m = this._matrix;\n    outVector = outVector || new Vector();\n\n    outVector.x = m[0] * x + m[2] * y;\n    outVector.y = m[1] * x + m[3] * y;\n\n    return outVector;\n  }\n\n  /**\n   * transformVector - transforms vector by current matrix object.\n   *\n   * @param  {Vector} vector    description\n   * @param  {Vector=} outVector description\n   * @return {Vector}           description\n   */\n  transformVector(vector, outVector) {\n    outVector = outVector || new Vector();\n    let m = this._matrix;\n\n    outVector.x = m[0] * vector.x + m[2] * vector.y + m[4];\n    outVector.y = m[1] * vector.x + m[3] * vector.y + m[5];\n\n    return outVector;\n  }\n\n  /**\n   * transformRect - transforms rectangle by current matrix object.\n   *\n   * @param  {Rectangle} rect    description\n   * @param  {Rectangle|null} outRect description\n   * @return {Rectangle}         description\n   */\n  transformRect(rect, outRect) {\n    outRect = outRect || new Rectangle();\n\n    let minX = Number.MAX_VALUE;\n    let maxX = -Number.MAX_VALUE;\n    let minY = Number.MAX_VALUE;\n    let maxY = -Number.MAX_VALUE;\n    let xx = 0;\n    let yy = 0;\n    let tmpVector = new Vector();\n\n    // TODO: fix dirty hack. rewrite to use rect\n    //let points = [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height];\n\n    /** @type {Array<number>} */\n    let points = [rect.x, rect.y, rect.x + rect.width, rect.y, rect.x, rect.y + rect.height, rect.x + rect.width, rect.y + rect.height];\n\n    for (var i = 0; i < points.length; i += 2) {\n      xx = points[i];\n      yy = points[i + 1];\n\n      this.transformXY(xx, yy, tmpVector);\n\n      if (minX > tmpVector.x)\n        minX = tmpVector.x;\n      if (maxX < tmpVector.x)\n        maxX = tmpVector.x;\n      if (minY > tmpVector.y)\n        minY = tmpVector.y;\n      if (maxY < tmpVector.y)\n        maxY = tmpVector.y;\n    }\n\n    outRect.set(minX, minY, maxX - minX, maxY - minY);\n    return outRect;\n  }\n\n  /**\n   * invert - inverts current matrix.\n   *\n   * @return {Matrix}  description\n   */\n  invert() {\n    let a = this._matrix;\n\n    let aa = a[0];\n    let ab = a[1];\n    let ac = a[2];\n    let ad = a[3];\n    let atx = a[4];\n    let aty = a[5];\n\n    let det = aa * ad - ab * ac;\n    if (det === 0) {\n      a[0] = a[1] = a[2] = a[3] = 0;\n      a[4] = -atx;\n      a[5] = -aty;\n      return this;\n    }\n    det = 1.0 / det;\n\n    a[0] = ad * det;\n    a[1] = -ab * det;\n    a[2] = -ac * det;\n    a[3] = aa * det;\n    a[4] = (ac * aty - ad * atx) * det;\n    a[5] = (ab * atx - aa * aty) * det;\n\n    return this;\n  }\n\n  // NOTE: remove or finish\n  __decompose() {\n    let m = this._matrix;\n    let a = m[0];\n    let b = m[1];\n    let c = m[2];\n    let d = m[3];\n    let tx = m[4];\n    let ty = m[5];\n\n    let skewX = -Math.atan2(-c, d);\n    let skewY = Math.atan2(b, a);\n\n    let delta = Math.abs(skewX + skewY);\n\n    let r_rotation = 0\n    let r_skewX = 0;\n    let r_skewY = 0;\n    let r_scaleX = 0;\n    let r_scaleY = 0;\n    let r_x = 0;\n    let r_y = 0;\n\n    if (delta < 0.00001) {\n      r_rotation = skewY;\n\n      if (a < 0 && d >= 0)\n        r_rotation += (r_rotation <= 0) ? Math.PI : -Math.PI;\n    } else {\n      r_skewX = skewX;\n      r_skewY = skewY;\n    }\n\n    r_scaleX = Math.sqrt((a * a) + (b * b));\n    r_scaleY = Math.sqrt((c * c) + (d * d));\n\n    r_x = tx;\n    r_y = ty;\n\n    return [r_x, r_y, r_rotation, r_scaleX, r_scaleY, r_skewX, r_skewY];\n  }\n\n  /**\n   * clone - clones the current matrix and returns new cloned object.\n   *\n   * @return {Matrix}  description\n   */\n  clone() {\n    let m = new Matrix();\n    let v = this._matrix;\n    m.set(v[0], v[1], v[2], v[3], v[4], v[5]);\n    return m;\n  }\n\n  /**\n   * copyTo - copies\n   *\n   * @param  {Matrix} matrix description\n   * @return {Matrix}        description\n   */\n  copyTo(matrix) {\n    let a = this._matrix;\n    let b = matrix._matrix;\n\n    b[0] = a[0];\n    b[1] = a[1];\n    b[2] = a[2];\n    b[3] = a[3];\n    b[4] = a[4];\n    b[5] = a[5];\n\n    return matrix;\n  }\n\n  /**\n   * copyFrom - description\n   *\n   * @param  {Matrix} matrix description\n   * @return {Matrix}        description\n   */\n  copyFrom(matrix) {\n    return matrix.copyTo(this);\n  }\n\n  /**\n   * equals - description\n   *\n   * @param  {Matrix} matrix                   description\n   * @param  {number} epsilon = Number.EPSILON description\n   * @return {boolean}                          description\n   */\n  equals(matrix, epsilon = Number.EPSILON) {\n    let a = this._matrix;\n    let b = matrix._matrix;\n    if (!matrix)\n      return false;\n\n    return (Math.abs(a[0] - b[0]) < epsilon) && (Math.abs(a[1] - b[1]) < epsilon) && (Math.abs(a[2] - b[2]) < epsilon) &&\n      (Math.abs(a[3] - b[3]) < epsilon) && (Math.abs(a[4] - b[4]) < epsilon) && (Math.abs(a[5] - b[5]) < epsilon);\n  }\n\n  /**\n   * get - description\n   *\n   * @return {Float32Array}  description\n   */\n  get value() {\n    return this._matrix;\n  }\n\n}\n\n/**\n * @type {Matrix}\n * @nocollapse\n */\nMatrix.__cache = new Matrix();\n","\nclass Rectangle {\n  /**\n   * @param  {number=} y = 0 description\n   * @param  {number=} x = 0 description\n   * @param  {number=} w = 0 description\n   * @param  {number=} h = 0 description\n   */\n  constructor(x = 0, y = 0, w = 0, h = 0) {\n    /** @type {number} */\n    this.x = x;\n\n    /** @type {number} */\n    this.y = y;\n\n    /** @type {number} */\n    this.width = w;\n\n    /** @type {number} */\n    this.height = h;\n  }\n\n  /**\n   * set - Description\n   *\n   * @param {number} x Description\n   * @param {number} y Description\n   * @param {number} w Description\n   * @param {number} h Description\n   *\n   * @return {Rectangle} Description\n   */\n  set(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n\n    return this;\n  }\n\n  /**\n   * copyFrom - Description\n   *\n   * @param {Rectangle} rect Description\n   *\n   * @return {Rectangle} Description\n   */\n  copyFrom(rect) {\n    this.x = rect.x;\n    this.y = rect.y;\n    this.width = rect.width;\n    this.height = rect.height;\n\n    return this;\n  }\n\n  /**\n   * copyTo - Description\n   *\n   * @param {Rectangle} rect Description\n   *\n   * @return {Rectangle} Description\n   */\n  copyTo(rect) {\n    rect.x = this.x;\n    rect.y = this.y;\n    rect.width = this.width;\n    rect.height = this.height;\n\n    return rect;\n  }\n\n\n  /**\n   * left - Description\n   *\n   * @return {number} Description\n   */\n  get left() {\n    return this.x;\n  }\n\n  /**\n   * left - Description\n   *\n   * @param {number} left Left x position.\n   */\n  set left(left) {\n    this.x = left;\n  }\n\n  /**\n   * right - Description\n   *\n   * @return {number} Description\n   */\n  get right() {\n    return this.x + this.width;\n  }\n\n  /**\n   * right - Description\n   *\n   * @param {number} right Right x position.\n   */\n  set right(right) {\n    this.x = right - this.width;\n  }\n\n  /**\n   * top - Description\n   *\n   * @return {number} Description\n   */\n  get top() {\n    return this.y;\n  }\n\n  /**\n   * top - Description\n   *\n   * @param {number} top Top y position.\n   */\n  set top(top) {\n    this.y = top;\n  }\n\n  /**\n   * bottom - Description\n   *\n   * @return {number} Description\n   */\n  get bottom() {\n    return this.y + this.height;\n  }\n\n  /**\n   * bottom - Description\n   *\n   * @param {number} bottom Bottom y position.\n   */\n  set bottom(bottom) {\n    this.y = bottom - this.height;\n  }\n\n  /**\n   * topLeft - Description\n   *\n   * @return {Vector} Description\n   */\n  get topLeft() {\n    return new Vector(this.x, this.y);\n  }\n\n  /**\n   * topLeft - Description\n   *\n   * @param {Vector} vector Top left position.\n   */\n  set topLeft(vector) {\n    this.left = vector.x;\n    this.top = vector.y;\n  }\n\n  /**\n   * topRight - Description\n   *\n   * @return {Vector} Description\n   */\n  get topRight() {\n    return new Vector(this.right, this.y);\n  }\n\n  /**\n   * topRight - Description\n   *\n   * @param {Vector} vector Top right position.\n   */\n  set topRight(vector) {\n    this.right = vector.x;\n    this.top = vector.y;\n  }\n\n  /**\n   * bottomRight - Description\n   *\n   * @return {Vector} Description\n   */\n  get bottomRight() {\n    return new Vector(this.right, this.bottom);\n  }\n\n  /**\n   * bottomRight - Description\n   *\n   * @param {Vector} vector Right bottom position.\n   */\n  set bottomRight(vector) {\n    this.right = vector.x;\n    this.bottom = vector.y;\n  }\n\n  /**\n   * bottomLeft - Description\n   *\n   * @return {Vector} Description\n   */\n  get bottomLeft() {\n    return new Vector(this.right, this.bottom);\n  }\n\n  /**\n   * bottomLeft - Description\n   *\n   * @param {Vector} vector Left bottom position.\n   */\n  set bottomLeft(vector) {\n    this.left = vector.x;\n    this.bottom = vector.y;\n  }\n\n  /**\n   * size - Description\n   *\n   * @param {Vector=} outVector Description\n   *\n   * @return {Vector} Description\n   */\n  size(outVector = undefined) {\n    outVector = outVector || new Vector();\n    return outVector.set(this.width, this.height);\n  }\n\n  /**\n   * zero - Description\n   *\n   * @return {Rectangle} Description\n   */\n  zero() {\n    return this.set(0, 0, 0, 0);\n  }\n\n\n  /**\n   * equals - Description\n   *\n   * @param {Rectangle} rect Description\n   * @param {number=} epsilon Description\n   *\n   * @return {boolean}\n   */\n  equals(rect, epsilon = Number.EPSILON) {\n    return rect !== null && (Math.abs(this.x - rect.x) < epsilon) && (Math.abs(this.y - rect.y) < epsilon) &&\n           (Math.abs(this.width - rect.width) < epsilon) && (Math.abs(this.height - rect.height) < epsilon);\n  }\n\n\n  /**\n   * containsXY - Description\n   *\n   * @param {number} x Description\n   * @param {number} y Description\n   *\n   * @return {boolean} Description\n   */\n  containsXY(x, y) {\n    return x >= this.x && x <= this.right && y >= this.y && y <= this.bottom;\n  }\n\n\n  /**\n   * contains - Description\n   *\n   * @param {Rectangle} rect Description\n   *\n   * @return {boolean} Description\n   */\n  contains(rect) {\n    return rect.x >= this.x && rect.y >= this.y && rect.right <= this.right && rect.bottom <= this.bottom;\n  }\n\n  /**\n   * intersects - Description\n   *\n   * @param {Rectangle} rect Description\n   *\n   * @return {boolean} Description\n   */\n  intersects(rect) {\n    return rect.right > this.x && rect.bottom > this.y &&\n           rect.x < this.right && rect.y < this.bottom;\n  }\n\n\n  /**\n   * union - Description\n   *\n   * @param {Rectangle} toUnion Description\n   *\n   * @return {Rectangle} Description\n   */\n  union(toUnion) {\n    if (this.width === 0 || this.height === 0)\n      return toUnion.clone();\n    else if (toUnion.width === 0 || toUnion.height === 0)\n      return this.clone();\n\n    let x0 = this.x > toUnion.x ? toUnion.x : this.x;\n    let x1 = this.right < toUnion.right ? toUnion.right : this.right;\n    let y0 = this.y > toUnion.y ? toUnion.y : this.y;\n    let y1 = this.bottom < toUnion.bottom ? toUnion.bottom : this.bottom;\n\n    return new Rectangle(x0, y0, x1 - x0, y1 - y0);\n  }\n\n\n  /**\n   * volume - Description\n   *\n   * @return {number} Description\n   */\n  get volume() {\n    return this.width * this.height;\n  }\n\n\n  /**\n   * expand - Description\n   *\n   * @param {number} x      Description\n   * @param {number} y      Description\n   * @param {number} width  Description\n   * @param {number} height Description\n   *\n   * @return {Rectangle} Description\n   */\n  expand(x, y, width, height) {\n    if (this.volume === 0)\n      return this.set(x, y, width, height);\n\n    let cacheRight = this.right;\n\t\tlet cacheBottom = this.bottom;\n\n    if (this.x > x) {\n      this.x = x;\n      this.width = cacheRight - x;\n    }\n\n    if (this.y > y) {\n      this.y = y;\n      this.height = cacheBottom - y;\n    }\n\n    if (cacheRight < x + width)\n      this.width = x + width - this.x;\n\n\t\tif (cacheBottom < y + height)\n      this.height = y + height - this.y;\n\n    return this;\n  }\n\n\n  /**\n   * inflate - Description\n   *\n   * @param {number=} [x=0] Description\n   * @param {number=} [y=0] Description\n   *\n   * @return {Rectangle} Description\n   */\n  inflate(x = 0, y = 0) {\n    this.x -= x;\n    this.y -= y;\n    this.width += 2 * x;\n    this.height += 2 * y;\n\n    return this;\n  }\n\n\n  /**\n   * clone - Description\n   *\n   * @return {Rectangle} Description\n   */\n  clone() {\n    return new Rectangle(this.x, this.y, this.width, this.height);\n  }\n\n  /**\n   * perimeter - Description\n   *\n   * @return {number} Description\n   */\n  get perimeter() {\n    return 2 * (this.width + this.height);\n  }\n\n\n  /**\n   * center - Description\n   *\n   * @param {Vector=} outVector Description\n   *\n   * @return {Vector} Description\n   */\n  center(outVector = undefined) {\n    outVector = outVector || new Vector();\n    return outVector.set(this.x + this.width * 0.5, this.y + this.height * 0.5);\n  }\n\n  /**\n   * scale - Scales this rectangle.\n   *\n   * @param {number} x Width multiplier.\n   * @param {number} y Height multiplier.\n   *\n   * @return {Rectangle} This rectangle.\n   */\n  scale(x, y) {\n    this.width *= x;\n    this.height *= y;\n\n    return this;\n  }\n\n  /**\n   * isEmpty - Checks rectangle has area.\n   *\n   * @return {boolean} True if has.\n   */\n  isEmpty() {\n    return this.width === 0 && this.height === 0;\n  }\n\n  get lines() { // todo\n    return [\n      new Line(this.topLeft, this.topRight),\n      new Line(this.topRight, this.bottomRight),\n      new Line(this.bottomRight, this.bottomLeft),\n      new Line(this.bottomLeft, this.topLeft)\n    ];\n  }\n\n\n}\n\n/** @type {Rectangle}\n  * @nocollapse\n  */\nRectangle.__cache = new Rectangle();\n","\nclass Circle {\n  /**\n   * @param  {number=} x = 0 Position x.\n   * @param  {number=} y = 0 Position y.\n   * @param  {number=} r = 1 Radius.\n   */\n  constructor(x = 0, y = 0, r = 1) {\n    /** @type {number} */\n    this.x = x;\n\n    /** @type {number} */\n    this.y = y;\n\n    /** @type {number} */\n    this.r = r;\n  }\n\n  /**\n   * set - Sets new circle properties\n   *\n   * @param {number} x Position x.\n   * @param {number} y Position y.\n   * @param {number} r Radius.\n   *\n   * @return {Circle} This circle.\n   */\n  set(x, y, r) {\n    this.x = x;\n    this.y = y;\n    this.r = r;\n\n    return this;\n  }\n\n  /**\n   * clone - Clones this circle.\n   *\n   * @return {Circle} Created circle.\n   */\n  clone() {\n    return new Circle(this.x, this.y, this.r);\n  }\n\n  /**\n   * copyTo - Copy this properties to another circle.\n   *\n   * @param {Circle} circle Object to copy to.\n   *\n   * @return {Circle} Passed circle.\n   */\n  copyTo(circle) {\n    return circle.set(this.x, this.y, this.r);\n  }\n\n  /**\n   * copyFrom - Copy another circle properties to this.\n   *\n   * @param {Circle} circle Object to copy from.\n   *\n   * @return {Circle} This circle.\n   */\n  copyFrom(circle) {\n    return this.set(circle.x, circle.y, circle.r);\n  }\n\n  /**\n   * equals - Shows whether circles are identical.\n   *\n   * @param {Circle} circle Object to comparison.\n   * @param {number=} epsilon Compare precision.\n   *\n   * @return {boolean} True if circles are identical.\n   */\n  equals(circle, epsilon = Number.EPSILON) {\n    return circle !== null && (Math.abs(this.x - circle.x) < epsilon) && (Math.abs(this.y - circle.y) < epsilon) &&\n      (Math.abs(this.r - circle.r) < epsilon);\n  }\n\n  /**\n   * containsXY - Shows whether point is in circle.\n   *\n   * @param {number} x Point position x.\n   * @param {number} y Point position y.\n   *\n   * @return {boolean} True if circle contains point.\n   */\n  containsXY(x, y) {\n    return this.contains(new Vector(x, y));\n  }\n\n  /**\n   * contains - Shows whether point is in circle.\n   *\n   * @param {Vector} vector Point to check.\n   *\n   * @return {boolean} True if circle contains point.\n   */\n  contains(vector) {\n    return new Vector(this.x, this.y).subtract(vector).length() <= this.r;\n  }\n\n  /**\n   * left - Finds left X position.\n   *\n   * @return {number} Left X position.\n   */\n  get left() {\n    return this.x - this.r;\n  }\n\n  /**\n   * right - Finds right X position.\n   *\n   * @return {number} Right X position.\n   */\n  get right() {\n    return this.x + this.r;\n  }\n\n  /**\n   * top - Finds top Y position.\n   *\n   * @return {number} Top Y position.\n   */\n  get top() {\n    return this.y - this.r;\n  }\n\n  /**\n   * bottom - Finds bottom Y position.\n   *\n   * @return {number} Bottom Y position.\n   */\n  get bottom() {\n    return this.y + this.r;\n  }\n\n  /**\n   * topPoint - Description\n   *\n   * @return {Vector} Description\n   */\n  get topPoint() {\n    return new Vector(this.x, this.top);\n  }\n\n  /**\n   * bottomPoint - Description\n   *\n   * @return {Vector} Description\n   */\n  get bottomPoint() {\n    return new Vector(this.x, this.bottom);\n  }\n\n  /**\n   * zero - Description\n   *\n   * @return {Circle} Description\n   */\n  zero() {\n    return this.set(0, 0, 0);\n  }\n\n  /**\n   * intersects - Shows whether this circle intersects another.\n   *\n   * @param {Circle} circle Circle to check.\n   *\n   * @return {boolean} True if intersects.\n   */\n  intersects(circle) {\n    let d = new Vector(this.x, this.y).distance(new Vector(circle.x, circle.y));\n    return d <= this.r + circle.r && d >= this.r - circle.r;\n  }\n\n  /**\n   * collide - Shows whether this circle collide with another.\n   *\n   * @param {Circle} circle Circle to check.\n   *\n   * @return {boolean} True if collide.\n   */\n  collide(circle) {\n    let d = new Vector(this.x, this.y).distance(new Vector(circle.x, circle.y));\n    return d <= this.r + circle.r;\n  }\n\n  /**\n   * overlap - Shows whether this circle overlap another.\n   *\n   * @param {Circle} circle Circle to check.\n   *\n   * @return {boolean} True if overlap.\n   */\n  overlap(circle) {\n    if (this.r < circle.r) {\n      return false;\n    }\n\n    let d = new Vector(this.x, this.y).distance(new Vector(circle.x, circle.y));\n    return d <= this.r - circle.r;\n  }\n\n  /**\n   * volume - Area of this circle.\n   *\n   * @return {number} area.\n   */\n  get volume() {\n    return Math.PI * this.r * this.r;\n  }\n\n  /**\n   * perimeter - Perimeter of this circle.\n   *\n   * @return {number} perimeter.\n   */\n  get perimeter() {\n    return 2 * Math.PI * this.r;\n  }\n\n  /**\n   * center - Represents center as vector.\n   *\n   * @param {Vector=} outVector Object for result.\n   *\n   * @return {Vector} Center point.\n   */\n  center(outVector = undefined) {\n    outVector = outVector || new Vector();\n    return outVector.set(this.x, this.y);\n  }\n\n}\n\n/** @type {Circle}\n * @nocollapse\n */\nCircle.__cache = new Circle();\n","\nclass Line {\n  /**\n   * @param  {Vector} start Start point.\n   * @param  {Vector} end End point.\n   */\n  constructor(start, end) {\n    /** @type {Vector} */\n    this.start = start;\n\n    /** @type {Vector} */\n    this.end = end;\n  }\n\n  /**\n   * set - Sets new line properties\n   *\n   * @param  {Vector} start Start point.\n   * @param  {Vector} end End point.\n   *\n   * @return {Line} This circle.\n   */\n  set(start, end) {\n    this.start = start;\n    this.end = end;\n\n    return this;\n  }\n\n  /**\n   * clone - Clones this line.\n   *\n   * @return {Line} Created line.\n   */\n  clone() {\n    return new Line(this.start.clone(), this.end.clone());\n  }\n\n  /**\n   * copyTo - Copy this properties to another line.\n   *\n   * @param {Line} line Object to copy to.\n   *\n   * @return {Line} Passed line.\n   */\n  copyTo(line) {\n    return line.set(this.start.clone(), this.end.clone());\n  }\n\n  /**\n   * copyFrom - Copy another line properties to this.\n   *\n   * @param {Line} line Object to copy from.\n   *\n   * @return {Line} This circle.\n   */\n  copyFrom(line) {\n    return this.set(line.start.clone(), line.end.clone());\n  }\n\n  /**\n   * equals - Shows whether lines are identical.\n   *\n   * @param {Line} line Object to comparison.\n   * @param {number=} epsilon Compare precision.\n   *\n   * @return {boolean} True if lines are identical.\n   */\n  equals(line, epsilon = Number.EPSILON) {\n    return (this.start.equals(line.start, epsilon) && this.end.equals(line.end, epsilon)) ||\n      (this.start.equals(line.end, epsilon) && this.end.equals(line.start, epsilon));\n  }\n\n  /**\n   * left - Finds left X position.\n   *\n   * @return {number} Left X position.\n   */\n  get left() {\n    return Math.min(this.start.x, this.end.x);\n  }\n\n\n  /**\n   * right - Finds right X position.\n   *\n   * @return {number} Right X position.\n   */\n  get right() {\n    return Math.max(this.start.x, this.end.x);\n  }\n\n  /**\n   * top - Finds top Y position.\n   *\n   * @return {number} Top Y position.\n   */\n  get top() {\n    return Math.min(this.start.y, this.end.y);\n  }\n\n  /**\n   * bottom - Finds bottom Y position.\n   *\n   * @return {number} Bottom Y position.\n   */\n  get bottom() {\n    return Math.max(this.start.y, this.end.y);\n  }\n\n  /**\n   * reverse - Replace line start and end points.\n   *\n   * @return {Line} This line.\n   */\n  reverse() {\n    let start = this.start;\n    this.start = this.end;\n    this.end = start;\n\n    return this;\n  }\n\n  /**\n   * normalize - Change line's length to one. Moves end point.\n   *\n   * @return {Line} This line.\n   */\n  normalize() {\n    this.end\n      .subtract(this.start)\n      .normalize()\n      .add(this.start);\n\n    return this;\n  }\n\n  /**\n   * scale - Change line's length to scaled. Moves end point.\n   *\n   * @return {Line} This line.\n   */\n  scale(multyplier) {\n    this.end\n      .subtract(this.start)\n      .multiplyScalar(multyplier)\n      .add(this.start);\n\n    return this;\n  }\n\n  /**\n   * zero - Description\n   *\n   * @return {Line} Description\n   */\n  zero() {\n    return this.set(new Vector(), new Vector());\n  }\n\n  /**\n   * length - Length of this line.\n   *\n   * @return {number} length.\n   */\n  length() {\n    return this.start.distance(this.end);\n  }\n\n  /**\n   * center - Represents center as vector.\n   *\n   * @param {Vector=} outVector Object for result.\n   *\n   * @return {Vector} Center point.\n   */\n  center(outVector = undefined) {\n    outVector = outVector || new Vector();\n    return outVector.set((this.start.x + this.end.x) / 2, (this.start.y + this.end.y) / 2);\n  }\n\n\n  /**\n   * type - Description\n   *\n   * @return {string} Description\n   */\n  get type() {\n    return 'Line';\n  }\n\n  /**\n   * containsXY - Shows whether point is on line.\n   *\n   * @param {number} x Point position x.\n   * @param {number} y Point position y.\n   *\n   * @return {boolean} True if line contains point.\n   */\n  containsXY(x, y) {\n    return this.contains(new Vector(x, y));\n  }\n\n  /**\n   * contains - Shows whether point is on line.\n   *\n   * @param {Vector} vector Point to check.\n   *\n   * @return {boolean} True if line contains point.\n   */\n  contains(vector) {\n    return this.start.distance(vector) + this.end.distance(vector) === this.length();\n  }\n\n  /**\n   * intersects - Shows whether this line intersects another.\n   *\n   * @param {Line} line Line to check.\n   *\n   * @return {boolean} True if intersects.\n   */\n  intersects(line) {\n    let start1 = this.start;\n    let end1 = this.end;\n    let start2 = line.start;\n    let end2 = line.end;\n\n    let denominator = ((end2.y - start2.y) * (end1.x - start1.x)) - ((end2.x - start2.x) * (end1.y - start1.y));\n\n    if (denominator === 0) {\n      return false;\n    }\n\n    let a = start1.y - start2.y;\n    let b = start1.x - start2.x;\n    let numerator1 = ((end2.x - start2.x) * a) - ((end2.y - start2.y) * b);\n    let numerator2 = ((end1.x - start1.x) * a) - ((end1.y - start1.y) * b);\n    a = numerator1 / denominator;\n    b = numerator2 / denominator;\n\n    return a >= 0 && a <= 1 && b > 0 && b < 1;\n  }\n\n  /**\n   * intersects - Shows whether this line intersects circle.\n   *\n   * @param {Circle} circle Circle to check.\n   *\n   * @return {boolean} True if intersects.\n   */\n  intersectsCircle(circle) {\n    let start = this.start;\n    let end = this.end;\n\n    if (circle.contains(start) || circle.contains(end)) {\n      return true;\n    }\n\n    let distance = start.distance(end);\n    let directionX = (end.x - start.x) / distance;\n    let directionY = (end.y - start.y) / distance;\n\n    let t = directionX * (circle.x - start.x) + directionY * (circle.y - start.y);\n\n    let nearest = new Vector((t * directionX) + start.x, (t * directionY) + start.y);\n    let nearestDistance = nearest.distance(new Vector(circle.x, circle.y));\n\n    if (nearestDistance < circle.r) {\n      let dt = Math.sqrt(Math.pow(circle.r, 2) - Math.pow(nearestDistance, 2));\n\n      let x1 = ((t - dt) * directionX + start.x).toFixed(15);\n      let y1 = ((t - dt) * directionY + start.y).toFixed(15);\n      let x2 = ((t + dt) * directionX + start.x).toFixed(15);\n      let y2 = ((t + dt) * directionY + start.y).toFixed(15);\n\n      return this.__isInBoundsXY(x1, y1) || this.__isInBoundsXY(x2, y2);\n    }\n\n    return false;\n  }\n\n  __isInBoundsXY(x, y) {\n    let x1 = this.start.x;\n    let y1 = this.start.y;\n    let x2 = this.end.x;\n    let y2 = this.end.y;\n    \n    return x > Math.min(x1, x2) && x < Math.max(x1, x2) && y > Math.min(y1, y2) && y < Math.max(y1, y2);\n  }\n\n}\n\n/** @type {Line}\n * @nocollapse\n */\nLine.__cache = new Line(new Vector(), new Vector());\n","\nclass Polygon {\n\n  /**\n   * @param  {Array<Vector>} vertices = [] Array of vertex points;\n   */\n  constructor(vertices = []) {\n\n    /** @type {Array<Vector>} */\n    this.vertices = vertices;\n\n    /** @type {Array<Line>} */\n    this.lines = [];\n\n    /** @type {Rectangle} */\n    this.bounds = new Rectangle();\n\n    /** @type {Vector} */\n    this.center = new Vector();\n\n    this.refresh();\n  }\n\n  /**\n   * set - Sets new vertices.\n   *\n   * @param {Array<Vector>} vertices New points.\n   *\n   * @return {Polygon} This polygon.\n   */\n  set(vertices) {\n    this.vertices = vertices;\n    this.refresh();\n    return this;\n  }\n\n  /**\n   * copyTo - Copy this properties to another polygon.\n   *\n   * @param {Polygon} polygon Object to copy to.\n   *\n   * @return {Polygon} Passed polygon.\n   */\n  copyTo(polygon) {\n    let len = this.vertices.length;\n    let vertices = [];\n\n    for (let i = 0; i < len; i++) {\n      vertices.push(this.vertices[i].clone());\n    }\n\n    return polygon.set(vertices);\n  }\n\n  /**\n   * copyFrom - Copy another polygon properties to this.\n   *\n   * @param {Polygon} polygon Object to copy from.\n   *\n   * @return {Polygon} This polygon.\n   */\n  copyFrom(polygon) {\n    let polygonVertices = polygon.vertices;\n    let len = polygonVertices.length;\n    let vertices = [];\n\n    for (let i = 0; i < len; i++) {\n      vertices.push(polygonVertices[i].clone());\n    }\n\n    return this.set(vertices);\n  }\n\n  /**\n   * clone - Clones this polygon.\n   *\n   * @return {Polygon} Created polygon.\n   */\n  clone() {\n    let thisVertices = this.vertices;\n    let len = thisVertices.length;\n    let vertices = [];\n\n    for (let i = 0; i < len; i++) {\n      vertices.push(thisVertices[i].clone());\n    }\n\n    return new Polygon(vertices);\n  }\n\n  get width() {\n    return this.bounds.width;\n  }\n\n  get height() {\n    return this.bounds.height;\n  }\n\n  /**\n   * containsXY - Shows whether point is in polygon.\n   *\n   * @param {number} x Point position x.\n   * @param {number} y Point position y.\n   *\n   * @return {boolean} True if polygon contains point.\n   */\n  containsXY(x, y) {\n    return this.contains(new Vector(x, y));\n  }\n\n  /**\n   * contains - Shows whether point is in polygon.\n   *\n   * @param {Vector} vector Point to check.\n   *\n   * @return {boolean} True if polygon contains point.\n   */\n  contains(vector) {\n    let center = this.center;\n    let lines = this.lines;\n    let len = lines.length;\n\n    if (center.equals(vector)) {\n      return true;\n    }\n\n    let intersectionLine = new Line(vector, center.clone());\n    let intersects = 0;\n    intersectionLine.scale((this.width + this.height) / intersectionLine.length());\n\n    for (let i = 0; i < len; i++) {\n      intersects += lines[i].intersects(intersectionLine) ? 1 : 0;\n    }\n\n    return intersects % 2 !== 0;\n  }\n\n  /**\n   * perimeter - Perimeter of this polygon.\n   *\n   * @return {number} perimeter.\n   */\n  get perimeter() {\n    let thisLines = this.lines;\n    let len = thisLines.length;\n    let perimeter = 0;\n\n    for (let i = 0; i < len; i++) {\n      perimeter += thisLines[i].length();\n    }\n\n    return perimeter;\n  }\n\n  /**\n   * collide - Checks collides between two polygons.\n   *\n   * @param {Polygon} polygon Object to check.\n   *\n   * @return {boolean} True if polygon collides with another polygon.\n   */\n  collide(polygon) {\n    if (!this.bounds.intersects(polygon.bounds)) {\n      return false;\n    }\n\n    let thisLines = this.lines;\n    let thisLen = thisLines.length;\n    let polygonLines = polygon.lines;\n    let polygonLen = polygonLines.length;\n\n    for (let i = 0; i < thisLen; i++) {\n      for (let j = 0; j < polygonLen; j++) {\n        if (thisLines[i].intersects(polygonLines[j])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * collideCircle - Checks collides between this polygon and circle.\n   *\n   * @param {Circle} circle Object to check.\n   *\n   * @return {boolean} True if polygon collides with circle.\n   */\n  collideCircle(circle) {\n    let bounds = this.bounds;\n    let lines = this.lines;\n\n    if (bounds.left > circle.right || bounds.right < circle.left || bounds.top > circle.bottom || bounds.bottom < circle.top) {\n      return false;\n    }\n\n    let len = lines.length;\n    for (let i = 0; i < len; i++) {\n      if (lines[i].intersectsCircle(circle)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * collideRectangle - Checks collides between this polygon and rectangle.\n   *\n   * @param {Rectangle} rectangle Object to check.\n   *\n   * @return {boolean} True if polygon collides with rectangle.\n   */\n  collideRectangle(rectangle) {\n    if (!this.bounds.intersects(rectangle)) {\n      return false;\n    }\n\n    let thisLines = this.lines;\n    let thisLen = thisLines.length;\n    let rectangleLines = rectangle.lines;\n    let rectangleLen = rectangleLines.length;\n\n    for (let i = 0; i < thisLen; i++) {\n      for (let j = 0; j < rectangleLen; j++) {\n        if (thisLines[i].intersects(rectangleLines[j])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * overlap - Checks overlaps between this polygon and another.\n   *\n   * @param {Polygon} polygon Object to check.\n   *\n   * @return {boolean} True if polygon overlaps second.\n   */\n  overlap(polygon) {\n    if (this.bounds.width < polygon.bounds.width || this.bounds.height < polygon.bounds.height) {\n      return false;\n    }\n\n    if (!this.contains(polygon.center)) {\n      return false;\n    }\n\n    let thisLines = this.lines;\n    let thisLen = thisLines.length;\n    let polygonLines = polygon.lines;\n    let polygonLen = polygonLines.length;\n\n    for (let i = 0; i < thisLen; i++) {\n      for (let j = 0; j < polygonLen; j++) {\n        if (thisLines[i].intersects(polygonLines[j])) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * overlapCircle - Checks overlaps between this polygon and circle.\n   *\n   * @param {Circle} circle Object to check.\n   *\n   * @return {boolean} True if polygon overlaps circle.\n   */\n  overlapCircle(circle) {\n    if (!this.containsXY(circle.x, circle.y)) {\n      return false;\n    }\n\n    let thisLines = this.lines;\n    let len = thisLines.length;\n\n    for (let i = 0; i < len; i++) {\n      if (thisLines[i].intersectsCircle(circle)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * overlapRectangle - Checks overlaps between this polygon and rectangle.\n   *\n   * @param {Rectangle} rectangle Object to check.\n   *\n   * @return {boolean} True if polygon overlaps rectangle.\n   */\n  overlapRectangle(rectangle) {\n    if (!this.contains(rectangle.center())) {\n      return false;\n    }\n\n    let thisLines = this.lines;\n    let thisLen = thisLines.length;\n    let rectangleLines = rectangle.lines;\n    let rectangleLen = rectangleLines.length;\n\n    for (let i = 0; i < thisLen; i++) {\n      for (let j = 0; j < rectangleLen; j++) {\n        if (thisLines[i].intersects(rectangleLines[j])) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * refresh - ReCalc center, bounds, and edges of this polygon.\n   *\n   * @return {Polygon} This polygon.\n   */\n  refresh() {\n    let center = this.center;\n    let bounds = this.bounds;\n    let vertices = this.vertices;\n    let lines = this.lines = [];\n    center.set(0, 0);\n\n    // bounds\n    let maxX = -Number.MAX_VALUE;\n    let maxY = -Number.MAX_VALUE;\n    let minX = Number.MAX_VALUE;\n    let minY = Number.MAX_VALUE;\n\n    for (let i = 0; i < vertices.length; i++) {\n      let vector = vertices[i];\n      center.add(vector);\n\n      // bounds\n      let {\n        x,\n        y\n      } = vector;\n      maxX = x > maxX ? x : maxX;\n      maxY = y > maxY ? y : maxY;\n      minX = x < minX ? x : minX;\n      minY = y < minY ? y : minY;\n\n      lines.push(new Line(vector, vertices[i + 1] || vertices[0]));\n    }\n\n    center.multiplyScalar(1 / vertices.length);\n    bounds.set(minX, minY, maxX - minX, maxY - minY);\n\n    return this;\n  }\n\n  /**\n   * refreshCenter - ReCalc center of this polygon.\n   *\n   * @return {Polygon} This polygon.\n   */\n  refreshCenter() {\n    let center = this.center;\n    let vertices = this.vertices;\n    let len = vertices.length;\n    center.set(0, 0);\n\n    for (let i = 0; i < len; i++) {\n      center.add(vertices[i]);\n    }\n\n    center.multiplyScalar(1 / vertices.length);\n\n    return this;\n  }\n\n  /**\n   * refreshBounds - ReCalc bounds of this polygon.\n   *\n   * @return {Polygon} This polygon.\n   */\n  refreshBounds() {\n    let bounds = this.bounds;\n    let vertices = this.vertices;\n    let maxX = -Number.MAX_VALUE;\n    let maxY = -Number.MAX_VALUE;\n    let minX = Number.MAX_VALUE;\n    let minY = Number.MAX_VALUE;\n    let len = vertices.length;\n    let x;\n    let y;\n\n    for (let i = 0; i < len; i++) {\n      x = vertices[i].x;\n      y = vertices[i].y;\n      maxX = x > maxX ? x : maxX;\n      maxY = y > maxY ? y : maxY;\n      minX = x < minX ? x : minX;\n      minY = y < minY ? y : minY;\n    }\n\n    bounds.set(minX, minY, maxX - minX, maxY - minY);\n\n    return this;\n  }\n\n  /**\n   * refreshLines - ReCalc edges of this polygon.\n   *\n   * @return {Polygon} This polygon.\n   */\n  refreshLines() {\n    let vertices = this.vertices;\n    let lines = this.lines = [];\n\n    for (let i = 0; i < vertices.length; i += 2) {\n      lines.push(new Line(vertices[i], vertices[i + 1] || vertices[0]));\n    }\n\n    return this;\n  }\n\n  /**\n   * fromPath - Creates instance of Polygon.\n   *\n   * @param {string} path Numbers x y divided with space.\n   *\n   * @return {Polygon} Created polygon.\n   */\n  static fromPath(path) {\n    let vertices = [];\n    let path2 = path.split(' ');\n\n    for (let i = 0; i < path2.length; i += 2) {\n      vertices.push(new Vector(Number(path2[i]), Number(path2[i + 1])));\n    }\n\n    return new Polygon(vertices);\n  }\n\n  /**\n   * setRotation - Sets rotation. Rotate this polygon around it center.\n   *\n   * @param {number} rotation Angle in radians.\n   *\n   * @return {Polygon} This polygon.\n   */\n  setRotation(rotation) {\n    let center = this.center;\n    let vertices = this.vertices;\n    let cos = Math.cos(rotation).toFixed(15);\n    let sin = Math.sin(rotation).toFixed(15);\n\n    for (let i = 0, len = vertices.length; i < len; i++) {\n      let vector = vertices[i];\n      vector\n        .subtract(center)\n        .set(vector.x * cos - vector.y * sin, vector.x * sin + vector.y * cos)\n        .add(center);\n    }\n\n    return this.refresh();\n  }\n\n  /**\n   * setTranslation - Translates this polygon to specified position.\n   *\n   * @param {Vector} point Translation vector.\n   *\n   * @return {Polygon} This vertices.\n   */\n  setTranslation(point) {\n    let center = this.center;\n    let vertices = this.vertices;\n    let len = vertices.length;\n    point.subtract(center);\n\n    for (let i = 0; i < len; i++) {\n      vertices[i].add(point);\n    }\n\n    return this.refresh();\n  }\n\n}\n\n/** @type {Polygon}\n * @nocollapse\n */\nPolygon.__cache = new Polygon();\n","\nclass Curve {\n  constructor() {\n\n    /** @private @type {Array<number>} */\n    this.mPoints = [];\n\n    /** @private @type {Array<Vector>} */\n    this.mLookup = null;\n\n    /** @private @type {boolean} */\n    this.mBaked = false;\n\n    /** @private @type {number} */\n    this.mStep = 1 / 60;\n\n    /** @private @type {Array<number>} */\n    this.mEachT = [];\n  }\n\n  /**\n   * set - Sets new points coordinates.\n   *\n   * @param  {...number} points Coordinates: startX, startY, cpStartX, cpStartY, cpEndX, cpEndY, endX/start2X, endY/start2Y, cp2StartX, cp2StartX... 8 or 14 or 20...\n   *\n   * @return {Curve} This curve.\n   */\n  set(...points) {\n    this.mPoints = this.__initPoints(points);\n    this.__refreshEachT();\n\n    if (this.mBaked)\n      this.__refreshCache();\n\n    return this;\n  }\n\n\n  /**\n   * baked - Returns true or false depending on baked is enabled or not.\n   *\n   * @return {boolean}\n   */\n  get baked() {\n    return this.mBaked;\n  }\n\n  /**\n   * baked - Enables or disables interpolation from cache (lookup).\n   *\n   * @param  {boolean} label\n   */\n  set baked(label) {\n    this.mBaked = label;\n\n    if (!this.mLookup && this.mPoints) {\n      this.__refreshCache();\n    }\n  }\n\n  /**\n   * __initPoints - Wides points array. Sets first point for next bezier same as last of previous.\n   *\n   * @param  {Array<number>} points Array of points coordinates.\n   *\n   * @return {Array<number>} Points coordinates array.\n   */\n  __initPoints(points) {\n    let res = [];\n\n    for (let i = 6; i < points.length; i += 6) {\n      res = res.concat(points.slice(i - 6, i + 2));\n    }\n\n    return res;\n  }\n\n  /**\n   * __refreshCache - Refresh cache (lookup) for fast interpolations.\n   *\n   * @return {Curve} This curve.\n   */\n  __refreshCache() {\n    let lookup = this.mLookup = [];\n    let getFullLength = this.getFullLength();\n    let points = this.mPoints;\n    let pointsLen = points.length;\n\n    for (let i = 0; i < pointsLen; i += 8) {\n      let length = Curve.getLength(...points.slice(i, i + 8));\n      let step = this.mStep * getFullLength / length;\n\n      for (let t = step; t < 1; t += step)\n        lookup.push(Curve.lerp(t, ...points.slice(i, i + 8)));\n    }\n\n    return this;\n  }\n\n\n  /**\n   * __refreshEachT - Refresh local interpolation kof for each bezier in curve.\n   *\n   * @return {Curve} This curve.\n   */\n  __refreshEachT() {\n    let points = this.mPoints;\n    let eachT = this.mEachT = [];\n    let pointsLen = points.length;\n    let eachLength = [];\n\n    for (let i = 0; i < pointsLen; i += 8)\n      eachLength.push(Curve.getLength(...points.slice(i, i + 8)));\n\n    let length = this.getFullLength();\n    let s = 0;\n    for (let i = 0; i < pointsLen; i += 8) {\n      s += eachLength[i / 8];\n      eachT.push(s / length);\n    }\n\n    return this;\n  }\n\n  /**\n   * lerp - Interpolates single bezier on t position.\n   *\n   * @param  {number} t Interpolation position (0...1).\n   * @param  {number} startX\n   * @param  {number} startY\n   * @param  {number} cpStartX\n   * @param  {number} cpStartY\n   * @param  {number} cpEndX\n   * @param  {number} cpEndY\n   * @param  {number} endX\n   * @param  {number} endY\n   * @param  {Vector=} outVector\n   *\n   * @return {Vector} Position on bezier.\n   */\n  static lerp(t, startX, startY, cpStartX, cpStartY, cpEndX, cpEndY, endX, endY, outVector) {\n    let u = 1 - t;\n    let tt = t * t;\n    let uu = u * u;\n    let uuu = uu * u;\n    let ttt = tt * t;\n\n    let p = outVector || new Vector();\n    p.set(startX, startY);\n    p.x *= uuu;\n    p.y *= uuu;\n\n    // first\n    p.x += 3 * uu * t * cpStartX;\n    p.y += 3 * uu * t * cpStartY;\n\n    // second\n    p.x += 3 * u * tt * cpEndX;\n    p.y += 3 * u * tt * cpEndY;\n\n    // third\n    p.x += ttt * endX;\n    p.y += ttt * endY;\n\n    return p;\n  }\n\n  /**\n   * interpolate - Interpolates across whole curve.\n   *\n   * @param  {number} t Interpolation position (0...1).\n   * @param  {Vector=} outVector\n   *\n   * @return {Vector} Position on curve.\n   */\n  interpolate(t, outVector) {\n    let res = outVector || new Vector();\n    let lookup = this.mLookup;\n\n    if (this.mBaked) {\n      let i = Math.ceil((lookup.length - 1) * t);\n      let p = lookup[i];\n      res.copyFrom(p);\n\n      return res;\n    }\n\n    // not backed\n    let { mEachT, mPoints } = this;\n    let i = 0;\n\n    while (mEachT[i] < t)\n      i++;\n\n    let minT = mEachT[i - 1] || 0;\n    let maxT = mEachT[i];\n    let bezier = mPoints.slice(i * 8, i * 8 + 8);\n\n    return Curve.lerp((t - minT) / (maxT - minT), ...bezier, res);\n  }\n\n  /**\n   * length - Returns single bezier length.\n   *\n   * @param  {...number} points Coordinates: startX, startY, cpStartX, cpStartY, cpEndX, cpEndY, endX, endY\n   *\n   * @return {number} Length.\n   */\n  static getLength(...points) {\n    let p0 = new Vector(points[0], points[1]);\n    let p1 = new Vector(points[2], points[3]);\n    let p2 = new Vector(points[4], points[5]);\n    let p3 = new Vector(points[6], points[7]);\n\n    return (p3.distance(p0) + p0.distance(p1) + p1.distance(p2) + p2.distance(p3)) / 2;\n  }\n\n  /**\n   * getFullLength - Returns this curve length.\n   *\n   * @return {number} Length.\n   */\n  getFullLength() {\n    let points = this.mPoints;\n    let mPointsLen = points.length;\n    let res = 0;\n\n    for (let i = 0; i < mPointsLen; i += 8)\n      res += Curve.getLength(...points.slice(i, i + 8));\n\n    return res;\n  }\n}\n\n/** @type {Curve}\n * @nocollapse\n */\nCurve.__cache = new Curve();\n","\nclass Debug {\n  constructor() {\n    Debug.assert(false, 'Static class.');\n  }\n\n  static assert(value, message) {\n    if (value === true)\n      return;\n\n    message = message == null ? 'Assertation failed.' : message;\n\n    if (Debug.logOnFail)\n      console.error('[ASSERT]', message);\n\n    if (Debug.throwOnFail)\n      throw new Error(message);\n  }\n\n  static info(...message) {\n    console.info(...message);\n  }\n\n  static warn(...message) {\n    console.warn(...message);\n  }\n}\n\nDebug.throwOnFail = false;\nDebug.logOnFail = true;\n","/**\n * MessageDispatcher - Description\n * @unrestricted\n */\n\nclass MessageDispatcher {\n  constructor() {\n    // object of arrays\n\n    /** @type {Object<string, Array>} */\n    this.mListeners = null;\n  }\n\n  /**\n   * on - Listens to message by given name\n   *\n   * @param {string} name           Name of a message to listen\n   * @param {Function} callback       The callback function\n   * @param {Object=} [context=null] The context for callback function\n   *\n   * @return {void}\n   */\n  on(name, callback, context = null) {\n    Debug.assert(name !== null, 'name cannot be null.');\n    Debug.assert(callback !== null, 'callback cannot be null.');\n\n    // TODO: refactor, expore dispatching provider\n    let filterIx = name.indexOf('@') ;\n    if (filterIx !== -1) {\n      // global handler\n\n      let pureName = name.substring(0, filterIx);\n      let pathMask = name.substring(filterIx + 1);\n\n      //console.log(pureName, pathMask);\n\n      if (MessageDispatcher.mGlobalHandlers.hasOwnProperty(pureName) === false)\n        MessageDispatcher.mGlobalHandlers[pureName] = [];\n\n      let dispatchers = (MessageDispatcher.mGlobalHandlers[pureName]);\n      for (let i = 0; i < dispatchers.length; i++)\n        if (dispatchers[i].callback === callback)\n          return;\n\n      dispatchers.push({\n        callback: callback,\n        context: context,\n        pathMask: pathMask\n      });\n\n      return;\n    }\n\n    if (this.mListeners === null)\n      this.mListeners = {};\n\n    if (this.mListeners.hasOwnProperty(name) === false)\n      this.mListeners[name] = [];\n\n    let dispatchers = /** @type {Array<{callback: Function, context}>} */ (this.mListeners[name]);\n\n    for (let i = 0; i < dispatchers.length; i++)\n      if (dispatchers[i].callback === callback)\n        return;\n\n    dispatchers.push({\n      callback: callback,\n      context: context\n    });\n  }\n\n  /**\n   * removeOn - Description\n   *\n   * @param {string} name            Description\n   * @param {Function=} [callback=null] Description\n   *\n   * @return {void} Description\n   */\n  removeOn(name, callback = null) {\n    if (name === null || name.length === 0)\n      throw new Error('Name cannot be null.');\n\n    if (this.mListeners === null)\n      return;\n\n    let dispatchers = /** @type {Array<{callback: Function, context}>} */ (this.mListeners[name]);\n\n    if (dispatchers === undefined)\n      return;\n\n    if (callback === null) {\n      dispatchers.splice(0, dispatchers.length);\n      return;\n    }\n\n    for (let i = dispatchers.length; i--;) {\n      if (dispatchers[i].callback === callback) {\n        dispatchers.splice(i, 1);\n        return;\n      }\n    }\n  }\n\n  /**\n   * post - Sends message with given pattern and params\n   *\n   * @param {string}  name   The name of a message\n   * @param {...*} params A list of params to send\n   *\n   * @return {void}\n   */\n  post(name, ...params) {\n    // TODO: add wildcard support and name mask annotation support\n    Debug.assert(name !== null, 'name cannot be null.');\n    // if (name === null || name.length === 0)\n    //   throw new Error('Name cannot be null.');\n\n    let message = this.__parseMessage(this, name);\n\n    // TODO: o'really 62?\n    let isGameObject = this instanceof GameObject;\n    if (message.mDirection !== 'none' && isGameObject === false)\n      throw new Error('Dispatching not direct messages are not allowed on non Game Objects.');\n\n    if (message.mDirection === 'none') {\n      this.__invoke(this, message, ...params);\n      this.__invokeGlobal(this, message, ...params);\n    } else if (message.mDirection === 'down') {\n      message.mOrigin = ( /** @type {GameObject} */ (this)).root;\n\n      if (message.mSibblings === true) {\n        this.__sendGlobal(this, message, null, ...params);\n        message.mOrigin.__invokeGlobal(this, message, ...params);\n      }\n      else\n        this.__sendBubbles(this, message, false, ...params);\n    } else if (message.mDirection === 'up') {\n      this.__sendBubbles(this, message, true, ...params);\n    } else {\n      throw new Error('Unknown message type.');\n    }\n  }\n\n  /**\n   * __sendBubbles - Description\n   *\n   * @param {*}  sender  Description\n   * @param {string}  message Description\n   * @param {boolean}  toTop   Description\n   * @param {...*} params  Description\n   *\n   * @return {void} Description\n   */\n  __sendBubbles(sender, message, toTop, ...params) {\n    message.mOrigin = toTop === true ? this : ( /** @type {GameObject} */ (this)).root;\n\n    let list = [this];\n\n    let current = /** @type {GameObject} */ (this);\n    while (current.parent !== null) {\n      list.push(current.parent);\n      current = current.parent;\n    }\n\n    if (toTop) {\n      for (let i = 0; i < list.length; i++) {\n        let dispatcher = /** @type {GameObject} */ (list[i]);\n        dispatcher.__invoke(sender, message, ...params);\n      }\n    } else {\n      for (let i = list.length - 1; i >= 0; i--) {\n        let dispatcher = /** @type {GameObject} */ (list[i]);\n        dispatcher.__invoke(sender, message, ...params);\n      }\n    }\n\n    message.sender.__invokeGlobal(message.sender, message, ...params);\n  }\n\n  /**\n   * __sendGlobal - Description\n   *\n   * @param {*}  sender  Description\n   * @param {Message}  message Description\n   * @param {GameObject=}  origin  Description\n   * @param {...*} params  Description\n   *\n   * @return {void} Description\n   */\n  __sendGlobal(sender, message, origin, ...params) {\n    if (origin === null)\n      origin = /** @type {GameObject} */ (message.mOrigin);\n\n    origin.__invoke(sender, message, ...params);\n\n    for (let i = 0; i < origin.numChildren; i++) {\n      let child = origin.getChildAt(i);\n      child.__sendGlobal(sender, message, child, ...params);\n    }\n  }\n\n  /**\n   * @param {*}  sender\n   * @param {Message}  message\n   * @param {...*} params\n   *\n   * @return {void}\n   */\n  __invoke(sender, message, ...params) {\n    if (this.mListeners === null)\n      return;\n\n    let dispatchers = /** @type {Array<{callback: Function, context}>} */ (this.mListeners[message.mName]);\n\n    if (dispatchers === undefined || dispatchers.length === 0)\n      return;\n\n    if (message.mPathMask !== null) {\n      let inPath = this.__checkPath(this.path, message.mPathMask);\n      if (!inPath)\n        return;\n    }\n\n    // no path filter found - just invoke it\n    let clone = dispatchers.slice(0);\n\n    for (let i = 0; i < clone.length; i++) {\n      let dispatcher = /** @type {{callback: Function, context: *}} */ (clone[i]);\n      message.mTarget = this;\n      dispatcher.callback.call(dispatcher.context, message, ...params);\n    }\n  }\n\n  /**\n   * @param {*}  sender\n   * @param {Message}  message\n   * @param {...*} params\n   *\n   * @return {void}\n   */\n  __invokeGlobal(sender, message, ...params) {\n    let dispatchers = MessageDispatcher.mGlobalHandlers[message.mName];\n\n    if (dispatchers === undefined || dispatchers.length === 0)\n      return;\n\n    let clone = dispatchers.slice(0);\n\n    for (let i = 0; i < clone.length; i++) {\n      let dispatcher = /** @type {{callback: Function, context: *}} */ (clone[i]);\n\n      if (!this.__checkPath(sender.path, dispatcher.pathMask))\n        continue;\n\n      message.mTarget = this;\n      dispatcher.callback.call(dispatcher.context, message, ...params);\n    }\n  }\n\n  /**\n   * @param {string} path\n   * @param {string} pattern\n   *\n   * @return {boolean}\n   */\n  __checkPath(path, pathMask) {\n    if (path == null || pathMask == null)\n      return false;\n\n    if (path === pathMask)\n      return true;\n\n    if (pathMask.indexOf('*') === -1)\n      return path === pathMask;\n    else\n      return new RegExp(\"^\" + pathMask.split(\"*\").join(\".*\") + \"$\").test(path);\n  }\n\n  // TODO: parse exception path'ses like: ~tatata@@@omg####imnotidiout###@@~~\n  /**\n   * __parseMessage - Description\n   *\n   * @param {*} sender Description\n   * @param {string} info   Description\n   *\n   * @return {Message} Description\n   */\n  __parseMessage(sender, info) {\n    // TODO: make message pool... this type of objects shall not be\n    // but dont forget to take care about cancel property\n\n    // EXAMPLES:\n    //  this.post('clicked', data); // Sends to all listeners of this\n    //  this.post('~clicked', data); // Sends to all listeners of this and to each parent of this object\n    //  this.post('clicked@mySprite'); // From top to bottom looking for mySprite\n    //  this.post('~clicked@mySprite'); // From this to top over each parent looks for mySprite\n    //  this.post('clicked@mySprite#ColliderComponent'); // message to a component with type of ColliderComponent\n    //  this.post('~clicked@mySprite#ColliderComponent');\n\n    // DIRECTIONS\n    // clicked - none, direct\n    // ~clicked - up, bubbling\n    // clicked@ - down starting from root, with no filter to everyone\n    // clicked@mySpriter - down with 'mySprite' filter\n    // ~clicked@ - inversed bubbling starting from the root, ending at this\n\n    let result = new Message();\n    result.mSender = sender;\n    result.mDirection = 'none';\n    result.mSibblings = true;\n    result.mPathMask = null;\n    result.mComponentMask = null;\n\n    if (info.charAt(0) === '~') {\n      result.mSibblings = false;\n      result.mDirection = 'up';\n    }\n\n    let ixAt = info.indexOf('@');\n    let ixHash = info.indexOf('#');\n\n    if (ixAt === -1 && ixHash === -1) {\n      result.mSibblings = false;\n      result.mName = info.substr(result.mDirection === 'up' ? 1 : 0);\n      return result;\n    }\n\n    result.mDirection = 'down';\n\n    if (ixHash === -1) { // we got no hash but we have a dog\n      result.mName = info.substring(result.mSibblings ? 0 : 1, ixAt);\n\n      if (info.length === ixAt + 1)\n        result.mPathMask = null;\n      else\n        result.mPathMask = info.substring(ixAt + 1);\n\n      return result;\n    } else {\n      if (ixAt !== -1) {\n        result.mPathMask = info.substring(ixAt + 1, ixHash);\n        result.mName = info.substring(result.mSibblings ? 0 : 1, ixAt);\n      } else {\n        result.mName = info.substring(result.mSibblings ? 0 : 1, ixHash);\n      }\n\n      if (info.length === ixHash + 1)\n        result.mComponentMask = null;\n      else\n        result.mComponentMask = info.substring(ixHash + 1);\n\n      return result;\n    }\n  }\n}\n\nMessageDispatcher.mGlobalHandlers = {};\n\n\nclass Message {\n  constructor() {\n    /** @private @type {*} */\n    this.mSender = null;\n\n    /** @private @type {string} */\n    this.mName;\n\n    /** @private @type {string|null} */\n    this.mPathMask = null;\n\n    /** @private @type {string|null} */\n    this.mComponentMask = null;\n\n    /** @private @type {string} */\n    this.mDirection = 'none';\n\n    /** @private @type {boolean} */\n    this.mSibblings = false;\n\n    /** @private @type {Object} */\n    this.mOrigin = null;\n\n    /** @private @type {Object} */\n    this.mTarget = null;\n\n    /** @private @type {boolean} */\n    this.mCanceled = false;\n  }\n\n  /**\n   * sender - Who send the message\n   *\n   * @return {*} Description\n   */\n  get sender() {\n    return this.mSender;\n  }\n\n  /**\n   * name - The name of the message\n   *\n   * @return {string}\n   */\n  get name() {\n    return this.mName;\n  }\n\n  /**\n   * direction - direction in what message was sent. Can be 'none', 'up' and 'down'.\n   *\n   * @return {string}\n   */\n  get direction() {\n    return this.mDirection;\n  }\n\n  /**\n   * sibblings - Indicates if sibblings should be included into dispatching process.\n   *\n   * @return {boolean} Description\n   */\n  get sibblings() {\n    return this.mSibblings;\n  }\n\n  /**\n   * pathMask - The GameObject.name mask string if was used.\n   *\n   * @return {string|null} Description\n   */\n  get pathMask() {\n    return this.mPathMask;\n  }\n\n  /**\n   * componentMask - Component mask string if was used.\n   *\n   * @return {string|null}\n   */\n  get componentMask() {\n    return this.mComponentMask;\n  }\n\n  /**\n   * origin - The original sender of a message.\n   *\n   * @return {*|null}\n   */\n  get origin() {\n    return this.mOrigin;\n  }\n\n  /**\n   * target - The destination object for this message.\n   *\n   * @return {*|null}\n   */\n  get target() {\n    return this.mTarget;\n  }\n\n  /**\n   * cancel - Stops propagation of the message.\n   *\n   * @return {void}\n   */\n  cancel() {\n    this.mCanceled = true;\n  }\n\n  /**\n   * canceled - True/False if\n   *\n   * @return {boolean}\n   */\n  get canceled() {\n    return this.mCanceled;\n  }\n\n  static get PROGRESS() {\n    return 'progress';\n  }\n  static get COMPLETE() {\n    return 'complete';\n  }\n}\n","\nclass Time {\n  constructor() {\n  }\n\n  static get time(){\n    return Time.mTime;\n  }\n\n  static get dt() {\n    return Time.mDeltaTime;\n  }\n\n  static get scale() {\n    return Time.mScale;\n  }\n\n  static set scale(value) {\n    Debug.assert(value >= 0, 'Time.scale must be >= 0.');\n\n    Time.mScale = value;\n  }\n}\n\n/** @type {number} */\nTime.mTime = 0;\n\n/** @type {number} */\nTime.mDeltaTime = 0;\n\n/** @type {number} */\nTime.mScale = 1;\n","\nclass System extends MessageDispatcher {\n  constructor(){\n    super();\n  }\n\n\n  /**\n   * onFixedUpdate - Description\n   *\n   * @param {number} dt Description\n   *\n   * @return {void} Description\n   */\n  onFixedUpdate(dt){\n  }\n\n\n  /**\n   * onUpdate - Description\n   *\n   * @param {number} dt Description\n   *\n   * @return {void} Description\n   */\n  onUpdate(dt, t){\n  }\n\n  /**\n   * onPostUpdate - Description\n   *\n   * @param {number} dt Description\n   *\n   * @return {void} Description\n   */\n  onPostUpdate(dt, t){\n  }\n\n\n  /**\n   * onChildrenAdded - Description\n   *\n   * @param {GameObject} child Description\n   *\n   * @return {void} Description\n   */\n  onChildrenAdded(child){\n  }\n\n\n  /**\n   * onChildrenRemoved - Description\n   *\n   * @param {GameObject} child Description\n   *\n   * @return {void} Description\n   */\n  onChildrenRemoved(child){\n  }\n\n\n  /**\n   * onComponentAdded - Description\n   *\n   * @param {GameObject} child     Description\n   * @param {Component} component Description\n   *\n   * @return {void} Description\n   */\n  onComponentAdded(child, component)\n  {}\n\n\n  /**\n   * onComponentRemoved - Description\n   *\n   * @param {GameObject} child     Description\n   * @param {Component} component Description\n   *\n   * @return {void} Description\n   */\n  onComponentRemoved(child, component)\n  {}\n}\n","\nclass Viewport extends MessageDispatcher {\n  /**\n   * constructor - Description\n   *\n   * @param {HTMLElement} containerElement Description\n   *\n   * @return {void} Description\n   */\n  constructor(containerElement) {\n    super();\n\n    /** @type {HTMLElement} */\n    this.mContainerElement = containerElement;\n\n    this.mContainerElement.style.userSelect = 'none';\n    this.mContainerElement.style.touchAction = 'none';\n    this.mContainerElement.style.overflow = 'hidden';\n    this.mContainerElement.style.cursor = 'auto';\n    this.mContainerElement.style.WebkitTapHighlightColor = 'rgba(0, 0, 0, 0)';\n\n    let size = this.mContainerElement.getBoundingClientRect();\n\n    /** @type {Rectangle} */\n    this.mSize = new Rectangle(size.left, size.top, size.width, size.height);\n\n    window.addEventListener('resize', x=> this.__onResize());\n  }\n\n  __onResize() {\n    let size = this.mContainerElement.getBoundingClientRect();\n    this.mSize = new Rectangle(size.left, size.top, size.width, size.height);\n\n    this.post('resize', this.mSize);\n  }\n\n  /**\n   * size - Description\n   *\n   * @return {Rectangle} Description\n   */\n  get size(){\n    return this.mSize;\n  }\n\n  /**\n   * nativeDOM - Description\n   *\n   * @return {Element} Description\n   */\n  get nativeDOM(){\n    return this.mContainerElement;\n  }\n\n  // TODO: dispose, remove resize event\n}\n","/**\n * Component - Description\n * @unrestricted\n * @extends MessageDispatcher\n */\n\nclass Component extends MessageDispatcher {\n  /**\n   * constructor - description\n   *\n   * @return {void}          description\n   */\n  constructor() {\n    super();\n\n    /** @type {number} */\n    this.mId = ++GameObject.ID;\n\n    /** @type {GameObject|null} */\n    this.gameObject = null;\n\n    /** @type {boolean} */\n    this.mAdded = false;\n  }\n\n  /**\n   * onAdded - description\n   *\n   * @param  {GameObject} gameObject description\n   * @return {void}            description\n   */\n  onAdded(gameObject) {}\n\n  /**\n   * onRemoved - description\n   *\n   * @param  {GameObject} gameObject description\n   * @return {void}            description\n   */\n  onRemoved(gameObject) {}\n\n  /**\n   * onFixedUpdate - description\n   *\n   * @param  {number} dt description\n   * @return {void}    description\n   */\n  onFixedUpdate(dt) {}\n\n  /**\n   * onUpdate - description\n   *\n   * @param  {number} dt description\n   * @return {void}    description\n   */\n  onUpdate(dt) {}\n\n  /**\n   * onUpdate - description\n   *\n   * @param  {number} dt description\n   * @return {void}    description\n   */\n  onPostUpdate(dt) {}\n\n  // TODO: finish\n  dispose() {}\n\n  // TODO: finish\n  removeFromParent() {\n    if (this.gameObject === null)\n      return;\n\n    this.gameObject.removeComponent(this);\n  }\n}\n\n\n/** @type {number}\n * @nocollapse\n */\nComponent.ID = 0;\n","/**\n * GameObject - Base class for all black game objects.\n * @unrestricted\n * @extends MessageDispatcher\n */\n\nclass GameObject extends MessageDispatcher {\n  constructor() {\n    super();\n\n    /** @type {number} */\n    this.mId = ++GameObject.ID;\n\n    /** @type {string|null} */\n    this.mName = null;\n\n    /** @type {Array<Component>} */\n    this.mComponents = [];\n\n    /** @type {Array<GameObject>} */\n    this.mChildren = [];\n\n    /** @type {number} */\n    this.mX = 0;\n\n    /** @type {number} */\n    this.mY = 0;\n\n    /** @type {number} */\n    this.mScaleX = 1;\n\n    /** @type {number} */\n    this.mScaleY = 1;\n\n    /** @type {number} */\n    this.mPivotX = 0;\n\n    /** @type {number} */\n    this.mPivotY = 0;\n\n    /** @type {number} */\n    this.mRotation = 0;\n\n    /** @type {Rectangle} */\n    this.mBounds = null;\n\n    /** @type {Matrix} */\n    this.mLocalTransform = new Matrix();\n\n    /** @type {Matrix} */\n    this.mWorldTransform = new Matrix();\n\n    /** @type {DirtyFlag} */\n    this.mDirty = DirtyFlag.DIRTY;\n\n    /** @type {GameObject} */\n    this.mParent = null;\n\n    /** @type {string|null} */\n    this.mTag = null;\n\n    /** @type {number} */\n    this.mIndex = 0;\n\n    /** @type {boolean} */\n    this.mAdded = false;\n  }\n\n  /**\n   * id - Unique object id.\n   *\n   * @returns {number} Unique object id.\n   */\n  get id() {\n    return this.mId;\n  }\n\n  /**\n   * onAdded - This method called each time object added to stage.\n   *\n   * @return {void}\n   */\n  onAdded() { }\n\n  /**\n   * onRemoved - Called when object is removed from stage.\n   *\n   * @return {void}\n   */\n  onRemoved() {}\n\n\n  /**\n   * add - Sugar method for adding child GameObjects or Components.\n   *\n   * @param {...GameObject|...Component} gameObjectsAndOrComponents A GameObject or Component to add.\n   *\n   * @return {Array<GameObject|Component>} The passed GameObject or Component.\n   */\n  add(...gameObjectsAndOrComponents) {\n    for (let i = 0; i < gameObjectsAndOrComponents.length; i++) {\n      let gooc = gameObjectsAndOrComponents[i];\n\n      if (gooc instanceof GameObject)\n        this.addChild(/* @type {!GameObject} */ (gooc));\n      else\n        this.addComponent(/* @type {!Component} */ (gooc));\n    }\n\n    return gameObjectsAndOrComponents;\n  }\n\n  /**\n   * Adds a child GameObject instance to this GameObject instance. The child is added to the top of all other children in this GameObject instance.\n   *\n   * @param  {GameObject} child The GameObject instance to add as a child of this GameObject instance.\n   * @return {GameObject}\n   */\n  addChild(child) {\n    return this.addChildAt(child, this.mChildren.length);\n  }\n\n  /**\n   * Adds a child GameObject instance to this GameObject instance. The child is added to the top of all other children in this GameObject instance.\n   *\n   * @param  {GameObject} child The GameObject instance to add as a child of this GameObject instance.\n   * @param  {number=} index = 0 The index position to which the child is added.\n   * @return {GameObject} The GameObject instance that you pass in the child parameter.\n   */\n  addChildAt(child, index = 0) {\n    let numChildren = this.mChildren.length;\n\n    if (index < 0 || index > numChildren)\n      throw new Error('Child index is out of bounds.');\n\n    if (child.mParent === this)\n      return this.setChildIndex(child, index);\n\n    // this operation should be atomic. since __setParent can throw exception.\n    this.mChildren.splice(index, 1, child);\n\n    child.removeFromParent();\n    child.__setParent(this);\n\n    if (this.root !== null)\n      Black.instance.onChildrenAdded(child);\n\n    return child;\n  }\n\n  /**\n   * @protected\n   * @param {GameObject} value Description\n   *\n   * @return {boolean} Description\n   */\n  __setParent(value) {\n    let p = value;\n\n    while (p !== null && p !== this)\n      p = p.mParent;\n\n    if (p === this)\n      throw new Error('Object cannot be a child to itself.');\n\n    this.mParent = value;\n    this.setTransformDirty();\n    return true;\n  }\n\n  /**\n   * setChildIndex - Sets the index (layer) of the specified GameObject to the specified index (layer).\n   *\n   * @param {GameObject} child The GameObject instance to change index for.\n   * @param {number} index Desired index.\n   *\n   * @returns {GameObject} The GameObject instance that you pass in the child parameter.\n   */\n  setChildIndex(child, index) {\n    let ix = this.mChildren.indexOf(child);\n\n    if (ix < 0)\n      throw new Error('Child is not a child of this object.');\n\n    if (ix === index)\n      return child;\n\n    this.mChildren.splice(ix, 1);\n    this.mChildren.splice(index, 1, child);\n    this.setTransformDirty();\n\n    return child;\n  }\n\n  /**\n   * removeFromParent - Removes this GameObject instance from its parent.\n   *\n   * @param {boolean} [dispose=false]\n   *\n   * @return {void} Description\n   */\n  removeFromParent(dispose = false) {\n    if (this.mParent)\n      this.mParent.removeChild(this);\n\n    if (dispose)\n      this.dispose();\n\n    this.setTransformDirty();\n  }\n\n  /**\n   * removeChild - Removes specified GameObjects instance.\n   *\n   * @param {GameObject} child GameObject instance to remove.\n   * @param {boolean} [dispose=false]\n   *\n   * @return {GameObject} The GameObject instance that you pass in the child parameter.\n   */\n  removeChild(child, dispose) {\n    let ix = this.mChildren.indexOf(child);\n\n    if (ix < 0)\n      return null;\n\n    return this.removeChildAt(ix);\n  }\n\n\n  /**\n   * getChildByName\n   *\n   * @param {string} name\n   *\n   * @return {GameObject|null}\n   */\n  getChildByName(name) {\n    for (var i = 0; i < this.mChildren.length; i++) {\n      if (this.mChildren[i].name === name)\n        return this.mChildren[i];\n    }\n\n    return null;\n  }\n\n  /**\n   * removeChildAt - Removes GameObjects instance from specified index.\n   *\n   * @param {number} index Description\n   * @param {boolean} [dispose=false]\n   *\n   * @return {GameObject} The removed GameObject instance.\n   */\n  removeChildAt(index, dispose) {\n    if (index < 0 || index > this.numChildren)\n      throw new Error('Child index is out of bounds.');\n\n    let hadRoot = this.root !== null;\n\n    let child = this.mChildren[index];\n    child.__setParent(null);\n\n    this.mChildren.splice(index, 1);\n\n    if (hadRoot)\n      Black.instance.onChildrenRemoved(child);\n\n    if (dispose)\n      child.dispose();\n\n    this.setTransformDirty();\n\n    return child;\n  }\n\n  /**\n   * getChildAt - Returns GameObject at specified index.\n   *\n   * @param {number} index The index of child GameObject.\n   *\n   * @return {GameObject} The GameObject at specified index.\n   */\n  getChildAt(index) {\n    return this.mChildren[index];\n  }\n\n  /**\n   * addComponent - Adds Component instance to the end of the list,\n   *\n   * @param  {Component} instances Component instance or instances.\n   * @return {Component} The Component instance you pass in the instances parameter.\n   */\n  addComponent(component) {\n    let instance = component;\n\n    if (instance.gameObject)\n      throw new Error('Component cannot be added to two game objects at the same time.');\n\n    this.mComponents.push(instance);\n    instance.gameObject = this;\n\n    if (this.root !== null)\n      Black.instance.onComponentAdded(this, instance);\n\n    instance.onAdded(this);\n\n    return instance;\n  }\n\n  /**\n   * removeComponent - Description\n   *\n   * @param {Component} instance Description\n   *\n   * @return {Component|null} Description\n   */\n  removeComponent(instance) {\n    if (!instance)\n      return null;\n\n    let index = this.mComponents.indexOf(instance);\n    if (index > -1)\n      this.mComponents.splice(index, 1);\n\n    // detach game object after or before?\n    instance.gameObject = null;\n    instance.onRemoved(this);\n\n    if (this.root !== null)\n      Black.instance.onComponentRemoved(this, instance);\n\n    return instance;\n  }\n\n  /**\n   * getComponent\n   *\n   * @param {*} typeName\n   *\n   * @return {Component|null}\n   */\n  getComponent(typeName) {\n    for (let i = 0; i < this.mComponents.length; i++) {\n      let c = this.mComponents[i];\n      if (c instanceof typeName)\n        return c;\n    }\n\n    return null;\n  }\n\n\n  /**\n   * numComponenets - Returns number of component's\n   *\n   * @return {number}\n   */\n  get numComponenets() {\n    return this.mComponents.length;\n  }\n\n\n  /**\n   * getComponentAt - Retrives Component at given index.\n   *\n   * @param {number} index\n   *\n   * @return {Component|null}\n   */\n  getComponentAt(index) {\n    if (index >= 0 && index < this.mComponents.length)\n      return this.mComponents[index];\n\n    return null;\n  }\n\n  /**\n   * localTransformation - Description\n   *\n   * @return {Matrix} Description\n   */\n  get localTransformation() {\n    if (this.mDirty & DirtyFlag.LOCAL) {\n      this.mDirty ^= DirtyFlag.LOCAL;\n\n      if (this.mRotation === 0) {\n        let tx = this.mX - this.mPivotX * this.mScaleX;\n        let ty = this.mY - this.mPivotY * this.mScaleY;\n        return this.mLocalTransform.set(this.mScaleX, 0, 0, this.mScaleY, tx, ty);\n      } else {\n        let cos = Math.cos(this.mRotation);\n        let sin = Math.sin(this.mRotation);\n        let a = this.mScaleX * cos;\n        let b = this.mScaleX * sin;\n        let c = this.mScaleY * -sin;\n        let d = this.mScaleY * cos;\n        let tx = this.mX - this.mPivotX * a - this.mPivotY * c;\n        let ty = this.mY - this.mPivotX * b - this.mPivotY * d;\n        return this.mLocalTransform.set(a, b, c, d, tx, ty);\n      }\n    }\n\n    return this.mLocalTransform;\n  }\n\n  /**\n   * worldTransformation - returns cloned Matrix object which represents object orientation in world space.\n   *\n   * @return {Matrix}\n   */\n  get worldTransformation() {\n    if (this.mDirty & DirtyFlag.WORLD) {\n      this.mDirty ^= DirtyFlag.WORLD;\n\n      if (this.mParent)\n        this.mParent.worldTransformation.copyTo(this.mWorldTransform).append(this.localTransformation);\n      else\n        this.localTransformation.copyTo(this.mWorldTransform);\n    }\n\n    return this.mWorldTransform.clone();\n  }\n\n  /**\n   * worldTransformationInversed - Description\n   *\n   * @return {Matrix} Description\n   */\n  get worldTransformationInversed() {\n    // TODO: optimize, cache\n    return this.worldTransformation.clone().invert();\n  }\n\n  /**\n   * __fixedUpdate - Description\n   *\n   * @param {number} dt Description\n   *\n   * @return {void} Description\n   */\n  __fixedUpdate(dt) {\n    this.onFixedUpdate(dt);\n\n    for (let k = 0; k < this.mComponents.length; k++) {\n      let c = this.mComponents[k];\n      c.gameObject = this;\n      c.onFixedUpdate(dt);\n    }\n\n    for (let i = 0; i < this.mChildren.length; i++)\n      this.mChildren[i].__fixedUpdate(dt);\n  }\n\n  /**\n   * __update - Description\n   *\n   * @param {number} dt Description\n   *\n   * @return {void} Description\n   */\n  __update(dt) {\n    this.onUpdate(dt);\n\n    for (let k = 0; k < this.mComponents.length; k++) {\n      let c = this.mComponents[k];\n      c.gameObject = this;\n      c.onUpdate(dt);\n    }\n\n    for (let i = 0; i < this.mChildren.length; i++)\n      this.mChildren[i].__update(dt);\n  }\n\n  /**\n   * __update - Description\n   *\n   * @param {number} dt Description\n   *\n   * @return {void} Description\n   */\n  __postUpdate(dt) {\n    this.onPostUpdate(dt);\n\n    for (let k = 0; k < this.mComponents.length; k++) {\n      let c = this.mComponents[k];\n      c.gameObject = this;\n      c.onPostUpdate(dt);\n    }\n\n    for (let i = 0; i < this.mChildren.length; i++) {\n      this.mChildren[i].__postUpdate(dt);\n    }\n  }\n\n  /**\n   * onFixedUpdate - Description\n   *\n   * @param {number} dt Description\n   *\n   * @return {void} Description\n   */\n  onFixedUpdate(dt) {}\n\n  /**\n   * onUpdate - Description\n   *\n   * @param {number} dt Description\n   *\n   * @return {void} Description\n   */\n  onUpdate(dt) {}\n\n  /**\n   * onUpdate - Description\n   *\n   * @param {number} dt Description\n   *\n   * @return {void} Description\n   */\n  onPostUpdate(dt) {}\n\n  /**\n   * __render - Description\n   *\n   * @param {VideoNullDriver} video           Description\n   * @param {number} time            Description\n   * @param {number} parentAlpha     Description\n   * @param {string} parentBlendMode Description\n   *\n   * @return {void} Description\n   */\n  __render(video, time, parentAlpha, parentBlendMode) {\n    this.onRender(video, time);\n\n    let child = null;\n    for (let i = 0; i < this.mChildren.length; i++) {\n      child = this.mChildren[i];\n      child.__render(video, time, parentAlpha, parentBlendMode);\n    }\n  }\n\n  /**\n   * onRender - Description\n   *\n   * @param {VideoNullDriver} video Description\n   * @param {number} time  Description\n   *\n   * @return {void} Description\n   */\n  onRender(video, time) {}\n\n  /**\n   * onGetLocalBounds - Override this method if you need to specify GameObject size. Should be always be a local coordinates.\n   *\n   * @protected\n   * @param {Rectangle=} outRect Description\n   *\n   * @return {Rectangle} bounds in local space withoout taking care about transformation matrix\n   */\n  onGetLocalBounds(outRect = undefined) {\n    outRect = outRect || new Rectangle();\n    return outRect.set(0, 0, 0, 0);\n  }\n\n  /**\n   * getBounds - Returns world bounds of this object and all children if specified (true by default).\n   * object.getBounds() - relative to world.\n   * object.getBounds(object) - local bounds.\n   * object.getBounds(object.parent) - relative to parent.\n   * object.getBounds(objectB) - relative to objectB space.\n   *\n   * @param {GameObject} [space=undefined]\n   * @param {boolean} [includeChildren=true]\n   * @param {Rectangle=} [outRect=null]\n   *\n   * @return {Rectangle} returns bounds of the object and all childrens\n   */\n  getBounds(space = undefined, includeChildren = true, outRect = undefined) {\n    outRect = outRect || new Rectangle();\n\n    let matrix = this.worldTransformation;\n\n    // TODO: optimize, check if space == null, space == this, space == parent\n    // TODO: use wtInversed instead\n    if (space != null) {\n      matrix = this.worldTransformation.clone();\n      matrix.prepend(space.worldTransformation.clone().invert());\n    }\n\n    let bounds = new Rectangle();\n    this.onGetLocalBounds(bounds);\n\n    matrix.transformRect(bounds, bounds);\n    outRect.expand(bounds.x, bounds.y, bounds.width, bounds.height);\n\n    if (includeChildren)\n      for (let i = 0; i < this.numChildren; i++)\n        this.getChildAt(i).getBounds(space, includeChildren, outRect);\n\n    return outRect;\n  }\n\n  /**\n   * setTransform -\n   *\n   * @param {number} [x=0]      x-cord\n   * @param {number} [y=0]      y-cord\n   * @param {number} [r=0]      rotation\n   * @param {number} [scaleX=1] scale-x\n   * @param {number} [scaleY=1] scale-y\n   * @param {number} [anchorX=0] anchor-x\n   * @param {number} [anchorY=0] anchor-y\n   * @param {number} [includeChildren=true] include children when adjusting pivot?\n   *\n   * @return {GameObject}\n   */\n  setTransform(x = 0, y = 0, r = 0, scaleX = 1, scaleY = 1, anchorX = 0, anchorY = 0, includeChildren = true) {\n    this.mX = x;\n    this.mY = y;\n    this.mRotation = r;\n    this.mScaleX = scaleX;\n    this.mScaleY = scaleY;\n\n    this.getBounds(this, includeChildren, Rectangle.__cache.zero());\n    this.mPivotX = Rectangle.__cache.width * anchorX;\n    this.mPivotY = Rectangle.__cache.height * anchorY;\n\n    this.setTransformDirty();\n    return this;\n  }\n\n  /**\n   * localToGlobal - Description\n   *\n   * @param {Vector} localPoint       Description\n   * @param {Vector|null} [outVector=null] Description\n   *\n   * @return {Vector} Description\n   */\n  localToGlobal(localPoint, outVector = null) {\n    return this.worldTransformation.transformVector(localPoint, outVector);\n  }\n\n  /**\n   * globalToLocal - Description\n   *\n   * @param {Vector} localPoint       Description\n   * @param {Vector|null} [outVector=null] Description\n   *\n   * @return {Vector} Description\n   */\n  globalToLocal(globalPoint, outVector = null) {\n    return this.worldTransformationInversed.transformVector(globalPoint, outVector);\n  }\n\n  /*:--- PROPERTIES ---:*/\n\n  /**\n   * numChildren - Description\n   *\n   * @return {number} Description\n   */\n  get numChildren() {\n    return this.mChildren.length;\n  }\n\n  /**\n   * name - Description\n   *\n   * @return {string|null} Description\n   */\n  get name() {\n    return this.mName;\n  }\n\n  /**\n   * name - Description\n   *\n   * @param {string|null} value Description\n   *\n   * @return {void} Description\n   */\n  set name(value) {\n    this.mName = value;\n  }\n\n  /**\n   * x - Gets the x coordinate of the GameoObject instance relative to the local coordinates of the parent GameoObject.\n   *\n   * @return {number} Description\n   */\n  get x() {\n    return this.mX;\n  }\n\n  /**\n   * x - Sets the x coordinate of the GameoObject instance relative to the local coordinates of the parent GameoObject.\n   *\n   * @param {number} value Description\n   *\n   * @return {void} Description\n   */\n  set x(value) {\n    if (this.mX == value)\n      return;\n\n    this.mX = value;\n    this.setTransformDirty();\n  }\n\n  /**\n   * y - Gets the y coordinate of the GameoObject instance relative to the local coordinates of the parent GameoObject.\n   *\n   * @return {number} Description\n   */\n  get y() {\n    return this.mY;\n  }\n\n  /**\n   * y - Sets the y coordinate of the GameoObject instance relative to the local coordinates of the parent GameoObject.\n   *\n   * @param {number} value Description\n   *\n   * @return {void} Description\n   */\n  set y(value) {\n    if (this.mY == value)\n      return;\n\n    this.mY = value;\n    this.setTransformDirty();\n  }\n\n  /**\n   * pivotX - Description\n   * @export\n   * @return {number} Description\n   */\n  get pivotX() {\n    return this.mPivotX;\n  }\n\n  /**\n   * pivotX - Description\n   *\n   * @export\n   * @param {number} value Description\n   *\n   * @return {void} Description\n   */\n  set pivotX(value) {\n    if (this.mPivotX == value)\n      return;\n\n    this.mPivotX = value;\n    this.setTransformDirty();\n  }\n\n  /**\n   * pivotY - Description\n   *\n   * @return {number} Description\n   */\n  get pivotY() {\n    return this.mPivotY;\n  }\n\n  /**\n   * pivotY - Description\n   *\n   * @param {number} value Description\n   *\n   * @return {void} Description\n   */\n  set pivotY(value) {\n    if (this.mPivotY == value)\n      return;\n\n    this.mPivotY = value;\n    this.setTransformDirty();\n  }\n\n  /**\n   * alignPivot\n   *\n   * @param {number}  [px=0.5]\n   * @param {number}  [py=0.5]\n   * @param {boolean} [includeChildren=true]\n   *\n   * @return {GameObject}\n   */\n  alignPivot(ax = 0.5, ay = 0.5, includeChildren = true) {\n    this.getBounds(this, includeChildren, Rectangle.__cache.zero());\n\n    this.mPivotX = Rectangle.__cache.width * ax;\n    this.mPivotY = Rectangle.__cache.height * ay;\n    this.setTransformDirty();\n\n    return this;\n  }\n\n  /**\n   * scaleX - Description\n   *\n   * @return {number} Description\n   */\n  get scaleX() {\n    return this.mScaleX;\n  }\n\n  /**\n   * scaleX - Description\n   *\n   * @param {number} value Description\n   *\n   * @return {void} Description\n   */\n  set scaleX(value) {\n    if (this.mScaleX == value)\n      return;\n\n    this.mScaleX = value;\n    this.setTransformDirty();\n  }\n\n  /**\n   * scaleY - Description\n   *\n   * @return {number} Description\n   */\n  get scaleY() {\n    return this.mScaleY;\n  }\n\n  /**\n   * scaleY - Description\n   *\n   * @param {number} value Description\n   *\n   * @return {void} Description\n   */\n  set scaleY(value) {\n    if (this.mScaleY == value)\n      return;\n\n    this.mScaleY = value;\n    this.setTransformDirty();\n  }\n\n  /**\n   * rotation - returns current rotation\n   *\n   * @return {number} Description\n   */\n  get rotation() {\n    return this.mRotation;\n  }\n\n  /**\n   * rotation - Description\n   *\n   * @param {number} value Description\n   *\n   * @return {void} Description\n   */\n  set rotation(value) {\n    if (this.mRotation == value)\n      return;\n\n    this.mRotation = value;\n    this.setTransformDirty();\n  }\n\n  /**\n   * parent - Description\n   *\n   * @return {GameObject} Description\n   */\n  get parent() {\n    return this.mParent;\n  }\n\n  /**\n   * root - Description\n   *\n   * @return {GameObject|null} Description\n   */\n  get root() {\n    let current = this;\n\n    if (current === Black.instance.root)\n      return current;\n\n    while (current.mParent) {\n      if (current === Black.instance.root)\n        return current;\n      else if (current.mParent === Black.instance.root)\n        return Black.instance.root;\n      else\n        current = current.mParent;\n    }\n\n    return null;\n  }\n\n  /**\n   * depth - Description\n   *\n   * @return {number} Description\n   */\n  get depth() {\n    if (this.mParent)\n      return this.mParent.depth + 1;\n    else\n      return 0;\n  }\n\n  /**\n   * index - Description\n   *\n   * @return {number} Description\n   */\n  get index() {\n    return this.mIndex;\n  }\n\n  /**\n   * width - Description\n   *\n   * @return {number} Description\n   */\n  get width() {\n    return this.getBounds(this.mParent).width;\n  }\n\n  /**\n   * width - Description\n   *\n   * @param {number} value Description\n   *\n   * @return {void} Description\n   */\n  set width(value) {\n    this.scaleX = 1;\n    const currentWidth = this.width;\n\n    if (currentWidth != 0.0)\n      this.scaleX = value / currentWidth;\n  }\n\n  /**\n   * height - Description\n   *\n   * @return {number} Description\n   */\n  get height() {\n    return this.getBounds(this.mParent).height;\n  }\n\n  /**\n   * height - Description\n   *\n   * @param {number} value Description\n   *\n   * @return {void} Description\n   */\n  set height(value) {\n    this.scaleY = 1;\n    const currentHeight = this.height;\n\n    if (currentHeight != 0)\n      this.scaleY = value / currentHeight;\n  }\n\n\n  /**\n   * localWidth - returns height in local space without children.\n   *\n   * @return {number}\n   */\n  get localWidth() {\n    return this.getBounds(this, false).width;\n  }\n\n\n  /**\n   * localHeight - returns height in local space without children.\n   *\n   * @return {number}\n   */\n  get localHeight() {\n    return this.getBounds(this, false).height;\n  }\n\n  // TODO: precache\n  /**\n   * path - Description\n   *\n   * @return {string} Description\n   */\n  get path() {\n    if (this.mParent !== null)\n      return this.mParent.path + '/' + this.mName;\n\n    return this.mName;\n  }\n\n  /**\n   * tag - Description\n   *\n   * @return {string|null} Description\n   */\n  get tag() {\n    return this.mTag;\n  }\n\n  /**\n   * tag - Description\n   *\n   * @param {string|null} value Description\n   *\n   * @return {void} Description\n   */\n  set tag(value) {\n    if (this.mTag === value)\n      return;\n\n    /** @type {string|null} */\n    let old = this.mTag;\n    this.mTag = value;\n\n    if (this.mAdded)\n      Black.instance.onTagUpdated(this, old, value);\n  }\n\n\n  /**\n   * co - Starts coroutine.\n   *\n   * @param {Function} gen\n   * @param {*=} [ctx=null]\n   *\n   * @return {Generator}\n   */\n  spawn(gen, ctx = null) {\n    var iter = gen.apply(ctx == null ? this : ctx);\n\n    function step(it) {\n      if (it.done)\n        return;\n\n      if (typeof it.value === 'function')\n        it.value(x => step(iter.next(x)));\n      else\n        step(iter.next(it.value));\n    }\n\n    step(iter.next());\n    return iter;\n  }\n\n\n  /**\n   * @param {number} [seconds=1]\n   *\n   * @return {function(*):*}\n   */\n  wait(seconds = 1) {\n    return cb => setTimeout(cb.bind(this, seconds * 1000), seconds * 1000);\n  }\n\n\n  /**\n   * waitMessage - Waits for a speceific message\n   *\n   * @param {string} message The name of the message to wait for\n   *\n   * @return {function(?):?} Description\n   */\n  waitMessage(message) {\n    return cb => this.on(message, cb.bind(this));\n  }\n\n\n  /**\n   * setDirty\n   *\n   * @param {DirtyFlag} flag\n   * @param {boolean} [includeChildren=true] Description\n   *\n   * @return {void}\n   */\n  setDirty(flag, includeChildren = true) {\n    if (includeChildren) {\n      GameObject.forEach(this, x=> {\n        x.mDirty |= flag;\n      });\n    } else {\n      this.mDirty |= flag;\n    }\n  }\n\n  setTransformDirty() {\n    this.setDirty(DirtyFlag.LOCAL, false);\n    this.setDirty(DirtyFlag.WORLD, true);\n  }\n\n  /**\n   * dispose\n   *\n   * @return {void}\n   */\n  dispose() {\n  }\n\n  // TODO: rename method\n  /**\n   * getBoundsWithPoints - Description\n   *\n   * @param {Array<number>} points              Description\n   * @param {Matrix} worldTransformation Description\n   * @param {Rectangle=} outRect             Description\n   *\n   * @return {Rectangle} Description\n   */\n  static getBoundsWithPoints(points, worldTransformation, outRect) {\n    outRect = outRect || new Rectangle();\n\n    let minX = Number.MAX_VALUE;\n    let maxX = -Number.MAX_VALUE;\n    let minY = Number.MAX_VALUE;\n    let maxY = -Number.MAX_VALUE;\n    let xx = 0;\n    let yy = 0;\n    let tmpVector = new Vector();\n\n    for (let i = 0; i < points.length; i += 2) {\n      worldTransformation.transformXY(points[i], points[i + 1], tmpVector);\n\n      if (minX > tmpVector.x)\n        minX = tmpVector.x;\n\n      if (maxX < tmpVector.x)\n        maxX = tmpVector.x;\n\n      if (minY > tmpVector.y)\n        minY = tmpVector.y;\n\n      if (maxY < tmpVector.y)\n        maxY = tmpVector.y;\n    }\n\n    outRect.set(minX, minY, maxX - minX, maxY - minY);\n    return outRect;\n  }\n\n  /**\n   * intersects - Description\n   *\n   * @param {GameObject} gameObject Description\n   * @param {Vector} point      Description\n   *\n   * @return {boolean} Description\n   */\n  static intersects(gameObject, point) {\n    let tmpVector = new Vector();\n    let inv = gameObject.worldTransformation.invert();\n\n    inv.transformVector(point, tmpVector);\n\n    let rect = gameObject.getBounds(gameObject, false);\n    return rect.containsXY(tmpVector.x, tmpVector.y);\n  }\n\n  /**\n   * intersectsAt - Description\n   *\n   * @param {GameObject} gameObject Description\n   * @param {Vector} point      Description\n   * @param {Vector=} outVector  Description\n   *\n   * @return {boolean} Description\n   */\n  static intersectsAt(gameObject, point, outVector = undefined) {\n    outVector = outVector || new Vector();\n\n    let tmpVector = Vector.__cache;\n    let inv = gameObject.worldTransformationInversed;\n\n    inv.transformVector(point, tmpVector);\n\n    let rect = gameObject.getBounds(gameObject, false);\n    let contains = rect.containsXY(tmpVector.x, tmpVector.y);\n\n    if (!contains)\n      return false;\n\n    outVector.x = tmpVector.x - rect.x;\n    outVector.y = tmpVector.y - rect.y;\n    return true;\n  }\n\n  /**\n   * intersectsWith - Description\n   *\n   * @param {GameObject} gameObject Description\n   * @param {Vector} point      Description\n   *\n   * @return {GameObject|null} returns object or null\n   */\n  static intersectsWith(gameObject, point) {\n    let obj = null;\n    for (let i = gameObject.numChildren - 1; i >= 0; --i) {\n      let child = gameObject.mChildren[i];\n\n      obj = GameObject.intersectsWith(child, point);\n      if (obj != null)\n        return obj;\n\n      let inside = GameObject.intersects(child, point);\n      if (inside) {\n        obj = child;\n        break;\n      }\n    }\n\n    if (obj === null && GameObject.intersects(gameObject, point)) {\n      return gameObject;\n    }\n\n    return null;\n  }\n\n  /**\n   * findWithTag - Description\n   *\n   * @param {string} tag Description\n   *\n   * @return {Array<GameObject>|null} Description\n   */\n  static findWithTag(tag) {\n    if (Black.instance.mTagCache.hasOwnProperty(tag) === false)\n      return null;\n\n    return Black.instance.mTagCache[tag];\n  }\n\n  /**\n   * findComponents - Returns a list of Components\n   *\n   * @param {GameObject} gameObject\n   * @param {function (new:Component)} type\n   *\n   * @return {Array<Component>}\n   */\n  static findComponents(gameObject, type) {\n    Debug.assert(gameObject !== null, 'gameObject cannot be null.');\n    Debug.assert(type !== null, 'type cannot be null.');\n\n    /** @type {Array<Component>} */\n    let list = [];\n\n    /** @type {function(GameObject, function(new:Component)):void} */\n    let f = function(gameObject, type) {\n      for (let i = 0; i < gameObject.mComponents.length; i++) {\n        let c = gameObject.mComponents[i];\n        if (c instanceof type)\n          list.push(c);\n      }\n\n      for (let i = 0; i < gameObject.mChildren.length; i++)\n        f(gameObject.mChildren[i], type);\n    };\n\n    f(gameObject, type);\n\n    return list;\n  }\n\n  /**\n   * forEach - Runs action accross all object mathing the name.\n   *\n   * @param {GameObject} node   Description\n   * @param {function(GameObject)} action Description\n   *\n   * @return {void} Description\n   */\n  static forEach(node, action) {\n    if (node == null)\n      node = Black.instance.root;\n\n    action(node);\n\n    for (let i = 0; i < node.numChildren; i++)\n      GameObject.forEach(node.getChildAt(i), action);\n  }\n\n\n  /**\n   * find - Finds object by its name.\n   *\n   * @param {string} name Description\n   * @param {GameObject} node Description\n   *\n   * @return {GameObject} Description\n   */\n  static find(name, node) {\n    if (node == null)\n      node = Black.instance.root;\n\n    if (node.name === name)\n      return node;\n\n    for (let i = 0; i < node.numChildren; i++) {\n      let r = GameObject.find(name, node.getChildAt(i));\n      if (r != null)\n        return r;\n    }\n\n    return null;\n  }\n}\n\n/** @type {number}\n * @nocollapse\n */\nGameObject.ID = 0;\n\n/**\n * @enum {number}\n */\n\nvar DirtyFlag = {\n  LOCAL: 1,\n  WORLD: 2,\n  DIRTY: 0xffffff\n};\n","// TODO:\n// [_] Do not handle is loaded or not.\n// Texture shall not be responsible for loading itself.\n// We have TextureAsset for it.\n// native size - always the size of physical texture\n// source size - the original size of a texture to\n//\n\n\nclass Texture {\n  /**\n   * @param  {Image} nativeTexture description\n   * @param  {Rectangle=} region = undefined description\n   * @param  {Rectangle=} untrimmedRect = undefined description\n   */\n  constructor(nativeTexture, region, untrimmedRect) {\n    /** @type {Image} */\n    this.mTexture = nativeTexture;\n\n    /** @type {Rectangle} */\n    this.mRegion;\n\n    /** @type {boolean} */\n    this.mIsSubtexture = false;\n\n    /** @type {number} */\n    this.mId = ++Texture.__ID;\n\n    if (region === undefined) {\n      this.mRegion = new Rectangle(0, 0, nativeTexture.naturalWidth, nativeTexture.naturalHeight);\n    } else {\n      this.mRegion = /** @type {Rectangle} */ (region);\n      this.mIsSubtexture = true;\n    }\n\n    /** @type {boolean} */\n    this.mTrimmed = untrimmedRect !== undefined;\n\n    if (this.mTrimmed === false)\n      untrimmedRect = new Rectangle(0, 0, this.mRegion.width, this.mRegion.height);\n\n    /** @type {Rectangle} */\n    this.mUntrimmedRect = /** @type {Rectangle} */ (untrimmedRect);\n\n    /** @type {boolean} */\n    this.mIsLoaded = true;\n  }\n\n  /**\n   * id - Description\n   *\n   * @return {number} Description\n   */\n  get id() {\n    return this.mId;\n  }\n\n  /**\n   * isTrimmed - Description\n   *\n   * @return {boolean} Description\n   */\n  get isTrimmed() {\n    return this.mTrimmed;\n  }\n\n  /**\n   * isSubTexture - Description\n   *\n   * @return {boolean} Description\n   */\n  get isSubTexture() {\n    return this.mIsSubtexture;\n  }\n\n  // TODO: if we update texture we have to nofity everything, send signal\n  // update(nativeTexture = null, region = null, source = null, crop = null){\n  // }\n\n  // render width\n  // render height\n  // croppedWidth, croppedHeight\n  // width, height\n  //\n\n  /**\n   * untrimmedRect - Description\n   *\n   * @return {Rectangle} Description\n   */\n  get untrimmedRect() {\n    return this.mUntrimmedRect;\n  }\n\n  /**\n   * width - Description\n   *\n   * @return {number} Description\n   */\n  get width() {\n    if (this.mRegion)\n      return this.mRegion.width;\n\n    return this.mTexture.naturalWidth;\n  }\n\n  /**\n   * height - Description\n   *\n   * @return {number} Description\n   */\n  get height() {\n    if (this.mRegion)\n      return this.mRegion.height;\n\n    return this.mTexture.naturalHeight;\n  }\n\n  /**\n   * region - Description\n   *\n   * @return {Rectangle} Description\n   */\n  get region() {\n    return this.mRegion;\n  }\n\n  /**\n   * native - Description\n   *\n   * @return {Image} Description\n   */\n  get native() {\n    return this.mTexture;\n  }\n\n  /**\n   * isLoaded - Description\n   *\n   * @return {boolean} Description\n   */\n  get isLoaded() {\n    return this.mIsLoaded;\n  }\n\n  /**\n   * type - Description\n   *\n   * @return {string} Description\n   */\n  get type() {\n    return 'Texture';\n  }\n\n  /**\n   * baseType - Description\n   *\n   * @return {string} Description\n   */\n  get baseType() {\n    return 'Texture';\n  }\n\n  /**\n   * dispose - Description\n   *\n   * @return {void} Description\n   */\n  dispose() {\n    this.mTexture = null;\n  }\n\n  /**\n   * fromBase64String - Description\n   *\n   * @param {string} string Description\n   *\n   * @return {Texture} Description\n   */\n  static fromBase64String(string) {\n    let imgElement = new Image();\n    imgElement.src = string;\n    return new Texture(imgElement);\n  }\n\n\n  /**\n   * fromCanvasAsImage - Description\n   *\n   * @param {HTMLElement}   canvas           Description\n   * @param {string} [type=image/png] Description\n   * @param {number} [quality=1]      Description\n   *\n   * @return {Texture} Description\n   */\n  static fromCanvasAsImage(canvas, type = 'image/png', quality = 1) {\n    let imgElement = new Image();\n    imgElement.src = canvas.toDataURL(type, quality);\n\n    return new Texture(imgElement);\n  }\n\n\n  /**\n   * fromCanvas - Description\n   *\n   * @param {HTMLElement} canvas Description\n   *\n   * @return {Texture} Description\n   */\n  static fromCanvas(canvas) {\n    return Black.instance.video.getTextureFromCanvas(canvas);\n  }\n}\n\n/** @type {number}\n * @nocollapse\n */\nTexture.__ID = 0;\n\n/** @type {Image|null}\n * @nocollapse\n */\nTexture.MISSING_IMAGE_CACHE = null;\n","\nclass AtlasTexture extends Texture {\n  /**\n   * constructor - Creates an Texture Atlas\n   *\n   * @param {Texture} texture A base texture object.\n   * @param {{meta: *, frames: *}} jsonObject\n   *\n   * @return {void}\n   */\n  constructor(texture, jsonObject) {\n    super(texture.native);\n\n    /** @type {Object} */\n    this.mMeta = {};\n\n    /** @dict */\n    this.mSubTextures = {}; // dictionary\n\n    this.__parseJson(jsonObject);\n  }\n\n  /**\n   * __parseJson\n   *\n   * @param  {{meta: *, frames: *}} o\n   * @return {void}\n   */\n  __parseJson(o) {\n    const NEGATIVE_HALF_PI = -(Math.PI / 2);\n\n    // if (o.meta.format)\n    //   this.mMeta.format = o.meta.format;\n    //\n    // if (o.meta.scale)\n    //   this.mMeta.scale = parseFloat(o.meta.scale);\n\n    for (let key in o.frames) {\n      let data = /** @type {Array<number>} */ (o.frames[key]);\n\n      let region = new Rectangle(data[0], data[1], data[2], data[3]);\n      let untrimmedRect = new Rectangle(data[4], data[5], data[6], data[7]);\n\n      this.mSubTextures[key] = new Texture(this.native, region, untrimmedRect);\n    }\n  }\n\n  // addRegion(name, region, frame) {}\n  //\n  // removeRegion() {}\n\n  /**\n   * getTexture - Returns the textures by a given name.\n   *\n   * @param {string} name\n   *\n   * @return {Texture} The Texture or null;\n   */\n  getTexture(name) {\n    /** @type {Texture} */\n    let t = this.mSubTextures[name];\n    if (t === undefined)\n      console.warn('Texture \\'%s\\' was not found in cache.', name);\n\n    return /** @type {Texture} */ (t);\n  }\n\n  /**\n   * getTextures - Returns list of Textures.\n   *\n   * @param {string|null} [nameMask=null] The mask to filter by.\n   * @param {Array<Texture>|null} outTextures\n   *\n   * @return {Array<Texture>} The list of found textures.\n   */\n  getTextures(nameMask = null, outTextures = null) {\n    let out = outTextures || [];\n    if (nameMask === null) {\n      for (let key in this.mSubTextures)\n        out.push(this.mSubTextures[key]);\n\n      return /** @type {Array<Texture>} */ (out);\n    }\n\n    let names = [];\n\n    // TODO: make helper wild function\n    let re = new RegExp(\"^\" + nameMask.split(\"*\").join(\".*\") + \"$\");\n    for (let key in this.mSubTextures)\n      if (re.test(key))\n        names.push(key);\n\n    names.sort(this.__naturalComparer);\n\n    for (let i = 0; i < names.length; i++)\n      out.push(this.mSubTextures[names[i]]);\n\n    return out;\n  }\n\n  /**\n   * @param {*} a\n   * @param {*} b\n   *\n   * @return {number}\n   */\n  __naturalComparer(a, b) {\n    const NUMBER_GROUPS = /(-?\\d*\\.?\\d+)/g;\n    let aa = String(a).split(NUMBER_GROUPS);\n    let bb = String(b).split(NUMBER_GROUPS);\n    let min = Math.min(aa.length, bb.length);\n\n    for (let i = 0; i < min; i++) {\n      let x = parseFloat(aa[i]) || aa[i].toLowerCase();\n      let y = parseFloat(bb[i]) || bb[i].toLowerCase();\n\n      if (x < y)\n        return -1;\n      else if (x > y)\n        return 1;\n    }\n\n    return 0;\n  };\n\n  //dispose() {}\n}\n","// TODO: handle errors\n// TODO: v2: parallel loading?\n//\n//\n\nclass Asset extends MessageDispatcher {\n  /**\n   * @param  {string} name description\n   * @param  {string} url  description\n   */\n  constructor(name, url) {\n    super();\n\n    /** @type {string} */\n    this.mName = name;\n\n    /** @type {string} */\n    this.mUrl = url;\n\n    /** @type {*|null} */\n    this.mData = null;\n\n    /** @type {boolean} */\n    this.mIsLoaded = false;\n\n    /** @type {string|undefined} */\n    this.mMimeType = undefined;\n\n    /** @type {string} */\n    this.mResponseType = '';\n\n    /** @type {string} */\n    this.mExtension = this.getExtension(url);\n\n    /** @type {XMLHttpRequest|null} */\n    this.mRequest = null;\n  }\n\n  /**\n   * load\n   *\n   * @return {void}\n   */\n  load() {\n    //console.log('Asset: loading asset \\'%s\\' from \\'%s\\'', this.mName, this.mUrl);\n\n    this.mRequest = new XMLHttpRequest();\n    //this.mRequest.onprogress = (pe) => this.onProgressChanged(pe);\n\n    if (this.mRequest.overrideMimeType && this.mMimeType)\n      this.mRequest.overrideMimeType(this.mMimeType);\n\n    this.mRequest.responseType = this.mResponseType;\n    this.mRequest.open(\"GET\", this.mUrl, true);\n    this.mRequest.onreadystatechange = () => {\n      if (this.mRequest.readyState === 4) {\n        if ((this.mRequest.status === 200) || ((this.mRequest.status === 0) && this.mRequest.responseText))\n          this.onLoaded();\n        else\n          throw new Error('Error loading ' + this.mUrl + \" (\" + this.mRequest.status + \":\"+ this.mRequest.responseText + \")\"); //TODO handle errors\n      }\n    };\n\n    this.mRequest.send(null);\n  }\n\n\n  /**\n   * onLoaded\n   *\n   * @return {void}\n   */\n  onLoaded() {\n    this.mIsLoaded = true;\n    this.post('complete');\n  }\n\n  /**\n   * name\n   *\n   * @return {string}\n   */\n  get name() {\n    return this.mName;\n  }\n\n  /**\n   * data\n   *\n   * @return {*}\n   */\n  get data() {\n    return this.mData;\n  }\n\n  /**\n   * isLoaded\n   *\n   * @return {boolean}\n   */\n  get isLoaded() {\n    return this.mIsLoaded;\n  }\n\n  // TODO: finish\n  dispose() {}\n\n  /**\n   * getExtension\n   *\n   * @param {string} url\n   *\n   * @return {string}\n   */\n  getExtension(url) {\n    if (url.indexOf(\".\") === -1)\n      return '';\n\n    return url.substring(url.indexOf(\".\")).toLowerCase();\n  }\n}\n","\nclass TextureAsset extends Asset {\n  /**\n   * constructor - Description\n   *\n   * @param {string} name Description\n   * @param {string} url  Description\n   *\n   * @return {void} Description\n   */\n  constructor(name, url) {\n    super(name, url);\n\n    /** @type {Image} */\n    this.mImageElement = new Image();\n  }\n\n  /**\n   * onLoaded - Description\n   *\n   * @return {void} Description\n   */\n  onLoaded() {\n    //console.log('TextureAsset: \\'%s\\' loaded', this.mName);\n\n    this.mData = new Texture(this.mImageElement);\n\n    super.onLoaded();\n  }\n\n  /**\n   * load - Description\n   *\n   * @return {void} Description\n   */\n  load() {\n    this.mImageElement.src = this.mUrl;\n    this.mImageElement.onload = () => {\n      this.onLoaded();\n    }\n  }\n\n  /**\n   * type - Description\n   *\n   * @return {string} Description\n   */\n  get type() {\n    return \"TextureAsset\";\n  }\n}\n","\nclass JSONAsset extends Asset {\n  /**\n   * constructor\n   *\n   * @param {string} name\n   * @param {string} url\n   *\n   * @return {void}\n   */\n  constructor(name, url) {\n    super(name, url);\n    this.mimeType = \"application/json\";\n  }\n\n  /**\n   * onLoaded\n   *\n   * @return {void}\n   */\n  onLoaded(){\n    this.mData = JSON.parse(/** @type {string} */ (this.mRequest.responseText) );\n    super.onLoaded();\n  }\n}\n","\nclass AtlasTextureAsset extends Asset {\n  /**\n   * constructor\n   *\n   * @param {string} name\n   * @param {string} imageUrl\n   * @param {string} dataUrl\n   *\n   * @return {void}\n   */\n  constructor(name, imageUrl, dataUrl) {\n    super(name, imageUrl);\n\n    /** @type {Image} */\n    this.mImageElement = new Image();\n\n    /** @type {JSONAsset} */\n    this.dataAsset = new JSONAsset(name, dataUrl);\n    this.dataAsset.on('complete', this.onJsonLoaded, this);\n  }\n\n  onJsonLoaded() {\n    this.mImageElement.src = this.mUrl;\n    this.mImageElement.onload = () => {\n      this.onLoaded();\n    }\n  }\n\n  /**\n   * onLoaded\n   *\n   * @return {void}\n   */\n  onLoaded() {\n    this.mData = new AtlasTexture(new Texture(this.mImageElement), /** @type {{meta: *, frames: *}} */ (this.dataAsset.data));\n\n    super.onLoaded();\n  }\n\n  /**\n   * load\n   * @override\n   *\n   * @return {void}\n   */\n  load() {\n    this.dataAsset.load();\n  }\n}\n","/*\nTODO:\n  1. propper error handling\n  2. max parallel downloads\n  3. check for name dublicates\n  4. load progress\n*/\n\n\nclass AssetManager extends MessageDispatcher {\n  constructor() {\n    super();\n\n    /** @type {string} */\n    this.mDefaultPath = '';\n\n    /** @type {number} */\n    this.mTotalLoaded = 0;\n\n    /** @type {boolean} */\n    this.mIsAllLoaded = false;\n\n    /** @type {number} */\n    this.mLoadingProgress = 0;\n\n    /** @type {Array<Asset>} */\n    this.mQueue = [];\n\n    /** @dict */\n    this.mTextures = {};\n\n    /** @dict */\n    this.mAtlases = {};\n\n    /** @dict */\n    this.mJsons = {};\n  }\n\n  enqueueImage(name, url) {\n    this.mQueue.push(new TextureAsset(name, this.mDefaultPath + url));\n  }\n\n  enqueueAtlas(name, imageUrl, dataUrl) {\n    this.mQueue.push(new AtlasTextureAsset(name, this.mDefaultPath + imageUrl, this.mDefaultPath + dataUrl));\n  }\n\n  enqueueJson(name, url) {\n    this.mQueue.push(new JSONAsset(name, this.mDefaultPath + url));\n  }\n\n  /**\n   * loadQueue\n   *\n   * @return {void}\n   */\n  loadQueue() {\n    for (let i = 0; i < this.mQueue.length; i++) {\n      let item = this.mQueue[i];\n\n      item.on(Message.COMPLETE, this.onAssetLoaded, this);\n      item.load();\n    }\n  }\n\n  /**\n   * onAssetLoaded\n   *\n   * @param {Message} msg\n   *\n   * @return {void}\n   */\n  onAssetLoaded(msg) {\n    this.mTotalLoaded++;\n    this.mLoadingProgress = this.mTotalLoaded / this.mQueue.length;\n\n    let item = msg.sender;\n\n    // TODO: rework this\n    // TODO: check for dups\n    if (item.constructor === TextureAsset)\n      this.mTextures[item.name] = item.data;\n    else if (item.constructor === AtlasTextureAsset)\n      this.mAtlases[item.name] = item.data;\n    else if (item.constructor === JSONAsset)\n      this.mJsons[item.name] = item.data;\n    else\n      console.error('Unable to handle asset type.', item);\n\n    this.post(Message.PROGRESS, this.mLoadingProgress);\n\n    if (this.mTotalLoaded === this.mQueue.length) {\n      this.mQueue.splice(0, this.mQueue.length);\n\n      this.mIsAllLoaded = true;\n      this.post(Message.COMPLETE);\n    }\n  }\n\n  /**\n   * getTexture\n   *\n   * @param {string} name\n   *\n   * @return {Texture|null}\n   */\n  getTexture(name) {\n    /** @type {Texture} */\n    let t = this.mTextures[name];\n\n    if (t != null)\n      return t;\n\n    for (let key in this.mAtlases) {\n      t = this.mAtlases[key].getTexture(name);\n      if (t != null)\n        return t;\n    }\n\n    return null;\n  }\n\n\n  /**\n   * @param {string} name\n   *\n   * @return {AtlasTexture}\n   */\n  getAtlas(name) {\n    return this.mAtlases[name];\n  }\n\n  /**\n   * defaultPath\n   *\n   * @return {string}\n   */\n  get defaultPath() {\n    return this.mDefaultPath;\n  }\n\n  /**\n   * defaultPath\n   *\n   * @param {string} value\n   *\n   * @return {void}\n   */\n  set defaultPath(value) {\n    this.mDefaultPath = value;\n  }\n\n  /**\n   * isAllLoaded\n   *\n   * @return {boolean}\n   */\n  get isAllLoaded() {\n    return this.mIsAllLoaded;\n  }\n}\n\n/** @type {AssetManager} */\nAssetManager.default = new AssetManager();\n","/**\n * A blend mode enum.\n * @enum {string}\n */\n\nvar BlendMode = {\n  AUTO: 'auto',\n  NORMAL: 'source-over',\n  ADD: 'lighter',\n  MULTIPLY: 'multiply',\n  SCREEN: 'screen',\n  OVERLAY: 'overlay',\n  DARKEN: 'darken',\n  LIGHTEN: 'lighten',\n  COLOR_DODGE: 'color-dodge',\n  COLOR_BURN: 'color-burn',\n  HARD_LIGHT: 'hard-light',\n  SOFT_LIGHT: 'soft-light',\n  DIFFERENCE: 'difference',\n  EXCLUSION: 'exclusion',\n  HUE: 'hue',\n  SATURATE: 'saturate',\n  COLOR: 'color',\n  LUMINOSITY: 'luminosity'\n};\n","\nclass VideoNullDriver {\n  /**\n   * @param  {HTMLElement} containerElement description\n   * @param  {number} width            description\n   * @param  {number} height           description\n   */\n  constructor(containerElement, width, height) {\n    /** @type {string} */\n    this.mGlobalBlendMode = 'auto';\n\n    /** @type {HTMLElement} */\n    this.mContainerElement = /** @type {HTMLElement} */ (containerElement);\n\n    /** @type {number} */\n    this.mClientWidth = width;\n\n    /** @type {number} */\n    this.mClientHeight = height;\n\n    /** @type {Matrix} */\n    this.mTransform = new Matrix();\n\n    /** @type {number} */\n    this.mGlobalAlpha = 1;\n\n    /** @type {HTMLElement} */\n    this.mMeasureElement = /** @type {HTMLElement} */ (document.createElement('span'));\n    this.mMeasureElement.style.position = 'absolute';\n    this.mContainerElement.appendChild(this.mMeasureElement);\n\n    Black.instance.viewport.on('resize', this.__onResize, this);\n  }\n\n  __onResize(msg, rect) {\n    let w = this.mContainerElement.clientWidth;\n    let h = this.mContainerElement.clientHeight;\n\n    this.mClientWidth = w;\n    this.mClientHeight = h;\n  }\n\n  /**\n   * start - Description\n   *\n   * @return {void} Description\n   */\n  start() {}\n\n  beginFrame() {}\n\n  endFrame() {}\n\n\n  /**\n   * getTextureFromCanvas - Description\n   *\n   * @param {HTMLElement} canvas Description\n   *\n   * @return {Texture|null} Description\n   */\n  getTextureFromCanvas(canvas){\n    return null;\n  }\n\n  /**\n   * setTransform - Description\n   *\n   * @param {Matrix} m Description\n   *\n   * @return {void} Description\n   */\n  setTransform(m) {\n    this.mTransform = m;\n  }\n\n  /**\n   * globalAlpha - Description\n   *\n   * @return {number} Description\n   */\n  get globalAlpha() {\n    return this.mGlobalAlpha;\n  }\n\n  /**\n   * globalAlpha - Description\n   *\n   * @param {number} value Description\n   *\n   * @return {void} Description\n   */\n  set globalAlpha(value) {\n    this.mGlobalAlpha = value;\n  }\n\n  /**\n   * mGlobalBlendMode - Description\n   *\n   * @return {string} Description\n   */\n  get globalBlendMode() {\n    return this.mGlobalBlendMode;\n  }\n\n  /**\n   * globalBlendMode - Description\n   *\n   * @param {string} value Description\n   *\n   * @return {void} Description\n   */\n  set globalBlendMode(value) {\n    this.mGlobalBlendMode = value;\n  }\n\n  /**\n   * drawImage - description\n   *\n   * @param  {Texture} texture description\n   */\n  drawImage(texture) {}\n\n  /**\n   * drawText\n   *\n   * @param {string} text\n   * @param {TextInfo} style\n   * @param {Rectangle} bounds\n   * @param {number} textWidth\n   * @param {number} textHeight\n   *\n   * @return {void}\n   */\n  drawText(text, style, bounds, textWidth, textHeight) {}\n\n  clear() {}\n\n  /**\n   * save - Description\n   *\n   * @param {GameObject|null} gameObject Used for internal binding.\n   *\n   * @return {void} Description\n   */\n  save(gameObject) {}\n\n  restore() {}\n\n  hexColorToString(color) {\n    let parsedColor = color.toString(16);\n    return '#000000'.substring(0, 7 - parsedColor.length) + parsedColor;\n  }\n\n  /**\n   * measureText - Description\n   *\n   * @param {string} text  Description\n   * @param {TextInfo} style Description\n   *\n   * @return {Vector} Description\n   */\n  measureText(text, style) {\n    let el = this.mMeasureElement;\n    el.innerHTML = text;\n    el.style.whiteSpace = 'pre';\n    el.style.fontSize = style.size + 'px';\n    el.style.fontFamily = style.name;\n    el.style.fontStyle = style.style;\n    el.style.fontWeight = style.weight;\n\n    let v = new Vector(el.offsetWidth + style.strokeThickness, el.offsetHeight + style.strokeThickness);\n    el.innerHTML = '';\n\n    return v;\n  }\n}\n","\nclass CanvasDriver extends VideoNullDriver {\n  /**\n   * @param  {HTMLElement} containerElement description\n   * @param  {number} width            description\n   * @param  {number} height           description\n   */\n  constructor(containerElement, width, height) {\n    super(containerElement, width, height);\n\n    /** @type {CanvasRenderingContext2D|null} */\n    this.mCtx = null;\n\n    this.mGlobalAlpha = 1;\n    this.mGlobalBlendMode = BlendMode.NORMAL;\n\n    this.__createCanvas();\n  }\n\n  /**\n   * __createCanvas\n   *\n   * @return {void}\n   */\n  __createCanvas() {\n    let cvs = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n    cvs.id = 'canvas';\n    this.mContainerElement.appendChild(cvs);\n\n    this.mCtx = /** @type {CanvasRenderingContext2D} */ (cvs.getContext('2d'));\n    this.mCtx.canvas.width = this.mClientWidth;\n    this.mCtx.canvas.height = this.mClientHeight;\n  }\n\n  __onResize(msg, rect) {\n    super.__onResize(msg, rect);\n\n    this.mCtx.canvas.width = this.mClientWidth;\n    this.mCtx.canvas.height = this.mClientHeight;\n  }\n\n  /**\n   * setTransform\n   *\n   * @param {Matrix} m\n   *\n   * @return {void}\n   */\n  setTransform(m) {\n    super.setTransform(m);\n\n    let v = m.value;\n    this.mCtx.setTransform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  }\n\n\n  /**\n   * globalAlpha\n   *\n   * @param {number} value\n   *\n   * @return {void}\n   */\n  set globalAlpha(value) {\n    this.mGlobalAlpha = value;\n    this.mCtx.globalAlpha = value;\n  }\n\n\n  /**\n   * globalBlendMode\n   *\n   * @param {string} blendMode\n   *\n   * @return {void}\n   */\n  set globalBlendMode(blendMode) {\n    if (blendMode === BlendMode.AUTO)\n      return;\n\n    this.mGlobalBlendMode = blendMode;\n    this.mCtx.globalCompositeOperation = blendMode;\n  }\n\n  /**\n   * drawImage\n   *\n   * @param {Texture} texture\n   *\n   * @return {void}\n   */\n  drawImage(texture) {\n    let w = texture.width;\n    let h = texture.height;\n    let ox = texture.untrimmedRect.x;\n    let oy = texture.untrimmedRect.y;\n\n    this.mCtx.drawImage(texture.native, texture.region.x, texture.region.y, w, h, ox, oy, w, h);\n  }\n\n  /**\n   * drawText\n   *\n   * @override\n   * @param {string} text\n   * @param {TextInfo} style\n   * @param {Rectangle} bounds\n   * @param {number} textWidth\n   * @param {number} textHeight\n   *\n   * @return {void}\n   */\n  drawText(text, style, bounds, textWidth, textHeight) {\n    this.mCtx.beginPath();\n    this.mCtx.rect(bounds.x, bounds.y, bounds.width, bounds.height);\n    this.mCtx.clip();\n\n    this.mCtx.font = `${style.style} ${style.weight} ${style.size}px \"${style.name}\"`;\n    this.mCtx.fillStyle = this.hexColorToString(style.color);\n\n    let x = 0;\n    if (style.align === 'center')\n      x = (bounds.width * 0.5) - textWidth * 0.5;\n\n    else if (style.align === 'right')\n      x = bounds.width - textWidth;\n\n    this.mCtx.textBaseline = 'top';\n    this.mCtx.fillText(text, x, 0);\n\n    if (style.strokeThickness > 0) {\n      this.mCtx.lineWidth = style.strokeThickness;\n      this.mCtx.strokeStyle = this.hexColorToString(style.strokeColor);\n      this.mCtx.strokeText(text, x, 0);\n    }\n    this.mCtx.closePath();\n  }\n\n  /**\n   * clear\n   *\n   * @return {void}\n   */\n  clear() {\n    this.mCtx.clearRect(0, 0, this.mCtx.canvas.width, this.mCtx.canvas.height);\n  }\n\n  /**\n   * beginFrame\n   *\n   * @return {void}\n   */\n  beginFrame() {\n    super.beginFrame();\n\n    this.clear();\n    this.mCtx.save();\n  }\n\n  /**\n   * endFrame\n   *\n   * @return {void}\n   */\n  endFrame() {\n    super.endFrame();\n\n    this.mCtx.restore();\n  }\n\n  /**\n   * getTextureFromCanvas - Description\n   *\n   * @param {HTMLElement} canvas Description\n   *\n   * @return {Texture|null} Description\n   */\n  getTextureFromCanvas(canvas) {\n    return new Texture(canvas, new Rectangle(0, 0, canvas.width, canvas.height));\n  }\n\n  /**\n   * save\n   *\n   * @override\n   * @param {GameObject|null} gameObject Used for internal binding.\n   *\n   * @return {void}\n   */\n  save(gameObject) {\n    this.mCtx.save();\n  }\n\n  /**\n   * restore\n   *\n   * @return {void}\n   */\n  restore() {\n    this.mCtx.restore();\n  }\n}\n","\nclass DOMDriver extends VideoNullDriver {\n  /**\n   * @param  {HTMLElement} containerElement description\n   * @param  {number} width            description\n   * @param  {number} height           description\n   */\n  constructor(containerElement, width, height) {\n    super(containerElement, width, height);\n\n    /** @type {number} */\n    this.mGlobalAlpha = 1;\n\n    /** @type {Array<Element>} */\n    this.mCache = [];\n\n    /** @type {number} */\n    this.mCounter = 0;\n\n    /** @type {boolean} */\n    this.mPixelated = true;\n\n    /** @type {GameObject|null} */\n    this.mCurrentObject = null;\n    this.__initCSS();\n  }\n\n  /**\n   * save - Description\n   *\n   * @override\n   * @param {GameObject|null} gameObject Used for internal binding.\n   *\n   * @return {void} Description\n   */\n  save(gameObject) {\n    this.mCurrentObject = gameObject;\n  }\n\n  /**\n   * __initCSS - description\n   *\n   * @return {void}  description\n   */\n  __initCSS() {\n    let imgRendering = 'image-rendering:optimizeSpeed; image-rendering:optimize-contrast; image-rendering:crisp-edges; image-rendering:pixelated';\n\n    let sSprite = document.createElement('style');\n    sSprite.type = 'text/css';\n    sSprite.innerHTML = '.sprite { position: absolute; background-repeat: no-repeat; cursor: default !important; -webkit-transform-origin: 0px 0px;}';\n    document.getElementsByTagName('head')[0].appendChild(sSprite);\n\n    let sSpritePixelated = document.createElement('style');\n    sSpritePixelated.type = 'text/css';\n    sSpritePixelated.innerHTML = '.sprite-p { position: absolute; background-repeat: no-repeat; cursor: default !important; -webkit-transform-origin: 0px 0px; ' + imgRendering + '}';\n    document.getElementsByTagName('head')[0].appendChild(sSpritePixelated);\n\n    let sText = document.createElement('style');\n    sText.type = 'text/css';\n    sText.innerHTML = '.text { position: absolute; white-space: pre; overflow: hidden; cursor: default !important; -webkit-transform-origin: 0px 0px;}';\n    document.getElementsByTagName('head')[0].appendChild(sText);\n\n    let sViewport = document.createElement('style');\n    sViewport.type = 'text/css';\n    sViewport.innerHTML = '.viewport { width: 100%; height: 100%; position: relative; overflow: hidden; cursor: default; }';\n    document.getElementsByTagName('head')[0].appendChild(sViewport);\n\n    this.mContainerElement.className = 'viewport';\n  }\n\n  /**\n   * beginFrame - description\n   *\n   * @return {void}  description\n   */\n  beginFrame() {\n    this.mCounter = 0;\n  }\n\n  /**\n   * endFrame - description\n   *\n   * @return {void}  description\n   */\n  endFrame() {\n    if (this.mCounter === this.mCache.length)\n      return;\n\n    //TODO: cleanup unused divs\n    //TODO: remove them instead of hiding\n    for (let i = this.mCounter; i < this.mCache.length; i++) {\n      let el = this.mCache[i];\n\n      el.parentNode.removeChild(el);\n    }\n\n    this.mCache.splice(this.mCounter);\n  }\n\n  /**\n   * getTextureFromCanvas - Description\n   *\n   * @param {HTMLElement} canvas Description\n   *\n   * @return {Texture|null} Description\n   */\n  getTextureFromCanvas(canvas) {\n    return Texture.fromCanvasAsImage(canvas);\n  }\n\n  /**\n   * drawImage - description\n   *\n   * @param  {Texture} texture description\n   * @return {void}         description\n   */\n  drawImage(texture) {\n    /** @type {Matrix|null} */\n    let oldTransform = this.mTransform;\n\n    if (texture.untrimmedRect.x !== 0 || texture.untrimmedRect.y !== 0) {\n      Matrix.__cache.set(1, 0, 0, 1, texture.untrimmedRect.x, texture.untrimmedRect.y);\n      this.mTransform.append(Matrix.__cache);\n    }\n\n    let el = this.__popElement(this.mPixelated ? 'sprite-p' : 'sprite');\n    this.__updateElementCommon(el);\n    this.__updateImageElement(el, texture);\n\n    this.mTransform = oldTransform;\n  }\n\n  /**\n   * drawText - description\n   *\n   * @override\n   * @param {string} text\n   * @param {TextInfo} style\n   * @param {Rectangle} bounds\n   * @param {number} textWidth\n   * @param {number} textHeight\n   *\n   * @return {void}                      description\n   */\n  drawText(text, style, bounds, textWidth, textHeight) {\n    let el = this.__popElement('text');\n    this.__updateElementCommon(el);\n\n    // TODO: check this type. review the code.\n    this.__updateTextElement( /** @type {HTMLElement} */ (el), text, style, bounds);\n  }\n\n  /**\n   * __popElement - Description\n   *\n   * @param {string} className Description\n   *\n   * @return {Element} Description\n   */\n  __popElement(className) {\n    this.mCounter++;\n\n    if (this.mCounter <= this.mCache.length)\n      return this.mCache[this.mCounter - 1];\n\n    let el = document.createElement('div');\n    el.className = className;\n    this.mContainerElement.appendChild(el);\n\n    this.mCache.push(el);\n    return (el);\n  }\n\n  /**\n   * __updateElementCommon - Description\n   *\n   * @param {Element} el Description\n   *\n   * @return {void} Description\n   */\n  __updateElementCommon(el) {\n    let v = this.mTransform.value;\n\n    // TODO: slow, rework\n    // NOTE: toFixed(0) is faster then toFixed(6)\n    let transform = `matrix(${v[0].toFixed(6)}, ${v[1].toFixed(6)}, ${v[2].toFixed(6)}, ${v[3].toFixed(6)}, ${v[4].toFixed(6)}, ${v[5].toFixed(6)})`;\n    //let transform = `matrix(${v[0]}, ${v[1]}, ${v[2]}, ${v[3]}, ${v[4]}, ${v[5]})`;\n\n    //console.log(el.style.transform, transform);\n    if (el.style.webkitTransform !== transform)\n      el.style.webkitTransform = transform;\n\n    //el.style.transform = transform;\n\n    //if (el.style.opacity != this.mGlobalAlpha)\n    el.style.opacity = this.mGlobalAlpha; // would be faster to not compare string and int\n\n    //if (el.style.backgroundImage !== '') {\n    //el.style.backgroundImage = '';\n    //console.log('reset img');\n    //}\n\n    // if (el.style.width !== null)\n    //   el.style.width = null;\n    //\n    // if (el.style.height !== null)\n    //   el.style.height = null;\n\n    // if (el.style.display === 'none')\n    //   el.style.display = 'block';\n  }\n\n  /**\n   * __updateImageElement - description\n   *\n   * @param  {Element} el      description\n   * @param  {Texture} texture description\n   * @return {void}         description\n   */\n  __updateImageElement(el, texture) {\n    if (texture) {\n      let url = 'url(' + texture.native.src + ')';\n\n      if (el.style.backgroundImage !== url)\n        el.style.backgroundImage = url;\n\n      if (texture.isSubTexture) {\n        let vBackgroundPosition = `${-texture.region.x}px ${-texture.region.y}px`;\n\n        if (el.style.backgroundPosition !== vBackgroundPosition)\n          el.style.backgroundPosition = vBackgroundPosition;\n      }\n    } else {\n      el.style.backgroundImage = 'none';\n    }\n\n    if (el.style.width != texture.width + 'px')\n      el.style.width = texture.width + 'px';\n\n    if (el.style.height != texture.height + 'px')\n      el.style.height = texture.height + 'px';\n\n    if (el.innerHTML !== '')\n      el.innerHTML = '';\n  }\n\n  /**\n   * __updateTextElement - Description\n   *\n   * @param {HTMLElement} el     Description\n   * @param {string} text   Description\n   * @param {TextInfo} style  Description\n   * @param {Rectangle} bounds Description\n   *\n   * @return {void} Description\n   */\n  __updateTextElement(el, text, style, bounds) {\n    el.innerHTML = text;\n    el.style.fontSize = style.size + 'px';\n\n    if (el.style.width !== bounds.width + 'px')\n      el.style.width = bounds.width + 'px';\n\n    if (el.style.height !== bounds.height + 'px')\n      el.style.height = bounds.height + 'px';\n\n    if (el.style.fontFamily !== style.name)\n      el.style.fontFamily = style.name;\n\n    let color = this.hexColorToString(style.color);\n\n    if (el.style.color != color)\n      el.style.color = color;\n\n    if (el.style.fontStyle !== style.style)\n      el.style.fontStyle = style.style;\n\n    if (el.style.fontWeight != style.weight)\n      el.style.fontWeight = style.weight;\n\n    if (el.style.textAlign !== style.align)\n      el.style.textAlign = style.align;\n\n    if (style.strokeThickness > 0) {\n      let strokeColor = this.hexColorToString(style.strokeColor);\n\n      if (el.style.webkitTextStrokeColor != strokeColor)\n        el.style.webkitTextStrokeColor = strokeColor;\n\n      if (el.style.webkitTextStrokeWidth != style.strokeThickness + 'px') {\n        el.style.webkitTextStrokeWidth = style.strokeThickness + 'px';\n      }\n    }\n\n    if (el.style.backgroundImage !== 'none')\n      el.style.backgroundImage = 'none';\n  }\n}\n","\nclass DisplayObject extends GameObject {\n  constructor() {\n    super();\n\n    /** @type {number} */\n    this.mAlpha = 1;\n\n    /** @type {string} */\n    this.blendMode = BlendMode.AUTO;\n\n    /** @type {boolean} */\n    this.mVisible = true;\n  }\n\n  /**\n   * __render - Description\n   *\n   * @param {VideoNullDriver} video           Description\n   * @param {number} time            Description\n   * @param {number} parentAlpha     Description\n   * @param {string} parentBlendMode Description\n   *\n   * @return {void} Description\n   */\n  __render(video, time, parentAlpha, parentBlendMode) {\n    if (this.mVisible === false)\n      return;\n\n    this.onRender(video, time);\n\n    let child = null;\n    for (var i = 0; i < this.mChildren.length; i++) {\n      child = this.mChildren[i];\n      child.__render(video, time, parentAlpha, parentBlendMode);\n    }\n  }\n\n  /**\n   * alpha - Description\n   *\n   * @return {number} Description\n   */\n  get alpha() {\n    return this.mAlpha;\n  }\n\n  /**\n   * alpha - Description\n   *\n   * @param {number} value Description\n   *\n   * @return {void} Description\n   */\n  set alpha(value) {\n    this.mAlpha = Math.clamp(value, 0, 1);\n  }\n\n\n  /**\n   * visible - Description\n   *\n   * @return {boolean} Description\n   */\n  get visible() {\n    return this.mVisible;\n  }\n\n\n  /**\n   * visible - Description\n   *\n   * @param {boolean} value Description\n   *\n   * @return {void} Description\n   */\n  set visible(value) {\n    this.mVisible = value;\n  }\n}\n","\nclass TextInfo {\n  /**\n   * @param  {string=} name = 'sans-serif' description\n   * @param  {number=} color = '0x000000' description\n   * @param  {number=} size = '14' description\n   * @param  {TextInfo.FontStyle=} style = 'normal' description\n   * @param  {TextInfo.FontWeight=} weight = '400' description\n   * @param  {TextInfo.FontAlign=} align = 'left' description\n   * @param  {number=} strokeThickness = '0' description\n   * @param  {number=} strokeColor = '0xffffff' description\n   */\n  constructor(name = 'sans-serif', color = 0x000000, size = 14, style = TextInfo.FontStyle.NORMAL, weight = TextInfo.FontWeight.NORMAL, align = TextInfo.FontAlign.LEFT, strokeThickness = 0, strokeColor = 0xffffff) {\n\n    /** @type {string} */\n    this.name = name;\n\n    /** @type {number} */\n    this.size = size;\n\n    /** @type {number} */\n    this.color = color;\n\n    /** @type {TextInfo.FontStyle} */\n    this.style = style;\n\n    /** @type {TextInfo.FontWeight} */\n    this.weight = weight;\n\n    /** @type {TextInfo.FontAlign} */\n    this.align = align;\n\n    /** @type {number} */\n    this.strokeThickness = strokeThickness;\n\n    /** @type {number} */\n    this.strokeColor = strokeColor;\n  }\n}\n\n/**\n * @enum {string}\n */\nTextInfo.FontStyle = {\n  NORMAL: 'normal',\n  ITALIC: 'italic'\n};\n\n/**\n * @enum {string}\n */\nTextInfo.FontWeight = {\n  NORMAL: '400',\n  BOLD: '700',\n  SUPERBOLD: '800'\n};\n\n/**\n * @enum {string}\n */\nTextInfo.FontAlign = {\n  LEFT: 'left',\n  RIGHT: 'right',\n  CENTER: 'center'\n};\n","\nclass Sprite extends DisplayObject {\n\n  /**\n   * constructor - Creates a new Sprite object instance.\n   *\n   * @param {Texture|string|null} texture The Texture instance or null.\n   */\n  constructor(texture = null) {\n    super();\n\n    /**\n     * @private\n     * @type {Texture|null} */\n    this.mTexture = null;\n\n    if (texture !== null && texture.constructor === String)\n      this.mTexture = AssetManager.default.getTexture(/** @type {string} */ (texture));\n    else\n      this.mTexture = /** @type {Texture} */ (texture);\n  }\n\n  /**\n   * @override\n   * @private\n   * @param {VideoNullDriver} video\n   * @param {number} time\n   * @param {number} parentAlpha\n   * @param {string} parentBlendMode\n   *\n   * @return {void}\n   */\n  __render(video, time, parentAlpha, parentBlendMode) {\n    if (this.mAlpha <= 0 || this.mVisible === false)\n      return;\n\n    let tmpBlendMode = BlendMode.AUTO;\n\n    if (this.mTexture !== null) {\n      video.save(this);\n      video.setTransform(this.worldTransformation);\n      video.globalAlpha = parentAlpha * this.mAlpha;\n      video.globalBlendMode = tmpBlendMode = this.blendMode === BlendMode.AUTO ? parentBlendMode : this.blendMode;\n      video.drawImage(this.mTexture);\n      video.restore();\n    }\n\n    super.__render(video, time, parentAlpha * this.mAlpha, tmpBlendMode);\n  }\n\n  /**\n   * onGetLocalBounds - Returns a rectangle that completely encloses the object in local coordinate system.\n   *\n   * @override\n   * @protected\n   * @param {Rectangle=} outRect Description\n   *\n   * @return {Rectangle} The new Rectangle or outRect with .\n   */\n  onGetLocalBounds(outRect = undefined) {\n    outRect = outRect || new Rectangle();\n\n    if (!this.mTexture)\n      return outRect;\n\n    return outRect.set(0, 0, this.mTexture.untrimmedRect.width, this.mTexture.untrimmedRect.height);\n  }\n\n  /**\n   * texture - Returns the current Texture on this sprite.\n   *\n   * @return {Texture|null} The current texture set on this Sprite or null.\n   */\n  get texture() {\n    return this.mTexture;\n  }\n\n  /**\n   * texture - Sets the Texture on this sprite.\n   *\n   * @param {Texture|null} texture Texture to apply on.\n   *\n   * @return {void}\n   */\n  set texture(texture) {\n    if (this.mTexture === texture)\n      return;\n\n    this.mTexture = texture;\n  }\n\n  set touchable(value) {\n    let c = this.getComponent(InputComponent);\n\n    if (value === true) {\n      if (c === null)\n        this.addComponent(new InputComponent());\n      else\n        c.touchable = true;\n    } else {\n      if (c !== null)\n        this.removeComponent(c);\n    }\n  }\n\n  get touchable() {\n    let c = this.getComponent(InputComponent);\n    return c !== null && c.touchable === true;\n  }\n}\n","\nclass TextField extends DisplayObject {\n  /**\n   * @param  {string=} text = ''            description\n   * @param  {number=} size = 14        description\n   * @param  {string=} name = \"sans-serif\" description\n   * @param {TextInfo=} style\n   */\n  constructor(text = '', size = 14, name = 'sans-serif', style = undefined) {\n    super();\n\n    /** @private @type {string} */\n    this.mText = text;\n\n    /** @private @type {boolean} */\n    this.mNeedInvalidate = true;\n\n    /** @private @type {Rectangle} */\n    this.mCacheBounds = new Rectangle();\n\n    /** @private @type {number} */\n    this.mFieldWidth = 0;\n\n    /** @private @type {number} */\n    this.mFieldHeight = 0;\n\n    /** @private @type {number} */\n    this.mTextWidth = 0;\n\n    /** @private @type {number} */\n    this.mTextHeight = 0;\n\n    /** @private @type {TextInfo} */\n    this.mStyle = style || new TextInfo();\n\n    /** @private @type {string} */\n    this.mStyle.name = name || style.name;\n\n    /** @private @type {number} */\n    this.mStyle.size = size || style.size;\n\n    /** @public @type {boolean} */\n    this.mAutoSize = true;\n\n    this.__validate(this.mCacheBounds);\n  }\n\n  /**\n   * __render - Description\n   * @private @override\n   * @param {VideoNullDriver} video           Description\n   * @param {number} time            Description\n   * @param {number} parentAlpha     Description\n   * @param {string} parentBlendMode Description\n   *\n   * @return {void} Description\n   */\n  __render(video, time, parentAlpha, parentBlendMode) {\n    if (this.mAlpha <= 0 || this.mVisible === false)\n      return;\n\n    this.__validate(this.mCacheBounds);\n\n    let tmpBlendMode = BlendMode.AUTO;\n\n    video.save(this);\n    video.setTransform(this.worldTransformation);\n    video.globalAlpha = parentAlpha * this.mAlpha;\n    video.globalBlendMode = tmpBlendMode = this.blendMode === BlendMode.AUTO ? parentBlendMode : this.blendMode;\n    video.drawText(this.mText, this.mStyle, this.mCacheBounds, this.mTextWidth, this.mTextHeight);\n    video.restore();\n\n    super.__render(video, time, parentAlpha * this.mAlpha, tmpBlendMode);\n  }\n\n  /**\n   * onGetLocalBounds - Description\n   *\n   * @protected @override\n   * @param {Rectangle=} outRect Description\n   *\n   * @return {Rectangle} bounds in local space withoout taking care about transformation matrix\n   */\n  onGetLocalBounds(outRect = undefined) {\n    outRect = outRect || new Rectangle();\n    return this.__validate(outRect);\n  }\n\n\n  /**\n   * __validate - Description\n   *\n   * @private\n   * @param {Rectangle} outRect Description\n   *\n   * @return {Rectangle} bounds in local space withoout taking care about transformation matrix\n   */\n  __validate(outRect) {\n    let strokeCorrection = 0 - this.mStyle.strokeThickness * 0.5;\n    if (this.mNeedInvalidate === false)\n      return outRect.set(strokeCorrection, strokeCorrection, this.mFieldWidth, this.mFieldHeight);\n\n    let driver = Black.instance.video;\n    let vSize = driver.measureText(this.mText, this.mStyle);\n    this.mTextWidth = vSize.x;\n    this.mTextHeight = vSize.y;\n\n    if (this.mAutoSize) {\n      this.mFieldWidth = this.mTextWidth;\n      this.mFieldHeight = this.mTextHeight;\n    }\n\n    this.mNeedInvalidate = false;\n    return outRect.set(strokeCorrection, strokeCorrection, this.mFieldWidth, this.mFieldHeight);\n  }\n\n\n  /**\n   * size - Description\n   *\n   * @public\n   * @return {number} Description\n   */\n  get size() {\n    return this.mStyle.size;\n  }\n\n  /**\n   * size - Description\n   *\n   * @param {number} value Description\n   * @public\n   *\n   * @return {void} Description\n   */\n  set size(value) {\n    this.mStyle.size = value;\n    this.mNeedInvalidate = true;\n  }\n\n  /**\n   * font - Description\n   *\n   * @public\n   * @return {string} Description\n   */\n  get font() {\n      return this.mStyle.name;\n    }\n    /**\n     * font - Description\n     *\n     * @param {string} value Description\n     * @public\n     *\n     * @return {void} Description\n     */\n\n  set font(value) {\n    this.mStyle.name = value;\n    this.mNeedInvalidate = true;\n  }\n\n  /**\n   * color - Description\n   *\n   * @public\n   * @return {number} Description\n   */\n  get color() {\n    return this.mStyle.color;\n  }\n\n  /**\n   * color - Description\n   *\n   * @param {number} value Description\n   * @public\n   *\n   * @return {void} Description\n   */\n  set color(value) {\n    this.mStyle.color = value;\n  }\n\n  /**\n   * style - Description\n   *\n   * @public\n   * @return {TextInfo.FontStyle} Description\n   */\n  get style() {\n    return this.mStyle.style;\n  }\n\n  /**\n   * style - Description\n   *\n   * @param {TextInfo.FontStyle} value Description\n   * @public\n   *\n   * @return {void} Description\n   */\n  set style(value) {\n    this.mStyle.style = value;\n    this.mNeedInvalidate = true;\n  }\n\n  /**\n   * weight - Description\n   *\n   * @public\n   * @return {TextInfo.FontWeight} Description\n   */\n  get weight() {\n    return this.mStyle.weight;\n  }\n\n  /**\n   * weight - Description\n   *\n   * @param {TextInfo.FontWeight} value Description\n   * @public\n   *\n   * @return {void} Description\n   */\n  set weight(value) {\n    this.mStyle.weight = value;\n    this.mNeedInvalidate = true;\n  }\n\n  /**\n   * align - Description\n   *\n   * @public\n   * @return {TextInfo.FontAlign} Description\n   */\n  get align() {\n    return this.mStyle.align;\n  }\n\n  /**\n   * align - Description\n   *\n   * @param {TextInfo.FontAlign} value Description\n   * @public\n   *\n   * @return {void} Description\n   */\n  set align(value) {\n    this.mStyle.align = value;\n  }\n\n  /**\n   * strokeColor - Description\n   *\n   * @public\n   * @return {number} Description\n   */\n  get strokeColor() {\n    return this.mStyle.strokeColor;\n  }\n\n  /**\n   * strokeColor - Description\n   *\n   * @param {number} value Description\n   * @public\n   *\n   * @return {void} Description\n   */\n  set strokeColor(value) {\n    this.mStyle.strokeColor = value;\n  }\n\n  /**\n   * strokeThickness - Description\n   *\n   * @public\n   * @return {number} Description\n   */\n  get strokeThickness() {\n    return this.mStyle.strokeThickness;\n  }\n\n  //noinspection JSAnnotator\n  /**\n   * strokeThickness - Description\n   * @public\n   *\n   * @param {number} value Description\n   *\n   * @return {void} Description\n   */\n  set strokeThickness(value) {\n    if (value === this.mStyle.strokeThickness)\n      return;\n\n    this.mStyle.strokeThickness = value;\n    this.mNeedInvalidate = true;\n  }\n\n  /**\n   * fieldWidth - Description\n   *\n   * @public\n   * @return {number} Description\n   */\n  get fieldWidth() {\n    return this.mFieldWidth;\n  }\n\n  /**\n   * fieldWidth - Description\n   *\n   * @param {number} value Description\n   * @public\n   *\n   * @return {void} Description\n   */\n  set fieldWidth(value) {\n    if (this.mAutoSize || value === this.mFieldWidth)\n      return;\n\n    this.mFieldWidth = value;\n    this.mNeedInvalidate = true;\n  }\n\n  /**\n   * fieldHeight - Description\n   *\n   * @public\n   * @return {number} Description\n   */\n  get fieldHeight() {\n    return this.mFieldHeight;\n  }\n\n\n  /**\n   * fieldHeight - Description\n   *\n   * @param {number} value Description\n   * @public\n   *\n   * @return {void} Description\n   */\n  set fieldHeight(value) {\n    if (this.mAutoSize || value === this.mFieldHeight)\n      return;\n\n    this.mFieldHeight = value;\n    this.mNeedInvalidate = true;\n  }\n\n  /**\n   * @public text - Description\n   *\n   * @return {string} Description\n   */\n  get text() {\n    return this.mText;\n  }\n\n  /**\n   * text - Description\n   *\n   * @param {string} value Description\n   * @public\n   *\n   * @return {void} Description\n   */\n  set text(value) {\n    if (this.mText === value)\n      return;\n\n    this.mText = value;\n    this.mNeedInvalidate = true;\n  }\n\n  /**\n   * autoSize - Description\n   *\n   * @return {boolean} Description\n   */\n  get autoSize() {\n    return this.mAutoSize;\n  }\n\n  /**\n   * autoSize - Description\n   *\n   * @param {boolean} value Description\n   *\n   * @return {void} Description\n   */\n  set autoSize(value) {\n    if (this.mAutoSize === value)\n      return;\n\n    this.mAutoSize = value;\n    this.mNeedInvalidate = true;\n  }\n}\n","\nclass Device {\n  constructor() {\n    /** @type {Device} */\n    this.constructor.mInstance = this;\n\n    /** @type {number} */\n    this.mPixelRatio = 0;\n\n    /** @type {number} */\n    Device.mInstance.mPixelRatio = Device.getDevicePixelRatio();\n  }\n\n  /**\n   * @return {string}\n   */\n  static get os() {\n    var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n    if (/windows phone/i.test(userAgent))\n      return 'Windows Phone';\n\n    if (/android/i.test(userAgent))\n      return 'Android';\n\n    if (/iPad|iPhone|iPod/.test(userAgent)/* && !window.MSStream*/)\n      return 'iOS';\n\n    return 'unknown';\n  }\n\n  /**\n   * isTouch - Description\n   *\n   * @return {boolean} Description\n   */\n  static get isTouch() {\n    let hasEvent = 'ontouchstart' in window;\n    if (hasEvent)\n      return true;\n\n    if (navigator.maxTouchPoints > 0)\n      return true;\n\n    return false;\n  }\n\n  /**\n   * isMobile - Description\n   *\n   * @return {boolean} Description\n   */\n  static get isMobile() {\n    return /Mobi/.test(navigator.userAgent);\n  }\n\n  /**\n   * pixelRatio - Description\n   *\n   * @return {number} Description\n   */\n  static get pixelRatio() {\n    return Device.mInstance.mPixelRatio;\n  }\n\n  /**\n   * getDevicePixelRatio - Description\n   *\n   * @suppress {missingProperties}\n   *\n   * @return {number} Description\n   */\n  static getDevicePixelRatio() {\n    if (window.screen.systemXDPI !== undefined && window.screen.logicalXDPI !== undefined && window.screen.systemXDPI > window.screen.logicalXDPI)\n      return window.screen.systemXDPI / window.screen.logicalXDPI;\n    else if (window.devicePixelRatio !== undefined)\n      return window.devicePixelRatio;\n\n    return 1;\n  }\n\n}\n\n/** @type {Device}\n * @nocollapse\n */\nDevice.mInstance = null;\n","\nclass Scatter {\n  constructor() {}\n\n  /**\n   * getValue\n   *\n   * @return {*}\n   */\n  getValue() {}\n\n\n  /**\n   * getValueAt\n   *\n   * @param {number} t\n   *\n   * @return {*}\n   */\n  getValueAt(t) {}\n}\n","\nclass FloatScatter extends Scatter {\n  constructor(min, max = undefined, ease = null) {\n    super();\n\n    // NOTE: dont make us @private @member\n    this.min = min;\n    this.max = max == null ? min : max;\n    \n    this.ease = ease;\n  }\n\n\n  /**\n   * getValue\n   *\n   * @return {number}\n   */\n  getValue() {\n    return Math.random() * (this.max - this.min) + this.min;\n  }\n\n\n  /**\n   * getValueAt\n   *\n   * @param {number} t\n   *\n   * @return {number}\n   */\n  getValueAt(t) {\n    if (this.ease !== null)\n      t = this.ease(t);\n\n    return this.min + t * (this.max - this.min);\n  }\n}\n","\nclass VectorScatter extends Scatter {\n  constructor(minX, minY, maxX, maxY) {\n    super();\n\n    // NOTE: dont make us @private @member\n    this.minX = minX;\n    this.minY = minY;\n    this.maxX = maxX;\n    this.maxY = maxY;\n  }\n\n\n  /**\n   * getValue\n   *\n   * @return {Vector}\n   */\n  getValue() {\n    let outVector = new Vector();\n    outVector.x = Math.random() * (this.maxX - this.minX) + this.minX;\n    outVector.y = Math.random() * (this.maxY - this.minY) + this.minY;\n    return outVector;\n  }\n\n\n  /**\n   * getValueAt\n   *\n   * @param {number} t\n   *\n   * @return {Vector}\n   */\n  getValueAt(t) {\n    let outVector = new Vector();\n    outVector.x = this.minX + t * (this.maxX - this.minX);\n    outVector.y = this.minY + t * (this.maxY - this.minY);\n    return outVector;\n  }\n}\n","\nclass FloatCurveScatter extends Scatter {\n  /**\n   * @param {...number} points Coordinates: startX, startY, cpStartX, cpStartY, cpEndX, cpEndY, endX/start2X, endY/start2Y, cp2StartX, cp2StartX... 8 or 14 or 20...\n   */\n  constructor(...points) {\n    super();\n\n    this.mCurve = new Curve();\n    this.mCurve.baked = true;\n    this.mCurve.set(...points);\n\n    this.mCache = new Vector();\n  }\n\n  getValue() {\n    let t = Math.random();\n    this.mCurve.interpolate(t, this.mCache);\n    return this.mCache.y;\n  }\n\n  getValueAt(t) {\n    this.mCurve.interpolate(t, this.mCache);\n    return this.mCache.y;\n  }\n}\n\n\nclass VectorCurveScatter extends Scatter {\n  /**\n   * @param {...number} points Coordinates: startX, startY, cpStartX, cpStartY, cpEndX, cpEndY, endX/start2X, endY/start2Y, cp2StartX, cp2StartX... 8 or 14 or 20...\n   */\n  constructor(...points) {\n    super();\n\n    this.mCurve = new Curve();\n    this.mCurve.baked = true;\n    this.mCurve.set(...points);\n\n    this.mCache = new Vector();\n  }\n\n\n  getValue() {\n    let t = Math.random();\n    this.mCurve.interpolate(t, this.mCache);\n    return this.mCache;\n  }\n\n\n  getValueAt(t) {\n    this.mCurve.interpolate(t, this.mCache);\n    return this.mCache;\n  }\n}\n","\nclass Action {\n\n  /**\n   * preUpdate - Description\n   *\n   * @param {number} dt Description\n   * @param {number} t  Description\n   *\n   * @return {void} Description\n   */\n  preUpdate(dt, t) {}\n\n\n  /**\n   * @param {Emitter} emmiter\n   * @param {Particle} particle\n   * @param {number} dt\n   * @param {number} t\n   *\n   * @return {void}\n   */\n  update(emmiter, particle, dt, t) {}\n\n\n  /**\n   * postUpdate\n   *\n   * @param {number} dt\n   * @param {number} t\n   *\n   * @return {void}\n   */\n  postUpdate(dt, t) {}\n}\n","/**\n * @extends Action\n */\n\nclass Acceleration extends Action {\n  constructor(vectorScatter) {\n    super();\n\n    this.scatter = vectorScatter;\n  }\n\n  /**\n   * @override\n   * @param {Emitter} emmiter\n   * @param {Particle} particle\n   * @param {number} dt\n   * @param {number} t\n   *\n   * @return {void}\n   */\n  update(emmiter, particle, dt, t) {\n    let v = this.scatter.getValue();\n\n    particle.ax += v.x;\n    particle.ay += v.y;\n  }\n}\n","/**\n * @extends Action\n */\n\nclass AlphaOverLife extends Action {\n  constructor(floatScatter) {\n    super();\n\n    this.scatter = floatScatter;\n  }\n\n  /**\n   * @override\n   * @param {Emitter} emmiter\n   * @param {Particle} particle\n   * @param {number} dt\n   * @param {number} t\n   *\n   * @return {void}\n   */\n  update(emmiter, particle, dt, t) {\n    particle.alpha = this.scatter.getValueAt(particle.energy);\n  }\n}\n","/**\n * @extends Action\n */\n\nclass ScaleOverLife extends Action {\n  constructor(floatScatter) {\n    super();\n\n    this.scatter = floatScatter;\n  }\n\n  /**\n   * @override\n   * @param {Emitter} emmiter\n   * @param {Particle} particle\n   * @param {number} dt\n   * @param {number} t\n   *\n   * @return {void}\n   */\n  update(emmiter, particle, dt, t) {\n    particle.scale = this.scatter.getValueAt(particle.energy);\n  }\n}\n","/**\n * @extends Action\n */\n\nclass RotationOverLife extends Action {\n  constructor(floatScatter) {\n    super();\n\n    this.scatter = floatScatter;\n  }\n\n  /**\n   * @override\n   * @param {Emitter} emmiter\n   * @param {Particle} particle\n   * @param {number} dt\n   * @param {number} t\n   *\n   * @return {void}\n   */\n  update(emmiter, particle, dt, t) {\n    particle.r = this.scatter.getValueAt(particle.energy);\n  }\n}\n","/**\n * @extends Action\n */\n\nclass TextureOverLife extends Action {\n  constructor(floatScatter) {\n    super();\n\n    this.scatter = floatScatter;\n  }\n\n  /**\n   * @override\n   * @param {Emitter} emmiter\n   * @param {Particle} particle\n   * @param {number} dt\n   * @param {number} t\n   *\n   * @return {void}\n   */\n  update(emmiter, particle, dt, t) {\n    particle.textureIndex = ~~this.scatter.getValueAt(particle.energy);\n  }\n}\n","\nclass Initializer {\n  /**\n   * @param {Particle} particle\n   *\n   * @return {void}\n   */  \n  initialize(particle) {}\n}\n","\nclass Life extends Initializer {\n  /**\n   * constructor - Description\n   *\n   * @param {FloatScatter} floatScatter Description\n   *\n   * @return {void} Description\n   */\n  constructor(floatScatter) {\n    super();\n\n    /** @type {FloatScatter} */\n    this.scatter = floatScatter;\n  }\n\n  /**\n   * @override\n   * @param {Particle} particle\n   *\n   * @return {void}\n   */\n  initialize(particle) {\n    particle.life = this.scatter.getValue();\n  }\n}\n","\nclass Mass extends Initializer {\n\n  /**\n   * constructor - Description\n   *\n   * @param {number} mass Description\n   *\n   * @return {void} Description\n   */\n  constructor(mass) {\n    super();\n\n    /** @type {number} */\n    this.mass = mass;\n  }\n\n  /**\n   * @override\n   * @param {Particle} particle\n   *\n   * @return {void}\n   */\n  initialize(particle) {\n    particle.mass = this.mass;\n  }\n}\n","\nclass Scale extends Initializer {\n  /**\n   * constructor - Description\n   *\n   * @param {FloatScatter} floatScatter Description\n   *\n   * @return {void} Description\n   */\n  constructor(floatScatter) {\n    super();\n\n    /** @type {FloatScatter} */\n    this.scatter = floatScatter;\n  }\n\n  /**\n   * @override\n   * @param {Particle} particle\n   *\n   * @return {void}\n   */\n  initialize(particle) {\n    particle.scale = this.scatter.getValue();\n  }\n}\n","\nclass Velocity extends Initializer {\n  /**\n   * constructor - Description\n   *\n   * @param {VectorScatter} vectorScatter Description\n   *\n   * @return {void} Description\n   */\n  constructor(vectorScatter) {\n    super();\n\n    /** @type {VectorScatter} */\n    this.scatter = vectorScatter;\n  }\n\n  /**\n   * @override\n   * @param {Particle} particle\n   *\n   * @return {void}\n   */\n  initialize(particle) {\n    // TODO: optimize!\n    let v = this.scatter.getValue();\n    particle.vx = v.x;\n    particle.vy = v.y;\n  }\n}\n","\nclass Position extends Initializer {\n\n  /**\n   * constructor - Description\n   *\n   * @param {VectorScatter} vectorScatter Description\n   *\n   * @return {void} Description\n   */\n  constructor(vectorScatter) {\n    super();\n\n    /** @type {VectorScatter} */\n    this.scatter = vectorScatter;\n  }\n\n  /**\n   * @override\n   * @param {Particle} particle\n   *\n   * @return {void}\n   */\n  initialize(particle) {\n    // TODO: optimize!\n    let v = this.scatter.getValue();\n    particle.x = v.x;\n    particle.y = v.y;\n  }\n}\n","\nclass Rotation extends Initializer {\n  /**\n   * constructor - Description\n   *\n   * @param {FloatScatter} floatScatter Description\n   *\n   * @return {void} Description\n   */\n  constructor(floatScatter) {\n    super();\n\n    /** @type {FloatScatter} */\n    this.scatter = floatScatter;\n  }\n\n  /**\n   * @override\n   * @param {Particle} particle\n   *\n   * @return {void}\n   */\n  initialize(particle) {\n    particle.r = this.scatter.getValue();\n  }\n}\n","\nclass RandomTexture extends Initializer {\n  /**\n   * constructor - Description\n   *\n   * @param {FloatScatter} floatScatter Description\n   *\n   * @return {void} Description\n   */\n  constructor(floatScatter) {\n    super();\n\n    /** @type {FloatScatter} */\n    this.scatter = floatScatter;\n  }\n\n  /**\n   * @override\n   * @param {Particle} particle\n   *\n   * @return {void}\n   */\n  initialize(particle) {\n    particle.textureIndex = ~~this.scatter.getValue();\n  }\n}\n","/**\n * @enum {number}\n */\nvar EmitterState = {\n  PENDING: 0,\n  EMITTING: 1,\n  FINISHED: 2\n};\n","\nclass Particle {\n  constructor() {\n    this.reset();\n  }\n\n  reset() {\n    /** @type {number} */\n    this.textureIndex = 0;\n\n    /** @type {number} */\n    this.scale = 1;\n\n    /** @type {number} */\n    this.alpha = 1;\n\n    /** @type {number} */\n    this.life = 1;\n\n    /** @type {number} */\n    this.age = 0;\n\n    /** @type {number} */\n    this.energy = this.age / this.life;\n\n    /** @type {number} */\n    this.mass = 0;\n\n    /** @type {number} */\n    this.x = 0;\n\n    /** @type {number} */\n    this.y = 0;\n\n    /** @type {number} */\n    this.r = 0\n\n    /** @type {number} */\n    this.vx = 0;\n\n    /** @type {number} */\n    this.vy = 0;\n\n    /** @type {number} */\n    this.ax = 0;\n\n    /** @type {number} */\n    this.ay = 0;\n  }\n\n  /**\n   * update\n   *\n   * @param {number} dt\n   *\n   * @return {void}\n   */\n  update(dt) {\n    if (this.life <= 0) {\n      this.life = 0;\n      return;\n    }\n\n    this.x += this.vx * dt;\n    this.y += this.vy * dt;\n\n    if (this.mass > 0) {\n      this.ax *= 1 / this.mass;\n      this.ay *= 1 / this.mass;\n    }\n\n    this.vx += this.ax * dt;\n    this.vy += this.ay * dt;\n\n    this.ax = 0;\n    this.ay = 0;\n\n    this.life -= dt;\n    this.age += dt;\n\n    this.energy = this.age / (this.age + this.life);\n  }\n}\n","\nclass Emitter extends DisplayObject {\n  constructor() {\n    super();\n\n    /** @type {Array<Texture>} */\n    this.mTextures = null;\n\n    /** @type {Array<Particle>} */\n    this.mParticles = [];\n\n    /** @type {Array<Particle>} */\n    this.mRecycled = [];\n\n    /** @type {Array<Initializer>} */\n    this.mInitializers = [];\n\n    /** @type {Array<Action>} */\n    this.mActions = [];\n\n    /** @type {GameObject} */\n    this.mSpace = null;\n\n    /** @type {boolean} */\n    this.mIsLocal = true;\n\n    /** @type {number} */\n    this.mMaxParticles = 10000;\n\n    /** @type {FloatScatter} */\n    this.mEmitCount = new FloatScatter(10);\n\n    /** @type {FloatScatter} */\n    this.mEmitNumRepeats = new FloatScatter(Infinity);\n\n    /** @type {number} */\n    this.mEmitNumRepeatsLeft = this.mEmitNumRepeats.getValue();\n\n    /** @type {FloatScatter} */\n    this.mEmitDuration = new FloatScatter(1);\n\n    /** @type {number} */\n    this.mEmitDurationLeft = this.mEmitDuration.getValue();\n\n    /** @type {FloatScatter} */\n    this.mEmitInterval = new FloatScatter(0.1);\n\n    /** @type {number} */\n    this.mEmitIntervalLeft = this.mEmitInterval.getValue();\n\n    /** @type {FloatScatter} */\n    this.mEmitDelay = new FloatScatter(1);\n\n    /** @type {number} */\n    this.mEmitDelayLeft = this.mEmitDelay.getValue();\n\n    /** @type {number} */\n    this.mNextUpdateAt = 0;\n\n    /** @type {EmitterState} */\n    this.mState = EmitterState.PENDING;\n\n    // /** @type {function(a:Particle, b:Particle):number} */\n    // this.mComparer = null;\n\n    /** @type {Matrix} */\n    this.__tmpLocal = new Matrix();\n\n    /** @type {Matrix} */\n    this.__tmpWorld = new Matrix();\n  }\n\n  // reset() {\n  //   this.mState = 0;\n  //\n  //   // todo: reset simulation\n  //   // todo: clear all particles\n  //   this.updateNextTick(0);\n  // }\n\n  resetState() {\n    this.mState = EmitterState.PENDING;\n  }\n\n  /**\n   * updateNextTick - Updates delay, duration, interval. Use this function each time you change one of those values.\n   *\n   * @param {number} [dt=0]\n   *\n   * @return {void}\n   */\n  updateNextTick(dt = 0) {\n    let t = Black.instance.uptime;\n    let firstEmit = false;\n\n    if (this.mState === EmitterState.PENDING) {\n      this.mNextUpdateAt = t + this.mEmitDelayLeft;\n      this.mEmitDelayLeft -= dt;\n\n      if (this.mEmitDelayLeft <= 0) {\n        this.mEmitDelayLeft = this.mEmitDelay.getValue();\n        this.mState = EmitterState.EMITTING;\n        firstEmit = true;\n      }\n    }\n\n    if (this.mState === EmitterState.EMITTING) {\n      if (this.mEmitDurationLeft <= 0) {\n        this.mEmitDurationLeft = this.mEmitDuration.getValue();\n\n        this.mEmitNumRepeatsLeft--;\n\n        if (this.mEmitNumRepeatsLeft <= 0) {\n          this.mState = EmitterState.FINISHED;\n\n          this.post('complete');\n          return;\n        } else {\n          this.mState = EmitterState.PENDING;\n          return;\n        }\n      } else {\n        // we are getting value here each update to make sure we are up to date!\n        if (firstEmit) {\n          // for a first emit we do not want to add an extra delay. emit now!\n          this.mNextUpdateAt = t\n          this.mEmitIntervalLeft = this.mEmitInterval.getValue();\n        }\n        else {\n          this.mEmitIntervalLeft -= dt;\n          this.mNextUpdateAt = t + this.mEmitIntervalLeft;\n          //console.log(this.mEmitIntervalLeft);\n\n          // reset interval\n          if (this.mEmitIntervalLeft <= 0)\n            this.mEmitIntervalLeft = this.mEmitInterval.getValue();\n        }\n      }\n\n      this.mEmitDurationLeft -= dt;\n    }\n  }\n\n\n  /**\n   * addInitializer - Adds Initializer to the end of the list.\n   *\n   * @param {Initializer} initializer\n   *\n   * @return {Initializer}\n   */\n  addInitializer(initializer) {\n    this.mInitializers.push(initializer);\n    return initializer;\n  }\n\n\n  /**\n   * addAction - Adds action to the end of the list.\n   *\n   * @param {Action} action\n   *\n   * @return {Action}\n   */\n  addAction(action) {\n    this.mActions.push(action);\n    return action;\n  }\n\n  __render(video, time, parentAlpha, parentBlendMode) {\n    video.save(this);\n\n    // set blend mode\n    let tmpBlendMode = BlendMode.AUTO;\n    video.globalBlendMode = tmpBlendMode = this.blendMode === BlendMode.AUTO ? parentBlendMode : this.blendMode;\n\n    // tmp matrices\n    let localTransform = this.__tmpLocal;\n    let worldTransform = this.__tmpWorld;\n    localTransform.identity();\n\n    let texture = null;\n\n    if (this.mTextures.length > 0) {\n      let plength = this.mParticles.length;\n      let particle;\n      for (let i = 0; i < plength; i++) {\n      //for (let i = plength - 1; i > 0; i--) {\n        particle = this.mParticles[i];\n        texture = this.mTextures[particle.textureIndex];\n\n        let tw = texture.width * 0.5;\n        let th = texture.height * 0.5;\n\n        if (particle.r === 0) {\n          let tx = particle.x - tw * particle.scale;\n          let ty = particle.y - th * particle.scale;\n          localTransform.set(particle.scale, 0, 0, particle.scale, tx, ty);\n        } else {\n          let cos = Math.cos(particle.r);\n          let sin = Math.sin(particle.r);\n          let a = particle.scale * cos;\n          let b = particle.scale * sin;\n          let c = particle.scale * -sin;\n          let d = particle.scale * cos;\n\n          let tx = particle.x - tw * a - th * c;\n          let ty = particle.y - tw * b - th * d;\n          localTransform.set(a, b, c, d, tx, ty);\n        }\n\n        if (this.mIsLocal === true) {\n          worldTransform.identity();\n          worldTransform.copyFrom(localTransform);\n          worldTransform.prepend(this.worldTransformation);\n        } else {\n          this.mSpace.worldTransformation.copyTo(worldTransform);\n          worldTransform.append(localTransform);\n        }\n\n        video.setTransform(worldTransform);\n        video.globalAlpha = parentAlpha * this.mAlpha * particle.alpha;\n        video.drawImage(texture);\n      }\n    }\n\n    video.restore();\n    super.__render(video, time, parentAlpha, parentBlendMode);\n  }\n\n  onUpdate(dt) {\n    // rate logic\n    this.updateNextTick(dt);\n\n    if (Black.instance.uptime >= this.mNextUpdateAt && this.mState === EmitterState.EMITTING)\n      this.__create(this.mEmitCount.getValue());\n\n    // main update login\n    let alength = this.mActions.length;\n    let plength = this.mParticles.length;\n\n    let t = Black.instance.uptime;\n\n    for (let i = 0; i < alength; i++)\n      this.mActions[i].preUpdate(dt, t);\n\n    let particle;\n\n    let i = this.mParticles.length;\n    while (i--) {\n      particle = this.mParticles[i];\n\n      for (let k = 0; k < alength; k++)\n        this.mActions[k].update(this, particle, dt, t);\n\n      particle.update(dt);\n\n      if (particle.life === 0) {\n        this.mRecycled.push(particle);\n        this.mParticles.splice(i, 1);\n      }\n    }\n\n    for (let j = 0; j < alength; j++)\n      this.mActions[j].postUpdate(dt, t);\n  }\n\n  __create(amount) {\n    let matrix = this.worldTransformation.clone();\n    let minv = null;\n\n    if (this.mIsLocal === false) {\n      minv = this.mSpace.worldTransformationInversed.clone();\n      matrix.prepend(minv);\n    }\n\n    for (let i = 0; i < amount; i++) {\n      let p = null;\n\n      if (this.mRecycled.length > 0) {\n        p = this.mRecycled.pop();\n      } else {\n        if (this.mParticles.length >= this.mMaxParticles)\n          return;\n\n        p = new Particle();\n      }\n\n      p.reset();\n\n      for (let k = 0; k < this.mInitializers.length; k++) {\n        let initer = this.mInitializers[k];\n        initer.initialize(p);\n      }\n\n      if (this.mIsLocal === false) {\n        matrix.transformDirectionXY(p.ax, p.ay, Vector.__cache);\n        p.ax = Vector.__cache.x;\n        p.ay = Vector.__cache.y;\n\n        matrix.transformDirectionXY(p.vx, p.vy, Vector.__cache);\n        p.vx = Vector.__cache.x;\n        p.vy = Vector.__cache.y;\n\n        matrix.transformXY(p.x, p.y, Vector.__cache);\n        p.x = Vector.__cache.x;\n        p.y = Vector.__cache.y;\n      }\n\n      this.mParticles.push(p);\n    }\n  }\n\n\n  /**\n   * maxParticles\n   *\n   * @return {number}\n   */\n  get maxParticles() {\n    return this.mMaxParticles;\n  }\n\n\n  /**\n   * maxParticles\n   *\n   * @param {number} value\n   *\n   * @return {void}\n   */\n  set maxParticles(value) {\n    if (value < 0)\n      throw new Error('Bad argument error.');\n\n    this.mMaxParticles = value;\n  }\n\n\n  /**\n   * emitCount\n   *\n   * @return {FloatScatter}\n   */\n  get emitCount() {\n    return this.mEmitCount;\n  }\n\n\n  /**\n   * emitCount\n   *\n   * @param {FloatScatter} value\n   *\n   * @return {void}\n   */\n  set emitCount(value) {\n    this.mEmitCount = value;\n  }\n\n\n  /**\n   * emitNumRepeats\n   *\n   * @return {FloatScatter}\n   */\n  get emitNumRepeats() { return this.mEmitNumRepeats; }\n\n  /**\n   * emitNumRepeats\n   *\n   * @param {FloatScatter} value\n   *\n   * @return {void}\n   */\n  set emitNumRepeats(value) { this.mEmitNumRepeats = value; this.mEmitNumRepeatsLeft = this.mEmitNumRepeats.getValue(); }\n\n\n  /**\n   * emitDuration\n   *\n   * @return {FloatScatter}\n   */\n  get emitDuration() { return this.mEmitDuration; }\n\n  /**\n   * emitDuration\n   *\n   * @param {FloatScatter} value\n   *\n   * @return {void}\n   */\n  set emitDuration(value) { this.mEmitDuration = value; this.mEmitDurationLeft = this.mEmitDuration.getValue(); }\n\n\n  /**\n   * emitInterval\n   *\n   * @return {FloatScatter}\n   */\n  get emitInterval() { return this.mEmitInterval; }\n\n  /**\n   * emitInterval\n   *\n   * @param {FloatScatter} value\n   *\n   * @return {void}\n   */\n  set emitInterval(value) { this.mEmitInterval = value; this.mEmitIntervalLeft = this.mEmitInterval.getValue(); }\n\n\n  /**\n   * emitDelay\n   *\n   * @return {FloatScatter}\n   */\n  get emitDelay() { return this.mEmitDelay; }\n\n  /**\n   * emitDelay\n   *\n   * @param {FloatScatter} value\n   *\n   * @return {void}\n   */\n  set emitDelay(value) { this.mEmitDelay = value; this.mEmitDelayLeft = this.mEmitDelay.getValue(); }\n\n\n  /**\n   * space\n   *\n   * @return {GameObject}\n   */\n  get space() { return this.mSpace; }\n\n  /**\n   * space\n   *\n   * @param {GameObject} gameObject\n   *\n   * @return {void}\n   */\n  set space(gameObject) {\n    this.mSpace = gameObject;\n    this.mIsLocal = this.mSpace === null || this.mSpace === this;\n  }\n\n\n  /**\n   * textures\n   *\n   * @return {Array<Texture>}\n   */\n  get textures() {\n    return this.mTextures;\n  }\n\n\n  /**\n   * textures\n   *\n   * @param {Array<Texture>} value\n   *\n   * @return {void}\n   */\n  set textures(value) {\n    if (value.length === 0)\n      throw new Error('At least one texture must be provided.');\n\n    this.mTextures = value;\n  }\n}\n","/**\n * @enum {number}\n */\n\nvar Key = {\n  A: 65,\n  B: 66,\n  C: 67,\n  D: 68,\n  E: 69,\n  F: 70,\n  G: 71,\n  H: 72,\n  I: 73,\n  J: 74,\n  K: 75,\n  L: 76,\n  M: 77,\n  N: 78,\n  O: 79,\n  P: 80,\n  Q: 81,\n  R: 82,\n  S: 83,\n  T: 84,\n  U: 85,\n  V: 86,\n  W: 87,\n  X: 88,\n  Y: 89,\n  Z: 90,\n  DIGIT_0: 48,\n  DIGIT_1: 49,\n  DIGIT_2: 50,\n  DIGIT_3: 51,\n  DIGIT_4: 52,\n  DIGIT_5: 53,\n  DIGIT_6: 54,\n  DIGIT_7: 55,\n  DIGIT_8: 56,\n  DIGIT_9: 57,\n  NUMPAD_0: 96,\n  NUMPAD_1: 97,\n  NUMPAD_2: 98,\n  NUMPAD_3: 99,\n  NUMPAD_4: 100,\n  NUMPAD_5: 101,\n  NUMPAD_6: 102,\n  NUMPAD_7: 103,\n  NUMPAD_8: 104,\n  NUMPAD_9: 105,\n  NUMPAD_MULTIPLY: 106,\n  NUMPAD_ADD: 107,\n  NUMPAD_SUBTRACT: 109,\n  NUMPAD_DECIMAL: 110,\n  NUMPAD_DIVIDE: 111,\n  LEFT_ARROW: 37,\n  UP_ARROW: 38,\n  RIGHT_ARROW: 39,\n  DOWN_ARROW: 40,\n  BACKSPACE: 8,\n  TAB: 9,\n  ENTER: 13,\n  SHIFT: 16,\n  CTRL: 17,\n  ALT: 18,\n  F1: 112,\n  F2: 113,\n  F3: 114,\n  F4: 115,\n  F5: 116,\n  F6: 117,\n  F7: 118,\n  F8: 119,\n  F9: 120,\n  F10: 121,\n  F11: 122,\n  F12: 123,\n  PAUSE_BREAK: 19,\n  CAPS_LOCK: 20,\n  ESCAPE: 27,\n  PAGE_UP: 33,\n  PAGE_DOWN: 34,\n  END: 35,\n  HOME: 36,\n  INSERT: 45,\n  DELETE: 46,\n  LEFT_WINDOW: 91,\n  RIGHT_WINDOW: 92,\n  CONTEXT_MENU: 93,\n  NUM_LOCK: 144,\n  SCROLL_LOCK: 145,\n  SEMI_COLON: 186,\n  EQUAL_SIGN: 187,\n  COMMA: 188,\n  DASH: 189,\n  PERIOD: 190,\n  FORWARD_SLASH: 191,\n  BACKQUOTE: 192,\n  BRAKET_LEFT: 219,\n  BACK_SLASH: 220,\n  BRAKET_RIGHT: 221,\n  SINGLE_QUOTE: 222,\n};\n","\nclass KeyInfo {\n\n  /**\n   * constructor - Description\n   *\n   * @param {Event} nativeEvent Description\n   *\n   * @return {void} Description\n   */\n  constructor(nativeEvent) {\n    this.keyCode = nativeEvent.keyCode;\n    this.code = nativeEvent.code;\n    this.char = nativeEvent.key;\n    this.shiftKey = nativeEvent.shiftKey;\n    this.altKey = nativeEvent.altKey;\n    this.ctrlKey = nativeEvent.ctrlKey;\n  }\n}\n","/*\nHas to be static class.\n\n+ before update store all events locally\n- check root object! add collider automatically? or do it on demand?\n*/\n\n\nclass Input extends System {\n  constructor() {\n    super();\n\n    /** @type {Input} */\n    this.constructor.instance = this;\n\n    /** @type {Vector} */\n    this.mPointerPosition = new Vector();\n\n    /** @type {Element} */\n    this.mDom = Black.instance.containerElement;\n\n    /** @type {Array<string>} */\n    this.mEventList = null;\n\n    /** @type {Array<string>} */\n    this.mKeyEventList = null;\n\n    this.__initListeners();\n\n    /** @type {Array<{e: Event, x: number, y:number}>} */\n    this.mPointerQueue = [];\n\n    /** @type {Array<Event>} */\n    this.mKeyQueue = [];\n\n    /** @type {Array<number>} */\n    this.mPressedKeys = [];\n\n    /** @type {boolean} */\n    this.mIsPointerDown = false;\n\n    this.mNeedUpEvent = false;\n\n    /** @type {Array<InputComponent>} */\n    this.mInputListeners = [];\n  }\n\n  __initListeners() {\n    this.mKeyEventList = Input.mKeyEventList;\n    //debugger;\n\n    if (window.PointerEvent)\n      this.mEventList = Input.mPointerEventList;\n    else if (Device.isTouch && Device.isMobile)\n      this.mEventList = Input.mTouchEventList;\n    else\n      this.mEventList = Input.mMouseEventList;\n\n    for (let i = 0; i < 6; i++)\n      this.mDom.addEventListener(this.mEventList[i], e => this.__onPointerEvent(e), false);\n\n    document.addEventListener(this.mEventList[Input.POINTER_UP], e => this.__onPointerEventDoc(e), false);\n\n    for (let i = 0; i < this.mKeyEventList.length; i++)\n      document.addEventListener(this.mKeyEventList[i], e => this.__onKeyEvent(e), false);\n  }\n\n  __sortListeners() {\n    // TODO: make it faster\n    // - try insert sort\n    this.mInputListeners.sort((x, y) => {\n      return y.gameObject.depth - x.gameObject.depth || y.gameObject.index - x.gameObject.index;\n    });\n  }\n\n\n  /**\n   * @param {Event} e\n   *\n   * @return {boolean}\n   */\n  __onKeyEvent(e) {\n    this.mKeyQueue.push(e);\n    return true;\n  }\n\n  __onPointerEventDoc(e) {\n    let over = e.target == this.mDom || e.target.parentElement == this.mDom;\n\n    if (over === false && this.mNeedUpEvent === true) {\n      this.mNeedUpEvent = false;\n      this.__pushEvent(e);\n    }\n  }\n\n\n  /**\n   * @param {Event} e Description\n   *\n   * @return {boolean} Description\n   */\n  __onPointerEvent(e) {\n    e.preventDefault();\n\n    this.__pushEvent(e);\n\n    return true;\n  }\n\n  __pushEvent(e) {\n    let /** @type {Vector|null} */ p = null;\n    if (e.type.indexOf('touch') === 0)\n      p = this.__getTouchPos(this.mDom, /** @type {TouchEvent} */ (e));\n    else\n      p = this.__getPointerPos(this.mDom, e);\n\n    this.mPointerPosition.x = p.x;\n    this.mPointerPosition.y = p.y;\n\n    this.mPointerQueue.push({\n      e: e,\n      x: p.x,\n      y: p.y\n    });\n  }\n\n\n  /**\n   * __getPointerPos - Description\n   *\n   * @param {Element} canvas Description\n   * @param {Event} evt    Description\n   *\n   * @return {Vector} Description\n   */\n  __getPointerPos(canvas, evt) {\n    let rect = canvas.getBoundingClientRect();\n    let scaleX = canvas.clientWidth / rect.width;\n    let scaleY = canvas.clientHeight / rect.height;\n    return new Vector((evt.clientX - rect.left) * scaleX, (evt.clientY - rect.top) * scaleY);\n  }\n\n  /**\n   * __getTouchPos - Description\n   *\n   * @param {Element} canvas Description\n   * @param {TouchEvent} evt    Description\n   *\n   * @return {Vector} Description\n   */\n  __getTouchPos(canvas, evt) {\n    let rect = canvas.getBoundingClientRect();\n\n    /** @type {Touch} */\n    let touch = evt.changedTouches[0]; // ios? what about android?\n    let x = touch.clientX;\n    let y = touch.clientY;\n\n    let scaleX = canvas.clientWidth / rect.width;\n    let scaleY = canvas.clientHeight / rect.height;\n    return new Vector((x - rect.left) * scaleX, (y - rect.top) * scaleY);\n  }\n\n\n  /**\n   * __addListener - Description\n   *\n   * @param {Array<InputComponent>} array Description\n   *\n   * @return {void} Description\n   */\n  __addListener(array) {\n    // check for duplicates\n    for (let i = 0; i < array.length; i++) {\n      let item = /** @type {InputComponent} */ (array[i]);\n\n      if (this.mInputListeners.indexOf(item) === -1)\n        this.mInputListeners.push(item);\n    }\n\n    this.__sortListeners();\n  }\n\n\n  /**\n   * onChildrenAdded - Description\n   *\n   * @param {GameObject} child Description\n   *\n   * @return {void} Description\n   */\n  onChildrenAdded(child) {\n    let cs = GameObject.findComponents(child, InputComponent);\n    if (!cs || cs.length === 0)\n      return;\n\n    this.__addListener(cs);\n  }\n\n\n  /**\n   * onChildrenRemoved - Description\n   *\n   * @param {GameObject} child Description\n   *\n   * @return {void} Description\n   */\n  onChildrenRemoved(child) {\n    let cs = GameObject.findComponents(child, InputComponent);\n    if (!cs || cs.length === 0)\n      return;\n\n    for (var i = cs.length - 1; i >= 0; i--) {\n      let component = cs[i];\n      let index = this.mInputListeners.indexOf( /** @type {InputComponent} */ (component));\n\n      if (index !== -1)\n        this.mInputListeners.splice(index, 1);\n    }\n\n    this.__sortListeners();\n  }\n\n\n  /**\n   * onComponentAdded - Description\n   *\n   * @param {GameObject} child     Description\n   * @param {Component} component Description\n   *\n   * @return {void} Description\n   */\n  onComponentAdded(child, component) {\n    if (component.constructor !== InputComponent)\n      return;\n\n    this.__addListener([component]);\n  }\n\n\n  /**\n   * onComponentRemoved - Description\n   *\n   * @param {GameObject} child     Description\n   * @param {Component} component Description\n   *\n   * @return {void} Description\n   */\n  onComponentRemoved(child, component) {\n    if (component.constructor !== InputComponent)\n      return;\n\n    let index = this.mInputListeners.indexOf( /** @type {InputComponent} */ (component));\n    if (index !== -1) {\n      this.mInputListeners.splice(index, 1);\n      this.__sortListeners();\n    }\n  }\n\n\n  /**\n   * onUpdate - Description\n   *\n   * @param {number} dt Description\n   *\n   * @return {void} Description\n   */\n  onUpdate(dt) {\n    let pointerPos = new Vector();\n\n    for (let i = 0; i < this.mPointerQueue.length; i++) {\n      let nativeEvent = this.mPointerQueue[i];\n\n      let ix = this.mEventList.indexOf(nativeEvent.e.type);\n      let fnName = Input.mInputEventsLookup[ix];\n\n      if (fnName === 'pointerDown')\n        this.mNeedUpEvent = true;\n\n      pointerPos.set(nativeEvent.x, nativeEvent.y);\n\n      /** @type {InputComponent|null} */\n      let currentComponent = null;\n      for (let k = 0; k < this.mInputListeners.length; k++) {\n        currentComponent = this.mInputListeners[k];\n\n        // if (currentComponent.gameObject === null)\n        //   console.log(currentComponent);\n\n        if (GameObject.intersects(currentComponent.gameObject, pointerPos) === false) {\n          // check for out events\n          if (currentComponent.mPointerInside === true) {\n            currentComponent.mPointerInside = false;\n            currentComponent.gameObject.post('~pointerOut');\n          }\n\n          continue;\n        }\n\n        // TODO: fix weird extra pointerMove bug on chrome, happens right after down and before up\n        if (ix === Input.POINTER_DOWN)\n          this.mIsPointerDown = true;\n        else if (ix === Input.POINTER_UP)\n          this.mIsPointerDown = false;\n\n        if (currentComponent.mPointerInside === false) {\n          currentComponent.mPointerInside = true;\n          currentComponent.gameObject.post('~pointerIn');\n        }\n\n        currentComponent.gameObject.post('~' + fnName);\n      }\n\n      this.post(fnName);\n    }\n\n    for (let i = 0; i < this.mKeyQueue.length; i++) {\n      let nativeEvent = this.mKeyQueue[i];\n\n      let ix = this.mKeyEventList.indexOf(nativeEvent.type);\n      let pIx = this.mPressedKeys.indexOf(nativeEvent.keyCode);\n      let fnName = Input.mKeyEventsLookup[ix];\n\n      if (fnName === 'keyUp' && pIx !== -1)\n        this.mPressedKeys.splice(pIx, 1);\n\n      else if (fnName === 'keyDown' && pIx === -1) {\n        this.mPressedKeys.push(nativeEvent.keyCode);\n        fnName = 'keyPress';\n      }\n\n      this.post(fnName, new KeyInfo(nativeEvent), nativeEvent);\n    }\n\n    this.mPointerQueue.splice(0, this.mPointerQueue.length);\n    this.mKeyQueue.splice(0, this.mKeyQueue.length);\n  }\n\n  /**\n   * on - Description\n   *\n   * @param {string} name           Description\n   * @param {Function} callback       Description\n   * @param {Object=} [context=null] Description\n   *\n   * @return {void} Description\n   */\n  static on(name, callback, context = null) {\n    Input.instance.on(name, callback, context);\n  }\n\n\n  /**\n   * isPointerDown - Description\n   *\n   * @return {boolean} Description\n   */\n  static get isPointerDown() {\n    return Input.instance.mIsPointerDown;\n  }\n\n\n  /**\n   * pointerX - Description\n   *\n   * @return {number} Description\n   */\n  static get pointerX() {\n    return Input.instance.mPointerPosition.x;\n  }\n\n\n  /**\n   * pointerY - Description\n   *\n   * @return {number} Description\n   */\n  static get pointerY() {\n    return Input.instance.mPointerPosition.y;\n  }\n\n\n  /**\n   * pointerPosition - Description\n   *\n   * @return {Vector} Description\n   */\n  static get pointerPosition() {\n    return Input.instance.mPointerPosition;\n  }\n\n  static get pressedKeys() {\n    return Input.instance.mPressedKeys;\n  }\n}\n\n/** @type {Input}\n * @nocollapse\n */\nInput.instance = null;\n\n\n/** @type {number}\n *  @const\n */\nInput.POINTER_MOVE = 0;\n\n/** @type {number}\n *  @const\n */\nInput.POINTER_DOWN = 1;\n\n/** @type {number}\n *  @const\n */\nInput.POINTER_UP = 2;\n\n/** @type {number}\n *  @const\n */\nInput.POINTER_CANCEL = 3;\n\n/** @type {number}\n *  @const\n */\nInput.POINTER_IN = 4;\n\n/** @type {number}\n *  @const\n */\nInput.POINTER_OUT = 5;\n\n/** @type {Array<string>}\n *  @const\n */\nInput.mKeyEventList = ['keydown', 'keyup'];\n\n/** @type {Array<string>}\n *  @const\n */\nInput.mKeyEventsLookup = ['keyDown', 'keyUp', 'keyPress'];\n\n/** @type {Array<string>}\n *  @const\n */\nInput.mInputEventsLookup = ['pointerMove', 'pointerDown', 'pointerUp', 'pointerIn', 'pointerOut'];\n\n/** @type {Array<string>}\n *  @const\n */\nInput.mPointerEventList = ['pointermove', 'pointerdown', 'pointerup', 'pointerenter', 'pointerleave'];\n\n/** @type {Array<string>}\n *  @const\n */\nInput.mMouseEventList = ['mousemove', 'mousedown', 'mouseup', 'mouseenter', 'mouseleave'];\n\n/** @type {Array<string>}\n *  @const\n */\nInput.mTouchEventList = ['touchmove', 'touchstart', 'touchend', 'touchenter', 'touchleave'];\n","\nclass InputComponent extends Component {\n  /**\n   * @return {void}\n   */\n  constructor() {\n    super();\n\n    /** @type {boolean} */\n    this.touchable = true;\n\n    /* INTERNAL */\n\n    /** @type {boolean} */\n    this.mPointerInside = false;\n  }\n}\n","\nclass FPSComponent extends Component  {\n  constructor() {\n    super();\n\n    /** @type {TextField} */\n    this.txtFPS = null;\n  }\n\n  onAdded(){\n    this.txtFPS = new TextField('FPS: 0');\n    this.txtFPS.x = 0;\n    this.txtFPS.y = 0;\n    this.gameObject.addChild(this.txtFPS);\n  }\n\n  onRemoved(){\n  }\n\n  onUpdate(){\n    this.txtFPS.text = 'FPS: ' + Black.instance.FPS;\n  }\n}\n","\nclass MRComponent extends Component {\n\n  /**\n   * constructor - Description\n   *\n   * @param {number} [width=960]  Description\n   * @param {number} [height=640] Description\n   */\n  constructor(width = 960, height = 640) {\n    super();\n\n    /** @type {number} */\n    this.mWidth = width;\n\n    /** @type {number} */\n    this.mHeight = height;\n\n    /** @type {number} */\n    this.mScale = 0;\n\n    /** @type {number} */\n    this.mInvScale = 0;\n\n    /** @type {number} */\n    this.mAspect = 0;\n\n    Black.instance.viewport.on('resize', this.__onResize, this);\n  }\n\n  __onResize(msg, rect) {\n    this.setSize(this.mWidth, this.mHeight);\n  }\n\n  /**\n   * setSize - description\n   *\n   * @param  {number} width = 960  description\n   * @param  {number} height = 640 description\n   * @return {void}              description\n   */\n  setSize(width = 960, height = 640){\n    this.mWidth = width;\n    this.mHeight = height;\n\n    this.updateLayout();\n  }\n\n  /**\n   * updateLayout - description\n   *\n   * @return {void}  description\n   */\n  updateLayout() {\n    if (!this.gameObject)\n      return;\n\n    /** @type {Rectangle} */\n    let size = Black.instance.viewport.size;\n\n    /** @type {number} */\n    let scaleX = size.width / this.mWidth;\n\n    /** @type {number} */\n    let scaleY = size.height / this.mHeight;\n\n    this.mScale = Math.min(scaleX, scaleY);\n    this.mInvScale = 1 / this.mScale;\n\n    this.gameObject.scaleX = this.gameObject.scaleY = this.mScale;\n    this.gameObject.x = (size.width / 2) - (this.mWidth / 2) * this.mScale;\n    this.gameObject.y = (size.height / 2) - (this.mHeight / 2) * this.mScale;\n  }\n\n  onAdded(){\n    this.updateLayout();\n  }\n\n  onRemoved(){\n  }\n\n  onUpdate(){\n  }\n}\n","\nclass Ease {\n  constructor() {}\n\n  /**\n   * linear - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static linear(k) {\n    return k;\n  }\n\n  /**\n   * quadraticIn - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static quadraticIn(k) {\n    return k * k;\n  }\n\n  /**\n   * quadraticOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static quadraticOut(k) {\n    return k * (2 - k);\n  }\n\n  /**\n   * quadraticInOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static quadraticInOut(k) {\n    if ((k *= 2) < 1)\n      return 0.5 * k * k;\n\n    return -0.5 * (--k * (k - 2) - 1);\n  }\n\n  /**\n   * cubicIn - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static cubicIn(k) {\n    return k * k * k;\n  }\n\n  /**\n   * cubicOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static cubicOut(k) {\n    return --k * k * k + 1;\n  }\n\n  /**\n   * cubicInOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static cubicInOut(k) {\n    if ((k *= 2) < 1)\n      return 0.5 * k * k * k;\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  }\n\n  /**\n   * quarticIn - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static quarticIn(k) {\n    return k * k * k * k;\n  }\n\n  /**\n   * quarticOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static quarticOut(k) {\n    return 1 - (--k * k * k * k);\n  }\n\n  /**\n   * quarticInOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static quarticInOut(k) {\n    if ((k *= 2) < 1)\n      return 0.5 * k * k * k * k;\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  }\n\n  /**\n   * quinticIn - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static quinticIn(k) {\n    return k * k * k * k * k;\n  }\n\n  /**\n   * quinticOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static quinticOut(k) {\n    return --k * k * k * k * k + 1;\n  }\n\n  /**\n   * quinticInOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static quinticInOut(k) {\n    if ((k *= 2) < 1)\n      return 0.5 * k * k * k * k * k;\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  }\n\n  /**\n   * sinusoidalIn - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static sinusoidalIn(k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  }\n\n  /**\n   * sinusoidalOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static sinusoidalOut(k) {\n    return Math.sin(k * Math.PI / 2);\n  }\n\n  /**\n   * sinusoidalInOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static sinusoidalInOut(k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  }\n\n  /**\n   * exponentialIn - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static exponentialIn(k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  }\n\n  /**\n   * exponentialOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static exponentialOut(k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  }\n\n  /**\n   * exponentialInOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static exponentialInOut(k) {\n    if (k === 0)\n      return 0;\n\n    if (k === 1)\n      return 1;\n\n    if ((k *= 2) < 1)\n      return 0.5 * Math.pow(1024, k - 1);\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  }\n\n  /**\n   * circularIn - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static circularIn(k) {\n    return 1 - Math.sqrt(1 - k * k);\n  }\n\n  /**\n   * circularOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static circularOut(k) {\n    return Math.sqrt(1 - (--k * k));\n  }\n\n  /**\n   * circularInOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static circularInOut(k) {\n    if ((k *= 2) < 1)\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  }\n\n  /**\n   * elasticIn - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static elasticIn(k) {\n    if (k === 0)\n      return 0;\n\n    if (k === 1)\n      return 1;\n\n    return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n  }\n\n  /**\n   * elasticOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static elasticOut(k) {\n    if (k === 0)\n      return 0;\n\n    if (k === 1)\n      return 1;\n\n    return Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n  }\n\n  /**\n   * elasticInOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static elasticInOut(k) {\n    if (k === 0)\n      return 0;\n\n    if (k === 1)\n      return 1;\n\n    k *= 2;\n\n    if (k < 1)\n      return -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\n    return 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\n  }\n\n  /**\n   * backIn - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static backIn(k) {\n    const s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  }\n\n  /**\n   * backOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static backOut(k) {\n    const s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  }\n\n  /**\n   * backInOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static backInOut(k) {\n    const s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1)\n      return 0.5 * (k * k * ((s + 1) * k - s));\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  }\n\n  /**\n   * bounceIn - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static bounceIn(k) {\n    return 1 - Ease.bounceOut(1 - k);\n  }\n\n  /**\n   * bounceOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static bounceOut(k) {\n    if (k < (1 / 2.75))\n      return 7.5625 * k * k;\n    else if (k < (2 / 2.75))\n      return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n    else if (k < (2.5 / 2.75))\n      return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\n    return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n  }\n\n  /**\n   * bounceInOut - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static bounceInOut(k) {\n    if (k < 0.5)\n      return Ease.bounceIn(k * 2) * 0.5;\n\n    return Ease.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n\n  /**\n   * smoothstep - Description\n   *\n   * @param {number} k Description\n   *\n   * @return {number} Description\n   */\n  static smootherStep(k) {\n    return k * k * k * (k * (6.0 * k - 15.0) + 10.0);\n  }\n}\n","\nclass Interpolation {\n  constructor() {}\n\n  /**\n   * linear - Description\n   *\n   * @param {Array} v - The input array of values to interpolate between.\n   *\n   * @param {number} k - The percentage of interpolation, between 0 and 1.\n   *\n   * @return {number} The interpolated value\n   */\n  static linear(v, k) {\n    let m = v.length - 1;\n    let f = m * k;\n    let i = Math.floor(f);\n\n    let fn = (p0, p1, t) => {\n      return (p1 - p0) * t + p0;\n    };\n\n    if (k < 0) {\n      return fn(v[0], v[1], f);\n    }\n\n    if (k > 1) {\n      return fn(v[m], v[m - 1], m - f);\n    }\n\n    return fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n  }\n\n  /**\n   * bezier - Description\n   *\n   * @param {Array} v - The input array of values to interpolate between.\n   *\n   * @param {number} k - The percentage of interpolation, between 0 and 1.\n   *\n   * @return {number} The interpolated value\n   */\n  static bezier(v, k) {\n    let b = 0;\n    let n = v.length;\n    let pow = Math.pow;\n    // Bernstein basis polynomials\n    let bn = (n, i) => {\n      let fc = Interpolation.__factorial;\n      return fc(n) / fc(i) / fc(n - i);\n    };\n\n    for (let i = 0; i < n; i++) {\n      b += pow(1 - k, n - i) * pow(k, i) * v[i] * bn(n, i);\n    }\n\n    return b;\n  }\n\n  /**\n   * catmullRom - Description\n   *\n   * @param {Array} v - The input array of values to interpolate between.\n   *\n   * @param {number} k - The percentage of interpolation, between 0 and 1.\n   *\n   * @return {number} The interpolated value\n   */\n  static catmullRom(v, k) {\n    let m = v.length - 1;\n    let f = m * k;\n    let i = Math.floor(f);\n    let fn = (p0, p1, p2, p3, t) => {\n      let v0 = (p2 - p0) * 0.5;\n      let v1 = (p3 - p1) * 0.5;\n      let t2 = t * t;\n      let t3 = t * t2;\n\n      return ((p1 - p2) * 2 + v0 + v1) * t3 + ((p2 - p1) * 3 - 2 * v0 - v1) * t2 + v0 * t + p1;\n    };\n\n    if (v[0] === v[m]) {\n      if (k < 0) {\n        i = Math.floor(f = m * (1 + k));\n      }\n\n      return fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n    } else {\n      if (k < 0) {\n        return v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n      }\n\n      if (k > 1) {\n        return v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n      }\n\n      return fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n    }\n  }\n}\n\n/**\n * __factorial\n *\n * @param {number} n\n *\n * @return {number}\n */\nInterpolation.__factorial = (function() {\n  let a = [1];\n\n  return function(n) {\n    if (a[n]) {\n      return a[n];\n    }\n\n    let s = n;\n\n    while (--n) {\n      s *= n;\n    }\n\n    a[n] = s;\n    return s;\n  };\n})();\n","/**\n * Tween\n * @unrestricted\n * @extends Component\n */\n\nclass Tween extends Component {\n  /**\n   * constructor - Description\n   * @param {Object}   values            Description\n   * @param {number} [duration=0.25]   Description\n   * @param {Object|null}   [properties=null] Description\n   */\n  constructor(values, duration = 0.250, properties = null) {\n    super();\n\n    /** @dict */\n    this.mValues = values;\n\n    /** @type {number} */\n    this.mDuration = duration;\n\n    /** @dict */\n    this.mProperties = properties;\n\n    /** @type {boolean} */\n    this.mIsPlaying = false;\n\n    /** @type {boolean} */\n    this.mIsPaused = false;\n\n    /** @type {number} */\n    this.mStartTime = 0;\n\n    /** @type {number} */\n    this.mPausedTime = 0;\n\n    /** @dict */\n    this.mValuesStart = {};\n\n    /** @type {number} */\n    this.mElapsed = 0;\n\n    /** @type {function ((Array|null), number):number} */\n    this.mInterpolation = Interpolation.linear;\n\n    /** @type {number} */\n    this.mDelay = 0;\n\n    /** @type {number} */\n    this.mRepeatTimes = 0;\n\n    /** @type {boolean} */\n    this.mInitiated = false;\n\n    /** @type {boolean} */\n    this.mStarted = false;\n\n    /** @type {boolean} */\n    this.mReverse = false;\n\n    /** @type {boolean} */\n    this.mRemoveOnComplete = true;\n\n    /** @type {boolean} */\n    this.mPlayOnAdded = true;\n\n   /** @type {function(number):number} */\n    this.mEase = Ease.smootherStep;\n\n    if (this.mProperties !== null) {\n      for (let f in this.mProperties) {\n        this[f] = /** @dict */ (this.mProperties[f]);\n      }\n    }\n  }\n\n  /**\n   * ease - Description\n   *\n   * @return {function(number):number} Description\n   */\n  get ease() {\n    return this.mEase;\n  }\n\n  /**\n   * ease - Description\n   *\n   * @param {function(number):number} value Description\n   *\n   * @return {void} Description\n   */\n  set ease(value) {\n    this.mEase = value;\n  }\n\n  /**\n   * interpolation - Description\n   *\n   * @return {function(Array, number):number} Description\n   */\n  get interpolation() {\n    return this.mInterpolation;\n  }\n\n  /**\n   * interpolation - Description\n   *\n   * @param {function(Array, number):number} value Description\n   *\n   * @return {void} Description\n   */\n  set interpolation(value) {\n    this.mInterpolation = value;\n  }\n\n  /**\n   * elapsed - Description\n   *\n   * @return {number} Description\n   */\n  get elapsed() {\n    return this.mElapsed;\n  }\n\n  /**\n   * delay - Description\n   *\n   * @return {number} Description\n   */\n  get delay() {\n    return this.mDelay;\n  }\n\n  /**\n   * delay - Description\n   *\n   * @param {number} value Description\n   *\n   * @return {void} Description\n   */\n  set delay(value) {\n    this.mDelay = value;\n  }\n\n  /**\n   * removeOnComplete - Description\n   *\n   * @return {boolean} Description\n   */\n  get removeOnComplete() {\n    return this.mRemoveOnComplete;\n  }\n\n  /**\n   * removeOnComplete - Description\n   *\n   * @param {boolean} value Description\n   *\n   * @return {void} Description\n   */\n  set removeOnComplete(value) {\n    this.mRemoveOnComplete = value;\n  }\n\n  /**\n   * playOnAdded - Description\n   *\n   * @return {boolean} Description\n   */\n  get playOnAdded() {\n    return this.mPlayOnAdded;\n  }\n\n  /**\n   * playOnAdded - Description\n   *\n   * @param {boolean} value Description\n   *\n   * @return {void} Description\n   */\n  set playOnAdded(value) {\n    this.mPlayOnAdded = value;\n  }\n\n\n  /**\n   * __start - Description\n   *\n   * @param {number} t Description\n   *\n   * @return {void} Description\n   */\n  __start(t) {\n    this.mIsPlaying = true;\n    this.mStartTime = t + this.mDelay;\n  }\n\n  /**\n   * play - Description\n   *\n   * @return {Tween} Description\n   */\n  play() {\n    if (!this.mIsPaused) {\n      this.__start(Black.instance.uptime);\n    } else {\n      this.__resume();\n    }\n\n    return this;\n  }\n\n  /**\n   * stop - Description\n   *\n   * @return {Tween} Description\n   */\n  stop() {\n    if (!this.mIsPlaying)\n      return this;\n\n    this.mIsPlaying = false;\n\n    return this;\n  }\n\n  /**\n   * to - Description\n   *\n   * @param {Object} values - Description\n   *\n   * @return {Tween} Description\n   */\n  to(values = {}, duration = 0.250) {\n    this.mValues = values;\n\n    this.mDuration = duration;\n\n    this.mInitiated = false;\n\n    return this;\n  }\n\n  /**\n   * pause - Description\n   *\n   * @return {Tween} Description\n   */\n  pause() {\n    if (!this.mIsPlaying)\n      return this;\n\n    this.mIsPaused = true;\n    this.mPausedTime = Black.instance.uptime;\n\n    return this;\n  }\n\n  /**\n   * __resume - Description\n   *\n   * @return {void} Description\n   */\n  __resume() {\n    if (!this.mIsPaused)\n      return;\n\n    this.mIsPaused = false;\n    this.mStartTime += Black.instance.uptime - this.mPausedTime;\n  }\n\n\n  /**\n   * @return {void}\n   */\n  remove() {\n    if (this.mIsPlaying)\n      this.stop();\n\n    this.gameObject.removeComponent(this);\n  }\n\n  /**\n   * dispose - Description\n   *\n   * @return {void} Description\n   */\n  dispose() {\n    this.remove();\n  }\n\n  /**\n   * repeat - Description\n   *\n   * @return {Tween} Description\n   */\n  repeat(times) {\n    this.mRepeatTimes = times;\n\n    return this;\n  }\n\n  /**\n   * loop - Description\n   *\n   * @return {Tween} Description\n   */\n  loop(value = true) {\n    this.mRepeatTimes = value ? Infinity : 0;\n\n    return this;\n  }\n\n   /**\n   * reverse - Description\n   *\n   * @return {Tween} Description\n   */\n  reverse(value = true) {\n    this.mReverse = value;\n\n    return this;\n  }\n\n  /**\n   * chain - Description\n   *\n   * @return {Tween} Description\n   */\n  chain(tween) {\n    if (!tween) {\n      return this;\n    }\n\n    this.mRemoveOnComplete = false;\n\n    this.on('complete', () => {\n      tween.play();\n    });\n\n    return this;\n  }\n\n  /**\n   * onAdded - description\n   *\n   * @override\n   * @param  {GameObject} gameObject description\n   * @return {void}            description\n   */\n  onAdded(gameObject) {\n    if (this.mPlayOnAdded) {\n      this.__start(Black.instance.uptime);\n    }\n  }\n\n  /**\n   * __update - Description\n   *\n   * @param {number} t Description\n   *\n   * @return {void} Description\n   */\n  __update(t) {\n    if (t < this.mStartTime || !this.mIsPlaying || this.mIsPaused)\n      return;\n\n    // copy values only when starting tween...\n    // since values may change\n    if (this.mStarted === false) {\n      this.mStarted = true;\n      this.post('start', this.gameObject);\n\n      for (let f in this.mValues) {\n        if (!this.mInitiated && Array.isArray(this.mValues[f])) {\n          this.mValues[f] = [this.gameObject[f]].concat(this.mValues[f]);\n        }\n        this.mValuesStart[f] = parseFloat(this.gameObject[f]);\n      }\n\n      this.mInitiated = true;\n    }\n\n    this.mElapsed = (t - this.mStartTime) / this.mDuration;\n\n    if (this.mElapsed > 1)\n      this.mElapsed = 1;\n\n    let value = this.mEase(this.mElapsed);\n\n    for (let f in this.mValues) {\n      let start = /** @type {number} */ (this.mValuesStart[f]);\n      let end = /** @type {number|Array} */ (this.mValues[f]);\n\n      if (Array.isArray(end)) {\n        this.gameObject[f] = this.mInterpolation(end, value);\n      } else {\n        this.gameObject[f] = /** @type {number} */ (start + (end - start) * value);\n      }\n    }\n\n    this.post('update', this.gameObject);\n\n    if (this.mElapsed === 1) {\n      if (this.mRepeatTimes-- > 0) {\n        if (this.mReverse) {\n          for (let f in this.mValues) {\n            [this.mValues[f], this.mValuesStart[f]] = [this.mValuesStart[f], this.mValues[f]];\n          }\n        }\n\n        this.mStartTime = t + this.mDelay;\n\n        this.post('loop', this.gameObject);\n      } else {\n        this.mIsPlaying = false;\n        this.post('complete', this.gameObject);\n\n        if (this.mRemoveOnComplete) {\n          this.dispose();\n        } else {\n          for (let f in this.mValues) {\n            this.mValuesStart[f] = this.mValues[f];\n          }\n\n          this.mStarted = false;\n        }\n      }\n    }\n  }\n\n\n  /**\n   * set - Description\n   *\n   * @param {Object} values Description\n   *\n   * @return {void} Description\n   */\n  set(values) {\n    this.mValues = values;\n\n    for (let f in this.mValues)\n      this.mValuesStart[f] = parseFloat(this.gameObject[f]);\n  }\n\n  onPostUpdate(dt){\n    let t = Black.instance.uptime;\n    this.__update(t);\n  }\n}\n","\nclass Animation {\n  /**\n   * constructor - Description\n   *\n   * @param {AnimationController}    controller  Description\n   * @param {string}    name        Description\n   * @param {Array<Texture>}    frames      Description\n   * @param {number}  [fps=14]    Description\n   * @param {boolean} [loop=true] Description\n   */\n  constructor(controller, name, frames, fps = 14, loop = true) {\n    Debug.assert(fps > 0, 'FPS must be greater than 0.');\n    assert(fps > 0, '');\n\n    this.mController = controller;\n\n    /** @type {string} */\n    this.mName = name;\n\n    /** @type {Array<Texture>} */\n    this.mFrames = frames;\n\n    /** @type {number} */\n    this.mCurrentFrame = 0;\n\n    /** @type {number} */\n    this.mNextFrameAt = 0;\n\n    /** @type {number} */\n    this.mFPS = fps;\n\n    /** @type {number} */\n    this.mFrameDuration = 1 / this.mFPS;\n\n    /** @type {boolean} */\n    this.mLoop = loop;\n\n    /** @type {boolean} */\n    this.mPaused = false;\n\n    /** @type {number} */\n    this.mElapsed = 0;\n\n    /** @type {boolean} */\n    this.mStopped = false;\n\n    /** @type {boolean} */\n    this.mCompleted = false;\n  }\n\n\n  /**\n   * play - Description\n   *\n   * @return {Texture} Description\n   */\n  play() {\n    if (this.mCompleted === true) {\n      this.mCurrentFrame = 0;\n      this.mElapsed = 0;\n    }\n\n    this.mPaused = false;\n    this.mStopped = false;\n    this.mCompleted = false;\n\n    this.mNextFrameAt = Black.instance.uptime + this.mFrameDuration - this.mElapsed;\n    this.mElapsed = 0;\n\n    return this.mFrames[this.mCurrentFrame];\n  }\n\n\n  /**\n   * stop - Description\n   *\n   * @return {void} Description\n   */\n  stop() {\n    this.mStopped = true;\n    this.mCurrentFrame = 0;\n  }\n\n\n  /**\n   * pause - Description\n   *\n   * @return {void} Description\n   */\n  pause() {\n    this.mPaused = true;\n    this.mElapsed = this.mNextFrameAt - Black.instance.uptime;\n  }\n\n\n  /**\n   * __update - Description\n   *\n   * @param {number} dt Description\n   * @param {number} t  Description\n   *\n   * @return {Texture|null} Description\n   */\n  __update(dt, t) {\n    if (t < this.mNextFrameAt || this.mPaused === true || this.mStopped === true || this.mCompleted === true)\n      return null;\n\n    this.mCurrentFrame++;\n\n    if (this.mCurrentFrame >= this.mFrames.length) {\n      if (this.mLoop === true) {\n        this.mCurrentFrame = 0;\n      }\n      else {\n        this.mCurrentFrame = this.mFrames.length - 1;\n        this.mController.post('complete', this);\n        this.mCompleted = true;\n        return null;\n      }\n    }\n\n    this.mNextFrameAt = Black.instance.uptime + this.mFrameDuration;\n    let texture = this.mFrames[this.mCurrentFrame];\n    return texture;\n  }\n\n  /**\n   * fps - Description\n   *\n   * @return {number} Description\n   */\n  get fps() {\n    return this.mFPS;\n  }\n\n  /**\n   * fps - Description\n   *\n   * @param {number} value Description\n   *\n   * @return {void} Description\n   */\n  set fps(value) {\n    Debug.assert(value > 0, 'FPS must be greater than 0.');\n\n    this.mFPS = value;\n    this.mFrameDuration = 1 / this.mFPS;\n\n    // update next frame start time\n    let diff = this.mNextFrameAt - Black.instance.uptime;\n    this.mNextFrameAt += diff;\n  }\n\n  /**\n   * loop - Description\n   *\n   * @return {boolean} Description\n   */\n  get loop() {\n    return this.mLoop;\n  }\n\n  /**\n   * loop - Description\n   *\n   * @param {boolean} value Description\n   *\n   * @return {void} Description\n   */\n  set loop(value) {\n    this.mLoop = value;\n  }\n\n\n  /**\n   * frames - Description\n   *\n   * @return {Array<Texture>} Description\n   */\n  get frames() {\n    return this.mFrames;\n  }\n\n\n  /**\n   * playing - Description\n   *\n   * @return {boolean} Description\n   */\n  get isPlaying(){\n    return this.mPaused === false && this.mStopped === false;\n  }\n\n  /**\n   * playing - Description\n   *\n   * @return {boolean} Description\n   */\n  get isComplete(){\n    return this.mCompleted;\n  }\n\n  get name() {\n    return this.mName;\n  }\n}\n","\nclass AnimationController extends Component {\n  constructor() {\n    super();\n\n    /** @type {Object<string, Animation>} */\n    this.mAnimations = {};\n\n    /** @type {Animation|null} */\n    this.mCurrentAnim = null;\n  }\n\n\n  /**\n   * get - Description\n   *\n   * @param {string} name Description\n   *\n   * @return {Animation} Description\n   */\n  get(name){\n    Debug.assert(this.mAnimations.hasOwnProperty(name), 'Animation must be set first.');\n\n    return this.mAnimations[name];\n  }\n\n\n  /**\n   * set - Description\n   *\n   * @param {string}    name        Description\n   * @param {Array<Texture>}    textures    Description\n   * @param {number}  [fps=14]    Description\n   * @param {boolean} [loop=true] Description\n   *\n   * @return {Animation} Description\n   */\n  set(name, textures, fps = 14, loop = true) {\n    Debug.assert(textures.length > 0, 'Animation cannot be empty.');\n    Debug.assert(fps > 0, 'FPS must be greater than 0.');\n\n    let anim = new Animation(this, name, textures, fps, loop);\n    this.mAnimations[name] = anim;\n\n    return anim;\n  }\n\n\n  /**\n   * play - Description\n   *\n   * @param {string} name Description\n   *\n   * @return {void} Description\n   */\n  play(name) {\n    Debug.assert(this.mAnimations.hasOwnProperty(name), 'Animation must be set first.');\n\n    this.mCurrentAnim = this.mAnimations[name];\n\n    let texture = this.mCurrentAnim.play();\n\n    let sprite = /** @type {Sprite} */ (this.gameObject);\n    if (sprite === null)\n      return;\n\n    if (texture !== null)\n      sprite.texture = texture;\n  }\n\n\n  /**\n   * stop - Description\n   *\n   * @return {void} Description\n   */\n  stop() {\n    if (this.mCurrentAnim === null)\n      return;\n\n    this.mCurrentAnim.stop();\n  }\n\n\n  /**\n   * pause - Description\n   *\n   * @return {void} Description\n   */\n  pause() {\n    if (this.mCurrentAnim === null)\n      return;\n\n    this.mCurrentAnim.pause();\n  }\n\n\n  /**\n   * onPostUpdate - Description\n   *\n   * @override\n   * @param {number} dt Description\n   *\n   * @return {void} Description\n   */\n  onPostUpdate(dt) {\n    if (this.mCurrentAnim === null)\n      return;\n\n    // TODO: replace with time.time\n    let newTexture = this.mCurrentAnim.__update(dt, Black.instance.uptime);\n    if (newTexture === null)\n      return;\n\n    let sprite = /** @type {Sprite} */ (this.gameObject);\n    sprite.texture = newTexture;\n  }\n\n\n  /**\n   * currentAnimation\n   *\n   * @return {Animation|null}\n   */\n  get currentAnimation() {\n    return this.mCurrentAnim;\n  }\n}\n","//.########::'##::::::::::'###:::::'######::'##:::'##:\n// ##.... ##: ##:::::::::'## ##:::'##... ##: ##::'##::\n// ##:::: ##: ##::::::::'##:. ##:: ##:::..:: ##:'##:::\n// ########:: ##:::::::'##:::. ##: ##::::::: #####::::\n// ##.... ##: ##::::::: #########: ##::::::: ##. ##:::\n// ##:::: ##: ##::::::: ##.... ##: ##::: ##: ##:. ##::\n// ########:: ########: ##:::: ##:. ######:: ##::. ##:\n//........:::........::..:::::..:::......:::..::::..::\n\n\nclass Black extends MessageDispatcher {\n\n  /**\n   * constructor\n   * @param {string}   containerElementId\n   * @param {function(new: GameObject)}   rootClass\n   * @param {function(new: VideoNullDriver)} [videoDriverClass]\n   */\n  constructor(containerElementId, rootClass, videoDriverClass) {\n    super();\n\n    // Dirty GCC workaround\n    window['Black'] = {};\n    window['Black']['instance'] = this;\n\n    var css = \"background: #000; color: #fff;\";\n    console.log('%c ~Black ', css);\n\n    /** @type {string} */\n    this.mContainerElementId = containerElementId;\n\n    /** @type {HTMLElement} */\n    this.mContainerElement = /** @type {!HTMLElement} */ (document.getElementById(this.mContainerElementId));\n\n    if (!this.mContainerElement)\n      throw new Error('Container element was not found');\n\n    /** @type {function(new: VideoNullDriver)} */\n    this.mVideoDriverClass = videoDriverClass;\n\n    /** @type {number} */\n    this.mStageWidth = this.mContainerElement.clientWidth;\n\n    /** @type {number} */\n    this.mStageHeight = this.mContainerElement.clientHeight;\n\n    /** @type {number} */\n    this.mSimulationTimestep = 1000 / 60;\n\n    /** @type {number} */\n    this.mUptime = 0;\n\n    /** @type {number} */\n    this.mFrameAccum = 0;\n\n    /** @type {number} */\n    this.mLastFrameTimeMs = 0;\n\n    /** @type {number} */\n    this.mCurrentTime = 0;\n\n    /** @type {number} */\n    this.mFPS = 60;\n\n    /** @type {number} */\n    this.mLastFpsUpdate = 0;\n\n    /** @type {number} */\n    this.mFramesThisSecond = 0;\n\n    /** @type {number} */\n    this.mNumUpdateSteps = 0;\n\n    /** @type {number} */\n    this.mMinFrameDelay = 0;\n\n    /** @type {Array<System>} */\n    this.mSystems = [];\n\n    /** @type {Rectangle} */\n    this.mBounds = new Rectangle();\n\n    /** @type {boolean} */\n    this.mIsRunning = false;\n\n    /** @type {boolean} */\n    this.mIsStarted = false;\n\n    /** @type {boolean} */\n    this.mIsPanic = false;\n\n    /** @type {number} */\n    this.mLastFrameUpdateTime = 0;\n\n    /** @type {number} */\n    this.mLastFrameRenderTime = 0;\n\n    /** @type {number} */\n    this.mRAFHandle = -1; // not sure\n\n    /** @type {Viewport} */\n    this.mViewport = null;\n\n    /** @type {VideoNullDriver} */\n    this.mVideo = null;\n\n    /** @type {boolean} */\n    this.mPaused = false;\n\n    /** @type {boolean} */\n    this.mUnpausing = false;\n\n    /** @type {boolean} */\n    this.mPauseOnHide = true;\n\n    /** @type {boolean} */\n    this.mPauseOnBlur = true;\n\n    /** @type {Object<string, Array>} */\n    this.mTagCache = {};\n\n    /** @type {function(new: GameObject)|null} */\n    this.mRootClass = rootClass;\n\n    /** @type {GameObject|null} */\n    this.mRoot = null;\n\n    /** @type {boolean} */\n    this.mEnableFixedTimeStep = false;\n  }\n\n  pause() {\n    this.mPaused = true;\n  }\n\n  resume() {\n    this.mUnpausing = true;\n  }\n\n  __bootViewport() {\n    this.mViewport = new Viewport(this.mContainerElement);\n  }\n\n  __bootSystems() {\n    this.addSystem(new Input());\n  }\n\n  __bootStage() {\n    window.onblur = event => this.__onVisbilityChange(event);\n    window.onfocus = event => this.__onVisbilityChange(event);\n    window.onpagehide = event => this.__onVisbilityChange(event);\n    window.onpageshow = event => this.__onVisbilityChange(event);\n\n    if (document.hidden && this.mPauseOnHide === true)\n      this.mPaused = true;\n  }\n\n  __onVisbilityChange(event) {\n    let type = event.type;\n\n    if (type === 'blur' && this.mPauseOnBlur === true)\n      this.mPaused = true;\n    else if (type === 'pagehide' && this.mPauseOnHide === true)\n      this.mPaused = true;\n    else if (type === 'focus' || type === 'pageshow') {\n      if (document.hidden === false)\n        this.mUnpausing = true;\n    }\n  }\n\n  /**\n   * addSystem - Adds a given system to the system list.\n   *\n   * @param  {System} system\n   * @return {System}\n   */\n  addSystem(system) {\n    this.mSystems.push(system);\n    return system;\n  }\n\n  /**\n   * removeSystem - Removes the given system to the system list.\n   *\n   * @param {System} system\n   *\n   * @return {System|null}\n   */\n  removeSystem(system) {\n    // TODO: remove system on next frame\n    var ix = this.mSystems.indexOf(system);\n    if (ix === -1)\n      return null;\n\n    this.mSystems.splice(ix, 1);\n    return system;\n  }\n\n  __bootVideo() {\n    this.mVideo = new this.mVideoDriverClass(this.mContainerElement, this.mStageWidth, this.mStageHeight);\n  }\n\n  start() {\n    this.constructor.instance = this;\n\n    if (this.mIsStarted)\n      return;\n\n    this.__bootViewport();\n    this.__bootSystems();\n    this.__bootVideo();\n    this.__bootStage();\n\n    this.mRoot = new this.mRootClass();\n    this.mRoot.name = 'root';\n    this.mRoot.mAdded = true; // why are not added actually?\n    this.mRoot.onAdded();\n\n    const self = this;\n\n    this.mIsStarted = true;\n    this.mVideo.start();\n\n    this.mRAFHandle = requestAnimationFrame(function(timestamp) {\n      // TODO: do first update here\n      self.mIsRunning = true;\n\n      self.mLastFrameTimeMs = timestamp;\n      self.mLastFpsUpdate = timestamp;\n      self.mFramesThisSecond = 0;\n\n      // Start the main loop.\n      self.mRAFHandle = requestAnimationFrame((x) => {\n        self.__update(x);\n      });\n    });\n\n    // TODO: show only when needed, eg required by any system\n    if (this.mEnableFixedTimeStep === false)\n      Debug.warn('Fixed time-step is disabled, some systems may not work.');\n  }\n\n  stop() {\n    this.mIsStarted = false;\n    this.mIsRunning = false;\n    cancelAnimationFrame(this.mRAFHandle);\n  }\n\n  /**\n   * __update - Description\n   *\n   * @param {number} timestamp Description\n   *\n   * @return {void} Description\n   */\n  __update(timestamp) {\n    // TODO: this method seems to be totaly broken. maxAllowedFPS is not working correctly\n    this.constructor.instance = this;\n\n    const self = this;\n\n    if (this.mPaused === true && this.mUnpausing === true) {\n      this.mUnpausing = this.mPaused = false;\n\n      this.mLastFrameTimeMs = 0;\n      this.mLastFpsUpdate = timestamp;\n      this.mLastFrameTimeMs = timestamp;\n      this.mCurrentTime = 0; // same as first update\n      this.mFrameAccum = 0;\n    }\n\n    if (timestamp < this.mLastFrameTimeMs + this.mMinFrameDelay) {\n      this.mRAFHandle = window.requestAnimationFrame(this.__update.bind(this));\n      return;\n    }\n\n    if (this.mPaused === false) {\n      this.mFrameAccum += (timestamp - this.mLastFrameTimeMs);\n      this.mLastFrameTimeMs = timestamp;\n\n      // BEGIN\n      if (timestamp > this.mLastFpsUpdate + 1000) {\n        this.mFPS = this.mFramesThisSecond;\n\n        this.mLastFpsUpdate = timestamp;\n        this.mFramesThisSecond = 0;\n      }\n      this.mFramesThisSecond++;\n\n      this.mNumUpdateSteps = 0;\n\n      // fix first update\n      if (this.mCurrentTime === 0)\n        this.mCurrentTime = timestamp - this.mMinFrameDelay;\n\n      const dt = Time.scale * ((timestamp - this.mCurrentTime) * 0.001);\n      this.mCurrentTime = timestamp;\n      Time.mDeltaTime = dt;\n\n      if (this.mEnableFixedTimeStep === true) {\n        while (this.mFrameAccum >= this.mSimulationTimestep) {\n          this.__internalFixedUpdate(this.mSimulationTimestep * 0.001);\n\n          this.mFrameAccum -= this.mSimulationTimestep;\n\n          if (++this.mNumUpdateSteps >= (60 * 3)) { // 3 seconds window\n            console.log('[BLACK]: Not enough time to calculate update logic.');\n            this.mIsPanic = true;\n            break;\n          }\n        }\n      }\n\n      this.__internalUpdate(dt);\n      this.__internalPostUpdate(dt);\n\n      this.mVideo.beginFrame();\n      this.mRoot.__render(this.mVideo, this.mUptime, 1, BlendMode.AUTO);\n      this.mVideo.endFrame();\n\n      // TODO: remove uptime\n      this.mUptime += dt;\n      Time.mTime = this.mUptime;\n\n      this.mIsPanic = false;\n    }\n\n    this.mRAFHandle = window.requestAnimationFrame(this.__update.bind(this));\n  }\n\n  /**\n   * __internalFixedUpdate - Description\n   *\n   * @param {number} dt Description\n   *\n   * @return {void} Description\n   */\n  __internalFixedUpdate(dt) {\n    for (let i = 0; i < this.mSystems.length; i++)\n      this.mSystems[i].onFixedUpdate(dt);\n\n    this.mRoot.__fixedUpdate(dt);\n  }\n\n  /**\n   * __internalUpdate - Description\n   *\n   * @param {number} dt Description\n   *\n   * @return {void} Description\n   */\n  __internalUpdate(dt) {\n    for (let i = 0; i < this.mSystems.length; i++)\n      this.mSystems[i].onUpdate(dt, this.mUptime);\n\n    this.mRoot.__update(dt);\n  }\n\n  /**\n   * __internalUpdate - Description\n   *\n   * @param {number} dt Description\n   *\n   * @return {void} Description\n   */\n  __internalPostUpdate(dt) {\n    for (let i = 0; i < this.mSystems.length; i++)\n      this.mSystems[i].onPostUpdate(dt, this.mUptime);\n\n    this.mRoot.__postUpdate(dt);\n  }\n\n  /**\n   * bounds - Description\n   *\n   * @return {Rectangle} Description\n   */\n  get bounds() {\n    return this.mBounds;\n  }\n\n  /**\n   * root - Description\n   *\n   * @return {GameObject} Description\n   */\n  get root() {\n    return this.mRoot;\n  }\n\n  /**\n   * video - Description\n   *\n   * @return {VideoNullDriver} Description\n   */\n  get video() {\n    return this.mVideo;\n  }\n\n  /**\n   * simulationTimestep - Description\n   *\n   * @return {number} Description\n   */\n  get simulationTimestep() {\n    return this.mSimulationTimestep;\n  }\n\n  /**\n   * simulationTimestep - Description\n   *\n   * @param {number} timestep Description\n   *\n   * @return {void} Description\n   */\n  set simulationTimestep(timestep) {\n    this.mSimulationTimestep = timestep;\n  }\n\n  /**\n   * FPS - Description\n   *\n   * @return {number} Description\n   */\n  get FPS() {\n    return this.mFPS;\n  }\n\n  /**\n   * maxFPS - Description\n   *\n   * @return {number} Description\n   */\n  get maxFPS() {\n    return 1000 / this.mMinFrameDelay;\n  }\n\n  /**\n   * maxAllowedFPS - Description\n   *\n   * @param {number} fps Description\n   *\n   * @return {void} Description\n   */\n  set maxAllowedFPS(fps) {\n    if (fps <= 0)\n      this.stop();\n    else\n      this.mMinFrameDelay = 1000 / fps;\n  }\n\n  /**\n   * viewport - Description\n   *\n   * @return {Viewport} Description\n   */\n  get viewport() {\n    return this.mViewport;\n  }\n\n  /**\n   * containerElement - Description\n   *\n   * @return {Element} Description\n   */\n  get containerElement() {\n    return this.mContainerElement;\n  }\n\n  /**\n   * uptime - Description\n   *\n   * @return {number} Description\n   */\n  get uptime() {\n    return this.mUptime;\n  }\n\n  /**\n   * onTagUpdated - Description\n   *\n   * @param {GameObject} child Description\n   * @param {string|null} oldTag   Description\n   * @param {string|null} newTag   Description\n   *\n   * @return {void} Description\n   */\n  onTagUpdated(child, oldTag, newTag) {\n    if (oldTag !== null) {\n      let arr = this.mTagCache[oldTag];\n      arr.splice(arr.indexOf(child), 1);\n\n      if (arr.length === 0)\n        delete this.mTagCache[oldTag];\n    }\n\n    if (newTag !== null) {\n      if (this.mTagCache.hasOwnProperty(newTag) === false)\n        this.mTagCache[newTag] = [];\n\n      this.mTagCache[newTag].push(child);\n    }\n  }\n\n  /**\n   * @param  {GameObject} child     description\n   * @return {void}           description\n   */\n  onChildrenAdded(child) {\n    for (let i = 0; i < this.mSystems.length; i++)\n      this.mSystems[i].onChildrenAdded(child);\n\n    GameObject.forEach(child, (x) => {\n      if (x.mAdded === true)\n        return;\n\n      this.onTagUpdated(x, null, x.mTag);\n\n      x.mAdded = true;\n      x.onAdded();\n\n      for (let i = 0; i < x.mComponents.length; i++) {\n        let c = x.mComponents[i];\n\n        if (c.mAdded === true)\n          continue;\n\n        c.mAdded = true;\n        c.onAdded(x);\n      }\n    });\n  }\n\n  /**\n   * @param  {GameObject} child     description\n   * @return {void}           description\n   */\n  onChildrenRemoved(child) {\n    for (let i = 0; i < this.mSystems.length; i++)\n      this.mSystems[i].onChildrenRemoved(child);\n\n    GameObject.forEach(child, (x) => {\n      if (x.mAdded === true) {\n        this.onTagUpdated(x, x.mTag, null);\n\n        x.mAdded = false;\n        x.onRemoved();\n\n        for (let i = 0; i < x.mComponents.length; i++) {\n          let c = x.mComponents[i];\n\n          if (c.mAdded === false)\n            continue;\n\n          c.mAdded = false;\n          c.onRemoved(x);\n        }\n      }\n    });\n  }\n\n  /**\n   * @param  {GameObject} child     description\n   * @param  {Component} component description\n   * @return {void}           description\n   */\n  onComponentAdded(child, component) {\n    for (let i = 0; i < this.mSystems.length; i++)\n      this.mSystems[i].onComponentAdded(child, component);\n\n    if (component.mAdded === true)\n      return;\n\n    component.mAdded = true;\n    component.onAdded(child);\n  }\n\n  /**\n   * @param  {GameObject} child     description\n   * @param  {Component} component description\n   * @return {void}           description\n   */\n  onComponentRemoved(child, component) {\n    //child.mBlack = null;\n    //console.log('onComponentRemoved', child, component);\n\n    for (let i = 0; i < this.mSystems.length; i++)\n      this.mSystems[i].onComponentRemoved(child, component);\n\n    if (component.mAdded === false)\n      return;\n\n    component.mAdded = false;\n    component.onRemoved(child);\n  }\n\n  /**\n   * pauseOnHide\n   *\n   * @return {boolean}\n   */\n  get pauseOnHide() {\n    return this.mPauseOnHide;\n  }\n\n  /**\n   * pauseOnHide\n   *\n   * @param {boolean} value\n   *\n   * @return {void}\n   */\n  set pauseOnHide(value) {\n    this.mPauseOnHide = value;\n  }\n\n  /**\n   * pauseOnBlur\n   *\n   * @return {boolean}\n   */\n  get pauseOnBlur() {\n    return this.mPauseOnBlur;\n  }\n\n  /**\n   * pauseOnBlur\n   *\n   * @param {boolean} value\n   *\n   * @return {void}\n   */\n  set pauseOnBlur(value) {\n    this.mPauseOnBlur = value;\n  }\n\n\n  /**\n   * When disabled the physics system and other systems may not work.\n   *\n   * @return {boolean}\n   */\n  get enableFixedTimeStep() {\n    return this.mEnableFixedTimeStep;\n  }\n\n  /**\n   * enableFixedTimeStep\n   *\n   * @param {boolean} value\n   *\n   * @return {void}\n   */\n  set enableFixedTimeStep(value) {\n    this.mEnableFixedTimeStep = value;\n  }\n}\n"]}