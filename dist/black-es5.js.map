{"version":3,"sources":["MathEx.js","Helpers.js","Vector.js","Matrix.js","Rectangle.js","Circle.js","Line.js","Polygon.js","Curve.js","Debug.js","MessageDispatcher.js","Time.js","System.js","Viewport.js","Component.js","GameObject.js","Texture.js","AtlasTexture.js","Asset.js","TextureAsset.js","JSONAsset.js","FontAsset.js","AtlasTextureAsset.js","SoundAsset.js","AssetManager.js","BlendMode.js","VideoNullDriver.js","CanvasDriver.js","DOMDriver.js","WebGLDriver.js","WebGLBuffer.js","WebGLElementBuffer.js","WebGLProgram.js","WebGLState.js","WebGLTextures.js","WebGLBlendMode.js","DisplayObject.js","TextInfo.js","Sprite.js","TextField.js","Device.js","Scatter.js","FloatScatter.js","VectorScatter.js","CurveScatter.js","Action.js","Acceleration.js","AlphaOverLife.js","ScaleOverLife.js","RotationOverLife.js","TextureOverLife.js","Initializer.js","Life.js","Mass.js","Scale.js","Velocity.js","Position.js","Rotation.js","RandomTexture.js","EmitterState.js","Particle.js","Emitter.js","Key.js","KeyInfo.js","Input.js","InputComponent.js","FPSComponent.js","MRComponent.js","Ease.js","Interpolation.js","Tween.js","AnimationInfo.js","AnimationController.js","Black.js"],"names":["Math","randomBetween","a","b","floor","random","clamp","value","min","max","lerp","t","lerpp","PI_Q","PI","PI2","DEG2RAD","RAD2DEG","Vector","x","y","vector","sqrt","scalar","sum","lengthSqr","epsilon","Number","EPSILON","abs","rotation","subtract","setRotation","add","cos","toFixed","sin","set","acos","dot","length","angle","vectorMin","vectorMax","outVector","undefined","__cache","Matrix","c","d","tx","ty","_matrix","Float32Array","m","dx","dy","a0","a1","a2","a3","a4","a5","theta","scale","sx","sy","bv","b0","b1","b2","b3","b4","b5","a11","c11","tx11","rect","outRect","Rectangle","minX","MAX_VALUE","maxX","minY","maxY","xx","yy","tmpVector","points","width","height","i","transformXY","aa","ab","ac","ad","atx","aty","det","skewX","atan2","skewY","delta","r_rotation","r_skewX","r_skewY","r_scaleX","r_scaleY","r_x","r_y","v","matrix","copyTo","w","h","right","bottom","toUnion","clone","x0","x1","y0","y1","volume","cacheRight","cacheBottom","left","top","Line","topLeft","topRight","bottomRight","bottomLeft","Circle","r","circle","contains","distance","start","end","line","equals","normalize","multyplier","multiplyScalar","start1","end1","start2","end2","denominator","numerator1","numerator2","directionX","directionY","nearest","nearestDistance","dt","pow","x2","y2","__isInBoundsXY","Polygon","vertices","mVertices","mLines","mBounds","mCenter","refresh","polygon","len","push","polygonVertices","thisVertices","center","lines","intersectionLine","intersects","thisLines","thisLen","polygonLines","polygonLen","j","bounds","intersectsCircle","rectangle","rectangleLines","rectangleLen","containsXY","point","perimeter","path","path2","split","Curve","mPoints","mLookup","mBaked","mStep","mEachT","__initPoints","__refreshEachT","__refreshCache","res","concat","slice","lookup","getFullLength","pointsLen","getLength","step","eachT","eachLength","s","ceil","p","copyFrom","minT","maxT","bezier","mPointsLen","label","startX","startY","cpStartX","cpStartY","cpEndX","cpEndY","endX","endY","u","tt","uu","uuu","ttt","p0","p1","p2","p3","Debug","assert","message","logOnFail","console","error","throwOnFail","Error","info","MessageDispatcher","mListeners","name","callback","context","filterIx","indexOf","pureName","substring","pathMask","mGlobalHandlers","hasOwnProperty","dispatchers","splice","__parseMessage","isGameObjectOrComponent","GameObject","Component","mDirection","params","__invoke","__invokeGlobal","mOrigin","root","mSibblings","__sendGlobal","__sendBubbles","sender","toTop","list","current","parent","dispatcher","mSender","origin","numChildren","child","getChildAt","mName","mPathMask","inPath","__checkPath","mTarget","call","RegExp","join","test","result","Message","mComponentMask","charAt","ixAt","ixHash","substr","mCanceled","Time","mTime","mDeltaTime","mScale","System","component","Viewport","containerElement","mContainerElement","style","userSelect","touchAction","overflow","cursor","WebkitTapHighlightColor","size","getBoundingClientRect","mSize","window","addEventListener","__onResize","post","mId","ID","mGameObject","mAdded","gameObject","removeComponent","mComponents","mChildren","mX","mY","mScaleX","mScaleY","mPivotX","mPivotY","mRotation","mLocalTransform","mWorldTransform","mDirty","DirtyFlag","DIRTY","mParent","mTag","mIndex","gameObjectsAndOrComponents","gooc","addChild","addComponent","addChildAt","index","setChildIndex","removeFromParent","__setParent","Black","instance","onChildrenAdded","setTransformDirty","ix","dispose","removeChild","removeChildAt","hadRoot","onChildrenRemoved","onComponentAdded","onAdded","onRemoved","onComponentRemoved","typeName","onFixedUpdate","k","__fixedUpdate","onUpdate","__update","onPostUpdate","__postUpdate","video","time","parentAlpha","parentBlendMode","onRender","__render","space","includeChildren","worldTransformation","prepend","invert","onGetLocalBounds","transformRect","expand","getBounds","scaleX","scaleY","anchorX","anchorY","zero","localPoint","transformVector","globalPoint","worldTransformationInversed","ax","ay","gen","ctx","iter","apply","it","done","next","seconds","setTimeout","cb","bind","on","flag","forEach","setDirty","LOCAL","WORLD","append","localTransformation","depth","flatten","arr","reduce","acc","val","currentWidth","currentHeight","old","onTagUpdated","inv","obj","hits","getComponent","InputComponent","touchable","intersectsWith","inside","tag","mTagCache","type","f","node","action","find","Texture","nativeTexture","region","untrimmedRect","mTexture","mRegion","mIsSubtexture","__ID","naturalWidth","naturalHeight","mTrimmed","mUntrimmedRect","mIsLoaded","mRelativeRegion","string","imgElement","Image","src","canvas","quality","toDataURL","getTextureFromCanvas","MISSING_IMAGE_CACHE","AtlasTexture","texture","jsonObject","native","mMeta","mSubTextures","__parseJson","o","NEGATIVE_HALF_PI","key","frames","data","warn","nameMask","outTextures","out","names","re","naturalSort","dataset","field","sort","__naturalComparer","useAbs","NUMBER_GROUPS","String","bb","parseFloat","toLowerCase","Asset","url","mUrl","mData","mMimeType","mResponseType","mExtension","getExtension","mRequest","XMLHttpRequest","overrideMimeType","responseType","open","onreadystatechange","readyState","status","responseText","onLoaded","send","TextureAsset","mImageElement","onload","JSONAsset","mimeType","JSON","parse","FontAsset","local","mTestingFontName","mLocal","mTestingString","mLoadingTimeout","mCheckDelay","mTestingElement","__getTestingElement","mElementAdded","mLoaderElement","__getLoaderElement","fontFamily","mDefaultFontWidth","offsetWidth","loaderElement","document","createElement","media","rel","getElementsByTagName","appendChild","testingElement","position","visibility","fontSize","innerHTML","href","checkLoadingStatus","body","onLoadingFail","parentNode","AtlasTextureAsset","imageUrl","dataUrl","dataAsset","onJsonLoaded","load","SoundAsset","mAudioElement","Audio","preload","oncanplaythrough","AssetManager","mDefaultPath","mTotalLoaded","mIsAllLoaded","mLoadingProgress","mQueue","mTextures","mAtlases","mJsons","mSounds","item","COMPLETE","onAssetLoaded","msg","constructor","PROGRESS","getTexture","atlas","key2","ao","default","BlendMode","AUTO","NORMAL","ADD","MULTIPLY","SCREEN","OVERLAY","DARKEN","LIGHTEN","COLOR_DODGE","COLOR_BURN","HARD_LIGHT","SOFT_LIGHT","DIFFERENCE","EXCLUSION","HUE","SATURATE","COLOR","LUMINOSITY","VideoNullDriver","mGlobalBlendMode","mClientWidth","mClientHeight","mTransform","mGlobalAlpha","mMeasureElement","viewport","clientWidth","clientHeight","text","textWidth","textHeight","color","parsedColor","toString","el","whiteSpace","fontStyle","fontWeight","weight","strokeThickness","offsetHeight","CanvasDriver","mCtx","mCurrentObject","__createCanvas","cvs","id","getContext","setTransform","uw","uh","drawImage","beginPath","clip","font","fillStyle","hexColorToString","align","textBaseline","fillText","lineWidth","strokeStyle","strokeColor","strokeText","closePath","clearRect","clear","save","restore","globalAlpha","blendMode","globalCompositeOperation","DOMDriver","mCache","mCounter","mPixelated","__initCSS","imgRendering","sSprite","sSpritePixelated","sText","sViewport","className","fromCanvasAsImage","oldTransform","translate","__popElement","__updateElementCommon","__updateImageElement","__updateTextElement","transform","webkitTransform","opacity","backgroundImage","isSubTexture","vBackgroundPosition","backgroundPosition","textAlign","webkitTextStrokeColor","webkitTextStrokeWidth","WebGLDriver","log","MAX_BATCH_SIZE","gl","mObjectsAmount","state","WebGLState","textures","WebGLTextures","program","WebGLProgram","config","antialias","alpha","premultipliedAlpha","drawingBufferWidth","drawingBufferHeight","clearColor","resize","object","coords","relativeRegion","tint","g","texSlot","bindTexture","flush","draw","endBatch","same","checkBlendMode","setBlendMode","WebGLBuffer","renderer","mGlBuffer","createBuffer","mFloatView","mBatchFloatsOffset","ORDER","bindArrayBuffer","objectsAmount","buffer","bufferData","ARRAY_BUFFER","STATIC_DRAW","texCoords","floatView","floatOffset","WebGLElementBuffer","mTemplate","Uint16Array","l","bindElementBuffer","ELEMENT_ARRAY_BUFFER","vertexShaderSource","fragmentShaderSource","vertexShader","createShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","shaderSource","replace","MAX_TEXTURE_IMAGE_UNITS","compileShader","mGlProgram","createProgram","attachShader","linkProgram","deleteShader","mAttributes","aVertexPos","getAttribLocation","aModelMatrix","aModelPos","aAlpha","aTexCoord","aTexSlot","aTint","mUniforms","uProjection","getUniformLocation","uSamplers","useProgram","uniform1iv","Int32Array","map","mBuffer","stride","BYTES_PER_ELEMENT","float","FLOAT","floatSize","enableAttribute","mElementBuffer","offset","vertexAttribPointer","enableVertexAttribArray","uniform2f","prepare","drawElements","TRIANGLE_STRIP","UNSIGNED_SHORT","mBoundArrayBuffer","mBoundElementBuffer","mBoundTexture","mActiveTexture","mProgram","mBlendMode","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","bindBuffer","TEXTURE_2D","slot","activeTexture","blend","blendEquation","WebGLBlendMode","dst","getParameter","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","mBoundTextures","Array","fill","mBatchTextures","mGlTextures","fillRect","glTexture","createTexture","texImage2D","RGBA","UNSIGNED_BYTE","texParameteri","TEXTURE_MAG_FILTER","NEAREST","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","setActiveTexture","ONE","DST_ALPHA","DST_COLOR","ONE_MINUS_SRC_COLOR","DisplayObject","mAlpha","mVisible","TextInfo","FontStyle","FontWeight","FontAlign","LEFT","ITALIC","BOLD","SUPERBOLD","RIGHT","CENTER","Sprite","mTint","tmpBlendMode","globalBlendMode","TextField","mText","mNeedInvalidate","mCacheBounds","mFieldWidth","mFieldHeight","mTextWidth","mTextHeight","mStyle","mAutoSize","__validate","drawText","strokeCorrection","driver","vSize","measureText","Device","mInstance","mPixelRatio","getDevicePixelRatio","screen","systemXDPI","logicalXDPI","devicePixelRatio","userAgent","navigator","vendor","opera","hasEvent","maxTouchPoints","Scatter","FloatScatter","ease","VectorScatter","FloatCurveScatter","mCurve","baked","interpolate","Action","emmiter","particle","Acceleration","vectorScatter","mScatter","getValue","AlphaOverLife","floatScatter","getValueAt","energy","ScaleOverLife","RotationOverLife","TextureOverLife","textureIndex","Initializer","Life","scatter","life","Mass","mass","Scale","Velocity","vx","vy","Position","Rotation","RandomTexture","EmitterState","PENDING","EMITTING","FINISHED","Particle","reset","age","Emitter","mParticles","mRecycled","mInitializers","mActions","mSpace","mIsLocal","mMaxParticles","mEmitCount","mEmitNumRepeats","Infinity","mEmitNumRepeatsLeft","mEmitDuration","mEmitDurationLeft","mEmitInterval","mEmitIntervalLeft","mEmitDelay","mEmitDelayLeft","mNextUpdateAt","mState","__tmpLocal","__tmpWorld","uptime","firstEmit","initializer","localTransform","worldTransform","identity","pbounds","plength","tw","th","updateNextTick","__create","alength","preUpdate","update","postUpdate","amount","minv","pop","initer","initialize","transformDirectionXY","Key","A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","Q","R","S","T","U","V","W","X","Y","Z","DIGIT_0","DIGIT_1","DIGIT_2","DIGIT_3","DIGIT_4","DIGIT_5","DIGIT_6","DIGIT_7","DIGIT_8","DIGIT_9","NUMPAD_0","NUMPAD_1","NUMPAD_2","NUMPAD_3","NUMPAD_4","NUMPAD_5","NUMPAD_6","NUMPAD_7","NUMPAD_8","NUMPAD_9","NUMPAD_MULTIPLY","NUMPAD_ADD","NUMPAD_SUBTRACT","NUMPAD_DECIMAL","NUMPAD_DIVIDE","LEFT_ARROW","UP_ARROW","RIGHT_ARROW","DOWN_ARROW","BACKSPACE","TAB","ENTER","SHIFT","CTRL","ALT","F1","F2","F3","F4","F5","F6","F7","F8","F9","F10","F11","F12","PAUSE_BREAK","CAPS_LOCK","ESCAPE","PAGE_UP","PAGE_DOWN","END","HOME","INSERT","DELETE","LEFT_WINDOW","RIGHT_WINDOW","CONTEXT_MENU","NUM_LOCK","SCROLL_LOCK","SEMI_COLON","EQUAL_SIGN","COMMA","DASH","PERIOD","FORWARD_SLASH","BACKQUOTE","BRAKET_LEFT","BACK_SLASH","BRAKET_RIGHT","SINGLE_QUOTE","KeyInfo","nativeEvent","keyCode","code","char","shiftKey","altKey","ctrlKey","Input","mPointerPosition","mDom","mEventList","mKeyEventList","__initListeners","mPointerQueue","mKeyQueue","mPressedKeys","mIsPointerDown","mNeedUpEvent","mInputListeners","Map","mTargetComponent","mLockedTarget","mLastInTargetComponent","PointerEvent","mPointerEventList","isTouch","isMobile","mTouchEventList","mMouseEventList","__onPointerEvent","e","IX_POINTER_UP","__onPointerEventDoc","__onKeyEvent","isPaused","over","target","parentElement","__pushEvent","preventDefault","__getTouchPos","__getPointerPos","evt","clientX","clientY","touch","changedTouches","__updateKeyboard","__findTarget","pointerPosition","__processInOut","pointerPos","eventType","mInputEventsLookup","__processNativeEvent","pos","POINTER_DOWN","POINTER_UP","PointerInfo","sameTarget","mPointerInDispatched","__postOutMessage","__postInMessage","pIx","fnName","mKeyEventsLookup","POINTER_MOVE","POINTER_IN","POINTER_OUT","IX_POINTER_MOVE","IX_POINTER_DOWN","activeObject","mActiveObject","FPSComponent","txtFPS","FPS","MRComponent","mWidth","mHeight","mInvScale","mAspect","setSize","updateLayout","Ease","bounceOut","bounceIn","Interpolation","fn","n","bn","fc","__factorial","v0","v1","t2","t3","Tween","values","duration","properties","mValues","mDuration","mProperties","mIsPlaying","mIsPaused","mStartTime","mPausedTime","mValuesStart","mElapsed","mInterpolation","linear","mDelay","mRepeatTimes","mInitiated","mStarted","mReverse","mRemoveOnComplete","mPlayOnAdded","mEase","smootherStep","__start","__resume","stop","times","tween","play","isArray","AnimationInfo","controller","fps","loop","mController","mFrames","mCurrentFrame","mNextFrameAt","mFPS","mFrameDuration","mLoop","mPaused","mStopped","mCompleted","diff","AnimationController","mAnimations","mCurrentAnim","anim","sprite","pause","newTexture","containerElementId","rootClass","videoDriverClass","mContainerElementId","getElementById","mVideoDriverClass","mStageWidth","mStageHeight","mSimulationTimestep","mUptime","mFrameAccum","mLastFrameTimeMs","mCurrentTime","mLastFpsUpdate","mFramesThisSecond","mNumUpdateSteps","mMinFrameDelay","mSystems","mIsRunning","mIsStarted","mIsPanic","mLastFrameUpdateTime","mLastFrameRenderTime","mRAFHandle","mViewport","mVideo","mUnpausing","mPauseOnHide","mPauseOnBlur","mRootClass","mRoot","mEnableFixedTimeStep","mWasStopped","addSystem","onblur","__onVisbilityChange","event","onfocus","onpagehide","onpageshow","hidden","system","__bootViewport","__bootSystems","__bootVideo","__bootStage","self","requestAnimationFrame","timestamp","cancelAnimationFrame","__internalFixedUpdate","__internalUpdate","__internalPostUpdate","beginFrame","endFrame","oldTag","newTag","timestep"],"mappings":"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","file":"black-es5.js","sourcesContent":["/**\n * randomBetween\n *\n * @param {number} a\n * @param {number} b\n *\n * @return {number}\n */\nMath.randomBetween = function (a, b) {\n  return Math.floor(Math.random() * (b - a + 1) + a);\n};\n\n\n/**\n * clamp\n *\n * @param {number} value\n * @param {number} min\n * @param {number} max\n *\n * @return {number}\n */\nMath.clamp = function (value, min, max) {\n  return (value < min) ? min : (value > max) ? max : value;\n};\n\n\n/**\n * lerp\n *\n * @param {number} a\n * @param {number} b\n * @param {number} t\n *\n * @return {number}\n */\nMath.lerp = function (a, b, t) {\n  return a + t * (b - a);\n};\n\n\n/**\n * lerpp\n *\n * @param {number} a\n * @param {number} b\n * @param {number} t\n *\n * @return {number}\n */\nMath.lerpp = function (a, b, t) {\n  return (1 - t) * a + t * b;\n};\n\n/** @const\n *  @type {number}\n */\nMath.PI_Q = Math.PI / 4;\n\n/** @const\n *  @type {number}\n */\nMath.PI2 = Math.PI * 2;\n\n/** @const\n *  @type {number}\n */\nMath.DEG2RAD = 0.01745329251994329576923690768489;\n\n/** @const\n *  @type {number}\n */\nMath.RAD2DEG = 57.295779513082320876798154814105;\n// \n//\n//\n// /**\n//  * fsin - Fast sin\n//  *\n//  * @param {number} x\n//  *\n//  * @return {number}\n//  */\n// Math.fsin = function(x) {\n//   if (x === 0)\n//     return 0;\n//\n//   // modulo to range of -PI..PI\n//   const width = 3.14159265 - -3.14159265;\n//   const offsetValue = x - -3.14159265;\n//   x = (offsetValue - (Math.floor(offsetValue / width) * width)) + -3.14159265;\n//\n//   return x < 0 ? 1.27323954 * x + 0.405284735 * x * x : 1.27323954 * x - 0.405284735 * x * x;\n// }\n//\n//\n// /**\n//  * fcos - Fast cos\n//  *\n//  * @param {number} x\n//  *\n//  * @return {number}\n//  */\n// Math.fcos = function(x) {\n//   x += 1.57079632;\n//\n//   // modulo to range of -PI..PI\n//   const width = 3.14159265 - -3.14159265;\n//   const offsetValue = x - -3.14159265;\n//   x = (offsetValue - (Math.floor(offsetValue / width) * width)) + -3.14159265;\n//\n//   return x < 0 ? 1.27323954 * x + 0.405284735 * x * x : 1.27323954 * x - 0.405284735 * x * x;\n// }\n","// function assert(title, condition) {\n//   if (condition)\n//     console.log('%s %c[  OK  ]', title + ' ' + '.'.repeat(88 - title.length), 'color:green;')\n//   else\n//     console.log('%s %c[FAILED]', title + ' ' + '.'.repeat(88 - title.length), 'color:red;')\n// }\n//\n// function perfTest(testName, fn, ctx, count = 1000) {\n//   let startTime = new Date().getTime();\n//\n//   for (var i = 0; i < count; i++)\n//     fn.apply(ctx);\n//     //fn();\n//\n//   return (new Date().getTime() - startTime);\n// }\n//\n// function perfCompare(testsName, fn1, fn2, ctx, count = 1000) {\n//   let t1 = perfTest(testsName, fn1, ctx, count);\n//   let t2 = perfTest(testsName, fn2, ctx, count);\n//\n//   let c1 = 'color:green;'\n//   let c2 = 'color:red;'\n//\n//   if (t1 > t2) {\n//     c1 = c2;\n//     c2 = 'color:green;'\n//   }\n//\n//   console.log('%s:%c %dms %cvs%c %dms', testsName, c1, t1, 'color:black;', c2, t2);\n// }\n//\n// function assertf(title, func) {\n//   const r = func();\n//\n//   const statuses = ['[  OK  ]', '[FAILED]'];\n//   const colors = ['color:green;', 'color:red;'];\n//\n//   console.log('%s %c%s', title + ' ' + '.'.repeat(88 - title.length), r ? colors[0] : colors[1], r ? statuses[0] : statuses[1]);\n// }\n","/**\n * Mathematical representation of a vector.\n *\n * @cat geom\n */\n\nclass Vector {\n  /**\n   * Creates new Vector instance.\n   *\n   * @param  {number=} x = 0 X-component.\n   * @param  {number=} y = 0 y-component.\n   */\n  constructor(x = 0, y = 0) {\n    /**\n     * X coordinate of a point in the space.\n     *\n     * @type {number}\n     */\n    this.x = x;\n\n    /**\n     * Y coordinate of a point in the space.\n     * @type {number}\n     */\n    this.y = y;\n  }\n\n  /**\n   * Updates values of this vector with a given.\n   *\n   * @param {number=} [x=0] X-component.\n   * @param {number=} [y=0] y-component\n   *\n   * @return {Vector} This.\n   */\n  set(x = 0, y = 0) {\n    this.x = x;\n    this.y = y;\n\n    return this;\n  }\n\n  /**\n   * Adds two vectors.\n   *\n   * @param {Vector} vector The vector object to be added to this.\n   *\n   * @return {Vector} This.\n   */\n  add(vector) {\n    this.x += vector.x;\n    this.y += vector.y;\n\n    return this;\n  }\n\n  /**\n   * Subtract two vectors.\n   *\n   * @param {Vector} vector The vector object to be subtracted.\n   *\n   * @return {Vector} This.\n   */\n  subtract(vector) {\n    this.x -= vector.x;\n    this.y -= vector.y;\n\n    return this;\n  }\n\n  /**\n   * Returns distance between two vectors.\n   *\n   * @param {Vector} vector Second vector to check distance with.\n   *\n   * @return {number} The distance between two vectors.\n   */\n  distance(vector) {\n    let x = this.x - vector.x;\n    let y = this.y - vector.y;\n\n    return Math.sqrt((x * x) + (y * y));\n  }\n\n  /**\n   * Multiplies two vectors.\n   *\n   * @param {Vector} vector A second vector to multiply with.\n   *\n   * @return {Vector} This.\n   */\n  multiply(vector) {\n    this.x *= vector.x;\n    this.y *= vector.y;\n\n    return this;\n  }\n\n  /**\n   * Multiplies this vector by scalar value.\n   *\n   * @param {number} scalar The values to mul by.\n   *\n   * @return {Vector} This.\n   */\n  multiplyScalar(scalar) {\n    this.x *= scalar;\n    this.y *= scalar;\n\n    return this;\n  }\n\n  /**\n   * Find dot product between two vectors.\n   *\n   * @param {Vector} vector Second vector to find angle with.\n   *\n   * @return {number} A scalar value representing dot product.\n   */\n  dot(vector) {\n    return this.x * vector.x + this.y * vector.y;\n  }\n\n  /**\n   * Returns the length of this vector.\n   *\n   * @return {number} The length of the vector.\n   */\n  length() {\n    let x = this.x;\n    let y = this.y;\n\n    return Math.sqrt(x * x + y * y);\n  }\n\n  /**\n   * Returns the squared length of this vector.\n   *\n   * @return {number} Squared length.\n   */\n  lengthSqr() {\n    let x = this.x;\n    let y = this.y;\n\n    return x * x + y * y;\n  }\n\n  /**\n   * Creates unit vector out of this one.\n   *\n   * @returns {Vector} This.\n   */\n  normalize() {\n    let sum = this.lengthSqr();\n\n    if (sum > 0) {\n      sum = Math.sqrt(sum);\n      this.x /= sum;\n      this.y /= sum;\n    } else {\n      this.x = 0;\n      this.y = 0;\n    }\n\n    return this;\n  }\n\n  /**\n   * Clamps values of this vector to given range.\n   *\n   * @param {number} min Min value.\n   * @param {number} max Max value.\n   *\n   * @return {Vector} This.\n   */\n  clamp(min, max) {\n    this.x = Math.clamp(this.x, min, max);\n    this.y = Math.clamp(this.y, min, max);\n\n    return this;\n  }\n\n  /**\n   * Linearly interpolates between two vectors.\n   *\n   * @param {Vector} vector The second vector to interpolate values between.\n   * @param {number} t      Interpolant.\n   *\n   * @return {Vector} This.\n   */\n  lerp(vector, t) {\n    this.x = Math.lerp(this.x, vector.x, t);\n    this.y = Math.lerp(this.y, vector.y, t);\n\n    return this;\n  }\n\n  /**\n   * Copies this vector values into given vector.\n   *\n   * @param {Vector} vector The vector to store values in.\n   *\n   * @return {Vector} Given vector.\n   */\n  copyTo(vector) {\n    vector.x = this.x;\n    vector.y = this.y;\n\n    return vector;\n  }\n\n  /**\n   * Copies values from given vector into this.\n   *\n   * @param {Vector} vector The vector to copy values from.\n   *\n   * @return {Vector} This.\n   */\n  copyFrom(vector) {\n    this.x = vector.x;\n    this.y = vector.y;\n\n    return this;\n  }\n\n  /**\n   * Clones this vector object.\n   *\n   * @return {Vector} New Vector instance.\n   */\n  clone() {\n    return new Vector(this.x, this.y);\n  }\n\n  /**\n   * Compares two vectors for equality.\n   *\n   * @param {Vector} vector Second vector to compare with.\n   * @param {number=} epsilon Threshold.\n   *\n   * @return {boolean} True if equal.\n   */\n  equals(vector, epsilon = Number.EPSILON) {\n    return vector !== null && (Math.abs(vector.x - this.x) < epsilon) && (Math.abs(vector.y - this.y) < epsilon);\n  }\n\n  /**\n   * Checks if this vector is empty.\n   *\n   * @return {boolean} True if both components equal to zero,\n   */\n  isEmpty() {\n    return this.x === 0 && this.y === 0;\n  }\n\n  /**\n   * Rotates this vector around specified point.\n   *\n   * @param {Vector} vector Center vector.\n   * @param {number} rotation Angle in radians.\n   *\n   * @return {Vector} This rotated vector.\n   */\n  setRotationFrom(vector, rotation) {\n    return this\n      .subtract(vector)\n      .setRotation(rotation)\n      .add(vector);\n  }\n\n  /**\n   *  Rotates this vector around zero vector.\n   *\n   * @param {number} rotation Angle in radians\n   *\n   * @return {Vector} This rotated vector.\n   */\n  setRotation(rotation) {\n    let cos = Math.cos(rotation).toFixed(15);\n    let sin = Math.sin(rotation).toFixed(15);\n\n    return this.set(this.x * cos - this.y * sin, this.x * sin + this.y * cos);\n  }\n\n  /**\n   * Calculates angle in radians within this and specified vectors.\n   *\n   * @return {number} Angle in radians.\n   */\n  theta(vector) {\n    return Math.acos(this.dot(vector) / this.length() / vector.length());\n  }\n\n  /**\n   * Rotates this vector to normal.\n   *\n   * @return {Vector} This vector.\n   */\n  perp() {\n    return this.set(this.y, -this.x);\n  }\n\n  /**\n   * Creates new Vector from given angle in radians.\n   *\n   * @param {number=} [angle=0] Angle.\n   *\n   * @return {Vector} New Vector object.\n   */\n  static fromAngle(angle = 0) {\n    return new Vector(Math.cos(angle), Math.sin(angle));\n  }\n\n  /**\n   * @ignore\n   *\n   * @param {Vector} vectorMin\n   * @param {Vector} vectorMax\n   * @param {Vector=} outVector\n   *\n   * @return {Vector}\n   */\n  static randomRange(vectorMin, vectorMax, outVector = undefined) {\n    outVector = outVector || new Vector();\n\n    outVector.x = Math.random() * (vectorMax.x - vectorMin.x) + vectorMin.x;\n    outVector.y = Math.random() * (vectorMax.y - vectorMin.y) + vectorMin.y;\n\n    return outVector;\n  }\n\n}\n\n/**\n * @ignore\n * @type {Vector}\n * @nocollapse\n */\nVector.__cache = new Vector();\n","/**\n * A 2x3 matrix allows you to transform objects in space.\n *\n * @cat geom\n */\n\nclass Matrix {\n  /**\n   * Creates new Matrix instance.\n   *\n   * @param  {number} a = 1  A-component.\n   * @param  {number} b = 0  B-component.\n   * @param  {number} c = 0  C-component.\n   * @param  {number} d = 1  D-component.\n   * @param  {number} tx = 0 TX-component.\n   * @param  {number} ty = 0 TY-component.\n   */\n  constructor(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n    /** @type {Float32Array} */\n    this._matrix = new Float32Array(6);\n\n    this.set(a, b, c, d, tx, ty);\n  }\n\n  /**\n   * Sets components of this matrix to the given values.\n   *\n   * @param  {number} a  A-component.\n   * @param  {number} b  B-component.\n   * @param  {number} c  C-component.\n   * @param  {number} d  D-component.\n   * @param  {number} tx TX-component.\n   * @param  {number} ty TY-component.\n   * @return {Matrix} This.\n   */\n  set(a = 1, b = 0, c = 0, d = 1, tx = 0, ty = 0) {\n    let m = this._matrix;\n\n    m[0] = a;\n    m[1] = b;\n    m[2] = c;\n    m[3] = d;\n    m[4] = tx;\n    m[5] = ty;\n\n    return this;\n  }\n\n  /**\n   * Translates the matrix by x and y axes.\n   *\n   * @param {number} dx Amount along x-axis.\n   * @param {number} dy Amount along y-axis.\n   *\n   * @return {Matrix} This.\n   */\n  translate(dx, dy) {\n    let a = this._matrix;\n\n    let /** @type {number} */ a0 = a[0]; // a\n    let /** @type {number} */ a1 = a[1]; // b\n    let /** @type {number} */ a2 = a[2]; // c\n    let /** @type {number} */ a3 = a[3]; // d\n    let /** @type {number} */ a4 = a[4]; // tx\n    let /** @type {number} */ a5 = a[5]; // ty\n\n    this._matrix[4] = a0 * dx + a2 * dy + a4;\n    this._matrix[5] = a1 * dx + a3 * dy + a5;\n\n    return this;\n  }\n\n  /**\n   * Sets tx and ty components to given values.\n   *\n   * @param {number} x The tx component to update.\n   * @param {number} y The ty component to update.\n   *\n   * @return {Matrix} This.\n   */\n  setTranslation(x, y) {\n    this._matrix[4] = x;\n    this._matrix[5] = y;\n\n    return this;\n  }\n\n  /**\n   * Sets absolute rotation of this matrix to specified angle.\n   *\n   * @param  {number} theta     Theta value.\n   * @param  {number} scale = 1 Scale value.\n   */\n  setRotation(theta, scale = 1) {\n    let m = this._matrix;\n    m[0] = Math.cos(theta) * scale;\n    m[2] = Math.sin(theta) * scale;\n    m[1] = -m[2];\n    m[3] = m[0];\n\n    return this;\n  }\n\n  /**\n   * Applies rotation to this matrix.\n   *\n   * @param  {number} angle Angle in radians.\n   * @return {Matrix} This.\n   */\n  rotate(angle) {\n    let a = this._matrix;\n    let cos = Math.cos(angle);\n    let sin = Math.sin(angle);\n    let a0 = a[0];\n    let a2 = a[2];\n    let a4 = a[4];\n\n    a[0] = a0 * cos - a[1] * sin;\n    a[1] = a0 * sin + a[1] * cos;\n    a[2] = a2 * cos - a[3] * sin;\n    a[3] = a2 * sin + a[3] * cos;\n    a[4] = a4 * cos - a[5] * sin;\n    a[5] = a4 * sin + a[5] * cos;\n\n    return this;\n  }\n\n  /**\n   * Scales current matrix.\n   *\n   * @param {number} sx Abscissa of the scaling vector.\n   * @param {number} sy Ordinate of the scaling vector.\n   *\n   * @return {Matrix} This.\n   */\n  scale(sx, sy) {\n    let a = this._matrix;\n    let /** @type {number} */ a0 = a[0]; // a\n    let /** @type {number} */ a1 = a[1]; // b\n    let /** @type {number} */ a2 = a[2]; // c\n    let /** @type {number} */ a3 = a[3]; // d\n    let /** @type {number} */ a4 = a[4]; // tx\n    let /** @type {number} */ a5 = a[5]; // ty\n\n    this._matrix[0] = a0 * sx;\n    this._matrix[1] = a1 * sx;\n    this._matrix[2] = a2 * sy;\n    this._matrix[3] = a3 * sy;\n\n    return this;\n  }\n\n  /**\n   * Resets current matrix to identity state.\n   *\n   * @return {Matrix} This.\n   */\n  identity() {\n    return this.set(1, 0, 0, 1, 0, 0);\n  }\n\n  /**\n   * Concatenates a given matrix with the current one.\n   *\n   * @param  {Matrix} b The matrix to be concatenated.\n   * @return {Matrix}   This.\n   */\n  prepend(b) {\n    let a = this._matrix;\n    let bv = b._matrix;\n\n    let /** @type {number} */ a0 = a[0]; // a\n    let /** @type {number} */ a1 = a[1]; // b\n    let /** @type {number} */ a2 = a[2]; // c\n    let /** @type {number} */ a3 = a[3]; // d\n    let /** @type {number} */ a4 = a[4]; // tx\n    let /** @type {number} */ a5 = a[5]; // ty\n\n    let /** @type {number} */ b0 = bv[0]; // a\n    let /** @type {number} */ b1 = bv[1]; // b\n    let /** @type {number} */ b2 = bv[2]; // c\n    let /** @type {number} */ b3 = bv[3]; // d\n    let /** @type {number} */ b4 = bv[4]; // tx\n    let /** @type {number} */ b5 = bv[5]; // ty\n\n    let a11 = (a0 * b0 + a1 * b2);\n    a[1] = a0 * b1 + a1 * b3;\n    a[0] = a11;\n\n    let c11 = (a2 * b0 + a3 * b2);\n    a[3] = a2 * b1 + a3 * b3;\n    a[2] = c11;\n\n    let tx11 = (a4 * b0 + a5 * b2 + b4);\n    a[5] = a4 * b1 + a5 * b3 + b5;\n    a[4] = tx11;\n    return this;\n  }\n\n  /**\n   * Appends values to this matrix.\n   *\n   * @param  {Matrix} b The matrix to be appended.\n   * @return {Matrix} This.\n   */\n  append(b) {\n    let a = this._matrix;\n    let bv = b._matrix;\n\n    let /** @type {number} */ a0 = a[0];\n    let /** @type {number} */ a1 = a[1];\n    let /** @type {number} */ a2 = a[2];\n    let /** @type {number} */ a3 = a[3];\n    let /** @type {number} */ a4 = a[4];\n    let /** @type {number} */ a5 = a[5];\n    let /** @type {number} */ b0 = bv[0];\n    let /** @type {number} */ b1 = bv[1];\n    let /** @type {number} */ b2 = bv[2];\n    let /** @type {number} */ b3 = bv[3];\n    let /** @type {number} */ b4 = bv[4];\n    let /** @type {number} */ b5 = bv[5];\n\n    a[0] = a0 * b0 + a2 * b1;\n    a[1] = a1 * b0 + a3 * b1;\n    a[2] = a0 * b2 + a2 * b3;\n    a[3] = a1 * b2 + a3 * b3;\n    a[4] = a0 * b4 + a2 * b5 + a4;\n    a[5] = a1 * b4 + a3 * b5 + a5;\n    return this;\n  }\n\n  /**\n   * Transforms given and x- and y- components of a point from a local space to\n   * world space.\n   *\n   * @param  {number} x          The x- component of a point.\n   * @param  {number} y          The y- component of a point.\n   * @param  {Vector=} outVector If given stores resulting values in it.\n   * @return {Vector} Transformed Vector object.\n   */\n  transformXY(x, y, outVector) {\n    outVector = outVector || new Vector();\n    let m = this._matrix;\n\n    outVector.x = m[0] * x + m[2] * y + m[4];\n    outVector.y = m[1] * x + m[3] * y + m[5];\n\n    return outVector;\n  }\n\n  /**\n   * Transforms given point from a local space to world space without applying\n   * scalling.\n   *\n   * @param  {number} x          The x- component.\n   * @param  {number} y          The y- component.\n   * @param  {Vector=} outVector If given stores results in it.\n   * @return {Vector} Just transformed Vector object.\n   */\n  transformDirectionXY(x, y, outVector) {\n    let m = this._matrix;\n    outVector = outVector || new Vector();\n\n    outVector.x = m[0] * x + m[2] * y;\n    outVector.y = m[1] * x + m[3] * y;\n\n    return outVector;\n  }\n\n  /**\n   * Transforms vector by current matrix object.\n   *\n   * @param  {Vector} vector     Vector to apply transformation on.\n   * @param  {Vector=} outVector Out Vector to store results in.\n   * @return {Vector} New transformed vector.\n   */\n  transformVector(vector, outVector) {\n    outVector = outVector || new Vector();\n    let m = this._matrix;\n\n    outVector.x = m[0] * vector.x + m[2] * vector.y + m[4];\n    outVector.y = m[1] * vector.x + m[3] * vector.y + m[5];\n\n    return outVector;\n  }\n\n  /**\n   * Transforms rectangle by current matrix object.\n   *\n   * @param  {Rectangle} rect         Rectangle to apply transformation on.\n   * @param  {Rectangle|null} outRect When given stores results in it.\n   * @return {Rectangle} Tranformed Rectangle object.\n   */\n  transformRect(rect, outRect) {\n    outRect = outRect || new Rectangle();\n\n    let minX = Number.MAX_VALUE;\n    let maxX = -Number.MAX_VALUE;\n    let minY = Number.MAX_VALUE;\n    let maxY = -Number.MAX_VALUE;\n    let xx = 0;\n    let yy = 0;\n    let tmpVector = new Vector();\n\n    // TODO: fix dirty hack. rewrite to use rect\n    //let points = [rect.x, rect.y, rect.x + rect.width, rect.y + rect.height];\n\n    /** @type {Array<number>} */\n    let points = [rect.x, rect.y, rect.x + rect.width, rect.y, rect.x, rect.y + rect.height, rect.x + rect.width, rect.y + rect.height];\n\n    for (var i = 0; i < points.length; i += 2) {\n      xx = points[i];\n      yy = points[i + 1];\n\n      this.transformXY(xx, yy, tmpVector);\n\n      if (minX > tmpVector.x)\n        minX = tmpVector.x;\n      if (maxX < tmpVector.x)\n        maxX = tmpVector.x;\n      if (minY > tmpVector.y)\n        minY = tmpVector.y;\n      if (maxY < tmpVector.y)\n        maxY = tmpVector.y;\n    }\n\n    outRect.set(minX, minY, maxX - minX, maxY - minY);\n    return outRect;\n  }\n\n  /**\n   * Inverts current matrix.\n   *\n   * @return {Matrix} This.\n   */\n  invert() {\n    let a = this._matrix;\n\n    let aa = a[0];\n    let ab = a[1];\n    let ac = a[2];\n    let ad = a[3];\n    let atx = a[4];\n    let aty = a[5];\n\n    let det = aa * ad - ab * ac;\n    if (det === 0) {\n      a[0] = a[1] = a[2] = a[3] = 0;\n      a[4] = -atx;\n      a[5] = -aty;\n      return this;\n    }\n    det = 1.0 / det;\n\n    a[0] = ad * det;\n    a[1] = -ab * det;\n    a[2] = -ac * det;\n    a[3] = aa * det;\n    a[4] = (ac * aty - ad * atx) * det;\n    a[5] = (ab * atx - aa * aty) * det;\n\n    return this;\n  }\n\n  /**\n   * TODO: remove or finish\n   * @ignore\n   *\n   * @returns {Array<number>} Description\n   */\n  __decompose() {\n    let m = this._matrix;\n    let a = m[0];\n    let b = m[1];\n    let c = m[2];\n    let d = m[3];\n    let tx = m[4];\n    let ty = m[5];\n\n    let skewX = -Math.atan2(-c, d);\n    let skewY = Math.atan2(b, a);\n\n    let delta = Math.abs(skewX + skewY);\n\n    let r_rotation = 0\n    let r_skewX = 0;\n    let r_skewY = 0;\n    let r_scaleX = 0;\n    let r_scaleY = 0;\n    let r_x = 0;\n    let r_y = 0;\n\n    if (delta < 0.00001) {\n      r_rotation = skewY;\n\n      if (a < 0 && d >= 0)\n        r_rotation += (r_rotation <= 0) ? Math.PI : -Math.PI;\n    } else {\n      r_skewX = skewX;\n      r_skewY = skewY;\n    }\n\n    r_scaleX = Math.sqrt((a * a) + (b * b));\n    r_scaleY = Math.sqrt((c * c) + (d * d));\n\n    r_x = tx;\n    r_y = ty;\n\n    return [r_x, r_y, r_rotation, r_scaleX, r_scaleY, r_skewX, r_skewY];\n  }\n\n  /**\n   * Clones the current matrix and returns new cloned object.\n   *\n   * @return {Matrix} New cloned object.\n   */\n  clone() {\n    let m = new Matrix();\n    let v = this._matrix;\n    m.set(v[0], v[1], v[2], v[3], v[4], v[5]);\n    return m;\n  }\n\n  /**\n   * Copies values to given matrix.\n   *\n   * @param  {Matrix} matrix The destination matrix.\n   * @return {Matrix} This.\n   */\n  copyTo(matrix) {\n    let a = this._matrix;\n    let b = matrix._matrix;\n\n    b[0] = a[0];\n    b[1] = a[1];\n    b[2] = a[2];\n    b[3] = a[3];\n    b[4] = a[4];\n    b[5] = a[5];\n\n    return matrix;\n  }\n\n  /**\n   * Copies values from given matrix into this.\n   *\n   * @param  {Matrix} matrix The matrix to copy values from.\n   * @return {Matrix} This.\n   */\n  copyFrom(matrix) {\n    return matrix.copyTo(this);\n  }\n\n  /**\n   * Compares this matrix values with given matrix and checks if they are the same.\n   *\n   * @param  {Matrix} matrix                   Matrix object to compare with.\n   * @param  {number} epsilon = Number.EPSILON Comparision threshold.\n   * @return {boolean} True if equal.\n   */\n  equals(matrix, epsilon = Number.EPSILON) {\n    let a = this._matrix;\n    let b = matrix._matrix;\n    if (!matrix)\n      return false;\n\n    return (Math.abs(a[0] - b[0]) < epsilon) && (Math.abs(a[1] - b[1]) < epsilon) && (Math.abs(a[2] - b[2]) < epsilon) &&\n      (Math.abs(a[3] - b[3]) < epsilon) && (Math.abs(a[4] - b[4]) < epsilon) && (Math.abs(a[5] - b[5]) < epsilon);\n  }\n\n  /**\n   * Returns array of values representing this matrix object.\n   *\n   * @return {Float32Array}\n   */\n  get value() {\n    return this._matrix;\n  }\n\n}\n\n/**\n * @type {Matrix}\n * @nocollapse\n */\nMatrix.__cache = new Matrix();\n","/**\n * Mathematical representation of a rectangle.\n *\n * @cat geom\n */\n\nclass Rectangle {\n  /**\n   * Creates new instance of Rectangle.\n   *\n   * @param  {number=} y = 0 X-component.\n   * @param  {number=} x = 0 Y-component.\n   * @param  {number=} w = 0 The width.\n   * @param  {number=} h = 0 The height.\n   */\n  constructor(x = 0, y = 0, w = 0, h = 0) {\n    /**\n     * The x coordinate of the rectangle.\n     * @type {number}\n     */\n    this.x = x;\n\n    /**\n     * The y coordinate of the rectangle.\n     * @type {number}\n     */\n    this.y = y;\n\n    /**\n     * The width of the rectangle.\n     * @type {number}\n     */\n    this.width = w;\n\n    /**\n     * The height of the rectangle.\n     * @type {number}\n     */\n    this.height = h;\n  }\n\n  /**\n   * Update rectangle values with a given.\n   *\n   * @param {number} x X-component.\n   * @param {number} y Y-component.\n   * @param {number} w The width.\n   * @param {number} h The height.\n   *\n   * @return {Rectangle} This.\n   */\n  set(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n\n    return this;\n  }\n\n  /**\n   * Copies values from given rectangle into this one.\n   *\n   * @param {Rectangle} rect The Rectangle to copy values from.\n   *\n   * @return {Rectangle} This.\n   */\n  copyFrom(rect) {\n    this.x = rect.x;\n    this.y = rect.y;\n    this.width = rect.width;\n    this.height = rect.height;\n\n    return this;\n  }\n\n  /**\n   * Copies values from this rectangle into given rectangle.\n   *\n   * @param {Rectangle} rect The destination rect.\n   *\n   * @return {Rectangle} Given rect object.\n   */\n  copyTo(rect) {\n    rect.x = this.x;\n    rect.y = this.y;\n    rect.width = this.width;\n    rect.height = this.height;\n\n    return rect;\n  }\n\n  /**\n   * Get/Sets the leftmost point of this rectangle.\n   *\n   * @return {number}\n   */\n  get left() {\n    return this.x;\n  }\n\n  /**\n   * @ignore\n   *\n   * @param {number} left\n   */\n  set left(left) {\n    this.x = left;\n  }\n\n  /**\n   * Get/Sets the rightmost point of this rectangle.\n   *\n   * @return {number}\n   */\n  get right() {\n    return this.x + this.width;\n  }\n\n  /**\n   * @ignore\n   *\n   * @param {number} right\n   */\n  set right(right) {\n    this.x = right - this.width;\n  }\n\n  /**\n   * Get/Sets the topmost point of this rectangle.\n   *\n   * @return {number}\n   */\n  get top() {\n    return this.y;\n  }\n\n  /**\n   * @ignore\n   *\n   * @param {number} top\n   */\n  set top(top) {\n    this.y = top;\n  }\n\n  /**\n   * Get/Sets the bottommost point of this rectangle.\n   *\n   * @return {number} Description\n   */\n  get bottom() {\n    return this.y + this.height;\n  }\n\n  /**\n   * @ignore\n   *\n   * @param {number} bottom\n   */\n  set bottom(bottom) {\n    this.y = bottom - this.height;\n  }\n\n  /**\n   * Get/Sets the top left point for this rectangle.\n   *\n   * @return {Vector}\n   */\n  get topLeft() {\n    return new Vector(this.x, this.y);\n  }\n\n  /**\n   * @ignore\n   *\n   * @param {Vector} vector\n   */\n  set topLeft(vector) {\n    this.left = vector.x;\n    this.top = vector.y;\n  }\n\n  /**\n   * Get/Sets the top right point for this rectangle.\n   *\n   * @return {Vector} Description\n   */\n  get topRight() {\n    return new Vector(this.right, this.y);\n  }\n\n  /**\n   * @ignore\n   *\n   * @param {Vector} vector\n   */\n  set topRight(vector) {\n    this.right = vector.x;\n    this.top = vector.y;\n  }\n\n  /**\n   * Get/Sets the top left point for this rectangle.\n   *\n   * @return {Vector} Description\n   */\n  get bottomRight() {\n    return new Vector(this.right, this.bottom);\n  }\n\n  /**\n   * @ignore\n   *\n   * @param {Vector} vector\n   */\n  set bottomRight(vector) {\n    this.right = vector.x;\n    this.bottom = vector.y;\n  }\n\n  /**\n   * Get/Sets the top left point for this rectangle.\n   *\n   * @return {Vector} Description\n   */\n  get bottomLeft() {\n    return new Vector(this.x, this.bottom);\n  }\n\n  /**\n   * @ignore\n   *\n   * @param {Vector} vector\n   */\n  set bottomLeft(vector) {\n    this.x = vector.x;\n    this.bottom = vector.y;\n  }\n\n  /**\n   * Creates a new Rectangle instance with width and height equal to current\n   * instance.\n   *\n   * @param {Vector=} outVector Resulting rect to save values in.\n   *\n   * @return {Vector} New Rectangle instance or `outVector` if passed.\n   */\n  size(outVector = undefined) {\n    outVector = outVector || new Vector();\n    return outVector.set(this.width, this.height);\n  }\n\n  /**\n   * Sets all components of this Rectangle to zero.\n   *\n   * @return {Rectangle} This.\n   */\n  zero() {\n    return this.set(0, 0, 0, 0);\n  }\n\n\n  /**\n   * Compares this Rectangle with a given one.\n   *\n   * @param {Rectangle} rect                  Rect to compare values with.\n   * @param {number} epsilon = Number.EPSILON\n   *\n   * @return {boolean} True if rects are equal.\n   */\n  equals(rect, epsilon = Number.EPSILON) {\n    return rect !== null && (Math.abs(this.x - rect.x) < epsilon) && (Math.abs(this.y - rect.y) < epsilon) &&\n           (Math.abs(this.width - rect.width) < epsilon) && (Math.abs(this.height - rect.height) < epsilon);\n  }\n\n\n  /**\n   * Checks if a given point is inside this rectangle.\n   *\n   * @param {number} x The x-component of a point.\n   * @param {number} y The y-component of a point.\n   *\n   * @return {boolean} True if point is inside.\n   */\n  containsXY(x, y) {\n    return x >= this.x && x <= this.right && y >= this.y && y <= this.bottom;\n  }\n\n\n  /**\n   * Checks if a given rectangle is inside this rect.\n   *\n   * @param {Rectangle} rect Rectangle to check with.\n   *\n   * @return {boolean} True if given rectangle is inside this one.\n   */\n  contains(rect) {\n    return rect.x >= this.x && rect.y >= this.y && rect.right <= this.right && rect.bottom <= this.bottom;\n  }\n\n  /**\n   * Checks if this rect intersects with a given rectangle.\n   *\n   * @param {Rectangle} rect The rect to check intersection with.\n   *\n   * @return {boolean} True if intersects.\n   */\n  intersects(rect) {\n    return rect.right > this.x && rect.bottom > this.y &&\n           rect.x < this.right && rect.y < this.bottom;\n  }\n\n\n  /**\n   * Adds given rectangle into this.\n   *\n   * @param {Rectangle} toUnion A rectangle object to add to this rect.\n   *\n   * @return {Rectangle} New rectangle object that is the union.\n   */\n  union(toUnion) {\n    if (this.width === 0 || this.height === 0)\n      return toUnion.clone();\n    else if (toUnion.width === 0 || toUnion.height === 0)\n      return this.clone();\n\n    let x0 = this.x > toUnion.x ? toUnion.x : this.x;\n    let x1 = this.right < toUnion.right ? toUnion.right : this.right;\n    let y0 = this.y > toUnion.y ? toUnion.y : this.y;\n    let y1 = this.bottom < toUnion.bottom ? toUnion.bottom : this.bottom;\n\n    return new Rectangle(x0, y0, x1 - x0, y1 - y0);\n  }\n\n\n  /**\n   * Returns volume of this Rectangle.\n   *\n   * @return {number}\n   */\n  get volume() {\n    return this.width * this.height;\n  }\n\n\n  /**\n   * Expands this rectangle object by given values.\n   *\n   * @param {number} x      X-component.\n   * @param {number} y      Y-component\n   * @param {number} width  The width.\n   * @param {number} height The height.\n   *\n   * @return {Rectangle} This.\n   */\n  expand(x, y, width, height) {\n    if (this.volume === 0)\n      return this.set(x, y, width, height);\n\n    let cacheRight = this.right;\n\t\tlet cacheBottom = this.bottom;\n\n    if (this.x > x) {\n      this.x = x;\n      this.width = cacheRight - x;\n    }\n\n    if (this.y > y) {\n      this.y = y;\n      this.height = cacheBottom - y;\n    }\n\n    if (cacheRight < x + width)\n      this.width = x + width - this.x;\n\n\t\tif (cacheBottom < y + height)\n      this.height = y + height - this.y;\n\n    return this;\n  }\n\n  /**\n   * Increases the size of this rectangle by given x- and y- values.\n   *\n   * @param {number=} [x=0] X-component.\n   * @param {number=} [y=0] Y-component.\n   *\n   * @return {Rectangle} This.\n   */\n  inflate(x = 0, y = 0) {\n    this.x -= x;\n    this.y -= y;\n    this.width += 2 * x;\n    this.height += 2 * y;\n\n    return this;\n  }\n\n  /**\n   * Clones this Rectangle object into new one.\n   *\n   * @return {Rectangle} New rectangle object.\n   */\n  clone() {\n    return new Rectangle(this.x, this.y, this.width, this.height);\n  }\n\n  /**\n   * perimeter - Description\n   *\n   * @return {number} Description\n   */\n  get perimeter() {\n    return 2 * (this.width + this.height);\n  }\n\n\n  /**\n   * Returns the center point of this rectangle.\n   *\n   * @param {Vector=} outVector The out-Vector to store values in.\n   *\n   * @return {Vector} New rectangle object.\n   */\n  center(outVector = undefined) {\n    outVector = outVector || new Vector();\n    return outVector.set(this.x + this.width * 0.5, this.y + this.height * 0.5);\n  }\n\n  /**\n   *  Scales this rectangle.\n   *\n   * @param {number} x Width multiplier.\n   * @param {number} y Height multiplier.\n   *\n   * @return {Rectangle} This rectangle.\n   */\n  scale(x, y) {\n    this.width *= x;\n    this.height *= y;\n\n    return this;\n  }\n\n  /**\n   * Checks if rectangle has area.\n   *\n   * @return {boolean} True if has.\n   */\n  isEmpty() {\n    return this.width === 0 && this.height === 0;\n  }\n\n  get lines() { // todo\n    return [\n      new Line(this.topLeft, this.topRight),\n      new Line(this.topRight, this.bottomRight),\n      new Line(this.bottomRight, this.bottomLeft),\n      new Line(this.bottomLeft, this.topLeft)\n    ];\n  }\n\n}\n\n/**\n * @ignore\n * @type {Rectangle}\n * @nocollapse\n */\nRectangle.__cache = new Rectangle();\n","/**\n * Mathematical representation of a circle.\n *\n * @cat geom\n */\n\nclass Circle {\n  /**\n   * Creates new Circle instance.\n   * \n   * @param  {number=} x = 0 Position x.\n   * @param  {number=} y = 0 Position y.\n   * @param  {number=} r = 1 Radius.\n   */\n  constructor(x = 0, y = 0, r = 1) {\n    /**\n     * @private\n     * @type {number}\n     */\n    this.x = x;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.y = y;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.r = r;\n  }\n\n  /**\n   * Sets new circle properties\n   *\n   * @param {number} x Position x.\n   * @param {number} y Position y.\n   * @param {number} r Radius.\n   *\n   * @return {Circle} This circle.\n   */\n  set(x, y, r) {\n    this.x = x;\n    this.y = y;\n    this.r = r;\n\n    return this;\n  }\n\n  /**\n   * Clones this circle.\n   *\n   * @return {Circle} Created circle.\n   */\n  clone() {\n    return new Circle(this.x, this.y, this.r);\n  }\n\n  /**\n   * Copy this properties to another circle.\n   *\n   * @param {Circle} circle Object to copy to.\n   *\n   * @return {Circle} Passed circle.\n   */\n  copyTo(circle) {\n    return circle.set(this.x, this.y, this.r);\n  }\n\n  /**\n   * Copy another circle properties to this.\n   *\n   * @param {Circle} circle Object to copy from.\n   *\n   * @return {Circle} This circle.\n   */\n  copyFrom(circle) {\n    return this.set(circle.x, circle.y, circle.r);\n  }\n\n  /**\n   * Shows whether circles are identical.\n   *\n   * @param {Circle} circle Object to comparison.\n   * @param {number=} epsilon Compare precision.\n   *\n   * @return {boolean} True if circles are identical.\n   */\n  equals(circle, epsilon = Number.EPSILON) {\n    return circle !== null && (Math.abs(this.x - circle.x) < epsilon) && (Math.abs(this.y - circle.y) < epsilon) &&\n      (Math.abs(this.r - circle.r) < epsilon);\n  }\n\n  /**\n   * Shows whether point is in circle.\n   *\n   * @param {number} x Point position x.\n   * @param {number} y Point position y.\n   *\n   * @return {boolean} True if circle contains point.\n   */\n  containsXY(x, y) {\n    return this.contains(new Vector(x, y));\n  }\n\n  /**\n   * Shows whether point is in circle.\n   *\n   * @param {Vector} vector Point to check.\n   *\n   * @return {boolean} True if circle contains point.\n   */\n  contains(vector) {\n    return new Vector(this.x, this.y).subtract(vector).length() <= this.r;\n  }\n\n  /**\n   * Finds left X position.\n   *\n   * @return {number} Left X position.\n   */\n  get left() {\n    return this.x - this.r;\n  }\n\n  /**\n   * Finds right X position.\n   *\n   * @return {number} Right X position.\n   */\n  get right() {\n    return this.x + this.r;\n  }\n\n  /**\n   * Finds top Y position.\n   *\n   * @return {number} Top Y position.\n   */\n  get top() {\n    return this.y - this.r;\n  }\n\n  /**\n   * Finds bottom Y position.\n   *\n   * @return {number} Bottom Y position.\n   */\n  get bottom() {\n    return this.y + this.r;\n  }\n\n  /**\n   * Returns top point of this circle.\n   *\n   * @return {Vector}\n   */\n  get topPoint() {\n    return new Vector(this.x, this.top);\n  }\n\n  /**\n   * Returns bottom point of this circle.\n   *\n   * @return {Vector}\n   */\n  get bottomPoint() {\n    return new Vector(this.x, this.bottom);\n  }\n\n  /**\n   * Resets all values to zero.\n   *\n   * @return {Circle} Returns this.\n   */\n  zero() {\n    return this.set(0, 0, 0);\n  }\n\n  /**\n   * Shows whether this circle intersects another.\n   *\n   * @param {Circle} circle Circle to check.\n   *\n   * @return {boolean} True if intersects.\n   */\n  intersects(circle) {\n    let d = new Vector(this.x, this.y).distance(new Vector(circle.x, circle.y));\n    return d <= this.r + circle.r && d >= this.r - circle.r;\n  }\n\n  /**\n   * Shows whether this circle collide with another.\n   *\n   * @param {Circle} circle Circle to check.\n   *\n   * @return {boolean} True if collide.\n   */\n  collide(circle) {\n    let d = new Vector(this.x, this.y).distance(new Vector(circle.x, circle.y));\n    return d <= this.r + circle.r;\n  }\n\n  /**\n   * overlap - Shows whether this circle overlap another.\n   *\n   * @param {Circle} circle Circle to check.\n   *\n   * @return {boolean} True if overlap.\n   */\n  overlap(circle) {\n    if (this.r < circle.r) {\n      return false;\n    }\n\n    let d = new Vector(this.x, this.y).distance(new Vector(circle.x, circle.y));\n    return d <= this.r - circle.r;\n  }\n\n  /**\n   * Returns area of this circle.\n   *\n   * @return {number} area.\n   */\n  get volume() {\n    return Math.PI * this.r * this.r;\n  }\n\n  /**\n   * Returns perimeter of this circle.\n   *\n   * @return {number} perimeter.\n   */\n  get perimeter() {\n    return 2 * Math.PI * this.r;\n  }\n\n  /**\n   * Represents center as vector.\n   *\n   * @param {Vector=} outVector Object for result.\n   *\n   * @return {Vector} Center point.\n   */\n  center(outVector = undefined) {\n    outVector = outVector || new Vector();\n    return outVector.set(this.x, this.y);\n  }\n\n}\n\n/** @type {Circle}\n * @nocollapse\n */\nCircle.__cache = new Circle();\n","/**\n * Mathematical representation of a bezier curve.\n *\n * @cat geom\n */\n\nclass Line {\n  /**\n   * Creates new Line instance.\n   * @param  {Vector} start Start point.\n   * @param  {Vector} end End point.\n   */\n  constructor(start, end) {\n    /** @type {Vector} */\n    this.start = start;\n\n    /** @type {Vector} */\n    this.end = end;\n  }\n\n  /**\n   * set - Sets new line properties\n   *\n   * @param  {Vector} start Start point.\n   * @param  {Vector} end End point.\n   *\n   * @return {Line} This circle.\n   */\n  set(start, end) {\n    this.start = start;\n    this.end = end;\n\n    return this;\n  }\n\n  /**\n   * clone - Clones this line.\n   *\n   * @return {Line} Created line.\n   */\n  clone() {\n    return new Line(this.start.clone(), this.end.clone());\n  }\n\n  /**\n   * copyTo - Copy this properties to another line.\n   *\n   * @param {Line} line Object to copy to.\n   *\n   * @return {Line} Passed line.\n   */\n  copyTo(line) {\n    return line.set(this.start.clone(), this.end.clone());\n  }\n\n  /**\n   * copyFrom - Copy another line properties to this.\n   *\n   * @param {Line} line Object to copy from.\n   *\n   * @return {Line} This circle.\n   */\n  copyFrom(line) {\n    return this.set(line.start.clone(), line.end.clone());\n  }\n\n  /**\n   * equals - Shows whether lines are identical.\n   *\n   * @param {Line} line Object to comparison.\n   * @param {number=} epsilon Compare precision.\n   *\n   * @return {boolean} True if lines are identical.\n   */\n  equals(line, epsilon = Number.EPSILON) {\n    return (this.start.equals(line.start, epsilon) && this.end.equals(line.end, epsilon)) ||\n      (this.start.equals(line.end, epsilon) && this.end.equals(line.start, epsilon));\n  }\n\n  /**\n   * left - Finds left X position.\n   *\n   * @return {number} Left X position.\n   */\n  get left() {\n    return Math.min(this.start.x, this.end.x);\n  }\n\n\n  /**\n   * right - Finds right X position.\n   *\n   * @return {number} Right X position.\n   */\n  get right() {\n    return Math.max(this.start.x, this.end.x);\n  }\n\n  /**\n   * top - Finds top Y position.\n   *\n   * @return {number} Top Y position.\n   */\n  get top() {\n    return Math.min(this.start.y, this.end.y);\n  }\n\n  /**\n   * bottom - Finds bottom Y position.\n   *\n   * @return {number} Bottom Y position.\n   */\n  get bottom() {\n    return Math.max(this.start.y, this.end.y);\n  }\n\n  /**\n   * reverse - Replace line start and end points.\n   *\n   * @return {Line} This line.\n   */\n  reverse() {\n    let start = this.start;\n    this.start = this.end;\n    this.end = start;\n\n    return this;\n  }\n\n  /**\n   * normalize - Change line's length to one. Moves end point.\n   *\n   * @return {Line} This line.\n   */\n  normalize() {\n    this.end\n      .subtract(this.start)\n      .normalize()\n      .add(this.start);\n\n    return this;\n  }\n\n  /**\n   * scale - Change line's length to scaled. Moves end point.\n   *\n   * @return {Line} This line.\n   */\n  scale(multyplier) {\n    this.end\n      .subtract(this.start)\n      .multiplyScalar(multyplier)\n      .add(this.start);\n\n    return this;\n  }\n\n  /**\n   * zero - Description\n   *\n   * @return {Line} Description\n   */\n  zero() {\n    return this.set(new Vector(), new Vector());\n  }\n\n  /**\n   * length - Length of this line.\n   *\n   * @return {number} length.\n   */\n  length() {\n    return this.start.distance(this.end);\n  }\n\n  /**\n   * center - Represents center as vector.\n   *\n   * @param {Vector=} outVector Object for result.\n   *\n   * @return {Vector} Center point.\n   */\n  center(outVector = undefined) {\n    outVector = outVector || new Vector();\n    return outVector.set((this.start.x + this.end.x) / 2, (this.start.y + this.end.y) / 2);\n  }\n\n\n  /**\n   * type - Description\n   *\n   * @return {string} Description\n   */\n  get type() {\n    return 'Line';\n  }\n\n  /**\n   * containsXY - Shows whether point is on line.\n   *\n   * @param {number} x Point position x.\n   * @param {number} y Point position y.\n   *\n   * @return {boolean} True if line contains point.\n   */\n  containsXY(x, y) {\n    return this.contains(new Vector(x, y));\n  }\n\n  /**\n   * contains - Shows whether point is on line.\n   *\n   * @param {Vector} vector Point to check.\n   *\n   * @return {boolean} True if line contains point.\n   */\n  contains(vector) {\n    return this.start.distance(vector) + this.end.distance(vector) === this.length();\n  }\n\n  /**\n   * intersects - Shows whether this line intersects another.\n   *\n   * @param {Line} line Line to check.\n   *\n   * @return {boolean} True if intersects.\n   */\n  intersects(line) {\n    let start1 = this.start;\n    let end1 = this.end;\n    let start2 = line.start;\n    let end2 = line.end;\n\n    let denominator = ((end2.y - start2.y) * (end1.x - start1.x)) - ((end2.x - start2.x) * (end1.y - start1.y));\n\n    if (denominator === 0) {\n      return false;\n    }\n\n    let a = start1.y - start2.y;\n    let b = start1.x - start2.x;\n    let numerator1 = ((end2.x - start2.x) * a) - ((end2.y - start2.y) * b);\n    let numerator2 = ((end1.x - start1.x) * a) - ((end1.y - start1.y) * b);\n    a = numerator1 / denominator;\n    b = numerator2 / denominator;\n\n    return a >= 0 && a <= 1 && b > 0 && b < 1;\n  }\n\n  /**\n   * intersects - Shows whether this line intersects circle.\n   *\n   * @param {Circle} circle Circle to check.\n   *\n   * @return {boolean} True if intersects.\n   */\n  intersectsCircle(circle) {\n    let start = this.start;\n    let end = this.end;\n\n    if (circle.contains(start) || circle.contains(end)) {\n      return true;\n    }\n\n    let distance = start.distance(end);\n    let directionX = (end.x - start.x) / distance;\n    let directionY = (end.y - start.y) / distance;\n\n    let t = directionX * (circle.x - start.x) + directionY * (circle.y - start.y);\n\n    let nearest = new Vector((t * directionX) + start.x, (t * directionY) + start.y);\n    let nearestDistance = nearest.distance(new Vector(circle.x, circle.y));\n\n    if (nearestDistance < circle.r) {\n      let dt = Math.sqrt(Math.pow(circle.r, 2) - Math.pow(nearestDistance, 2));\n\n      let x1 = ((t - dt) * directionX + start.x).toFixed(15);\n      let y1 = ((t - dt) * directionY + start.y).toFixed(15);\n      let x2 = ((t + dt) * directionX + start.x).toFixed(15);\n      let y2 = ((t + dt) * directionY + start.y).toFixed(15);\n\n      return this.__isInBoundsXY(x1, y1) || this.__isInBoundsXY(x2, y2);\n    }\n\n    return false;\n  }\n\n  __isInBoundsXY(x, y) {\n    let x1 = this.start.x;\n    let y1 = this.start.y;\n    let x2 = this.end.x;\n    let y2 = this.end.y;\n\n    return x > Math.min(x1, x2) && x < Math.max(x1, x2) && y > Math.min(y1, y2) && y < Math.max(y1, y2);\n  }\n\n}\n\n/** @type {Line}\n * @nocollapse\n */\nLine.__cache = new Line(new Vector(), new Vector());\n","/**\n * @cat geom\n */\n\nclass Polygon {\n  /**\n   * Creates new Polygon instance.\n   *\n   * @param  {Array<Vector>} vertices = [] Array of vertex points;\n   */\n  constructor(vertices = []) {\n\n    /**\n     * @private\n     * @type {Array<Vector>}\n     */\n    this.mVertices = vertices;\n\n    /**\n     * @private\n     * @type {Array<Line>}\n     */\n    this.mLines = [];\n\n    /**\n     * @private\n     * @type {Rectangle}\n     */\n    this.mBounds = new Rectangle();\n\n    /**\n     * @private\n     * @type {Vector}\n     */\n    this.mCenter = new Vector();\n\n    this.refresh();\n  }\n\n  /**\n   * set - Sets new vertices.\n   *\n   * @param {Array<Vector>} vertices New points.\n   *\n   * @return {Polygon} This polygon.\n   */\n  set(vertices) {\n    this.mVertices = vertices;\n    this.refresh();\n    return this;\n  }\n\n  /**\n   * copyTo - Copy this properties to another polygon.\n   *\n   * @param {Polygon} polygon Object to copy to.\n   *\n   * @return {Polygon} Passed polygon.\n   */\n  copyTo(polygon) {\n    let len = this.mVertices.length;\n    let vertices = [];\n\n    for (let i = 0; i < len; i++) {\n      vertices.push(this.mVertices[i].clone());\n    }\n\n    return polygon.set(vertices);\n  }\n\n  /**\n   * copyFrom - Copy another polygon properties to this.\n   *\n   * @param {Polygon} polygon Object to copy from.\n   *\n   * @return {Polygon} This polygon.\n   */\n  copyFrom(polygon) {\n    let polygonVertices = polygon.mVertices;\n    let len = polygonVertices.length;\n    let vertices = [];\n\n    for (let i = 0; i < len; i++) {\n      vertices.push(polygonVertices[i].clone());\n    }\n\n    return this.set(vertices);\n  }\n\n  /**\n   * clone - Clones this polygon.\n   *\n   * @return {Polygon} Created polygon.\n   */\n  clone() {\n    let thisVertices = this.mVertices;\n    let len = thisVertices.length;\n    let vertices = [];\n\n    for (let i = 0; i < len; i++) {\n      vertices.push(thisVertices[i].clone());\n    }\n\n    return new Polygon(vertices);\n  }\n\n  get width() {\n    return this.mBounds.width;\n  }\n\n  get height() {\n    return this.mBounds.height;\n  }\n\n  /**\n   * containsXY - Shows whether point is in polygon.\n   *\n   * @param {number} x Point position x.\n   * @param {number} y Point position y.\n   *\n   * @return {boolean} True if polygon contains point.\n   */\n  containsXY(x, y) {\n    return this.contains(new Vector(x, y));\n  }\n\n  /**\n   * contains - Shows whether point is in polygon.\n   *\n   * @param {Vector} vector Point to check.\n   *\n   * @return {boolean} True if polygon contains point.\n   */\n  contains(vector) {\n    let center = this.mCenter;\n    let lines = this.mLines;\n    let len = lines.length;\n\n    if (center.equals(vector)) {\n      return true;\n    }\n\n    let intersectionLine = new Line(vector, center.clone());\n    let intersects = 0;\n    intersectionLine.scale((this.width + this.height) / intersectionLine.length());\n\n    for (let i = 0; i < len; i++) {\n      intersects += lines[i].intersects(intersectionLine) ? 1 : 0;\n    }\n\n    return intersects % 2 !== 0;\n  }\n\n  /**\n   * perimeter - Perimeter of this polygon.\n   *\n   * @return {number} perimeter.\n   */\n  get perimeter() {\n    let thisLines = this.mLines;\n    let len = thisLines.length;\n    let perimeter = 0;\n\n    for (let i = 0; i < len; i++) {\n      perimeter += thisLines[i].length();\n    }\n\n    return perimeter;\n  }\n\n  /**\n   * collide - Checks collides between two polygons.\n   *\n   * @param {Polygon} polygon Object to check.\n   *\n   * @return {boolean} True if polygon collides with another polygon.\n   */\n  collide(polygon) {\n    if (!this.mBounds.intersects(polygon.mBounds)) {\n      return false;\n    }\n\n    let thisLines = this.mLines;\n    let thisLen = thisLines.length;\n    let polygonLines = polygon.mLines;\n    let polygonLen = polygonLines.length;\n\n    for (let i = 0; i < thisLen; i++) {\n      for (let j = 0; j < polygonLen; j++) {\n        if (thisLines[i].intersects(polygonLines[j])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * collideCircle - Checks collides between this polygon and circle.\n   *\n   * @param {Circle} circle Object to check.\n   *\n   * @return {boolean} True if polygon collides with circle.\n   */\n  collideCircle(circle) {\n    let bounds = this.mBounds;\n    let lines = this.mLines;\n\n    if (bounds.left > circle.right || bounds.right < circle.left || bounds.top > circle.bottom || bounds.bottom < circle.top) {\n      return false;\n    }\n\n    let len = lines.length;\n    for (let i = 0; i < len; i++) {\n      if (lines[i].intersectsCircle(circle)) {\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * collideRectangle - Checks collides between this polygon and rectangle.\n   *\n   * @param {Rectangle} rectangle Object to check.\n   *\n   * @return {boolean} True if polygon collides with rectangle.\n   */\n  collideRectangle(rectangle) {\n    if (!this.mBounds.intersects(rectangle)) {\n      return false;\n    }\n\n    let thisLines = this.mLines;\n    let thisLen = thisLines.length;\n    let rectangleLines = rectangle.lines;\n    let rectangleLen = rectangleLines.length;\n\n    for (let i = 0; i < thisLen; i++) {\n      for (let j = 0; j < rectangleLen; j++) {\n        if (thisLines[i].intersects(rectangleLines[j])) {\n          return true;\n        }\n      }\n    }\n\n    return false;\n  }\n\n  /**\n   * overlap - Checks overlaps between this polygon and another.\n   *\n   * @param {Polygon} polygon Object to check.\n   *\n   * @return {boolean} True if polygon overlaps second.\n   */\n  overlap(polygon) {\n    if (this.mBounds.width < polygon.mBounds.width || this.mBounds.height < polygon.mBounds.height) {\n      return false;\n    }\n\n    if (!this.contains(polygon.mCenter)) {\n      return false;\n    }\n\n    let thisLines = this.mLines;\n    let thisLen = thisLines.length;\n    let polygonLines = polygon.mLines;\n    let polygonLen = polygonLines.length;\n\n    for (let i = 0; i < thisLen; i++) {\n      for (let j = 0; j < polygonLen; j++) {\n        if (thisLines[i].intersects(polygonLines[j])) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * overlapCircle - Checks overlaps between this polygon and circle.\n   *\n   * @param {Circle} circle Object to check.\n   *\n   * @return {boolean} True if polygon overlaps circle.\n   */\n  overlapCircle(circle) {\n    if (!this.containsXY(circle.x, circle.y)) {\n      return false;\n    }\n\n    let thisLines = this.mLines;\n    let len = thisLines.length;\n\n    for (let i = 0; i < len; i++) {\n      if (thisLines[i].intersectsCircle(circle)) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * overlapRectangle - Checks overlaps between this polygon and rectangle.\n   *\n   * @param {Rectangle} rectangle Object to check.\n   *\n   * @return {boolean} True if polygon overlaps rectangle.\n   */\n  overlapRectangle(rectangle) {\n    if (!this.contains(rectangle.center())) {\n      return false;\n    }\n\n    let thisLines = this.mLines;\n    let thisLen = thisLines.length;\n    let rectangleLines = rectangle.lines;\n    let rectangleLen = rectangleLines.length;\n\n    for (let i = 0; i < thisLen; i++) {\n      for (let j = 0; j < rectangleLen; j++) {\n        if (thisLines[i].intersects(rectangleLines[j])) {\n          return false;\n        }\n      }\n    }\n\n    return true;\n  }\n\n  /**\n   * refresh - ReCalc center, bounds, and edges of this polygon.\n   *\n   * @return {Polygon} This polygon.\n   */\n  refresh() {\n    let center = this.mCenter;\n    let bounds = this.mBounds;\n    let vertices = this.mVertices;\n    let lines = this.mLines = [];\n    center.set(0, 0);\n\n    // bounds\n    let maxX = -Number.MAX_VALUE;\n    let maxY = -Number.MAX_VALUE;\n    let minX = Number.MAX_VALUE;\n    let minY = Number.MAX_VALUE;\n\n    for (let i = 0; i < vertices.length; i++) {\n      let vector = vertices[i];\n      center.add(vector);\n\n      // bounds\n      let {\n        x,\n        y\n      } = vector;\n      maxX = x > maxX ? x : maxX;\n      maxY = y > maxY ? y : maxY;\n      minX = x < minX ? x : minX;\n      minY = y < minY ? y : minY;\n\n      lines.push(new Line(vector, vertices[i + 1] || vertices[0]));\n    }\n\n    center.multiplyScalar(1 / vertices.length);\n    bounds.set(minX, minY, maxX - minX, maxY - minY);\n\n    return this;\n  }\n\n  /**\n   * refreshCenter - ReCalc center of this polygon.\n   *\n   * @return {Polygon} This polygon.\n   */\n  refreshCenter() {\n    let center = this.mCenter;\n    let vertices = this.mVertices;\n    let len = vertices.length;\n    center.set(0, 0);\n\n    for (let i = 0; i < len; i++) {\n      center.add(vertices[i]);\n    }\n\n    center.multiplyScalar(1 / vertices.length);\n\n    return this;\n  }\n\n  /**\n   * refreshBounds - ReCalc bounds of this polygon.\n   *\n   * @return {Polygon} This polygon.\n   */\n  refreshBounds() {\n    let bounds = this.mBounds;\n    let vertices = this.mVertices;\n    let maxX = -Number.MAX_VALUE;\n    let maxY = -Number.MAX_VALUE;\n    let minX = Number.MAX_VALUE;\n    let minY = Number.MAX_VALUE;\n    let len = vertices.length;\n    let x;\n    let y;\n\n    for (let i = 0; i < len; i++) {\n      x = vertices[i].x;\n      y = vertices[i].y;\n      maxX = x > maxX ? x : maxX;\n      maxY = y > maxY ? y : maxY;\n      minX = x < minX ? x : minX;\n      minY = y < minY ? y : minY;\n    }\n\n    bounds.set(minX, minY, maxX - minX, maxY - minY);\n\n    return this;\n  }\n\n  /**\n   * refreshLines - ReCalc edges of this polygon.\n   *\n   * @return {Polygon} This polygon.\n   */\n  refreshLines() {\n    let vertices = this.mVertices;\n    let lines = this.mLines = [];\n\n    for (let i = 0; i < vertices.length; i += 2) {\n      lines.push(new Line(vertices[i], vertices[i + 1] || vertices[0]));\n    }\n\n    return this;\n  }\n\n  /**\n   * fromPath - Creates instance of Polygon.\n   *\n   * @param {string} path Numbers x y divided with space.\n   *\n   * @return {Polygon} Created polygon.\n   */\n  static fromPath(path) {\n    let vertices = [];\n    let path2 = path.split(' ');\n\n    for (let i = 0; i < path2.length; i += 2) {\n      vertices.push(new Vector(Number(path2[i]), Number(path2[i + 1])));\n    }\n\n    return new Polygon(vertices);\n  }\n\n  /**\n   * setRotation - Sets rotation. Rotate this polygon around it center.\n   *\n   * @param {number} rotation Angle in radians.\n   *\n   * @return {Polygon} This polygon.\n   */\n  setRotation(rotation) {\n    let center = this.mCenter;\n    let vertices = this.mVertices;\n    let cos = Math.cos(rotation).toFixed(15);\n    let sin = Math.sin(rotation).toFixed(15);\n\n    for (let i = 0, len = vertices.length; i < len; i++) {\n      let vector = vertices[i];\n      vector\n        .subtract(center)\n        .set(vector.x * cos - vector.y * sin, vector.x * sin + vector.y * cos)\n        .add(center);\n    }\n\n    return this.refresh();\n  }\n\n  /**\n   * setTranslation - Translates this polygon to specified position.\n   *\n   * @param {Vector} point Translation vector.\n   *\n   * @return {Polygon} This vertices.\n   */\n  setTranslation(point) {\n    let center = this.mCenter;\n    let vertices = this.mVertices;\n    let len = vertices.length;\n    point.subtract(center);\n\n    for (let i = 0; i < len; i++) {\n      vertices[i].add(point);\n    }\n\n    return this.refresh();\n  }\n\n}\n\n/** @type {Polygon}\n * @nocollapse\n */\nPolygon.__cache = new Polygon();\n","/**\n * Mathematical representation of a bezier curve.\n *\n * @cat geom\n */\n\nclass Curve {\n  /**\n   * Creates new Curve instance.\n   */\n  constructor() {\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.mPoints = [];\n\n    /**\n     * @private\n     * @type {Array<Vector>}\n     */\n    this.mLookup = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mBaked = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mStep = 1 / 60;\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.mEachT = [];\n  }\n\n  /**\n   * Sets new points coordinates.\n   *\n   * @param  {...number} points Coordinates: startX, startY, cpStartX, cpStartY, cpEndX, cpEndY, endX/start2X, endY/start2Y, cp2StartX, cp2StartX... 8 or 14 or 20...\n   *\n   * @return {Curve} This curve.\n   */\n  set(...points) {\n    this.mPoints = this.__initPoints(points);\n    this.__refreshEachT();\n\n    if (this.mBaked)\n      this.__refreshCache();\n\n    return this;\n  }\n\n\n  /**\n   * Enables or disables interpolation from cache (lookup).\n   * Returns true or false depending on baked is enabled or not.\n   *\n   * @return {boolean}\n   */\n  get baked() {\n    return this.mBaked;\n  }\n\n  /**\n   * @ignore\n   * @param  {boolean} label\n   */\n  set baked(label) {\n    this.mBaked = label;\n\n    if (!this.mLookup && this.mPoints) {\n      this.__refreshCache();\n    }\n  }\n\n  /**\n   * Wides points array. Sets first point for next bezier same as last of previous.\n   * @private\n   * @param  {Array<number>} points Array of points coordinates.\n   *\n   * @return {Array<number>} Points coordinates array.\n   */\n  __initPoints(points) {\n    let res = [];\n\n    for (let i = 6; i < points.length; i += 6) {\n      res = res.concat(points.slice(i - 6, i + 2));\n    }\n\n    return res;\n  }\n\n  /**\n   * Refresh cache (lookup) for fast interpolations.\n   *\n   * @private\n   *\n   * @return {Curve} This curve.\n   */\n  __refreshCache() {\n    let lookup = this.mLookup = [];\n    let getFullLength = this.getFullLength();\n    let points = this.mPoints;\n    let pointsLen = points.length;\n\n    for (let i = 0; i < pointsLen; i += 8) {\n      let length = Curve.getLength(...points.slice(i, i + 8));\n      let step = this.mStep * getFullLength / length;\n\n      for (let t = step; t < 1; t += step)\n        lookup.push(Curve.lerp(t, ...points.slice(i, i + 8)));\n    }\n\n    return this;\n  }\n\n\n  /**\n   * Refresh local interpolation kof for each bezier in curve.\n   * @private\n   * @return {Curve} This curve.\n   */\n  __refreshEachT() {\n    let points = this.mPoints;\n    let eachT = this.mEachT = [];\n    let pointsLen = points.length;\n    let eachLength = [];\n\n    for (let i = 0; i < pointsLen; i += 8)\n      eachLength.push(Curve.getLength(...points.slice(i, i + 8)));\n\n    let length = this.getFullLength();\n    let s = 0;\n    for (let i = 0; i < pointsLen; i += 8) {\n      s += eachLength[i / 8];\n      eachT.push(s / length);\n    }\n\n    return this;\n  }\n\n  /**\n   * Interpolates single bezier on t position.\n   *\n   * @param  {number} t Interpolation position (0...1).\n   * @param  {number} startX\n   * @param  {number} startY\n   * @param  {number} cpStartX\n   * @param  {number} cpStartY\n   * @param  {number} cpEndX\n   * @param  {number} cpEndY\n   * @param  {number} endX\n   * @param  {number} endY\n   * @param  {Vector=} outVector\n   *\n   * @return {Vector} Position on bezier.\n   */\n  static lerp(t, startX, startY, cpStartX, cpStartY, cpEndX, cpEndY, endX, endY, outVector) {\n    let u = 1 - t;\n    let tt = t * t;\n    let uu = u * u;\n    let uuu = uu * u;\n    let ttt = tt * t;\n\n    let p = outVector || new Vector();\n    p.set(startX, startY);\n    p.x *= uuu;\n    p.y *= uuu;\n\n    // first\n    p.x += 3 * uu * t * cpStartX;\n    p.y += 3 * uu * t * cpStartY;\n\n    // second\n    p.x += 3 * u * tt * cpEndX;\n    p.y += 3 * u * tt * cpEndY;\n\n    // third\n    p.x += ttt * endX;\n    p.y += ttt * endY;\n\n    return p;\n  }\n\n  /**\n   * Interpolates across whole curve.\n   *\n   * @param  {number} t Interpolation position (0...1).\n   * @param  {Vector=} outVector\n   *\n   * @return {Vector} Position on curve.\n   */\n  interpolate(t, outVector) {\n    let res = outVector || new Vector();\n    let lookup = this.mLookup;\n\n    if (this.mBaked) {\n      let i = Math.ceil((lookup.length - 1) * t);\n      let p = lookup[i];\n      res.copyFrom(p);\n\n      return res;\n    }\n\n    // not backed\n    let { mEachT, mPoints } = this;\n    let i = 0;\n\n    while (mEachT[i] < t)\n      i++;\n\n    let minT = mEachT[i - 1] || 0;\n    let maxT = mEachT[i];\n    let bezier = mPoints.slice(i * 8, i * 8 + 8);\n\n    return Curve.lerp((t - minT) / (maxT - minT), ...bezier, res);\n  }\n\n  /**\n   * Returns single bezier length.\n   *\n   * @param  {...number} points Coordinates: startX, startY, cpStartX, cpStartY, cpEndX, cpEndY, endX, endY\n   *\n   * @return {number} Length.\n   */\n  static getLength(...points) {\n    let p0 = new Vector(points[0], points[1]);\n    let p1 = new Vector(points[2], points[3]);\n    let p2 = new Vector(points[4], points[5]);\n    let p3 = new Vector(points[6], points[7]);\n\n    return (p3.distance(p0) + p0.distance(p1) + p1.distance(p2) + p2.distance(p3)) / 2;\n  }\n\n  /**\n   * Returns this curve length.\n   *\n   * @return {number} Length.\n   */\n  getFullLength() {\n    let points = this.mPoints;\n    let mPointsLen = points.length;\n    let res = 0;\n\n    for (let i = 0; i < mPointsLen; i += 8)\n      res += Curve.getLength(...points.slice(i, i + 8));\n\n    return res;\n  }\n}\n\n/**\n * @private\n * @type {Curve}\n * @nocollapse\n */\nCurve.__cache = new Curve();\n","/**\n * Utility class for logging and debugging.\n *\n * @cat core\n */\n\nclass Debug {\n  constructor() {\n    Debug.assert(false, 'Static class.');\n  }\n\n  static assert(value, message) {\n    if (value === true)\n      return;\n\n    message = message == null ? 'Assertation failed.' : message;\n\n    if (Debug.logOnFail)\n      console.error('[ASSERT]', message);\n\n    if (Debug.throwOnFail)\n      throw new Error(message);\n  }\n\n  static log(...message) {\n    console.info('  %c%s', 'color: black;', 'LOG:', ...message);\n  }\n\n  static info(...message) {\n    console.info(' %c%s', 'color: #003bd2;', 'INFO:', ...message);\n  }\n\n  static warn(...message) {\n    console.info(' %c%s', 'color: #f67400;', 'WARN:', ...message);\n  }\n\n  static error(...message) {\n    console.info('%c%s', 'color: #d50000;', 'ERROR:', ...message);\n  }\n}\n\nDebug.throwOnFail = false;\nDebug.logOnFail = true;\n","/**\n * The MessageDispatcher class is the base class for all classes that posts messages.\n *\n * Global messages will not be dispatched on non GameObject objects.\n *\n * @cat core\n * @unrestricted\n */\n\nclass MessageDispatcher {\n  constructor() {\n    // object of arrays\n\n    /**\n     * @private\n     * @type {Object<string, Array>}\n     */\n    this.mListeners = null;\n  }\n\n  /**\n   * Listens to message by given name\n   *\n   * @param {string} name           Name of a message to listen\n   * @param {Function} callback       The callback function\n   * @param {Object=} [context=null] The context for callback function\n   *\n   * @return {void}\n   */\n  on(name, callback, context = null) {\n    Debug.assert(name !== null, 'name cannot be null.');\n    Debug.assert(callback !== null, 'callback cannot be null.');\n\n    // TODO: refactor, expore dispatching provider\n    let filterIx = name.indexOf('@');\n    if (filterIx !== -1) {\n      // global handler\n\n      let pureName = name.substring(0, filterIx);\n      let pathMask = name.substring(filterIx + 1);\n\n      if (MessageDispatcher.mGlobalHandlers.hasOwnProperty(pureName) === false)\n        MessageDispatcher.mGlobalHandlers[pureName] = [];\n\n      let dispatchers = (MessageDispatcher.mGlobalHandlers[pureName]);\n      // for (let i = 0; i < dispatchers.length; i++)\n      //   if (dispatchers[i].callback === callback)\n      //     return;\n\n      dispatchers.push({\n        callback: callback,\n        context: context,\n        pathMask: pathMask\n      });\n\n      return;\n    }\n\n    if (this.mListeners === null)\n      this.mListeners = {};\n\n    if (this.mListeners.hasOwnProperty(name) === false)\n      this.mListeners[name] = [];\n\n    let dispatchers = /** @type {Array<{callback: Function, context}>} */ (this.mListeners[name]);\n\n    // TODO: check for dups somehow\n    // for (let i = 0; i < dispatchers.length; i++)\n    //   if (dispatchers[i].callback === callback)\n    //     return;\n\n    dispatchers.push({\n      callback: callback,\n      context: context\n    });\n  }\n\n  /**\n   * Returns true if this object is subscribed for any messages with a given name.\n   *\n   * @param {string} name Message name to check.\n   *\n   * @returns {boolean} True if found.\n   */\n  hasOn(name) {\n    Debug.assert(name !== null, 'name cannot be null.');\n\n    let filterIx = name.indexOf('@');\n    if (filterIx !== -1) {\n      let pureName = name.substring(0, filterIx);\n      if (MessageDispatcher.mGlobalHandlers.hasOwnProperty(pureName) === false)\n        return false;\n    } else {\n      if (this.mListeners === null)\n        return false;\n      else if (this.mListeners.hasOwnProperty(name) === false)\n        return false;\n    }\n\n    return true;\n  }\n\n  /**\n   * Removes listener.\n   * If callback is null then all callbacks will be removed.\n   *\n   * @param {string} name\n   * @param {Function=} [callback=null]\n   *\n   * @return {void}\n   */\n  removeOn(name, callback = null) {\n    Debug.assert(name !== null, 'name cannot be null.');\n    //Debug.assert(callback !== null, 'callback cannot be null.');\n\n    let filterIx = name.indexOf('@');\n    if (filterIx !== -1) {\n      //we are working with overheared message\n      let pureName = name.substring(0, filterIx);\n      let pathMask = name.substring(filterIx + 1);\n\n      if (MessageDispatcher.mGlobalHandlers.hasOwnProperty(pureName) === false)\n        return;\n\n      let dispatchers = (MessageDispatcher.mGlobalHandlers[pureName]);\n\n      if (callback === null) {\n        dispatchers.splice(0, dispatchers.length);\n        return;\n      } else {\n        for (let i = dispatchers.length; i--;) {\n          if (dispatchers[i].callback === callback) {\n            dispatchers.splice(i, 1);\n            return;\n          }\n        }\n      }\n\n    } else {\n      // regular message\n      if (this.mListeners === null)\n        return;\n\n      let dispatchers = /** @type {Array<{callback: Function, context}>} */ (this.mListeners[name]);\n\n      if (dispatchers === undefined)\n        return;\n\n      if (callback === null) {\n        dispatchers.splice(0, dispatchers.length);\n        return;\n      } else {\n        for (let i = dispatchers.length; i--;) {\n          if (dispatchers[i].callback === callback) {\n            dispatchers.splice(i, 1);\n            return;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Sends message with given pattern and params\n   *\n   * @param {string}  name   The name of a message\n   * @param {...*} params A list of params to send\n   *\n   * @return {void}\n   */\n  post(name, ...params) {\n    // TODO: add wildcard support and name mask annotation support\n    Debug.assert(name !== null, 'name cannot be null.');\n    // if (name === null || name.length === 0)\n    //   throw new Error('Name cannot be null.');\n\n    let message = this.__parseMessage(this, name);\n\n    // TODO: o'really 62?\n    let isGameObjectOrComponent = this instanceof GameObject || this instanceof Component;\n    if (message.mDirection !== 'none' && isGameObjectOrComponent === false)\n      throw new Error('Dispatching not direct messages are not allowed on non Game Objects.');\n\n    if (message.mDirection === 'none') {\n      this.__invoke(this, message, ...params);\n      this.__invokeGlobal(this, message, ...params);\n    } else if (message.mDirection === 'down') {\n      message.mOrigin = ( /** @type {GameObject} */ (this)).root;\n\n      if (message.mSibblings === true) {\n        this.__sendGlobal(this, message, null, ...params);\n        message.mOrigin.__invokeGlobal(this, message, ...params);\n      } else\n        this.__sendBubbles(this, message, false, ...params);\n    } else if (message.mDirection === 'up') {\n      this.__sendBubbles(this, message, true, ...params);\n    } else {\n      throw new Error('Unknown message type.');\n    }\n  }\n\n  /**\n   * @private\n   * @param {*}  sender\n   * @param {Message}  message\n   * @param {boolean}  toTop\n   * @param {...*} params\n   *\n   * @return {void}\n   */\n  __sendBubbles(sender, message, toTop, ...params) {\n    message.mOrigin = toTop === true ? this : ( /** @type {GameObject} */ (this)).root;\n\n    let list = [this];\n\n    let current = /** @type {GameObject} */ (this);\n    while (current.parent !== null) {\n      list.push(current.parent);\n      current = current.parent;\n    }\n\n    if (toTop) {\n      for (let i = 0; i < list.length; i++) {\n        let dispatcher = /** @type {GameObject} */ (list[i]);\n        dispatcher.__invoke(sender, message, ...params);\n      }\n    } else {\n      for (let i = list.length - 1; i >= 0; i--) {\n        let dispatcher = /** @type {GameObject} */ (list[i]);\n        dispatcher.__invoke(sender, message, ...params);\n      }\n    }\n\n    message.mSender.__invokeGlobal(message.sender, message, ...params);\n  }\n\n  /**\n   * @private\n   * @param {*}  sender\n   * @param {Message}  message\n   * @param {GameObject=}  origin\n   * @param {...*} params\n   *\n   * @return {void}\n   */\n  __sendGlobal(sender, message, origin, ...params) {\n    if (origin === null)\n      origin = /** @type {GameObject} */ (message.mOrigin);\n\n    origin.__invoke(sender, message, ...params);\n\n    for (let i = 0; i < origin.numChildren; i++) {\n      let child = origin.getChildAt(i);\n      child.__sendGlobal(sender, message, child, ...params);\n    }\n  }\n\n  /**\n   * @private\n   * @param {*}  sender\n   * @param {Message}  message\n   * @param {...*} params\n   *\n   * @return {void}\n   */\n  __invoke(sender, message, ...params) {\n    if (this.mListeners === null)\n      return;\n\n    let dispatchers = /** @type {Array<{callback: Function, context}>} */ (this.mListeners[message.mName]);\n\n    if (dispatchers === undefined || dispatchers.length === 0)\n      return;\n\n    if (message.mPathMask !== null) {\n      let inPath = this.__checkPath(this.path, message.mPathMask);\n      if (!inPath)\n        return;\n    }\n\n    // no path filter found - just invoke it\n    let clone = dispatchers.slice(0);\n\n    for (let i = 0; i < clone.length; i++) {\n      let dispatcher = /** @type {{callback: Function, context: *}} */ (clone[i]);\n      message.mTarget = this;\n      dispatcher.callback.call(dispatcher.context, message, ...params);\n    }\n  }\n\n  /**\n   * @private\n   * @param {*}  sender\n   * @param {Message}  message\n   * @param {...*} params\n   *\n   * @return {void}\n   */\n  __invokeGlobal(sender, message, ...params) {\n    let dispatchers = MessageDispatcher.mGlobalHandlers[message.mName];\n\n    if (dispatchers === undefined || dispatchers.length === 0)\n      return;\n\n    let clone = dispatchers.slice(0);\n\n    for (let i = 0; i < clone.length; i++) {\n      let dispatcher = /** @type {{callback: Function, context: *}} */ (clone[i]);\n\n      if (!this.__checkPath(sender.path, dispatcher.pathMask))\n        continue;\n\n      message.mTarget = this;\n      dispatcher.callback.call(dispatcher.context, message, ...params);\n    }\n  }\n\n  /**\n   * @private\n   * @param {string} path\n   * @param {string} pathMask\n   *\n   * @return {boolean}\n   */\n  __checkPath(path, pathMask) {\n    if (path == null || pathMask == null)\n      return false;\n\n    if (path === pathMask)\n      return true;\n\n    if (pathMask.indexOf('*') === -1)\n      return path === pathMask;\n    else\n      return new RegExp(\"^\" + pathMask.split(\"*\").join(\".*\") + \"$\").test(path);\n  }\n\n  // TODO: parse exception path'ses like: ~tatata@@@omg####imnotidiout###@@~~\n  /**\n   * @private\n   * @param {*} sender\n   * @param {string} info\n   *\n   * @return {Message}\n   */\n  __parseMessage(sender, info) {\n    // TODO: make message pool... this type of objects shall not be\n    // but dont forget to take care about cancel property\n\n    let result = new Message();\n    result.mSender = sender;\n    result.mDirection = 'none';\n    result.mSibblings = true;\n    result.mPathMask = null;\n    result.mComponentMask = null;\n\n    if (info.charAt(0) === '~') {\n      result.mSibblings = false;\n      result.mDirection = 'up';\n    }\n\n    let ixAt = info.indexOf('@');\n    let ixHash = info.indexOf('#');\n\n    if (ixAt === -1 && ixHash === -1) {\n      result.mSibblings = false;\n      result.mName = info.substr(result.mDirection === 'up' ? 1 : 0);\n      return result;\n    }\n\n    result.mDirection = 'down';\n\n    if (ixHash === -1) { // we got no hash but we have a dog\n      result.mName = info.substring(result.mSibblings ? 0 : 1, ixAt);\n\n      if (info.length === ixAt + 1)\n        result.mPathMask = null;\n      else\n        result.mPathMask = info.substring(ixAt + 1);\n\n      return result;\n    } else {\n      if (ixAt !== -1) {\n        result.mPathMask = info.substring(ixAt + 1, ixHash);\n        result.mName = info.substring(result.mSibblings ? 0 : 1, ixAt);\n      } else {\n        result.mName = info.substring(result.mSibblings ? 0 : 1, ixHash);\n      }\n\n      if (info.length === ixHash + 1)\n        result.mComponentMask = null;\n      else\n        result.mComponentMask = info.substring(ixHash + 1);\n\n      return result;\n    }\n  }\n}\n\n/**\n * @private\n * @dict\n */\nMessageDispatcher.mGlobalHandlers = {};\n\n/**\n * Message holds all information about dispatched event.\n *\n * @cat core\n */\n\nclass Message {\n  constructor() {\n    /**\n     * @private\n     * @type {*}\n     */\n    this.mSender = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.mName;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.mPathMask = null;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.mComponentMask = null;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.mDirection = 'none';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mSibblings = false;\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    this.mOrigin = null;\n\n    /**\n     * @private\n     * @type {Object}\n     */\n    this.mTarget = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mCanceled = false;\n  }\n\n  /**\n   * Who send the message.\n   *\n   * @return {*}\n   */\n  get sender() {\n    return this.mSender;\n  }\n\n  /**\n   * The name of the message.\n   *\n   * @return {string}\n   */\n  get name() {\n    return this.mName;\n  }\n\n  /**\n   * Direction in what message was sent. Can be 'none', 'up' and 'down'.\n   *\n   * @return {string}\n   */\n  get direction() {\n    return this.mDirection;\n  }\n\n  /**\n   * Indicates if sibblings should be included into dispatching process.\n   *\n   * @return {boolean}\n   */\n  get sibblings() {\n    return this.mSibblings;\n  }\n\n  /**\n   * The GameObject.name mask string if was used.\n   *\n   * @return {string|null}\n   */\n  get pathMask() {\n    return this.mPathMask;\n  }\n\n  /**\n   * Component mask string if was used.\n   *\n   * @return {string|null}\n   */\n  get componentMask() {\n    return this.mComponentMask;\n  }\n\n  /**\n   * The original sender of a message.\n   *\n   * @return {*|null}\n   */\n  get origin() {\n    return this.mOrigin;\n  }\n\n  /**\n   * The listener object.\n   *\n   * @return {*|null}\n   */\n  get target() {\n    return this.mTarget;\n  }\n\n  /**\n   * Stops propagation of the message.\n   *\n   * @return {void}\n   */\n  cancel() {\n    this.mCanceled = true;\n  }\n\n  /**\n   * True if message was canceled by the user.\n   *\n   * @return {boolean}\n   */\n  get canceled() {\n    return this.mCanceled;\n  }\n\n  static get PROGRESS() {\n    return 'progress';\n  }\n  static get COMPLETE() {\n    return 'complete';\n  }\n}","/**\n * Provides time related methods.\n *\n * @cat core\n * @static\n */\n\nclass Time {\n  constructor() {\n  }\n\n  static get time(){\n    return Time.mTime;\n  }\n\n  static get dt() {\n    return Time.mDeltaTime;\n  }\n\n  static get scale() {\n    return Time.mScale;\n  }\n\n  static set scale(value) {\n    Debug.assert(value >= 0, 'Time.scale must be >= 0.');\n\n    Time.mScale = value;\n  }\n}\n\n/** @type {number} */\nTime.mTime = 0;\n\n/** @type {number} */\nTime.mDeltaTime = 0;\n\n/** @type {number} */\nTime.mScale = 1;\n","/**\n * Base class for custom systems. System is used to listen scene changes.\n *\n * @cat core\n * @extends MessageDispatcher\n */\n\nclass System extends MessageDispatcher {\n  constructor(){\n    super();\n  }\n\n\n  /**\n   * onFixedUpdate - Description\n   *\n   * @param {number} dt Description\n   *\n   * @return {void} Description\n   */\n  onFixedUpdate(dt){\n  }\n\n\n  /**\n   * onUpdate - Description\n   *\n   * @param {number} dt Description\n   * @param {number} t Description\n   *\n   * @return {void} Description\n   */\n  onUpdate(dt, t){\n  }\n\n  /**\n   * onPostUpdate - Description\n   *\n   * @param {number} dt Description\n   * @param {number} t Description\n   *\n   * @return {void} Description\n   */\n  onPostUpdate(dt, t){\n  }\n\n\n  /**\n   * onChildrenAdded - Description\n   *\n   * @param {GameObject} child Description\n   *\n   * @return {void} Description\n   */\n  onChildrenAdded(child){\n  }\n\n\n  /**\n   * onChildrenRemoved - Description\n   *\n   * @param {GameObject} child Description\n   *\n   * @return {void} Description\n   */\n  onChildrenRemoved(child){\n  }\n\n\n  /**\n   * onComponentAdded - Description\n   *\n   * @param {GameObject} child     Description\n   * @param {Component} component Description\n   *\n   * @return {void} Description\n   */\n  onComponentAdded(child, component)\n  {}\n\n\n  /**\n   * onComponentRemoved - Description\n   *\n   * @param {GameObject} child     Description\n   * @param {Component} component Description\n   *\n   * @return {void} Description\n   */\n  onComponentRemoved(child, component)\n  {}\n}\n","/**\n * Manages viewport, handles DOM container resize events and updates internal data.\n *\n * @cat core\n * @fires resize\n * @extends MessageDispatcher\n */\n\nclass Viewport extends MessageDispatcher {\n  /**\n   * constructor\n   * @param {HTMLElement} containerElement\n   * @return {void}\n   */\n  constructor(containerElement) {\n    super();\n\n    /** @type {HTMLElement} */\n    this.mContainerElement = containerElement;\n\n    this.mContainerElement.style.userSelect = 'none';\n    this.mContainerElement.style.touchAction = 'none';\n    this.mContainerElement.style.overflow = 'hidden';\n    this.mContainerElement.style.cursor = 'auto';\n    this.mContainerElement.style.WebkitTapHighlightColor = 'rgba(0, 0, 0, 0)';\n\n    let size = this.mContainerElement.getBoundingClientRect();\n\n    /** @type {Rectangle} */\n    this.mSize = new Rectangle(size.left, size.top, size.width, size.height);\n\n    window.addEventListener('resize', x=> this.__onResize());\n  }\n\n  __onResize() {\n    let size = this.mContainerElement.getBoundingClientRect();\n    this.mSize = new Rectangle(size.left, size.top, size.width, size.height);\n\n    this.post('resize', this.mSize);\n  }\n\n  /**\n   * size - Returns the size of a viewport.\n   * @return {Rectangle}\n   */\n  get size(){\n    return this.mSize;\n  }\n\n  /**\n   * nativeDOM - Retruns the HTML container element the engine runs in.\n   * @return {Element}\n   */\n  get nativeDOM(){\n    return this.mContainerElement;\n  }\n\n  // TODO: dispose, remove resize event\n}\n","/**\n * A base class for custom components.\n *\n * @cat core\n * @unrestricted\n * @extends MessageDispatcher\n */\n\nclass Component extends MessageDispatcher {\n  /**\n   * Creates new Component instance.\n   */\n  constructor() {\n    super();\n\n    /** @private\n     * @type {number} \n     */\n    this.mId = ++GameObject.ID;\n\n    /** @private\n     * @type {GameObject|null}\n     */\n    this.mGameObject = null;\n\n    /** @private\n     * @type {boolean}\n     */\n    this.mAdded = false;\n  }\n\n  /**\n   * Called when attached to GameObject.\n   *\n   * @public\n   * @param  {GameObject} gameObject The owner of this component.\n   * @return {void}\n   */\n  onAdded(gameObject) {}\n\n  /**\n   * Called when detached from GameObject.\n   *\n   * @public\n   * @param  {GameObject} gameObject The owner of this component.\n   * @return {void}\n   */\n  onRemoved(gameObject) {}\n\n  /**\n   * Called at every fixed frame update.\n   * @public\n   * @param  {number} dt Amount of seconds since the last update.\n   * @return {void}\n   */\n  onFixedUpdate(dt) {}\n\n  /**\n   * Called at every engine update.\n   * @public\n   * @param  {number} dt Amount of seconds since the last update.\n   * @return {void}\n   */\n  onUpdate(dt) {}\n\n  /**\n   * Called after all updates have been executed.\n   * @public\n   * @param  {number} dt Amount of seconds since the last update.\n   * @return {void}\n   */\n  onPostUpdate(dt) {}\n\n  // TODO: finish\n  dispose() {}\n\n  // TODO: finish\n\n  /**\n   * Detaches this Component from its parent GameObject.\n   * @returns {void}\n   */\n  removeFromParent() {\n    if (this.mGameObject === null)\n      return;\n\n    this.mGameObject.removeComponent(this);\n  }\n\n  /**\n   * Returns owner of this component.\n   *\n   * @returns {GameObject}\n   */\n  get gameObject() {\n    return this.mGameObject;\n  }\n}\n\n\n/** @type {number}\n * @nocollapse\n */\nComponent.ID = 0;\n","/**\n * Building block in Black Engine.\n *\n * @cat core\n * @unrestricted\n * @extends MessageDispatcher\n */\n\nclass GameObject extends MessageDispatcher {\n  /**\n   * Creates new instance of GameObject.\n   */\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mId = ++GameObject.ID;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.mName = null;\n\n    /**\n     * @private\n     * @type {Array<Component>}\n     */\n    this.mComponents = [];\n\n    /**\n     * @private\n     * @type {Array<GameObject>}\n     */\n    this.mChildren = [];\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mX = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mY = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mScaleX = 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mScaleY = 1;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mPivotX = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mPivotY = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mRotation = 0;\n\n    /**\n     * @private\n     * @type {Rectangle}\n     */\n    this.mBounds = null;\n\n    /**\n     * @private\n     * @type {Matrix}\n     */\n    this.mLocalTransform = new Matrix();\n\n    /**\n     * @private\n     * @type {Matrix}\n     */\n    this.mWorldTransform = new Matrix();\n\n    /**\n     * @private\n     * @type {DirtyFlag}\n     */\n    this.mDirty = DirtyFlag.DIRTY;\n\n    /**\n     * @private\n     * @type {GameObject}\n     */\n    this.mParent = null;\n\n    /**\n     * @private\n     * @type {string|null}\n     */\n    this.mTag = null;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mIndex = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mAdded = false;\n  }\n\n  /**\n   * Returns unique object id.\n   *\n   * @returns {number}\n   */\n  get id() {\n    return this.mId;\n  }\n\n  /**\n   * This method called each time object added to stage.\n   *\n   * @public\n   * @return {void}\n   */\n  onAdded() {}\n\n  /**\n   * Called when object is removed from stage.\n   *\n   * @public\n   * @return {void}\n   */\n  onRemoved() {}\n\n\n  /**\n   * Sugar method for adding child GameObjects or Components in a simple manner.\n   *\n   * @param {...(GameObject|Component)} gameObjectsAndOrComponents A GameObject or Component to add.\n   * @return {Array<GameObject|Component>} The passed GameObject or Component.\n   */\n  add(...gameObjectsAndOrComponents) {\n    for (let i = 0; i < gameObjectsAndOrComponents.length; i++) {\n      let gooc = gameObjectsAndOrComponents[i];\n\n      if (gooc instanceof GameObject)\n        this.addChild( /** @type {!GameObject} */ (gooc));\n      else\n        this.addComponent( /** @type {!Component} */ (gooc));\n    }\n\n    return gameObjectsAndOrComponents;\n  }\n\n  /**\n   * Adds a child GameObject instance to this GameObject instance. The child is added to the top of all other children in this GameObject instance.\n   *\n   * @param  {GameObject} child The GameObject instance to add as a child of this GameObject instance.\n   * @return {GameObject}\n   */\n  addChild(child) {\n    return this.addChildAt(child, this.mChildren.length);\n  }\n\n  /**\n   * Adds a child GameObject instance to this GameObject instance. The child is added to the top of all other children in this GameObject instance.\n   *\n   * @param  {GameObject} child The GameObject instance to add as a child of this GameObject instance.\n   * @param  {number=} index = 0 The index position to which the child is added.\n   * @return {GameObject} The GameObject instance that you pass in the child parameter.\n   */\n  addChildAt(child, index = 0) {\n    let numChildren = this.mChildren.length;\n\n    if (index < 0 || index > numChildren)\n      throw new Error('Child index is out of bounds.');\n\n    if (child.mParent === this)\n      return this.setChildIndex(child, index);\n\n    // this operation should be atomic. since __setParent can throw exception.\n    this.mChildren.splice(index, 0, child);\n\n    child.removeFromParent();\n    child.__setParent(this);\n\n    if (this.root !== null)\n      Black.instance.onChildrenAdded(child);\n\n    return child;\n  }\n\n  /**\n   * @protected\n   * @ignore\n   * @param {GameObject} value\n   *\n   * @return {boolean}\n   */\n  __setParent(value) {\n    let p = value;\n\n    while (p !== null && p !== this)\n      p = p.mParent;\n\n    if (p === this)\n      throw new Error('Object cannot be a child to itself.');\n\n    this.mParent = value;\n    this.setTransformDirty();\n    return true;\n  }\n\n  /**\n   * Sets the index (layer) of the specified GameObject to the specified index (layer).\n   *\n   * @param {GameObject} child The GameObject instance to change index for.\n   * @param {number} index Desired index.\n   *\n   * @returns {GameObject} The GameObject instance that you pass in the child parameter.\n   */\n  setChildIndex(child, index) {\n    let ix = this.mChildren.indexOf(child);\n\n    if (ix < 0)\n      throw new Error('Given child element was not found in children list.');\n\n    if (ix === index)\n      return child;\n\n    // NOTE: systems needs to know when trees changes\n    child.removeFromParent();\n    this.addChildAt(child, index);\n    this.setTransformDirty();\n\n    return child;\n  }\n\n  /**\n   * Removes this GameObject instance from its parent.\n   *\n   * @param {boolean} [dispose=false]\n   *\n   * @return {void}\n   */\n  removeFromParent(dispose = false) {\n    if (this.mParent)\n      this.mParent.removeChild(this);\n\n    if (dispose)\n      this.dispose();\n\n    this.setTransformDirty();\n  }\n\n  /**\n   * Removes specified child GameObject instance from children.\n   *\n   * @param {GameObject} child GameObject instance to remove.\n   * @param {boolean} [dispose=false]\n   *\n   * @return {GameObject} The GameObject instance that you pass in the child parameter.\n   */\n  removeChild(child, dispose) {\n    let ix = this.mChildren.indexOf(child);\n\n    if (ix < 0)\n      return null;\n\n    return this.removeChildAt(ix);\n  }\n\n\n  /**\n   * Finds children by name.\n   *\n   * @param {string} name Name of the child object to find.\n   *\n   * @return {GameObject|null} GameObject instance of null if not found.\n   */\n  getChildByName(name) {\n    for (var i = 0; i < this.mChildren.length; i++) {\n      if (this.mChildren[i].name === name)\n        return this.mChildren[i];\n    }\n\n    return null;\n  }\n\n  /**\n   * Removes GameObjects instance from specified index.\n   *\n   * @param {number} index Description\n   * @param {boolean} [dispose=false]\n   *\n   * @return {GameObject} The removed GameObject instance.\n   */\n  removeChildAt(index, dispose) {\n    if (index < 0 || index > this.numChildren)\n      throw new Error('Child index is out of bounds.');\n\n    let hadRoot = this.root !== null;\n\n    let child = this.mChildren[index];\n    child.__setParent(null);\n\n    this.mChildren.splice(index, 1);\n\n    if (hadRoot)\n      Black.instance.onChildrenRemoved(child);\n\n    if (dispose)\n      child.dispose();\n\n    this.setTransformDirty();\n\n    return child;\n  }\n\n  /**\n   * Returns GameObject at specified index.\n   *\n   * @param {number} index The index of child GameObject.\n   *\n   * @return {GameObject} The GameObject at specified index.\n   */\n  getChildAt(index) {\n    return this.mChildren[index];\n  }\n\n  /**\n   * Adds Component instance to the end of the list,\n   *\n   * @param  {Component} component Component instance or instances.\n   * @return {Component} The Component instance you pass in the instances parameter.\n   */\n  addComponent(component) {\n    let instance = component;\n\n    if (instance.gameObject)\n      throw new Error('Component cannot be added to two game objects at the same time.');\n\n    this.mComponents.push(instance);\n    instance.mGameObject = this;\n\n    if (this.root !== null)\n      Black.instance.onComponentAdded(this, instance);\n\n    instance.onAdded(this);\n\n    return instance;\n  }\n\n  /**\n   * Remove specified component.\n   *\n   * @param {Component} instance The component instance.\n   *\n   * @return {Component|null}\n   */\n  removeComponent(instance) {\n    if (!instance)\n      return null;\n\n    let index = this.mComponents.indexOf(instance);\n    if (index > -1)\n      this.mComponents.splice(index, 1);\n\n    // detach game object after or before?\n    instance.mGameObject = null;\n    instance.onRemoved(this);\n\n    if (this.root !== null)\n      Black.instance.onComponentRemoved(this, instance);\n\n    return instance;\n  }\n\n  /**\n   * Get component by type.\n   *\n   * @param {Object} typeName The component type.\n   *\n   * @return {Component|null} The Component instance or null if not found.\n   */\n  getComponent(typeName) {\n    for (let i = 0; i < this.mComponents.length; i++) {\n      let c = this.mComponents[i];\n      if (c instanceof typeName)\n        return c;\n    }\n\n    return null;\n  }\n\n  /**\n   * Returns number of component's of this GameObject.\n   *\n   * @return {number}\n   */\n  get numComponenets() {\n    return this.mComponents.length;\n  }\n\n  /**\n   * Retrives Component at given index.\n   *\n   * @param {number} index\n   *\n   * @return {Component|null}\n   */\n  getComponentAt(index) {\n    if (index >= 0 && index < this.mComponents.length)\n      return this.mComponents[index];\n\n    return null;\n  }\n\n  /**\n   * Retun local transformation Matrix\n   *\n   * @return {Matrix}\n   */\n  get localTransformation() {\n    if (this.mDirty & DirtyFlag.LOCAL) {\n      this.mDirty ^= DirtyFlag.LOCAL;\n\n      if (this.mRotation === 0) {\n        return this.mLocalTransform.set(this.mScaleX, 0, 0, this.mScaleY, this.mX, this.mY);\n      } else {\n        let cos = Math.cos(this.mRotation);\n        let sin = Math.sin(this.mRotation);\n        let a = this.mScaleX * cos;\n        let b = this.mScaleX * sin;\n        let c = this.mScaleY * -sin;\n        let d = this.mScaleY * cos;\n        return this.mLocalTransform.set(a, b, c, d, this.mX, this.mY);\n      }\n    }\n\n    return this.mLocalTransform;\n  }\n\n  /**\n   * Returns cloned Matrix object which represents object orientation in world space.\n   *\n   * @return {Matrix}\n   */\n  get worldTransformation() {\n    if (this.mDirty & DirtyFlag.WORLD) {\n      this.mDirty ^= DirtyFlag.WORLD;\n\n      if (this.mParent)\n        this.mParent.worldTransformation.copyTo(this.mWorldTransform).append(this.localTransformation);\n      else\n        this.localTransformation.copyTo(this.mWorldTransform);\n    }\n\n    return this.mWorldTransform.clone();\n  }\n\n  /**\n   * Returns cloned and inversed Matrix object which represents object orientation in world space\n   *\n   * @return {Matrix}\n   */\n  get worldTransformationInversed() {\n    // TODO: optimize, cache\n    return this.worldTransformation.clone().invert();\n  }\n\n  /**\n   * @ignore\n   * @param {number} dt\n   *\n   * @return {void}\n   */\n  __fixedUpdate(dt) {\n    this.onFixedUpdate(dt);\n\n    for (let k = 0; k < this.mComponents.length; k++) {\n      let c = this.mComponents[k];\n      c.mGameObject = this;\n      c.onFixedUpdate(dt);\n    }\n\n    for (let i = 0; i < this.mChildren.length; i++)\n      this.mChildren[i].__fixedUpdate(dt);\n  }\n\n  /**\n   * @ignore\n   * @param {number} dt time since the last frame\n   *\n   * @return {void}\n   */\n  __update(dt) {\n    this.onUpdate(dt);\n\n    for (let k = 0; k < this.mComponents.length; k++) {\n      let c = this.mComponents[k];\n      c.mGameObject = this;\n      c.onUpdate(dt);\n    }\n\n    for (let i = 0; i < this.mChildren.length; i++)\n      this.mChildren[i].__update(dt);\n  }\n\n  /**\n   * @ignore\n   * @param {number} dt time since the last frame\n   *\n   * @return {void}\n   */\n  __postUpdate(dt) {\n    this.onPostUpdate(dt);\n\n    for (let k = 0; k < this.mComponents.length; k++) {\n      let c = this.mComponents[k];\n      c.mGameObject = this;\n      c.onPostUpdate(dt);\n    }\n\n    for (let i = 0; i < this.mChildren.length; i++) {\n      this.mChildren[i].__postUpdate(dt);\n    }\n  }\n\n  /**\n   * Called at every fixed frame update.\n   *\n   * @public\n   * @param {number} dt time since the last frame\n   *\n   * @return {void}\n   */\n  onFixedUpdate(dt) {}\n\n  /**\n   * Called at every engine update.\n   *\n   * @public\n   * @param {number} dt time since the last frame\n   *\n   * @return {void}\n   */\n  onUpdate(dt) {}\n\n  /**\n   * Called after all updates have been executed.\n   *\n   * @public\n   * @param {number} dt Description\n   *\n   * @return {void}\n   */\n  onPostUpdate(dt) {}\n\n  /**\n   * @ignore\n   * @param {VideoNullDriver} video   *\n   * @param {number} time\n   * @param {number} parentAlpha\n   * @param {string} parentBlendMode\n   *\n   * @return {void}\n   */\n  __render(video, time, parentAlpha, parentBlendMode) {\n    this.onRender(video, time);\n\n    let child = null;\n    for (let i = 0; i < this.mChildren.length; i++) {\n      child = this.mChildren[i];\n      child.__render(video, time, parentAlpha, parentBlendMode);\n    }\n  }\n\n  /**\n   * @protected\n   * @param {VideoNullDriver} video Description\n   * @param {number} time  Description\n   *\n   * @return {void}\n   */\n  onRender(video, time) {}\n\n  /**\n   * Override this method if you need to specify GameObject size. Should be always be a local coordinates.\n   *\n   * @protected\n   * @param {Rectangle=} outRect Description\n   *\n   * @return {Rectangle} bounds in local space withoout taking care about transformation matrix\n   */\n  onGetLocalBounds(outRect = undefined) {\n    outRect = outRect || new Rectangle();\n    return outRect.set(0, 0, 0, 0);\n  }\n\n  /**\n   * Returns world bounds of this object and all children if specified (true by default).\n   *\n   * object.getBounds() - relative to world.\n   * object.getBounds(object) - local bounds.\n   * object.getBounds(object.parent) - relative to parent.\n   * object.getBounds(objectB) - relative to objectB space.\n   *\n   * @param {GameObject} [space=undefined]\n   * @param {boolean} [includeChildren=true]\n   * @param {Rectangle=} [outRect=null]\n   *\n   * @return {Rectangle} returns bounds of the object and all childrens\n   */\n  getBounds(space = undefined, includeChildren = true, outRect = undefined) {\n    outRect = outRect || new Rectangle();\n\n    let matrix = this.worldTransformation;\n\n    // TODO: optimize, check if space == null, space == this, space == parent\n    // TODO: use wtInversed instead\n    if (space != null) {\n      matrix = this.worldTransformation.clone();\n      matrix.prepend(space.worldTransformation.clone().invert());\n    }\n\n    let bounds = new Rectangle();\n    this.onGetLocalBounds(bounds);\n\n    matrix.transformRect(bounds, bounds);\n    outRect.expand(bounds.x, bounds.y, bounds.width, bounds.height);\n\n    if (includeChildren)\n      for (let i = 0; i < this.numChildren; i++)\n        this.getChildAt(i).getBounds(space, includeChildren, outRect);\n\n    return outRect;\n  }\n\n  /**\n   * Sets the object transform in one line.\n   *\n   * @param {number} [x=0]       Cord X.\n   * @param {number} [y=0]       Cord Y.\n   * @param {number} [r=0]       Rotation.\n   * @param {number} [scaleX=1]  scale X.\n   * @param {number} [scaleY=1]  scale Y.\n   * @param {number} [anchorX=0] Anchor X.\n   * @param {number} [anchorY=0] Anchor Y.\n   * @param {boolean} [includeChildren=true] Include children when adjusting pivot?\n   *\n   * @return {GameObject} This.\n   */\n  setTransform(x = 0, y = 0, r = 0, scaleX = 1, scaleY = 1, anchorX = 0, anchorY = 0, includeChildren = true) {\n    this.mX = x;\n    this.mY = y;\n    this.mRotation = r;\n    this.mScaleX = scaleX;\n    this.mScaleY = scaleY;\n\n    this.getBounds(this, includeChildren, Rectangle.__cache.zero());\n    this.mPivotX = Rectangle.__cache.width * anchorX;\n    this.mPivotY = Rectangle.__cache.height * anchorY;\n\n    this.setTransformDirty();\n    return this;\n  }\n\n  /**\n   * Calculate global position of the object.\n   *\n   * @param {Vector} localPoint\n   * @param {Vector|null} [outVector=null]\n   *\n   * @return {Vector}\n   */\n  localToGlobal(localPoint, outVector = null) {\n    return this.worldTransformation.transformVector(localPoint, outVector);\n  }\n\n  /**\n   * Calculate local position of the object\n   *\n   * @param {Vector} globalPoint\n   * @param {Vector|null} [outVector=null]\n   *\n   * @return {Vector}\n   */\n  globalToLocal(globalPoint, outVector = null) {\n    return this.worldTransformationInversed.transformVector(globalPoint, outVector);\n  }\n  /**\n   * Gets/Sets count of children elements.\n   *\n   * @return {number}\n   */\n  get numChildren() {\n    return this.mChildren.length;\n  }\n\n  /**\n   * Returns name of this GameoObject instance.\n   *\n   * @return {string|null}\n   */\n  get name() {\n    return this.mName;\n  }\n\n  /**\n   * @ignore\n   * @param {string|null} value Description\n   *\n   * @return {void}\n   */\n  set name(value) {\n    this.mName = value;\n  }\n\n  /**\n   * Gets/Sets the x coordinate of the GameoObject instance relative to the local coordinates of the parent GameoObject.\n   *\n   * @return {number}\n   */\n  get x() {\n    return this.mX;\n  }\n\n  /**\n   * @ignore\n   * @param {number} value\n   *\n   * @return {void}\n   */\n  set x(value) {\n    if (this.mX == value)\n      return;\n\n    this.mX = value;\n    this.setTransformDirty();\n  }\n\n  /**\n   * Gets/Sets the y coordinate of the GameoObject instance relative to the local coordinates of the parent GameoObject.\n   *\n   * @return {number}\n   */\n  get y() {\n    return this.mY;\n  }\n\n  /**\n   * @ignore\n   * @param {number} value\n   *\n   * @return {void}\n   */\n  set y(value) {\n    if (this.mY == value)\n      return;\n\n    this.mY = value;\n    this.setTransformDirty();\n  }\n\n  /**\n   * Gets/Sets the x coordinate of the object's origin in its local space.\n   *\n   * @return {number}\n   */\n  get pivotX() {\n    return this.mPivotX;\n  }\n\n  /**\n   * @ignore\n   * @param {number} value\n   *\n   * @return {void}\n   */\n  set pivotX(value) {\n    if (this.mPivotX == value)\n      return;\n\n    this.mPivotX = value;\n    this.setTransformDirty();\n  }\n\n  /**\n   * Gets/Sets the y coordinate of the object's origin in its local space.\n   *\n   * @return {number}\n   */\n  get pivotY() {\n    return this.mPivotY;\n  }\n\n  /**\n   * @ignore\n   * @param {number} value\n   *\n   * @return {void}\n   */\n  set pivotY(value) {\n    if (this.mPivotY == value)\n      return;\n\n    this.mPivotY = value;\n    this.setTransformDirty();\n  }\n\n  /**\n   * Sets pivot point to given position.\n   *\n   * @param {number}  [ax=0.5]               Align along x-axis.\n   * @param {number}  [ay=0.5]               Align along y-axis.\n   * @param {boolean} [includeChildren=true] Include children elements when\n   * calculating bounds?\n   *\n   * @return {GameObject} This.\n   */\n  alignPivot(ax = 0.5, ay = 0.5, includeChildren = true) {\n    this.getBounds(this, includeChildren, Rectangle.__cache.zero());\n\n    this.mPivotX = Rectangle.__cache.width * ax;\n    this.mPivotY = Rectangle.__cache.height * ay;\n    this.setTransformDirty();\n\n    return this;\n  }\n\n  /**\n   * Gets/Sets the scale factor of this object along x-axis.\n   *\n   * @return {number}\n   */\n  get scaleX() {\n    return this.mScaleX;\n  }\n\n  /**\n   * @ignore\n   * @param {number} value\n   *\n   * @return {void}\n   */\n  set scaleX(value) {\n    if (this.mScaleX == value)\n      return;\n\n    this.mScaleX = value;\n    this.setTransformDirty();\n  }\n\n  /**\n   * Gets/Sets the scale factor of this object along y-axis.\n   *\n   * @return {number} Description\n   */\n  get scaleY() {\n    return this.mScaleY;\n  }\n\n  /**\n   * @ignore\n   * @param {number} value Description\n   *\n   * @return {void}\n   */\n  set scaleY(value) {\n    if (this.mScaleY == value)\n      return;\n\n    this.mScaleY = value;\n    this.setTransformDirty();\n  }\n\n  /**\n   * Gets/Sets rotation in radians.\n   *\n   * @return {number}\n   */\n  get rotation() {\n    return this.mRotation;\n  }\n\n  /**\n   * @ignore\n   * @param {number} value Description\n   *\n   * @return {void}\n   */\n  set rotation(value) {\n    if (this.mRotation == value)\n      return;\n\n    this.mRotation = value;\n    this.setTransformDirty();\n  }\n\n  /**\n   * Returns this GameObject parent GameObject.\n   * @readonly\n   *\n   * @return {GameObject}\n   */\n  get parent() {\n    return this.mParent;\n  }\n\n  /**\n   * Returns topmost parent element of this GameObject or null if this\n   * GameObject is not a child.\n   *\n   * @readonly\n   *\n   * @return {GameObject|null}\n   */\n  get root() {\n    let current = this;\n\n    if (current === Black.instance.root)\n      return current;\n\n    while (current.mParent) {\n      if (current === Black.instance.root)\n        return current;\n      else if (current.mParent === Black.instance.root)\n        return Black.instance.root;\n      else\n        current = current.mParent;\n    }\n\n    return null;\n  }\n\n  /**\n   * Returns how deep this GameObject in the display tree.\n   *\n   * @readonly\n   *\n   * @return {number}\n   */\n  get depth() {\n    if (this.mParent)\n      return this.mParent.depth + 1;\n    else\n      return 0;\n  }\n\n  get displayDepth() {\n    // Many thanks to Roman Kopansky\n    const flatten = arr => arr.reduce((acc, val) => acc.concat(val.mChildren.length ? flatten(val.mChildren) : val), []);\n    return flatten(this.root.mChildren).indexOf(this);\n  }\n  /**\n   * @ignore\n   * @return {number}\n   */\n  get index() {\n    // TODO: this is only required by Input component and its pretty heavy.\n    // Try to workaround it.\n    return this.parent.mChildren.indexOf(this);\n  }\n\n  /**\n   * Gets/sets the width of this object.\n   *\n   * @return {number}\n   */\n  get width() {\n    return this.getBounds(this.mParent).width;\n  }\n\n  /**\n   * @ignore\n   *\n   * @param {number} value\n   *\n   * @return {void}\n   */\n  set width(value) {\n    this.scaleX = 1;\n    const currentWidth = this.width;\n\n    if (currentWidth != 0.0)\n      this.scaleX = value / currentWidth;\n  }\n\n  /**\n   * Gets/sets the height of this object.\n   *\n   * @return {number}\n   */\n  get height() {\n    return this.getBounds(this.mParent).height;\n  }\n\n  /**\n   * @ignore\n   * @param {number} value\n   *\n   * @return {void}\n   */\n  set height(value) {\n    this.scaleY = 1;\n    const currentHeight = this.height;\n\n    if (currentHeight != 0)\n      this.scaleY = value / currentHeight;\n  }\n\n\n  /**\n   * Returns width of this GameObject in local space without including children\n   * elements.\n   *\n   * @readonly\n   *\n   * @return {number}\n   */\n  get localWidth() {\n    return this.getBounds(this, false).width;\n  }\n\n\n  /**\n   * Returns height of this GameObject in local space without including children\n   * elements.\n   *\n   * @readonly\n   *\n   * @return {number}\n   */\n  get localHeight() {\n    return this.getBounds(this, false).height;\n  }\n\n  // TODO: precache\n  /**\n   * Returns string representing a url like path to this object in the display\n   * tree.\n   *\n   * @readonly\n   *\n   * @return {string|null}\n   */\n  get path() {\n    if (this.mParent !== null)\n      return this.mParent.path + '/' + this.mName;\n\n    return this.mName;\n  }\n\n  /**\n   * Gets/Sets tag of this GameObject.\n   *\n   * @return {string|null}\n   */\n  get tag() {\n    return this.mTag;\n  }\n\n  /**\n   * @ignore\n   *\n   * @param {string|null} value\n   *\n   * @return {void}\n   */\n  set tag(value) {\n    if (this.mTag === value)\n      return;\n\n    /** @type {string|null} */\n    let old = this.mTag;\n    this.mTag = value;\n\n    if (this.mAdded)\n      Black.instance.onTagUpdated(this, old, value);\n  }\n\n  /**\n   * Starts coroutine.\n   *\n   * @param {Function} gen  Generator function.\n   * @param {*=} [ctx=null] Context for Generator function.\n   *\n   * @return {Generator}\n   */\n  spawn(gen, ctx = null) {\n    var iter = gen.apply(ctx == null ? this : ctx);\n\n    function step(it) {\n      if (it.done)\n        return;\n\n      if (typeof it.value === 'function')\n        it.value(x => step(iter.next(x)));\n      else\n        step(iter.next(it.value));\n    }\n\n    step(iter.next());\n    return iter;\n  }\n\n  /**\n   * Waits for given amount of seconds before processing.\n   *\n   * @return {function(*):*}\n   */\n  wait(seconds = 1) {\n    return cb => setTimeout(cb.bind(this, seconds * 1000), seconds * 1000);\n  }\n\n\n  /**\n   * Waits for a speceific message.\n   *\n   * @param {string} message The name of the message to wait for.\n   *\n   * @return {function(*):*}\n   */\n  waitMessage(message) {\n    return cb => this.on(message, cb.bind(this));\n  }\n\n\n  /**\n   * Marks this GameObject and/or its children elements as dirty.\n   *\n   * @param {DirtyFlag} flag                 The flag or flag bit mask.\n   * @param {boolean} [includeChildren=true] Description\n   *\n   * @return {void}\n   */\n  setDirty(flag, includeChildren = true) {\n    if (includeChildren) {\n      GameObject.forEach(this, x => {\n        x.mDirty |= flag;\n      });\n    } else {\n      this.mDirty |= flag;\n    }\n  }\n\n\n  /**\n   * Marks this GameObject as Local dirty and all children elements as World\n   * dirty.\n   *\n   * @returns {void}\n   */\n  setTransformDirty() {\n    this.setDirty(DirtyFlag.LOCAL, false);\n    this.setDirty(DirtyFlag.WORLD, true);\n  }\n\n  /**\n   * @ignore\n   *\n   * @return {void}\n   */\n  dispose() {}\n\n  // TODO: rename method\n  /**\n   * @ignore\n   *\n   * @param {Array<number>} points\n   * @param {Matrix} worldTransformation\n   * @param {Rectangle=} outRect\n   *\n   * @return {Rectangle}\n   */\n  static getBoundsWithPoints(points, worldTransformation, outRect) {\n    outRect = outRect || new Rectangle();\n\n    let minX = Number.MAX_VALUE;\n    let maxX = -Number.MAX_VALUE;\n    let minY = Number.MAX_VALUE;\n    let maxY = -Number.MAX_VALUE;\n    let xx = 0;\n    let yy = 0;\n    let tmpVector = new Vector();\n\n    for (let i = 0; i < points.length; i += 2) {\n      worldTransformation.transformXY(points[i], points[i + 1], tmpVector);\n\n      if (minX > tmpVector.x)\n        minX = tmpVector.x;\n\n      if (maxX < tmpVector.x)\n        maxX = tmpVector.x;\n\n      if (minY > tmpVector.y)\n        minY = tmpVector.y;\n\n      if (maxY < tmpVector.y)\n        maxY = tmpVector.y;\n    }\n\n    outRect.set(minX, minY, maxX - minX, maxY - minY);\n    return outRect;\n  }\n\n  /**\n   * Returns whenever a given GameObject intersects with a point.\n   *\n   * @param {GameObject} gameObject GameObject to test.\n   * @param {Vector} point          A point to test.\n   *\n   * @return {boolean} True if intersects.\n   */\n  static intersects(gameObject, point) {\n    let tmpVector = new Vector();\n    let inv = gameObject.worldTransformation.invert();\n\n    inv.transformVector(point, tmpVector);\n\n    let rect = gameObject.getBounds(gameObject, false);\n    return rect.containsXY(tmpVector.x, tmpVector.y);\n  }\n\n  /**\n   * Returns a point where intersection were made in local space.\n   *\n   * @param {GameObject} gameObject GameObject to test intersection with.\n   * @param {Vector}     point      The point to test.\n   * @param {Vector=}    outVector  If passed point of intersection will be\n   * stored in it.\n   *\n   * @return {boolean} True if intersects.\n   */\n  static intersectsAt(gameObject, point, outVector = undefined) {\n    outVector = outVector || new Vector();\n\n    let tmpVector = Vector.__cache;\n    let inv = gameObject.worldTransformationInversed;\n\n    inv.transformVector(point, tmpVector);\n\n    let rect = gameObject.getBounds(gameObject, false);\n    let contains = rect.containsXY(tmpVector.x, tmpVector.y);\n\n    if (!contains)\n      return false;\n\n    outVector.x = tmpVector.x - rect.x;\n    outVector.y = tmpVector.y - rect.y;\n    return true;\n  }\n\n  /**\n   * Checks if GameObject or any of its children elements intersects the given\n   * point, the difference between `hits` and `intersectsWith` that `hits` also\n   * checks for presence of `InputComponent`.\n   *\n   * @param {GameObject} gameObject GameObject to test.\n   * @param {Vector} point          Point to test.\n   *\n   * @return {GameObject|null} Intersecting object or null.\n   */\n  static hits(gameObject, point) {\n    // TODO: add colliders\n\n    let obj = null;\n    for (let i = gameObject.numChildren - 1; i >= 0; --i) {\n      let child = gameObject.mChildren[i];\n\n      obj = GameObject.hits(child, point);\n      if (obj != null)\n        return obj;\n\n      let c = child.getComponent(InputComponent);\n      let touchable = c !== null && c.touchable;\n      if (touchable && GameObject.intersects(child, point)) {\n        obj = child;\n        break;\n      }\n    }\n\n    if (obj === null) {\n      let c = gameObject.getComponent(InputComponent);\n      let touchable = c !== null && c.touchable;\n\n      if (touchable && GameObject.intersects(gameObject, point))\n        return gameObject;\n    }\n\n    return null;\n  }\n\n  /**\n   * Checks if GameObject or any of its children elements intersects the given\n   * point.\n   *\n   * @param {GameObject} gameObject GameObject to test.\n   * @param {Vector} point          Point to test.\n   *\n   * @return {GameObject|null} Intersecting object or null.\n   */\n  static intersectsWith(gameObject, point) {\n    let obj = null;\n    for (let i = gameObject.numChildren - 1; i >= 0; --i) {\n      let child = gameObject.mChildren[i];\n\n      obj = GameObject.intersectsWith(child, point);\n      if (obj != null)\n        return obj;\n\n      let inside = GameObject.intersects(child, point);\n      if (inside) {\n        obj = child;\n        break;\n      }\n    }\n\n    if (obj === null && GameObject.intersects(gameObject, point))\n      return gameObject;\n\n    return null;\n  }\n\n  /**\n   * Returns all GameObject with given tag.\n   *\n   * @param {string} tag Tag to find.\n   *\n   * @return {Array<GameObject>|null} Array of GameObject or null if not found.\n   */\n  static findWithTag(tag) {\n    if (Black.instance.mTagCache.hasOwnProperty(tag) === false)\n      return null;\n\n    return Black.instance.mTagCache[tag];\n  }\n\n  /**\n   * Returns a list of Components.\n   *\n   * @param {GameObject} gameObject         GameObject to start search from.\n   * @param {function (new:Component)} type Type of Component.\n   *\n   * @return {Array<Component>} Array of Component or empty array.\n   */\n  static findComponents(gameObject, type) {\n    Debug.assert(gameObject !== null, 'gameObject cannot be null.');\n    Debug.assert(type !== null, 'type cannot be null.');\n\n    /** @type {Array<Component>} */\n    let list = [];\n\n    /** @type {function(GameObject, function(new:Component)):void} */\n    let f = function (gameObject, type) {\n      for (let i = 0; i < gameObject.mComponents.length; i++) {\n        let c = gameObject.mComponents[i];\n        if (c instanceof type)\n          list.push(c);\n      }\n\n      for (let i = 0; i < gameObject.mChildren.length; i++)\n        f(gameObject.mChildren[i], type);\n    };\n\n    f(gameObject, type);\n\n    return list;\n  }\n\n  /**\n   * Runs action accross all GameObjects.\n   *\n   * @param {GameObject} node                  GameObject to start iteration from.\n   * @param {function(GameObject)} action The function to be executed on\n   * every GameObject.\n   *\n   * @return {void}\n   */\n  static forEach(node, action) {\n    if (node == null)\n      node = Black.instance.root;\n\n    action(node);\n\n    for (let i = 0; i < node.numChildren; i++)\n      GameObject.forEach(node.getChildAt(i), action);\n  }\n\n\n  /**\n   * Finds object by its name. If node is not passed the root will be taken as\n   * starting point.\n   *\n   * @param {string} name      Name to search.\n   * @param {GameObject=} node Starting GameObject.\n   *\n   * @return {GameObject} GameObject or null.\n   */\n  static find(name, node) {\n    if (node == null)\n      node = Black.instance.root;\n\n    if (node.name === name)\n      return node;\n\n    for (let i = 0; i < node.numChildren; i++) {\n      let r = GameObject.find(name, node.getChildAt(i));\n      if (r != null)\n        return r;\n    }\n\n    return null;\n  }\n}\n\n/**\n * @private\n * @type {number}\n * @nocollapse\n */\nGameObject.ID = 0;\n\n/**\n * @enum {number}\n */\n\nvar DirtyFlag = {\n  LOCAL: 1,\n  WORLD: 2,\n  DIRTY: 0xffffff\n};\n","// TODO:\n// [_] Do not handle is loaded or not.\n// Texture shall not be responsible for loading itself.\n// We have TextureAsset for it.\n// native size - always the size of physical texture\n// source size - the original size of a texture to\n//\n\n/**\n * A number scatter for defining a range in 2D space.\n *\n * @cat video\n * @extends Scatter\n */\n\nclass Texture {\n  /**\n   * Creates new Texture instance.\n   * @param  {Image} nativeTexture description\n   * @param  {Rectangle=} region = undefined description\n   * @param  {Rectangle=} untrimmedRect = undefined description\n   */\n  constructor(nativeTexture, region, untrimmedRect) {\n    /**\n     * @private\n     * @type {Image}\n     */\n    this.mTexture = nativeTexture;\n\n    /**\n     * @private\n     * @type {Rectangle}\n     */\n    this.mRegion;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mIsSubtexture = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mId = ++Texture.__ID;\n\n    if (region === undefined) {\n      this.mRegion = new Rectangle(0, 0, nativeTexture.naturalWidth, nativeTexture.naturalHeight);\n    } else {\n      this.mRegion = /** @type {Rectangle} */ (region);\n      this.mIsSubtexture = true;\n    }\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mTrimmed = untrimmedRect !== undefined;\n\n    if (this.mTrimmed === false)\n      untrimmedRect = new Rectangle(0, 0, this.mRegion.width, this.mRegion.height);\n\n    /**\n     * @private\n     * @type {Rectangle}\n     */\n    this.mUntrimmedRect = /** @type {Rectangle} */ (untrimmedRect);\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mIsLoaded = true;\n\n    this.mRelativeRegion = new Rectangle(\n      this.mRegion.x / nativeTexture.naturalWidth,\n      this.mRegion.y / nativeTexture.naturalHeight,\n      this.mRegion.width / nativeTexture.naturalWidth,\n      this.mRegion.height / nativeTexture.naturalHeight\n    );\n  }\n\n  get relativeRegion() {\n    return this.mRelativeRegion;\n  }\n\n  /**\n   * Returns the unique id of this texture.\n   *\n   * @return {number}\n   */\n  get id() {\n    return this.mId;\n  }\n\n  /**\n   * Returns True if this texture has been trimmed.\n   *\n   * @return {boolean}\n   */\n  get isTrimmed() {\n    return this.mTrimmed;\n  }\n\n  /**\n   * Returns True if this texture is a part of other Texture object\n   *\n   * @return {boolean} Description\n   */\n  get isSubTexture() {\n    return this.mIsSubtexture;\n  }\n\n  // TODO: if we update texture we have to nofity everything, send signal\n  // update(nativeTexture = null, region = null, source = null, crop = null){\n  // }\n\n  // render width\n  // render height\n  // croppedWidth, croppedHeight\n  // width, height\n  //\n\n  /**\n   * Returns a Rect object representing the untrimmed size and position of this\n   * texture withing other texture if so.\n   *\n   * @return {Rectangle}\n   */\n  get untrimmedRect() {\n    return this.mUntrimmedRect;\n  }\n\n  /**\n   * The width of this texture.\n   *\n   * @return {number}\n   */\n  get width() {\n    if (this.mRegion)\n      return this.mRegion.width;\n\n    return this.mTexture.naturalWidth;\n  }\n\n  /**\n   * The width of this texture.\n   *\n   * @return {number}\n   */\n  get height() {\n    if (this.mRegion)\n      return this.mRegion.height;\n\n    return this.mTexture.naturalHeight;\n  }\n\n  /**\n   * If isSubTexture, returns the physical region inside parent texture.\n   *\n   * @return {Rectangle}\n   */\n  get region() {\n    return this.mRegion;\n  }\n\n  /**\n   * Returns native object. Usually DOM Image element.\n   *\n   * @return {Image}\n   */\n  get native() {\n    return this.mTexture;\n  }\n\n  /**\n   * True if fully loaded and ready.\n   *\n   * @return {boolean}\n   */\n  get isLoaded() {\n    return this.mIsLoaded;\n  }\n\n  /**\n   * Dispose and releases all resources related to this texture.\n   *\n   * @return {void}\n   */\n  dispose() {\n    this.mTexture = null;\n  }\n\n  /**\n   * @ignore\n   *\n   * @param {string} string\n   *\n   * @return {Texture}\n   */\n  static fromBase64String(string) {\n    let imgElement = new Image();\n    imgElement.src = string;\n    return new Texture(imgElement);\n  }\n\n\n  /**\n   * @ignore\n   *\n   * @param {HTMLElement}   canvas\n   * @param {string} [type=image/png]\n   * @param {number} [quality=1]\n   *\n   * @return {Texture}\n   */\n  static fromCanvasAsImage(canvas, type = 'image/png', quality = 1) {\n    let imgElement = new Image();\n    imgElement.src = canvas.toDataURL(type, quality);\n\n    return new Texture(imgElement);\n  }\n\n  /**\n   * @ignore\n   *\n   * @param {HTMLElement} canvas\n   *\n   * @return {Texture}\n   */\n  static fromCanvas(canvas) {\n    return Black.instance.video.getTextureFromCanvas(canvas);\n  }\n}\n\n/**\n * @private\n * @type {number}\n * @nocollapse\n */\nTexture.__ID = 0;\n\n/**\n * @private\n * @type {Image|null}\n * @nocollapse\n */\nTexture.MISSING_IMAGE_CACHE = null;\n","/**\n * A number scatter for defining a range in 2D space.\n *\n * @cat video\n * @extends Texture\n */\n\nclass AtlasTexture extends Texture {\n  /**\n   * Creates new AtlasTexture instance.\n   *\n   * @param {Texture}              texture A base texture object.\n   * @param {{meta: *, frames: *}} Black json object.\n   */\n  constructor(texture, jsonObject) {\n    super(texture.native);\n\n    /** @type {Object} */\n    this.mMeta = {};\n\n    /** @dict */\n    this.mSubTextures = {}; // dictionary\n\n    this.__parseJson(jsonObject);\n  }\n\n  /**\n   * @private\n   *\n   * @param  {{meta: *, frames: *}} o\n   * @return {void}\n   */\n  __parseJson(o) {\n    const NEGATIVE_HALF_PI = -(Math.PI / 2);\n\n    // if (o.meta.format)\n    //   this.mMeta.format = o.meta.format;\n    //\n    // if (o.meta.scale)\n    //   this.mMeta.scale = parseFloat(o.meta.scale);\n\n    for (let key in o.frames) {\n      let data = /** @type {Array<number>} */ (o.frames[key]);\n\n      let region = new Rectangle(data[0], data[1], data[2], data[3]);\n      let untrimmedRect = new Rectangle(data[4], data[5], data[6], data[7]);\n\n      this.mSubTextures[key] = new Texture(this.native, region, untrimmedRect);\n    }\n  }\n\n  // addRegion(name, region, frame) {}\n  //\n  // removeRegion() {}\n\n  /**\n   * Returns the texture by a given name.\n   *\n   * @param {string} name The name of the texture to find.\n   *\n   * @return {Texture} The Texture or null if not found.\n   */\n  getTexture(name) {\n    /** @type {Texture} */\n    let t = this.mSubTextures[name];\n    if (t === undefined)\n      console.warn('Texture \\'%s\\' was not found in cache.', name);\n\n    return /** @type {Texture} */ (t);\n  }\n\n  /**\n   * Returns array of Texture by given name or wildcard mask.\n   * If `nameMask` is null then all textures will be returned.\n   * This method sorts all resulting textures using neurural sort algorith.\n   *\n   * @param {string|null} [nameMask=null] The mask to filter by.\n   * @param {Array<Texture>|null}         outTextures If passed will be\n   * overwritten by result object.\n   *\n   * @return {Array<Texture>} The list of found textures.\n   */\n  getTextures(nameMask = null, outTextures = null) {\n    let out = outTextures || [];\n    if (nameMask === null) {\n      for (let key in this.mSubTextures)\n        out.push(this.mSubTextures[key]);\n\n      return /** @type {Array<Texture>} */ (out);\n    }\n\n    let names = [];\n\n    // TODO: make helper wild function\n    let re = new RegExp(\"^\" + nameMask.split(\"*\").join(\".*\") + \"$\");\n    for (let key in this.mSubTextures)\n      if (re.test(key))\n        names.push(key);\n\n    //names.sort(AtlasTexture.__naturalComparer);\n    AtlasTexture.naturalSort(names);\n\n    for (let i = 0; i < names.length; i++)\n      out.push(this.mSubTextures[names[i]]);\n\n    return out;\n  }\n\n  static naturalSort(dataset, field = null) {\n    dataset.sort(AtlasTexture.__naturalComparer(field));\n  }\n\n  static __naturalComparer(field = null, useAbs = true) {\n    return function(a, b) {\n      const NUMBER_GROUPS = /(-?\\d*\\.?\\d+)/g;\n      let aa = String(field == null ? a : a[field]).split(NUMBER_GROUPS);\n      let bb = String(field == null ? b : b[field]).split(NUMBER_GROUPS);\n      let min = Math.min(aa.length, bb.length);\n\n      for (let i = 0; i < min; i++) {\n        let x = 0;\n        let y = 0;\n\n        if (useAbs) {\n          x = Math.abs(parseFloat(aa[i])) || aa[i].toLowerCase();\n          y = Math.abs(parseFloat(bb[i])) || bb[i].toLowerCase();\n        } else {\n          x = parseFloat(aa[i]) || aa[i].toLowerCase();\n          y = parseFloat(bb[i]) || bb[i].toLowerCase();\n        }\n\n        if (x < y)\n          return -1;\n        else if (x > y)\n          return 1;\n      }\n\n      return 0;\n    }\n  }\n\n  //dispose() {}\n}\n","/**\n * Holds information about external assets.\n *\n * @cat loaders\n * @extends MessageDispatcher\n */\n\nclass Asset extends MessageDispatcher {\n  /**\n   * Creates new Assets instance.\n   * @param  {string} name Name of asset.\n   * @param  {string} url  URL of the asset to load it from.\n   */\n  constructor(name, url) {\n    super();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.mName = name;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.mUrl = url;\n\n    /**\n     * @private\n     * @type {*|null}\n     */\n    this.mData = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mIsLoaded = false;\n\n    /**\n     * @private\n     * @type {string|undefined}\n     */\n    this.mMimeType = undefined;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.mResponseType = '';\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.mExtension = this.getExtension(url);\n\n    /**\n     * @private\n     * @type {XMLHttpRequest|null}\n     */\n    this.mRequest = null;\n  }\n\n  /**\n   * Loads asset from an external source.\n   *\n   * @return {void}\n   */\n  load() {\n    //console.log('Asset: loading asset \\'%s\\' from \\'%s\\'', this.mName, this.mUrl);\n\n    this.mRequest = new XMLHttpRequest();\n    //this.mRequest.onprogress = (pe) => this.onProgressChanged(pe);\n\n    if (this.mRequest.overrideMimeType && this.mMimeType)\n      this.mRequest.overrideMimeType(this.mMimeType);\n\n    this.mRequest.responseType = this.mResponseType;\n    this.mRequest.open(\"GET\", this.mUrl, true);\n    this.mRequest.onreadystatechange = () => {\n      if (this.mRequest.readyState === 4) {\n        if ((this.mRequest.status === 200) || ((this.mRequest.status === 0) && this.mRequest.responseText))\n          this.onLoaded();\n        else\n          throw new Error('Error loading ' + this.mUrl + \" (\" + this.mRequest.status + \":\"+ this.mRequest.responseText + \")\"); //TODO handle errors\n      }\n    };\n\n    this.mRequest.send(null);\n  }\n\n  /**\n   * Called when asset is fully loaded.\n   *\n   * @protected\n   * @fires complete\n   *\n   * @return {void}\n   */\n  onLoaded() {\n    this.mIsLoaded = true;\n    this.post('complete');\n  }\n\n  /**\n   * Returns the name of this asset.\n   *\n   * @return {string}\n   */\n  get name() {\n    return this.mName;\n  }\n\n  /**\n   * Returns loaded data object associated with this asset.\n   *\n   * @return {*}\n   */\n  get data() {\n    return this.mData;\n  }\n\n  /**\n   * Returns true if asset is preloaded.\n   *\n   * @return {boolean}\n   */\n  get isLoaded() {\n    return this.mIsLoaded;\n  }\n\n  // TODO: finish\n  dispose() {}\n\n  /**\n   * Helper function. Returns the file extension.\n   *\n   * @param {string} url Url to get extension from.\n   *\n   * @return {string} Empty string if no extension were found or extension itself.\n   */\n  getExtension(url) {\n    if (url.indexOf('.') === -1)\n      return '';\n\n    return url.substring(url.indexOf('.')).toLowerCase();\n  }\n}\n","/**\n * Single Texture file asset class responsible for loading images file and\n * converting them into Textures.\n *\n * @cat loaders\n * @extends Asset\n */\n\nclass TextureAsset extends Asset {\n  /**\n   * Creates TextureAsset instance.\n   *\n   * @param {string} name Asset name.\n   * @param {string} url  URL to load image from.\n   */\n  constructor(name, url) {\n    super(name, url);\n\n    /**\n     * @private\n     * @type {Image}\n     */\n    this.mImageElement = new Image();\n  }\n\n  /**\n   * @override\n   * @inheritDoc\n   *\n   * @return {void}\n   */\n  onLoaded() {\n    this.mData = new Texture(this.mImageElement);\n\n    super.onLoaded();\n  }\n\n  /**\n   * @override\n   * @inheritDoc\n   *\n   * @return {void}\n   */\n  load() {\n    this.mImageElement.src = this.mUrl;\n    this.mImageElement.onload = () => {\n      this.onLoaded();\n    }\n  }\n}\n","/**\n * Single JSON file asset class responsible for loading json file.\n *\n * @cat loaders\n * @extends Asset\n */\n\nclass JSONAsset extends Asset {\n  /**\n   * Creates new JSONAsset instance.\n   *\n   * @param {string} name The name of asset.\n   * @param {string} url  URL to the json file.\n   *\n   * @return {void}\n   */\n  constructor(name, url) {\n    super(name, url);\n\n    this.mimeType = 'application/json';\n  }\n\n  /**\n   * @override\n   * @inheritDoc\n   *\n   * @return {void}\n   */\n  onLoaded(){\n    this.mData = JSON.parse(/** @type {string} */ (this.mRequest.responseText) );\n    super.onLoaded();\n  }\n}\n","/**\n * Font file asset class responsible for loading local font files.\n *\n * @cat loaders\n * @extends Asset\n */\n\nclass FontAsset extends Asset {\n  /**\n   * @param {string} name font name\n   * @param {string} url font url\n   *\n   * @return {void}\n   */\n  constructor(name, url, local) {\n    super(name, url);\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.mTestingFontName = 'Courier New';\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mLocal = local;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.mTestingString = '~ GHBDTN,.#$Mlck';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mLoadingTimeout = 2500;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mCheckDelay = 50;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.mTestingElement = this.__getTestingElement();\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mElementAdded = false;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.mLoaderElement = this.__getLoaderElement(this.mLocal);\n    this.mTestingElement.style.fontFamily = this.mTestingFontName;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mDefaultFontWidth = this.mTestingElement.offsetWidth;\n    this.mTestingElement.style.fontFamily = name + ',' + this.mTestingFontName;\n  }\n\n  /**\n   * @private\n   * @return {HTMLElement}\n   */\n  __getLoaderElement(local) {\n    let loaderElement = document.createElement(local ? 'style' : 'link');\n    loaderElement.type = 'text/css';\n    loaderElement.media = 'all';\n    loaderElement.rel = 'stylesheet';\n    document.getElementsByTagName('head')[0].appendChild(loaderElement);\n    return loaderElement;\n  }\n\n  /**\n   * @private\n   * @return {HTMLElement}\n   */\n  __getTestingElement() {\n    let testingElement = document.createElement('span');\n    testingElement.style.position = 'absolute';\n    testingElement.style.top = '-9999px';\n    testingElement.style.left = '-9999px';\n    testingElement.style.visibility = 'hidden';\n    testingElement.style.fontSize = '250px';\n    testingElement.innerHTML = this.mTestingString;\n\n    // body may be not ready\n    //document.body.appendChild(testingElement);\n\n    return testingElement;\n  }\n\n  /**\n   * @override\n   * @return {void}\n   */\n  load() {\n    if (this.mLocal)\n      this.mLoaderElement.innerHTML += (`\\n @font-face {font-family: ${this.mName}; src: url(${this.mUrl});}`);\n    else\n      this.mLoaderElement.href = this.mUrl;\n\n    this.checkLoadingStatus();\n  }\n\n  /**\n   * @return {void}\n   */\n  checkLoadingStatus() {\n    if (this.mElementAdded === false) {\n      if (document.body != null) {\n        document.body.appendChild(this.mTestingElement);\n        this.mElementAdded = true;\n      } else {\n        setTimeout(this.checkLoadingStatus.bind(this), this.mCheckDelay);\n        return;\n      }\n    }\n\n\n    if (this.mDefaultFontWidth === this.mTestingElement.offsetWidth) {\n      if ((this.mLoadingTimeout -= this.mCheckDelay) <= 0) {\n        this.onLoadingFail();\n        return;\n      }\n\n      setTimeout(this.checkLoadingStatus.bind(this), this.mCheckDelay);\n      return;\n    }\n    this.onLoaded();\n  }\n\n  onLoaded() {\n    super.onLoaded();\n    this.mTestingElement.parentNode.removeChild(this.mTestingElement);\n  }\n\n  /**\n   * @return {void}\n   */\n  onLoadingFail() {\n    console.warn(`loading ${this.name} font failed.`);\n    this.onLoaded(); //TODO what to do here?\n  }\n\n  /**\n   * @return {string}\n   */\n  get type() {\n    return \"FontAsset\";\n  }\n}\n","/**\n * Texture Atlas asset responsible for loading Image file and coresponding Json\n * file.\n *\n * @cat loaders\n * @extends Asset\n */\n\nclass AtlasTextureAsset extends Asset {\n  /**\n   * Creates new AtlasTextureAsset instance.\n   *\n   * @param {string} name     Name of the asset.\n   * @param {string} imageUrl Image URL.\n   * @param {string} dataUrl  Json URL.\n   */\n  constructor(name, imageUrl, dataUrl) {\n    super(name, imageUrl);\n\n    /**\n     * @private\n     * @type {Image}\n     */\n    this.mImageElement = new Image();\n\n    /**\n     * @private\n     * @type {JSONAsset}\n     */\n    this.dataAsset = new JSONAsset(name, dataUrl);\n    this.dataAsset.on('complete', this.onJsonLoaded, this);\n  }\n\n\n  /**\n   * @ignore\n   * @returns {void}\n   */\n  onJsonLoaded() {\n    this.mImageElement.src = this.mUrl;\n    this.mImageElement.onload = () => {\n      this.onLoaded();\n    }\n  }\n\n  /**\n   * @override\n   * @inheritDoc\n   * @return {void}\n   */\n  onLoaded() {\n    this.mData = new AtlasTexture(new Texture(this.mImageElement), /** @type {{meta: *, frames: *}} */ (this.dataAsset.data));\n\n    super.onLoaded();\n  }\n\n  /**\n   * @inheritDoc\n   * @override\n   *\n   * @return {void}\n   */\n  load() {\n    this.dataAsset.load();\n  }\n}\n","/**\n * Sound file asset class responsible for preloading audio files.\n *\n * @cat loaders\n * @extends Asset\n */\n\nclass SoundAsset extends Asset {\n  /**\n   * Creates SoundAsset instance.\n   *\n   * @param {string} name Sound name.\n   * @param {string} url  URL to load audio from.\n   */\n  constructor(name, url) {\n    super(name, url);\n\n    /**\n     * @private\n     * @type {Audio}\n     */\n    this.mAudioElement = new Audio();\n  }\n\n  /**\n   * @override\n   * @inheritDoc\n   *\n   * @return {void}\n   */\n  onLoaded() {\n    this.mData = this.mAudioElement;\n\n    super.onLoaded();\n  }\n\n  /**\n   * @override\n   * @inheritDoc\n   *\n   * @return {void}\n   */\n  load() {\n    this.mAudioElement.src = this.mUrl;\n    this.mAudioElement.preload = 'auto';\n    this.mAudioElement.oncanplaythrough = () => {\n      if (this.mData != null) {\n        this.onLoaded();\n      }\n    }\n  }\n}\n","/*\nTODO:\n  1. propper error handling\n  2. max parallel downloads\n  3. check for name dublicates\n  4. load progress\n*/\n\n/**\n * Reponsible for preloading assets and manages its in memory state.\n *\n * @cat loaders\n * @extends MessageDispatcher\n */\n\nclass AssetManager extends MessageDispatcher {\n  /**\n   * Creates new AssetManager instance. AssetManager exposes static property\n   * called 'default' and many internal classes uses default instance.\n   */\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.mDefaultPath = '';\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mTotalLoaded = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mIsAllLoaded = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mLoadingProgress = 0;\n\n    /**\n     * @private\n     * @type {Array<Asset>}\n     */\n    this.mQueue = [];\n\n    /**\n     * @private\n     * @member\n     * @dict\n     */\n    this.mTextures = {};\n\n    /**\n     * @private\n     * @member\n     * @dict\n     */\n    this.mAtlases = {};\n\n    /**\n     * @private\n     * @member\n     * @dict\n     */\n    this.mJsons = {};\n\n\n    /**\n     * @private\n     * @member\n     * @dict\n     */\n    this.mSounds = {};\n  }\n\n  /**\n   * Adds single image to the loading queue.\n   *\n   * @param {string} name Name of the asset.\n   * @param {string} url  The URL of the image.\n   *\n   * @returns {void}\n   */\n  enqueueImage(name, url) {\n    this.mQueue.push(new TextureAsset(name, this.mDefaultPath + url));\n  }\n\n  /**\n   * Adds atlas to the loading queue.\n   *\n   * @param {string} name     Name of the asset.\n   * @param {string} imageUrl Atlas URL.\n   * @param {string} dataUrl  URL to the .json file which describes the atlas.\n   *\n   * @returns {void}\n   */\n  enqueueAtlas(name, imageUrl, dataUrl) {\n    this.mQueue.push(new AtlasTextureAsset(name, this.mDefaultPath + imageUrl, this.mDefaultPath + dataUrl));\n  }\n\n  /**\n   * Adds single json file to the loading queue.\n   *\n   * @param {string} name Name of the asset.\n   * @param {string} url  The URL of the json.\n   *\n   * @returns {void}\n   */\n  enqueueJson(name, url) {\n    this.mQueue.push(new JSONAsset(name, this.mDefaultPath + url));\n  }\n\n  /**\n   * Adds single sound to the loading queue.\n   *\n   * @param {string} name Name of the sound.\n   * @param {string} url  The URL of the sound.\n   *\n   * @returns {void}\n   */\n  enqueueSound(name, url) {\n    this.mQueue.push(new SoundAsset(name, this.mDefaultPath + url));\n  }\n\n  enqueueLocalFont(name, url) {\n    this.mQueue.push(new FontAsset(name, this.mDefaultPath + url, true));\n  }\n\n  enqueueGoogleFont(name, url) {\n    this.mQueue.push(new FontAsset(name, url, false));\n  }\n\n  /**\n   * Starts preloading all enqueued assets.\n   * @fires complete\n   *\n   * @return {void}\n   */\n  loadQueue() {\n    for (let i = 0; i < this.mQueue.length; i++) {\n      let item = this.mQueue[i];\n\n      item.on(Message.COMPLETE, this.onAssetLoaded, this);\n      item.load();\n    }\n  }\n\n  /**\n   * @protected\n   * @ignore\n   *\n   * @param {Message} msg\n   *\n   * @return {void}\n   */\n  onAssetLoaded(msg) {\n    this.mTotalLoaded++;\n    this.mLoadingProgress = this.mTotalLoaded / this.mQueue.length;\n\n    let item = msg.sender;\n\n    // TODO: rework this\n    // TODO: check for dups\n    if (item.constructor === TextureAsset)\n      this.mTextures[item.name] = item.data;\n    else if (item.constructor === AtlasTextureAsset)\n      this.mAtlases[item.name] = item.data;\n    else if (item.constructor === JSONAsset)\n      this.mJsons[item.name] = item.data;\n    else if (item.constructor === SoundAsset)\n      this.mSounds[item.name] = item.data;\n    else if (item.constructor === FontAsset) {} else\n      console.error('Unable to handle asset type.', item);\n\n    this.post(Message.PROGRESS, this.mLoadingProgress);\n\n    if (this.mTotalLoaded === this.mQueue.length) {\n      this.mQueue.splice(0, this.mQueue.length);\n\n      this.mIsAllLoaded = true;\n      this.post(Message.COMPLETE);\n    }\n  }\n\n  /**\n   * Returns Texture object by given name.\n   *\n   * @param {string} name The name of the Asset.\n   *\n   * @return {Texture|null} Returns a Texture if found or null.\n   */\n  getTexture(name) {\n    /** @type {Texture} */\n    let t = this.mTextures[name];\n\n    if (t != null)\n      return t;\n\n    for (let key in this.mAtlases) {\n      t = this.mAtlases[key].getTexture(name);\n      if (t != null)\n        return t;\n    }\n\n    return null;\n  }\n\n\n  /**\n   * Returns array of Texture by given name mask.\n   * Searches across all loaded images and atlasses.\n   *\n   * @param {string} nameMask\n   *\n   * @returns {Array<Texture>|null}\n   */\n  getTextures(nameMask) {\n    //if (nameMask == null)\n\n    let out = [];\n    let names = [];\n\n    let re = new RegExp(\"^\" + nameMask.split(\"*\").join(\".*\") + \"$\");\n\n    // collect single textures\n    for (let key in this.mTextures)\n      if (re.test(key))\n        names.push({ name: key, atlas: null });\n\n    // collect textures from all atlases\n    for (let key in this.mAtlases) {\n      let atlas = this.mAtlases[key];\n\n      for (let key2 in atlas.mSubTextures)\n        if (re.test(key2))\n          names.push({ name: key2, atlas: atlas });\n    }\n\n    AtlasTexture.naturalSort(names, 'name');\n\n    for (let i = 0; i < names.length; i++) {\n      let ao = names[i];\n\n      if (ao.atlas == null)\n        out.push(this.mTextures[ao.name]);\n      else\n        out.push(ao.atlas.mSubTextures[ao.name]);\n    }\n\n    if (out.length > 0)\n      return out;\n\n    return null;\n  }\n\n  /**\n   * Returns AtlasTexture by given name.\n   *\n   * @param {string} name The name of the Asset.\n   *\n   * @return {AtlasTexture} Returns atlas or null.\n   */\n  getAtlas(name) {\n    return this.mAtlases[name];\n  }\n\n  /**\n   * Returns Sound by given name.\n   *\n   * @param {string} name The name of the sound.\n   *\n   * @return {Audio} Returns sound or null.\n   */\n  getSound(name) {\n    return this.mSounds[name];\n  }\n\n  /**\n   * Gets/Sets default path for preloading. Usefull when url's getting too long.\n   * The asset path will be concatenated with defaultPath.\n   *\n   * @return {string}\n   */\n  get defaultPath() {\n    return this.mDefaultPath;\n  }\n\n  /**\n   * @ignore\n   * @param {string} value\n   *\n   * @return {void}\n   */\n  set defaultPath(value) {\n    this.mDefaultPath = value;\n  }\n\n  /**\n   * Returns True if all assets were loaded.\n   *\n   * @return {boolean}\n   */\n  get isAllLoaded() {\n    return this.mIsAllLoaded;\n  }\n}\n\n/**\n * Default instance. Sprite and other classes uses this instance to find textures by name.\n * @static\n * @type {AssetManager}\n */\nAssetManager.default = new AssetManager();\n","/**\n * A blend mode enum.\n * @cat drivers\n * @enum {string}\n */\n\nvar BlendMode = {\n  AUTO       : 'auto',\n  NORMAL     : 'source-over',\n  ADD        : 'lighter',\n  MULTIPLY   : 'multiply',\n  SCREEN     : 'screen',\n  OVERLAY    : 'overlay',\n  DARKEN     : 'darken',\n  LIGHTEN    : 'lighten',\n  COLOR_DODGE: 'color-dodge',\n  COLOR_BURN : 'color-burn',\n  HARD_LIGHT : 'hard-light',\n  SOFT_LIGHT : 'soft-light',\n  DIFFERENCE : 'difference',\n  EXCLUSION  : 'exclusion',\n  HUE        : 'hue',\n  SATURATE   : 'saturate',\n  COLOR      : 'color',\n  LUMINOSITY : 'luminosity'\n};\n","/**\n * Base class for custom video drivers. VideoDriver is used to render things\n * onto the screen.\n *\n * @cat drivers\n */\n\nclass VideoNullDriver {\n  /**\n   * @param  {HTMLElement} containerElement\n   * @param  {number} width\n   * @param  {number} height\n   */\n  constructor(containerElement, width, height) {\n    /**\n     * @private\n     * @type {string}\n     */\n    this.mGlobalBlendMode = 'auto';\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.mContainerElement = /**\n     * @private\n     * @type {HTMLElement} */ (containerElement\n   );\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mClientWidth = width;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mClientHeight = height;\n\n    /**\n     * @private\n     * @type {Matrix}\n     */\n    this.mTransform = new Matrix();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mGlobalAlpha = 1;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.mMeasureElement = /** @type {HTMLElement} */ (document.createElement('span'));\n    this.mMeasureElement.style.position = 'absolute';\n    this.mContainerElement.appendChild(this.mMeasureElement);\n\n    Black.instance.viewport.on('resize', this.__onResize, this);\n  }\n\n\n  /**\n   * @protected\n   * @ignore\n   * @param {type} msg\n   * @param {type} rect\n   *\n   * @returns {type}\n   */\n  __onResize(msg, rect) {\n    let w = this.mContainerElement.clientWidth;\n    let h = this.mContainerElement.clientHeight;\n\n    this.mClientWidth = w;\n    this.mClientHeight = h;\n  }\n\n  /**\n   * Initialization function.\n   *\n   * @protected\n   *\n   * @return {void}\n   */\n  start() {}\n\n\n  /**\n   * Called before rendering anything. Usually used to clear back-buffer.\n   *\n   * @protected\n   *\n   * @returns {void}\n   */\n  beginFrame() {}\n\n\n  /**\n   * Called after rendering is finished.\n   * @protected\n   *\n   * @returns {void}\n   */\n  endFrame() {}\n\n  /**\n   * @ignore\n   * @param {HTMLElement} canvas\n   * @return {Texture|null}\n   */\n  getTextureFromCanvas(canvas){\n    return null;\n  }\n\n  /**\n   * Sets world transformation for future use.\n   *\n   * @protected\n   * @param {Matrix} m An transformation matrix to store.\n   *\n   * @return {void}\n   */\n  setTransform(m) {\n    this.mTransform = m;\n  }\n\n  /**\n   * Gets/Sets the global alpha. Used to calculate alpha relative to parent\n   * object.\n   *\n   * @protected\n   *\n   * @return {number}\n   */\n  get globalAlpha() {\n    return this.mGlobalAlpha;\n  }\n\n  /**\n   * @ignore\n   * @param {number} value\n   *\n   * @return {void}\n   */\n  set globalAlpha(value) {\n    this.mGlobalAlpha = value;\n  }\n\n  /**\n   * Gets/Sets global blending mode. Used to calculate blend mode relative to\n   * parent object.\n   *\n   * @return {string}\n   */\n  get globalBlendMode() {\n    return this.mGlobalBlendMode;\n  }\n\n  /**\n   * @ignore\n   * @param {string} value\n   *\n   * @return {void}\n   */\n  set globalBlendMode(value) {\n    this.mGlobalBlendMode = value;\n  }\n\n  /**\n   * Draws image onto the back-buffer. GlobalAlpha, BlendMode and transformation\n   * matrix must be set prior to calling this method.\n   *\n   * @protected\n   *\n   * @param  {Texture} texture\n   * @param  {Texture} bounds\n   */\n  drawImage(texture, bounds) {}\n\n  /**\n   * Draws text onto back-buffer.\n   *\n   * @protected\n   *\n   * @param {string} text Text string to draw.\n   * @param {TextInfo} style The style information.\n   * @param {Rectangle} bounds Clipping bounds, text wont be drawn outside this bounds.\n   * @param {number} textWidth The width of the text.\n   * @param {number} textHeight The height of the text.\n   *\n   * @return {void}\n   */\n  drawText(text, style, bounds, textWidth, textHeight) {}\n\n\n  /**\n   * Clears back-buffer.\n   *\n   * @protected\n   *\n   * @returns {void}\n   */\n  clear() {}\n\n  /**\n   * Used to save context if extists.\n   *\n   * @ignore\n   * @protected\n   * @param {GameObject|null} gameObject Used for internal binding.\n   *\n   * @return {void}\n   */\n  save(gameObject) {}\n\n\n  /**\n   * Used to restore context if extists.\n   *\n   * @protected\n   * @ignore\n   * @returns {type}\n   */\n  restore() {}\n\n\n  /**\n   * Convers number color to hex string.\n   *\n   * @param {number} color The color to convert.\n   *\n   * @returns {string} The resuling hex string.\n   */\n  hexColorToString(color) {\n    let parsedColor = color.toString(16);\n    return '#000000'.substring(0, 7 - parsedColor.length) + parsedColor;\n  }\n\n  /**\n   * Measures text with a given style.\n   *\n   * @param {string} text    Text to measure.\n   * @param {TextInfo} style Text style to apply onto text.\n   *\n   * @return {Vector} A Vector with width and height of the text bounds.\n   */\n  measureText(text, style) {\n    let el = this.mMeasureElement;\n    el.innerHTML = text;\n    el.style.whiteSpace = 'pre';\n    el.style.fontSize = style.size + 'px';\n    el.style.fontFamily = style.name;\n    el.style.fontStyle = style.style;\n    el.style.fontWeight = style.weight;\n\n    let v = new Vector(el.offsetWidth + style.strokeThickness, el.offsetHeight + style.strokeThickness);\n    el.innerHTML = '';\n\n    return v;\n  }\n}\n","/**\n * An video driver that draw everything into DOM Canvas element.\n *\n * @cat drivers\n * @extends VideoNullDriver\n */\n\nclass CanvasDriver extends VideoNullDriver {\n  /**\n   * @param  {HTMLElement} containerElement The DOM element to draw into.\n   * @param  {number} width                 The width of the viewport.\n   * @param  {number} height                The height of the viewport.\n   */\n  constructor(containerElement, width, height) {\n    super(containerElement, width, height);\n\n    /**\n     * @private\n     * @type {CanvasRenderingContext2D|null}\n     */\n    this.mCtx = null;\n\n    this.mGlobalAlpha = 1;\n    this.mGlobalBlendMode = BlendMode.NORMAL;\n    this.mCurrentObject = null;\n\n    this.__createCanvas();\n  }\n\n  /**\n   * @private\n   * @return {void}\n   */\n  __createCanvas() {\n    let cvs = /** @type {HTMLCanvasElement} */ (document.createElement('canvas'));\n    cvs.id = 'canvas';\n    this.mContainerElement.appendChild(cvs);\n\n    this.mCtx = /** @type {CanvasRenderingContext2D} */ (cvs.getContext('2d'));\n    this.mCtx.canvas.width = this.mClientWidth;\n    this.mCtx.canvas.height = this.mClientHeight;\n  }\n\n\n  /**\n   * @private\n   * @param {Message} msg\n   * @param {Rectangle} rect\n   *\n   * @returns {void}\n   */\n  __onResize(msg, rect) {\n    super.__onResize(msg, rect);\n\n    this.mCtx.canvas.width = this.mClientWidth;\n    this.mCtx.canvas.height = this.mClientHeight;\n  }\n\n  /**\n   * @ignore\n   * @param {Matrix} m\n   *\n   * @return {void}\n   */\n  setTransform(m) {\n    super.setTransform(m);\n\n    let v = m.value;\n    this.mCtx.setTransform(v[0], v[1], v[2], v[3], v[4], v[5]);\n  }\n\n  /**\n   * @param {number} value\n   *\n   * @return {void}\n   */\n  set globalAlpha(value) {\n    this.mGlobalAlpha = value;\n    this.mCtx.globalAlpha = value;\n  }\n\n  /**\n   * @inheritDoc\n   * @override\n   *\n   * @param {string} blendMode\n   *\n   * @return {void}\n   */\n  set globalBlendMode(blendMode) {\n    if (blendMode === BlendMode.AUTO)\n      return;\n\n    this.mGlobalBlendMode = blendMode;\n    this.mCtx.globalCompositeOperation = blendMode;\n  }\n\n  /**\n   * drawImage\n   *\n   * @inheritDoc\n   * @override\n   *\n   * @param {Texture} texture\n   * @param {Rectangle} bounds\n   *\n   * @return {void}\n   */\n  drawImage(texture, bounds) {\n    let w = texture.width;\n    let h = texture.height;\n\n    let uw = texture.untrimmedRect.x;\n    let uh = texture.untrimmedRect.y;\n\n    this.mCtx.drawImage(texture.native, texture.region.x, texture.region.y, w, h, bounds.x + uw, bounds.y + uh, w, h);\n  }\n\n  /**\n   * drawText\n   *\n   * @inheritDoc\n   * @override\n   *\n   * @param {string} text\n   * @param {TextInfo} style\n   * @param {Rectangle} bounds\n   * @param {number} textWidth\n   * @param {number} textHeight\n   *\n   * @return {void}\n   */\n  drawText(text, style, bounds, textWidth, textHeight) {\n    this.mCtx.beginPath();\n    this.mCtx.rect(bounds.x, bounds.y, bounds.width, bounds.height);\n    this.mCtx.clip();\n\n    this.mCtx.font = `${style.style} ${style.weight} ${style.size}px \"${style.name}\"`;\n    this.mCtx.fillStyle = this.hexColorToString(style.color);\n\n    let x = 0;\n    let y = 0;\n    if (style.align === 'center')\n      x += (bounds.width - textWidth) * 0.5;\n    else if (style.align === 'right')\n      x += (bounds.width - textWidth);\n\n    this.mCtx.textBaseline = 'top';\n    this.mCtx.fillText(text, x + bounds.x, y + bounds.y);\n\n    if (style.strokeThickness > 0) {\n      this.mCtx.lineWidth = style.strokeThickness;\n      this.mCtx.strokeStyle = this.hexColorToString(style.strokeColor);\n      this.mCtx.strokeText(text, x, 0);\n    }\n    this.mCtx.closePath();\n  }\n\n  /**\n   * clear\n   * @inheritDoc\n   * @override\n   *\n   * @return {void}\n   */\n  clear() {\n    this.mCtx.clearRect(0, 0, this.mCtx.canvas.width, this.mCtx.canvas.height);\n  }\n\n  /**\n   * @inheritDoc\n   * @override\n   *\n   * @return {void}\n   */\n  beginFrame() {\n    super.beginFrame();\n\n    this.clear();\n    this.mCtx.save();\n  }\n\n  /**\n   * @inheritDoc\n   * @override\n   *\n   * @return {void}\n   */\n  endFrame() {\n    super.endFrame();\n\n    this.mCtx.restore();\n  }\n\n  /**\n   * @ignore\n   * @param {HTMLElement} canvas\n   *\n   * @return {Texture|null}\n   */\n  getTextureFromCanvas(canvas) {\n    return new Texture(canvas, new Rectangle(0, 0, canvas.width, canvas.height));\n  }\n\n  /**\n   * save\n   *\n   * @override\n   * @param {GameObject|null} gameObject Used for internal binding.\n   *\n   * @return {void}\n   */\n  save(gameObject) {\n    this.mCtx.save();\n    this.mCurrentObject = gameObject;\n  }\n\n  /**\n   * restore\n   *\n   * @return {void}\n   */\n  restore() {\n    this.mCtx.restore();\n  }\n}\n","/**\n * An video driver that draw everything into DOM elements itself.\n *\n * @cat drivers\n * @extends VideoNullDriver\n */\n\nclass DOMDriver extends VideoNullDriver {\n  /**\n   * @param  {HTMLElement} containerElement The DOM element to draw into.\n   * @param  {number} width                 The width of the viewport.\n   * @param  {number} height                The height of the viewport.\n   */\n  constructor(containerElement, width, height) {\n    super(containerElement, width, height);\n\n    /** @type {number} */\n    this.mGlobalAlpha = 1;\n\n    /** @type {Array<Element>} */\n    this.mCache = [];\n\n    /** @type {number} */\n    this.mCounter = 0;\n\n    /** @type {boolean} */\n    this.mPixelated = true;\n\n    /** @type {GameObject|null} */\n    this.mCurrentObject = null;\n    this.__initCSS();\n  }\n\n  /**\n   * @inheritDoc\n   * @override\n   * @param {GameObject|null} gameObject Used for internal binding.\n   *\n   * @return {void} Description\n   */\n  save(gameObject) {\n    this.mCurrentObject = gameObject;\n  }\n\n  /**\n   * @private\n   *\n   * @return {void}  description\n   */\n  __initCSS() {\n    let imgRendering = 'image-rendering:optimizeSpeed; image-rendering:optimize-contrast; image-rendering:crisp-edges; image-rendering:pixelated';\n\n    let sSprite = document.createElement('style');\n    sSprite.type = 'text/css';\n    sSprite.innerHTML = '.sprite { position: absolute; background-repeat: no-repeat; cursor: default !important; -webkit-transform-origin: 0px 0px;}';\n    document.getElementsByTagName('head')[0].appendChild(sSprite);\n\n    let sSpritePixelated = document.createElement('style');\n    sSpritePixelated.type = 'text/css';\n    sSpritePixelated.innerHTML = '.sprite-p { position: absolute; background-repeat: no-repeat; cursor: default !important; -webkit-transform-origin: 0px 0px; ' + imgRendering + '}';\n    document.getElementsByTagName('head')[0].appendChild(sSpritePixelated);\n\n    let sText = document.createElement('style');\n    sText.type = 'text/css';\n    sText.innerHTML = '.text { position: absolute; white-space: pre; overflow: hidden; cursor: default !important; -webkit-transform-origin: 0px 0px;}';\n    document.getElementsByTagName('head')[0].appendChild(sText);\n\n    let sViewport = document.createElement('style');\n    sViewport.type = 'text/css';\n    sViewport.innerHTML = '.viewport { width: 100%; height: 100%; position: relative; overflow: hidden; cursor: default; }';\n    document.getElementsByTagName('head')[0].appendChild(sViewport);\n\n    this.mContainerElement.className = 'viewport';\n  }\n\n  /**\n   * @inheritDoc\n   * @override\n   *\n   * @return {void}  description\n   */\n  beginFrame() {\n    this.mCounter = 0;\n  }\n\n  /**\n   * @inheritDoc\n   * @override\n   *\n   * @return {void}  description\n   */\n  endFrame() {\n    if (this.mCounter === this.mCache.length)\n      return;\n\n    //TODO: cleanup unused divs\n    //TODO: remove them instead of hiding\n    for (let i = this.mCounter; i < this.mCache.length; i++) {\n      let el = this.mCache[i];\n\n      el.parentNode.removeChild(el);\n    }\n\n    this.mCache.splice(this.mCounter);\n  }\n\n  /**\n   * @ignore\n   * @param {HTMLElement} canvas\n   *\n   * @return {Texture|null}\n   */\n  getTextureFromCanvas(canvas) {\n    return Texture.fromCanvasAsImage(canvas);\n  }\n\n  /**\n   * @override\n   * @inheritDoc\n   *\n   * @param  {Texture} texture\n   * @param  {Rectangle} bounds\n   * @return {void}\n   */\n  drawImage(texture, bounds) {\n    /** @type {Matrix|null} */\n    let oldTransform = this.mTransform;\n    let uw = texture.untrimmedRect.x;\n    let uh = texture.untrimmedRect.y;\n\n    this.mTransform.translate(bounds.x + uw, bounds.y + uh);\n\n    let el = this.__popElement(this.mPixelated ? 'sprite-p' : 'sprite');\n    this.__updateElementCommon(el);\n    this.__updateImageElement(el, texture);\n\n    this.mTransform = oldTransform;\n  }\n\n  /**\n   * @inheritDoc\n   * @override\n   *\n   * @param {string} text\n   * @param {TextInfo} style\n   * @param {Rectangle} bounds\n   * @param {number} textWidth\n   * @param {number} textHeight\n   *\n   * @return {void}\n   */\n  drawText(text, style, bounds, textWidth, textHeight) {\n    let el = this.__popElement('text');\n\n    this.mTransform.translate(bounds.x, bounds.y);\n\n    this.__updateElementCommon(el);\n\n    // TODO: check this type. review the code.\n    this.__updateTextElement( /** @type {HTMLElement} */ (el), text, style, bounds);\n  }\n\n  /**\n   * @private\n   * @param {string} className\n   *\n   * @return {Element}\n   */\n  __popElement(className) {\n    this.mCounter++;\n\n    if (this.mCounter <= this.mCache.length)\n      return this.mCache[this.mCounter - 1];\n\n    let el = document.createElement('div');\n    el.className = className;\n    this.mContainerElement.appendChild(el);\n\n    this.mCache.push(el);\n    return (el);\n  }\n\n  /**\n   * @private\n   * @param {Element} el\n   *\n   * @return {void}\n   */\n  __updateElementCommon(el) {\n    let v = this.mTransform.value;\n\n    // TODO: slow, rework\n    // NOTE: toFixed(0) is faster then toFixed(6)\n    let transform = `matrix(${v[0].toFixed(6)}, ${v[1].toFixed(6)}, ${v[2].toFixed(6)}, ${v[3].toFixed(6)}, ${v[4].toFixed(6)}, ${v[5].toFixed(6)})`;\n    //let transform = `matrix(${v[0]}, ${v[1]}, ${v[2]}, ${v[3]}, ${v[4]}, ${v[5]})`;\n\n    //console.log(el.style.transform, transform);\n    if (el.style.webkitTransform !== transform)\n      el.style.webkitTransform = transform;\n\n    //el.style.transform = transform;\n\n    //if (el.style.opacity != this.mGlobalAlpha)\n    el.style.opacity = this.mGlobalAlpha; // would be faster to not compare string and int\n\n    //if (el.style.backgroundImage !== '') {\n    //el.style.backgroundImage = '';\n    //console.log('reset img');\n    //}\n\n    // if (el.style.width !== null)\n    //   el.style.width = null;\n    //\n    // if (el.style.height !== null)\n    //   el.style.height = null;\n\n    // if (el.style.display === 'none')\n    //   el.style.display = 'block';\n  }\n\n  /**\n   * @private\n   * @param  {Element} el      description\n   * @param  {Texture} texture description\n   * @return {void}         description\n   */\n  __updateImageElement(el, texture) {\n    if (texture) {\n      let url = 'url(' + texture.native.src + ')';\n\n      if (el.style.backgroundImage !== url)\n        el.style.backgroundImage = url;\n\n      if (texture.isSubTexture) {\n        let vBackgroundPosition = `${-texture.region.x}px ${-texture.region.y}px`;\n\n        if (el.style.backgroundPosition !== vBackgroundPosition)\n          el.style.backgroundPosition = vBackgroundPosition;\n      }\n    } else {\n      el.style.backgroundImage = 'none';\n    }\n\n    if (el.style.width != texture.width + 'px')\n      el.style.width = texture.width + 'px';\n\n    if (el.style.height != texture.height + 'px')\n      el.style.height = texture.height + 'px';\n\n    if (el.innerHTML !== '')\n      el.innerHTML = '';\n  }\n\n  /**\n   * @private\n   * @param {HTMLElement} el\n   * @param {string} text\n   * @param {TextInfo} style\n   * @param {Rectangle} bounds\n   *\n   * @return {void}\n   */\n  __updateTextElement(el, text, style, bounds) {\n    el.innerHTML = text;\n    el.style.fontSize = style.size + 'px';\n\n    if (el.style.width !== bounds.width + 'px')\n      el.style.width = bounds.width + 'px';\n\n    if (el.style.height !== bounds.height + 'px')\n      el.style.height = bounds.height + 'px';\n\n    if (el.style.fontFamily !== style.name)\n      el.style.fontFamily = style.name;\n\n    let color = this.hexColorToString(style.color);\n\n    if (el.style.color != color)\n      el.style.color = color;\n\n    if (el.style.fontStyle !== style.style)\n      el.style.fontStyle = style.style;\n\n    if (el.style.fontWeight != style.weight)\n      el.style.fontWeight = style.weight;\n\n    if (el.style.textAlign !== style.align)\n      el.style.textAlign = style.align;\n\n    if (style.strokeThickness > 0) {\n      let strokeColor = this.hexColorToString(style.strokeColor);\n\n      if (el.style.webkitTextStrokeColor != strokeColor)\n        el.style.webkitTextStrokeColor = strokeColor;\n\n      if (el.style.webkitTextStrokeWidth != style.strokeThickness + 'px') {\n        el.style.webkitTextStrokeWidth = style.strokeThickness + 'px';\n      }\n    }\n\n    if (el.style.backgroundImage !== 'none')\n      el.style.backgroundImage = 'none';\n  }\n}\n","/**\n * An video driver that draw everything into DOM Canvas element.\n *\n * @cat drivers\n * @extends VideoNullDriver\n */\n\nclass WebGLDriver extends VideoNullDriver {\n  /**\n   * @param  {HTMLElement} containerElement description\n   * @param  {number} width            description\n   * @param  {number} height           description\n   */\n  constructor(containerElement, width, height) {\n    super(containerElement, width, height);\n\n    console.log(`WebGL`);\n\n    /** @type {Number} */\n    this.MAX_BATCH_SIZE = 65535;\n\n    /**\n     * @public\n     * @type {WebGLRenderingContext|null}\n     */\n    this.gl = null;\n    \n    /**\n     * Contains current rendering object.\n     *\n     * @private\n     * @type {DisplayObject|null}\n     */\n    this.mCurrentObject = null;\n\n    /**\n     * Counts batch objects amount.\n     * \n     * @private\n     * @type {Number|null}\n     */\n    this.mObjectsAmount = 0;\n\n    this.__createCanvas();\n\n    /** \n     * Contains WebGL context state\n     * \n     * @type {WebGLState} \n     * */\n    this.state = new WebGLState(this);\n\n    /**\n     * Manager for WebGL textures\n     *\n     * @type {WebGLTextures}\n     * */\n    this.textures = new WebGLTextures(this);\n\n    /**\n     * Program that renders sprites\n     *\n     * @type {WebGLProgram}\n     * */\n    this.program = new WebGLProgram(this);\n  }\n\n  /**\n   * __createCanvas\n   *\n   * @return {void}\n   */\n  __createCanvas() {\n    let cvs = /** @type {HTMLCanvasElement} */ (document.createElement(`canvas`));\n    cvs.id = `canvas`;\n    this.mContainerElement.appendChild(cvs);\n\n    const config = {\n      antialias         : true, // default true\n      alpha             : false,\n      premultipliedAlpha: false\n    };\n\n    this.gl = cvs.getContext(`webgl`, config) || cvs.getContext(`webgl-experimental`, config);\n    this.gl.canvas.width = this.mClientWidth;\n    this.gl.canvas.height = this.mClientHeight;\n    this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\n    this.gl.clearColor(0, 0, 0, 1);\n  }\n\n  __onResize(msg, rect) {\n    super.__onResize(msg, rect);\n\n    this.gl.canvas.width = this.mClientWidth;\n    this.gl.canvas.height = this.mClientHeight;\n    this.gl.viewport(0, 0, this.gl.drawingBufferWidth, this.gl.drawingBufferHeight);\n    this.program.resize();\n  }\n\n  save(gameObject) {\n    this.mCurrentObject = gameObject;\n  }\n\n  set globalBlendMode(blendMode) {\n    const same = this.state.checkBlendMode(blendMode);\n\n    if (!same) {\n      this.flush();\n      this.state.setBlendMode(blendMode);\n    }\n  }\n\n  drawImage(texture, bounds) {\n    const object = this.mCurrentObject;\n    const coords = texture.relativeRegion;\n    const m = this.mTransform.value;\n    const tint = object.tint || {r: 1, g: 1, b: 1};\n\n    let texSlot = this.textures.bindTexture(texture);\n\n    if (texSlot === undefined) {\n      this.flush();\n      texSlot = this.textures.bindTexture(texture);\n    }\n    \n    if (this.mObjectsAmount === this.MAX_BATCH_SIZE) {\n      this.flush();\n    }\n\n    this.mObjectsAmount++;\n    this.program.push(bounds, m, this.mGlobalAlpha, coords, texSlot, tint);\n  }\n\n  flush() {\n    this.program.draw(this.mObjectsAmount);\n    this.mObjectsAmount = 0;\n    this.textures.endBatch();\n  }\n\n  beginFrame() {\n    super.beginFrame();\n    // this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n  }\n\n  endFrame() {\n    super.endFrame();\n    this.flush();\n  }\n}\n","/**\n* Manages WebGl array buffer data for sprite program.\n* */\n\nclass WebGLBuffer {\n  constructor(renderer) {\n\n    /** @type {WebGLDriver} */\n    this.renderer = renderer;\n    \n    /** @type {WebGLRenderingContext} */\n    this.gl = renderer.gl;\n\n    /** @type {WebGLBuffer} */\n    this.mGlBuffer = this.gl.createBuffer();\n\n    /** @type {Float32Array} */\n    this.mFloatView = new Float32Array(renderer.MAX_BATCH_SIZE * 60);\n\n    /** @type {Number} */\n    this.mBatchFloatsOffset = 0;\n\n    /** @type {String[]} */\n    this.ORDER = [\n      `left`, `top`,\n      `right`, `top`,\n      `left`, `bottom`,\n      `right`, `bottom`\n    ];\n\n    renderer.state.bindArrayBuffer(this.mGlBuffer);\n  }\n\n  prepare(objectsAmount) {\n    this.renderer.state.bindArrayBuffer(this.mGlBuffer);\n    \n    const len = objectsAmount * 60;\n    const buffer = len === this.mFloatView.length ? this.mFloatView : this.mFloatView.slice(0, len);\n    \n    this.gl.bufferData(this.gl.ARRAY_BUFFER, buffer, this.gl.STATIC_DRAW);\n    this.mBatchFloatsOffset = 0;\n  }\n\n  push(bounds, m, alpha, texCoords, texSlot, tint) {\n    const floatView = this.mFloatView;\n    const ORDER = this.ORDER;\n    let floatOffset = this.mBatchFloatsOffset;\n    \n    for (let i = 0; i < 8; i += 2) {\n      floatView[floatOffset++] = bounds[ORDER[i]];\n      floatView[floatOffset++] = bounds[ORDER[i + 1]];\n      floatView[floatOffset++] = m[0];\n      floatView[floatOffset++] = m[1];\n      floatView[floatOffset++] = m[2];\n      floatView[floatOffset++] = m[3];\n      floatView[floatOffset++] = m[4];\n      floatView[floatOffset++] = m[5];\n      floatView[floatOffset++] = alpha;\n      floatView[floatOffset++] = texCoords[ORDER[i]];\n      floatView[floatOffset++] = texCoords[ORDER[i + 1]];\n      floatView[floatOffset++] = texSlot;\n      floatView[floatOffset++] = tint.r;  // todo tint to UNSIGNED_BYTE\n      floatView[floatOffset++] = tint.g;\n      floatView[floatOffset++] = tint.b;\n    }\n    \n    this.mBatchFloatsOffset = floatOffset;\n  }\n}\n","/**\n * Manages WebGl element buffer data for sprite program.\n * */\n\nclass WebGLElementBuffer {\n  constructor(renderer) {\n\n    /** @type {WebGLDriver} */\n    this.renderer = renderer;\n\n    /** @type {WebGLRenderingContext} */\n    this.gl = renderer.gl;\n\n    /** @type {Number[]} */\n    this.mTemplate = [0, 1, 2, 3, 3, 4];\n\n    /** @type {Uint16Array} */\n    this.mData = new Uint16Array(renderer.MAX_BATCH_SIZE * 6 - 2);\n\n    /** @type {WebGLBuffer} */\n    this.mGlBuffer = this.gl.createBuffer();\n\n    for (let i = 0, l = this.mData.length; i < l; i++) {\n      this.mData[i] = this.mTemplate[i % 6] + (i / 6 | 0) * 4;\n    }\n    \n    this.renderer.state.bindElementBuffer(this.mGlBuffer);\n    this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, this.mData, this.gl.STATIC_DRAW);\n  }\n\n  prepare(objectsAmount) {\n    this.renderer.state.bindElementBuffer(this.mGlBuffer);\n    // if (this.mData.length >= objectsAmount * 6 - 2) return;\n    //\n    // this.mData = new Uint16Array(objectsAmount * 6 - 2);\n    //\n    // for (let i = 0, l = this.mData.length; i < l; i++) {\n    //   this.mData[i] = this.mTemplate[i % 6] + (i / 6 | 0) * 4;\n    // }\n    //\n    // this.renderer.state.bindElementBuffer(this.mGlBuffer);\n    // this.gl.bufferData(this.gl.ELEMENT_ARRAY_BUFFER, this.mData, this.gl.STATIC_DRAW);\n  }\n}\n","const vertexShaderSource = `\n  attribute vec2 aVertexPos;\n  attribute vec4 aModelMatrix;\n  attribute vec2 aModelPos;\n  attribute float aAlpha;\n  attribute vec2 aTexCoord;\n  attribute float aTexSlot;\n  attribute vec3 aTint;\n  \n  varying vec2 vTexCoord;\n  varying float vTexSlot;\n  varying vec4 vColor;\n\n  uniform vec2 uProjection;\n\n  void main() {\n    vec2 pos = mat2(aModelMatrix) * aVertexPos + aModelPos;\n    gl_Position = vec4(pos.x * uProjection.x - 1.0, -pos.y * uProjection.y + 1.0, 0.0, 1.0);\n    \n    vTexCoord = aTexCoord;\n    vTexSlot = aTexSlot + 0.5;\n    vColor = vec4(aTint * aAlpha, aAlpha);\n  }\n`;\n\nconst fragmentShaderSource = `\n  precision lowp float;\n  \n  varying vec2 vTexCoord;\n  varying float vTexSlot;\n  varying vec4 vColor;\n  \n  uniform sampler2D uSamplers[MAX_TEXTURE_IMAGE_UNITS];\n  \n  void main() {\n    int texSlot = int(vTexSlot);\n    \n    for (int i = 0; i < MAX_TEXTURE_IMAGE_UNITS; i++) {\n      if (i == texSlot) {\n        gl_FragColor = texture2D(uSamplers[i], vTexCoord) * vColor;\n        return;\n      }\n    }\n  }\n`;\n\n/**\n * A WebGLProgram manage data for render simple sprites batch. Contains WebGl program cra.\n *\n */\n\n\nclass WebGLProgram {\n  constructor(renderer) {\n\n    /** @type {WebGLDriver} */\n    this.renderer = renderer;\n\n    /** @type {WebGLRenderingContext} */\n    this.gl = renderer.gl;\n\n    const vertexShader = this.gl.createShader(this.gl.VERTEX_SHADER);\n    const fragmentShader = this.gl.createShader(this.gl.FRAGMENT_SHADER);\n\n    this.gl.shaderSource(vertexShader, vertexShaderSource);\n    this.gl.shaderSource(fragmentShader, fragmentShaderSource.replace(/MAX_TEXTURE_IMAGE_UNITS/g, renderer.textures.MAX_TEXTURE_IMAGE_UNITS));\n    this.gl.compileShader(vertexShader);\n    this.gl.compileShader(fragmentShader);\n\n    this.mGlProgram = this.gl.createProgram();\n    this.gl.attachShader(this.mGlProgram, vertexShader);\n    this.gl.attachShader(this.mGlProgram, fragmentShader);\n    this.gl.linkProgram(this.mGlProgram);\n    this.gl.deleteShader(vertexShader);\n    this.gl.deleteShader(fragmentShader);\n\n    /**\n     * Contains attributes location on GPU program.\n     *\n     * @type {Object} */\n    this.mAttributes = {\n      aVertexPos  : this.gl.getAttribLocation(this.mGlProgram, `aVertexPos`),\n      aModelMatrix: this.gl.getAttribLocation(this.mGlProgram, `aModelMatrix`),\n      aModelPos   : this.gl.getAttribLocation(this.mGlProgram, `aModelPos`),\n      aAlpha      : this.gl.getAttribLocation(this.mGlProgram, `aAlpha`),\n      aTexCoord   : this.gl.getAttribLocation(this.mGlProgram, `aTexCoord`),\n      aTexSlot    : this.gl.getAttribLocation(this.mGlProgram, `aTexSlot`),\n      aTint       : this.gl.getAttribLocation(this.mGlProgram, `aTint`)\n    };\n\n    /**\n     * Contains uniforms location on GPU program.\n     *\n     * @type {Object} */\n    this.mUniforms = {\n      uProjection: this.gl.getUniformLocation(this.mGlProgram, `uProjection`),\n      uSamplers  : this.gl.getUniformLocation(this.mGlProgram, `uSamplers`)\n    };\n\n    renderer.state.useProgram(this.mGlProgram);\n\n    this.gl.uniform1iv(this.mUniforms.uSamplers, new Int32Array(renderer.textures.MAX_TEXTURE_IMAGE_UNITS).map((v, i) => i));\n    this.resize();\n\n    /** @type {WebGLBuffer} */\n    this.mBuffer = new WebGLBuffer(renderer);\n    this.push = this.mBuffer.push.bind(this.mBuffer);\n\n    const stride = Float32Array.BYTES_PER_ELEMENT * 15;\n    const float = this.gl.FLOAT;\n    const floatSize = Float32Array.BYTES_PER_ELEMENT;\n    \n    this.enableAttribute(this.mAttributes.aVertexPos, 2, float, false, stride, 0);        // vec 2\n    this.enableAttribute(this.mAttributes.aModelMatrix, 4, float, false, stride, 2 * floatSize);  // vec 4\n    this.enableAttribute(this.mAttributes.aModelPos, 2, float, false, stride, 6 * floatSize);     // vec 2          \n    this.enableAttribute(this.mAttributes.aAlpha, 1, float, false, stride, 8 * floatSize);       // float\n    this.enableAttribute(this.mAttributes.aTexCoord, 2, float, false, stride, 9 * floatSize);     // vec 2\n    this.enableAttribute(this.mAttributes.aTexSlot, 1, float, false, stride, 11 * floatSize);     // float  // uint\n    this.enableAttribute(this.mAttributes.aTint, 3, float, false, stride, 12 * floatSize);        // vec 3  // uint * 3\n\n    /** @type {WebGLElementBuffer} */\n    this.mElementBuffer = new WebGLElementBuffer(renderer);\n  }\n\n  enableAttribute(index, size, type, normalize, stride, offset) {\n    this.gl.vertexAttribPointer(index, size, type, normalize, stride, offset);\n    this.gl.enableVertexAttribArray(index);\n  }\n\n  resize() {\n    this.gl.uniform2f(this.mUniforms.uProjection, 2 / this.gl.drawingBufferWidth, 2 / this.gl.drawingBufferHeight);\n  }\n\n  draw(objectsAmount) {\n    if (!objectsAmount) return;\n\n    this.renderer.state.useProgram(this.mGlProgram);\n\n    this.mElementBuffer.prepare(objectsAmount);\n    this.mBuffer.prepare(objectsAmount);\n\n    this.gl.drawElements(this.gl.TRIANGLE_STRIP, objectsAmount * 6 - 2, this.gl.UNSIGNED_SHORT, 0);\n  }\n}\n","\nclass WebGLState {\n  constructor(renderer) {\n    this.renderer = renderer;\n    this.gl = renderer.gl;\n\n    /** @type {WebGLBuffer} */\n    this.mBoundArrayBuffer = null;\n\n    /** @type {WebGLBuffer} */\n    this.mBoundElementBuffer = null;\n\n    /** @type {WebGLTexture} */\n    this.mBoundTexture = null;\n\n    /** @type {WebGLTexture} */\n    this.mActiveTexture = null;\n\n    /** @type {WebGLProgram} */\n    this.mProgram = null;\n\n    /** @type {BlendMode} */\n    this.mBlendMode = null;\n\n    this.gl.enable(this.gl.BLEND);\n    this.gl.blendFunc(this.gl.SRC_ALPHA, this.gl.ONE_MINUS_SRC_ALPHA);\n  }\n\n  bindArrayBuffer(buffer) {\n    if (buffer === this.mBoundArrayBuffer) return;\n\n    this.gl.bindBuffer(this.gl.ARRAY_BUFFER, buffer);\n    this.mBoundArrayBuffer = buffer;\n  }\n  \n  bindElementBuffer(buffer) {\n    if (buffer === this.mBoundElementBuffer) return;\n\n    this.gl.bindBuffer(this.gl.ELEMENT_ARRAY_BUFFER, buffer);\n    this.mBoundElementBuffer = buffer;\n  }\n  \n  bindTexture(texture) {\n    if (texture === this.mBoundTexture) return;\n    \n    this.gl.bindTexture(this.gl.TEXTURE_2D, texture);\n    this.mBoundTexture = texture;\n  }\n\n  setActiveTexture(slot) {\n    if (slot === this.mActiveTexture) return;\n    \n    this.gl.activeTexture(slot);\n    this.mActiveTexture = slot;\n  }\n\n  useProgram(program) {\n    if (program === this.mProgram) return;\n\n    this.gl.useProgram(program);\n    this.mProgram = program;\n  }\n  \n  setBlendMode(blend) {\n    if (blend === this.mBlendMode) return;\n\n    this.mBlendMode = blend;\n    const blendEquation = WebGLBlendMode(blend, this.gl);\n    this.gl.blendFunc(blendEquation.src, blendEquation.dst);\n    \n    return true;\n  }\n  \n  checkBlendMode(blend) {\n    return blend === this.mBlendMode;\n  }\n}\n","\nclass WebGLTextures {\n  constructor(renderer) {\n\n    /** @type {WebGLDriver} */\n    this.renderer = renderer;\n\n    /** @type {WebGLRenderingContext} */\n    this.gl = renderer.gl;\n\n    this.MAX_TEXTURE_IMAGE_UNITS = this.gl.getParameter(this.gl.MAX_TEXTURE_IMAGE_UNITS);\n    this.gl.pixelStorei(this.gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, true);\n\n    /** @type {WebGLTextures[]} */\n    this.mBoundTextures = new Array(this.MAX_TEXTURE_IMAGE_UNITS).fill(null);\n    \n    /** @type {WebGLTextures[]} */\n    this.mBatchTextures = new Array(this.MAX_TEXTURE_IMAGE_UNITS).fill(null);\n\n    /** @type {WebGLTextures[]} */\n    this.mGlTextures = [];\n    \n    const canvas = document.createElement(`canvas`);\n    const ctx = canvas.getContext(`2d`);\n    canvas.width = canvas.height = 8;\n    ctx.fillRect(0, 0, 8, 8);\n\n    for (let i = 0; i < this.MAX_TEXTURE_IMAGE_UNITS; i++) {\n      const glTexture = this.mGlTextures[i] = this.gl.createTexture();\n\n      this.gl.activeTexture(this.gl[`TEXTURE${i}`]);\n      this.gl.bindTexture(this.gl.TEXTURE_2D, glTexture);\n      this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, canvas);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MAG_FILTER, this.gl.NEAREST);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_MIN_FILTER, this.gl.NEAREST);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_S, this.gl.CLAMP_TO_EDGE);\n      this.gl.texParameteri(this.gl.TEXTURE_2D, this.gl.TEXTURE_WRAP_T, this.gl.CLAMP_TO_EDGE);\n    }\n  }\n\n  bindTexture(texture) {\n    let index = this.mBoundTextures.indexOf(texture);\n\n    if (index === -1) {\n\n      index = this.mBoundTextures.indexOf(null);\n      index = index === -1 ? this.mBatchTextures.indexOf(null) : index;\n\n      if (index === -1) return;\n\n      this.renderer.state.setActiveTexture(this.gl[`TEXTURE${index}`]);\n      this.renderer.state.bindTexture(this.mGlTextures[index]);\n      this.gl.texImage2D(this.gl.TEXTURE_2D, 0, this.gl.RGBA, this.gl.RGBA, this.gl.UNSIGNED_BYTE, texture.native);\n      // todo texture settings repeat nearest clamp from sprite\n    }\n\n    this.mBoundTextures[index] = texture;\n    this.mBatchTextures[index] = texture;\n\n    return index;\n  }\n  \n  endBatch() {\n    this.mBatchTextures.fill(null);\n  }\n}\n","/**\n * Maps black blend modes to WebGl blend functions.\n */\n\nvar WebGLBlendMode = (blendMode, gl) => {\n  var map = {\n    [BlendMode.NORMAL]     : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\n    [BlendMode.ADD]        : {src: gl.ONE, dst: gl.DST_ALPHA},\n    [BlendMode.MULTIPLY]   : {src: gl.DST_COLOR, dst: gl.ONE_MINUS_SRC_ALPHA},\n    [BlendMode.SCREEN]     : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_COLOR},\n    [BlendMode.OVERLAY]    : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\n    [BlendMode.DARKEN]     : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\n    [BlendMode.LIGHTEN]    : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\n    [BlendMode.COLOR_DODGE]: {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\n    [BlendMode.COLOR_BURN] : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\n    [BlendMode.HARD_LIGHT] : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\n    [BlendMode.SOFT_LIGHT] : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\n    [BlendMode.DIFFERENCE] : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\n    [BlendMode.EXCLUSION]  : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\n    [BlendMode.HUE]        : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\n    [BlendMode.SATURATE]   : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\n    [BlendMode.COLOR]      : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA},\n    [BlendMode.LUMINOSITY] : {src: gl.ONE, dst: gl.ONE_MINUS_SRC_ALPHA}\n  };\n\n  return (WebGLBlendMode = blendMode => map[blendMode])(blendMode);\n};","/**\n * The base class for all renderable objects. Adds `alpha` and `visible` properties to GameObject.\n *\n * @cat display\n * @extends GameObject\n */\n\nclass DisplayObject extends GameObject {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mAlpha = 1;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.blendMode = BlendMode.NORMAL;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mVisible = true;\n  }\n\n  /**\n   * @ignore\n   * @param {VideoNullDriver} video\n   * @param {number} time\n   * @param {number} parentAlpha\n   * @param {string} parentBlendMode\n   *\n   * @return {void}\n   */\n  __render(video, time, parentAlpha, parentBlendMode) {\n    if (this.mVisible === false)\n      return;\n\n    this.onRender(video, time);\n\n    let child = null;\n    for (var i = 0; i < this.mChildren.length; i++) {\n      child = this.mChildren[i];\n      child.__render(video, time, parentAlpha, parentBlendMode);\n    }\n  }\n\n  /**\n   * Gets/Sets the opacity of the object.\n   *\n   * @return {number}\n   */\n  get alpha() {\n    return this.mAlpha;\n  }\n\n  /**\n   * @ignore\n   * @param {number} value\n   * @return {void}\n   */\n  set alpha(value) {\n    this.mAlpha = Math.clamp(value, 0, 1);\n  }\n\n\n  /**\n   * Gets/Sets visibility of the object.\n   *\n   * @return {boolean}\n   */\n  get visible() {\n    return this.mVisible;\n  }\n\n\n  /**\n   * @ignore\n   * @param {boolean} value\n   * @return {void}\n   */\n  set visible(value) {\n    this.mVisible = value;\n  }\n}\n","/**\n * Holds TextField's style details.\n *\n * @cat display.text\n */\n\nclass TextInfo {\n  /**\n   * @param  {string=} name Font name\n   * @param  {number=} color = Text color as hexadecimal number eg 0xff0000 (total red)\n   * @param  {number=} size = Text size\n   * @param  {TextInfo.FontStyle=} style = Text style eg italic\n   * @param  {TextInfo.FontWeight=} weight = font thick. The value is set from 100 to 900 in increments of 100.\n   * @param  {TextInfo.FontAlign=} align = horizontal alignment left | center | right\n   * @param  {number=} strokeThickness = thickness of the stroke. 0 means that no stroke\n   * @param  {number=} strokeColor = stroke color as hexadecimal number eg 0x00ff00 (total green)\n   */\n  constructor(name = 'sans-serif', color = 0x000000, size = 14, style = TextInfo.FontStyle.NORMAL, weight = TextInfo.FontWeight.NORMAL, align = TextInfo.FontAlign.LEFT, strokeThickness = 0, strokeColor = 0xffffff) {\n\n    /** @type {string} */\n    this.name = name;\n\n    /** @type {number} */\n    this.size = size;\n\n    /** @type {number} */\n    this.color = color;\n\n    /** @type {TextInfo.FontStyle} */\n    this.style = style;\n\n    /** @type {TextInfo.FontWeight} */\n    this.weight = weight;\n\n    /** @type {TextInfo.FontAlign} */\n    this.align = align;\n\n    /** @type {number} */\n    this.strokeThickness = strokeThickness;\n\n    /** @type {number} */\n    this.strokeColor = strokeColor;\n  }\n}\n\n/**\n * @enum {string}\n */\nTextInfo.FontStyle = {\n  NORMAL: 'normal',\n  ITALIC: 'italic'\n};\n\n/**\n * @enum {string}\n */\nTextInfo.FontWeight = {\n  NORMAL: '400',\n  BOLD: '700',\n  SUPERBOLD: '800'\n};\n\n/**\n * @enum {string}\n */\nTextInfo.FontAlign = {\n  LEFT: 'left',\n  RIGHT: 'right',\n  CENTER: 'center'\n};\n","/**\n * Sprite is used to render Texture onto screen.\n *\n * @cat display\n * @extends DisplayObject\n */\n\nclass Sprite extends DisplayObject {\n\n  /**\n   * constructor - Creates a new Sprite object instance.\n   *\n   * @param {Texture|string|null} texture The Texture instance or null.\n   */\n  constructor(texture = null) {\n    super();\n\n    /**\n     * @private\n     * @type {Texture|null} */\n    this.mTexture = null;\n\n    if (texture !== null && texture.constructor === String)\n      this.mTexture = AssetManager.default.getTexture(/** @type {string} */ (texture));\n    else\n      this.mTexture = /** @type {Texture} */ (texture);\n\n    /**\n     * @protected\n     * @type {Object}\n     */\n    this.mTint = {r: 1, g: 1, b: 1}; // todo\n  }\n\n  /**\n   * tint - Returns sprite tint object.\n   *\n   * @return {Object} The current texture set on this Sprite or null.\n   */\n  get tint() {\n    return this.mTint;\n  }\n\n  /**\n   * @override\n   * @private\n   * @param {VideoNullDriver} video\n   * @param {number} time\n   * @param {number} parentAlpha\n   * @param {string} parentBlendMode\n   *\n   * @return {void}\n   */\n  __render(video, time, parentAlpha, parentBlendMode) {\n    if (this.mAlpha <= 0 || this.mVisible === false)\n      return;\n\n    let tmpBlendMode = BlendMode.AUTO;\n\n    if (this.mTexture !== null) {\n      video.save(this);\n      video.setTransform(this.worldTransformation);\n      video.globalAlpha = parentAlpha * this.mAlpha;\n      video.globalBlendMode = tmpBlendMode = this.blendMode === BlendMode.AUTO ? parentBlendMode : this.blendMode;\n      video.drawImage(this.mTexture, this.onGetLocalBounds(Rectangle.__cache));\n      video.restore();\n    }\n\n    super.__render(video, time, parentAlpha * this.mAlpha, tmpBlendMode);\n  }\n\n  /**\n   * onGetLocalBounds - Returns a rectangle that completely encloses the object in local coordinate system.\n   *\n   * @override\n   * @protected\n   * @param {Rectangle=} outRect Description\n   *\n   * @return {Rectangle} The new Rectangle or outRect with .\n   */\n  onGetLocalBounds(outRect = undefined) {\n    outRect = outRect || new Rectangle();\n\n    if (!this.mTexture)\n      return outRect;\n\n    return outRect.set(-this.mPivotX, -this.mPivotY, this.mTexture.untrimmedRect.width, this.mTexture.untrimmedRect.height);\n  }\n\n  /**\n   * texture - Returns the current Texture on this sprite.\n   *\n   * @return {Texture|null} The current texture set on this Sprite or null.\n   */\n  get texture() {\n    return this.mTexture;\n  }\n\n  /**\n   * texture - Sets the Texture on this sprite.\n   *\n   * @param {Texture|null} texture Texture to apply on.\n   *\n   * @return {void}\n   */\n  set texture(texture) {\n    if (this.mTexture === texture)\n      return;\n\n    this.mTexture = texture;\n  }\n\n  set touchable(value) {\n    let c = this.getComponent(InputComponent);\n\n    if (value === true) {\n      if (c === null)\n        this.addComponent(new InputComponent());\n      else\n        c.touchable = true;\n    } else {\n      if (c !== null)\n        this.removeComponent(c);\n    }\n  }\n\n  get touchable() {\n    let c = this.getComponent(InputComponent);\n    return c !== null && c.touchable === true;\n  }\n}\n","/**\n * This class is used to create display text.\n *\n * @cat display.text\n * @extends DisplayObject\n */\n\nclass TextField extends DisplayObject {\n  /**\n   * @param  {string=} text Text to be displayed inside this text field\n   * @param  {number=} size text size\n   * @param  {string=} name font name\n   * @param {TextInfo=} style TextInfo object\n   */\n  constructor(text = '', size = 14, name = 'sans-serif', style = undefined) {\n    super();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.mText = text;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mNeedInvalidate = true;\n\n    /**\n     * @private\n     * @type {Rectangle}\n     */\n    this.mCacheBounds = new Rectangle();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mFieldWidth = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mFieldHeight = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mTextWidth = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mTextHeight = 0;\n\n    /**\n     * @private\n     * @type {TextInfo}\n     */\n    this.mStyle = style || new TextInfo();\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.mStyle.name = name || style.name;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mStyle.size = size || style.size;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mAutoSize = true;\n\n    this.__validate(this.mCacheBounds);\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @protected\n   * @param {VideoNullDriver} video\n   * @param {number} time\n   * @param {number} parentAlpha\n   * @param {string} parentBlendMode\n   *\n   * @return {void}\n   */\n  __render(video, time, parentAlpha, parentBlendMode) {\n    if (this.mAlpha <= 0 || this.mVisible === false)\n      return;\n\n    this.__validate(this.mCacheBounds);\n\n    let tmpBlendMode = BlendMode.AUTO;\n\n    video.save(this);\n    video.setTransform(this.worldTransformation);\n    video.globalAlpha = parentAlpha * this.mAlpha;\n    video.globalBlendMode = tmpBlendMode = this.blendMode === BlendMode.AUTO ? parentBlendMode : this.blendMode;\n\n    video.drawText(this.mText, this.mStyle, this.mCacheBounds, this.mTextWidth, this.mTextHeight);\n    video.restore();\n\n    super.__render(video, time, parentAlpha * this.mAlpha, tmpBlendMode);\n  }\n\n  /**\n   * @protected\n   * @override\n   * @ignore\n   * @param {Rectangle=} outRect\n   *\n   * @return {Rectangle}\n   */\n  onGetLocalBounds(outRect = undefined) {\n    outRect = outRect || new Rectangle();\n    return this.__validate(outRect);\n  }\n\n  /**\n   * @private\n   * @ignore\n   * @param {Rectangle} outRect\n   *\n   * @return {Rectangle}\n   */\n  __validate(outRect) {\n    let strokeCorrection = 0 - this.mStyle.strokeThickness * 0.5;\n    if (this.mNeedInvalidate === false)\n      return outRect.set(strokeCorrection, strokeCorrection, this.mFieldWidth, this.mFieldHeight);\n\n    let driver = Black.instance.video;\n    let vSize = driver.measureText(this.mText, this.mStyle);\n    this.mTextWidth = vSize.x;\n    this.mTextHeight = vSize.y;\n\n    if (this.mAutoSize) {\n      this.mFieldWidth = this.mTextWidth;\n      this.mFieldHeight = this.mTextHeight;\n    }\n\n    return outRect.set(strokeCorrection-this.mPivotX, strokeCorrection-this.mPivotY, this.mFieldWidth, this.mFieldHeight);\n  }\n\n\n  /**\n   * Get/Set text size.\n   *\n   * @return {number}\n   */\n  get size() {\n    return this.mStyle.size;\n  }\n\n  /**\n   * @param {number} value\n   * @ignore\n   *\n   * @return {void}\n   */\n  set size(value) {\n    this.mStyle.size = value;\n    this.mNeedInvalidate = true;\n  }\n\n  /**\n   * Get/Set text font.\n   *\n   * @return {string}\n   */\n  get font() {\n    return this.mStyle.name;\n  }\n\n  /**\n   * @param {string} value\n   * @ignore\n   *\n   * @return {void}\n   */\n  set font(value) {\n    this.mStyle.name = value;\n    this.mNeedInvalidate = true;\n  }\n\n  /**\n   * Specifies text color as hexadecimal number eg 0xff0000 (total red)\n   *\n   * @return {number}\n   */\n  get color() {\n    return this.mStyle.color;\n  }\n\n  /**\n   * @param {number} value\n   * @ignore\n   *\n   * @return {void}\n   */\n  set color(value) {\n    this.mStyle.color = value;\n  }\n\n  /**\n   * Get/Set text style.\n   *\n   * @return {TextInfo.FontStyle}\n   */\n  get style() {\n    return this.mStyle.style;\n  }\n\n  /**\n   *\n   * @param {TextInfo.FontStyle} value\n   * @ignore\n   *\n   * @return {void}\n   */\n  set style(value) {\n    this.mStyle.style = value;\n    this.mNeedInvalidate = true;\n  }\n\n  /**\n   * Specifies the font thick. The value is set from 100 to 900 in increments of 100.\n   *\n   * @return {TextInfo.FontWeight}\n   */\n  get weight() {\n    return this.mStyle.weight;\n  }\n\n  /**\n   * @param {TextInfo.FontWeight} value\n   * @ignore\n   *\n   * @return {void}\n   */\n  set weight(value) {\n    this.mStyle.weight = value;\n    this.mNeedInvalidate = true;\n  }\n\n  /**\n   * Specifies the horizontal alignment left | center | right\n   *\n   * @return {TextInfo.FontAlign}\n   */\n  get align() {\n    return this.mStyle.align;\n  }\n\n  /**\n   * @param {TextInfo.FontAlign} value\n   * @ignore\n   *\n   * @return {void}\n   */\n  set align(value) {\n    this.mStyle.align = value;\n  }\n\n  /**\n   * Specifies stroke color as hexadecimal number eg 0xff0000 (total red)\n   * @return {number}\n   */\n  get strokeColor() {\n    return this.mStyle.strokeColor;\n  }\n\n  /**\n   * @param {number} value\n   * @ignore\n   *\n   * @return {void}\n   */\n  set strokeColor(value) {\n    this.mStyle.strokeColor = value;\n  }\n\n  /**\n   * Specifies the thickness of the stroke. 0 means that no stroke\n   * @return {number}\n   */\n  get strokeThickness() {\n    return this.mStyle.strokeThickness;\n  }\n\n  /**\n   * @param {number} value\n   * @ignore\n   *\n   * @return {void}\n   */\n  set strokeThickness(value) {\n    if (value === this.mStyle.strokeThickness)\n      return;\n\n    this.mStyle.strokeThickness = value;\n    this.mNeedInvalidate = true;\n  }\n\n  /**\n   * Specifies the width of the text field. If autoSize set as false\n   *\n   * @return {number}\n   */\n  get fieldWidth() {\n    return this.mFieldWidth;\n  }\n\n  /**\n   * @param {number} value\n   * @ignore\n   *\n   * @return {void}\n   */\n  set fieldWidth(value) {\n    if (this.mAutoSize || value === this.mFieldWidth)\n      return;\n\n    this.mFieldWidth = value;\n    this.mNeedInvalidate = true;\n  }\n\n  /** Specifies the height of the text field, if autoSize set as false\n   *\n   * @return {number}\n   */\n  get fieldHeight() {\n    return this.mFieldHeight;\n  }\n\n\n  /**\n   * @param {number} value\n   * @ignore\n   *\n   * @return {void}\n   */\n  set fieldHeight(value) {\n    if (this.mAutoSize || value === this.mFieldHeight)\n      return;\n\n    this.mFieldHeight = value;\n    this.mNeedInvalidate = true;\n  }\n\n  /**Text to be displayed inside this text field.\n\n   * @return {string}\n   */\n  get text() {\n    return this.mText;\n  }\n\n  /**\n   * @param {string} value\n   * @ignore\n   *\n   * @return {void}\n   */\n  set text(value) {\n    if (this.mText === value)\n      return;\n\n    this.mText = value;\n    this.mNeedInvalidate = true;\n  }\n\n  /**\n   * Determines whether the size of the field will adjust to the size of the text. Note: if this set as true, you need to specify fieldHeight and fieldWidth manually\n   *\n   * @return {boolean}\n   */\n  get autoSize() {\n    return this.mAutoSize;\n  }\n\n  /**\n   * @param {boolean} value\n   * @ignore\n   *\n   * @return {void}\n   */\n  set autoSize(value) {\n    if (this.mAutoSize === value)\n      return;\n\n    this.mAutoSize = value;\n    this.mNeedInvalidate = true;\n  }\n}\n","/**\n * Contains system functions.\n * @static\n * @cat system\n */\n\nclass Device {\n  /**\n   * Static class.\n   */\n  constructor() {\n    /**\n     * @private\n     * @type {Device}\n     */\n    this.constructor.mInstance = this;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mPixelRatio = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    Device.mInstance.mPixelRatio = Device.getDevicePixelRatio();\n  }\n\n  /**\n   * Returns current OS name.\n   * @return {string}\n   */\n  static get os() {\n    var userAgent = navigator.userAgent || navigator.vendor || window.opera;\n\n    if (/windows phone/i.test(userAgent))\n      return 'Windows Phone';\n\n    if (/android/i.test(userAgent))\n      return 'Android';\n\n    if (/iPad|iPhone|iPod/.test(userAgent)/* && !window.MSStream*/)\n      return 'iOS';\n\n    return 'unknown';\n  }\n\n  /**\n   * Returns True if touch screen is present.\n   *\n   * @return {boolean}\n   */\n  static get isTouch() {\n    let hasEvent = 'ontouchstart' in window;\n    if (hasEvent)\n      return true;\n\n    if (navigator.maxTouchPoints > 0)\n      return true;\n\n    return false;\n  }\n\n  /**\n   * Returns True if engine is running on mobile device.\n   *\n   * @return {boolean}\n   */\n  static get isMobile() {\n    return /Mobi/.test(navigator.userAgent);\n  }\n\n  /**\n   * Returns screen pixel ratio.\n   *\n   * @return {number}\n   */\n  static get pixelRatio() {\n    return Device.mInstance.mPixelRatio;\n  }\n\n  /**\n   * @private\n   *\n   * @suppress {missingProperties}\n   *\n   * @return {number} Description\n   */\n  static getDevicePixelRatio() {\n    if (window.screen.systemXDPI !== undefined && window.screen.logicalXDPI !== undefined && window.screen.systemXDPI > window.screen.logicalXDPI)\n      return window.screen.systemXDPI / window.screen.logicalXDPI;\n    else if (window.devicePixelRatio !== undefined)\n      return window.devicePixelRatio;\n\n    return 1;\n  }\n\n}\n\n/**\n * @private\n * @type {Device}\n * @nocollapse\n */\nDevice.mInstance = null;\n","/**\n * Base class for distribution objects.\n *\n * @cat scatters\n */\n\nclass Scatter {\n  /**\n   * Creates new Scatter instance.\n   */\n  constructor() {}\n\n  /**\n   * Returns random value.\n   * @return {*} Any object.\n   */\n  getValue() {}\n\n  /**\n   * Returns value at given position.\n   *\n   * @param {number} t Position to get value at.\n   *\n   * @return {*} Any object.\n   */\n  getValueAt(t) {}\n}\n","/**\n * A number scatter for defining a range in 1D space.\n *\n * @cat scatters\n * @extends Scatter\n */\n\nclass FloatScatter extends Scatter {\n  /**\n   * Creates new FloatScatter instance.\n   *\n   * @param {number}      min             The min value along x-axis.\n   * @param {number}      [max=undefined] The max value along x-axis.\n   * @param {function(Number):Number} [ease=null]     Easing function.\n   */\n  constructor(min, max = undefined, ease = null) {\n    super();\n\n    // NOTE: dont make us @private @member\n\n    /** @type {Number} */\n    this.min = min;\n\n    /** @type {Number} */\n    this.max = max == null ? min : max;\n\n    /** @type {function(Number):Number} */\n    this.ease = ease;\n  }\n\n  /**\n   * Returns random number withing defined range.\n   *\n   * @override\n   *\n   * @return {number} Random number.\n   */\n  getValue() {\n    return Math.random() * (this.max - this.min) + this.min;\n  }\n\n  /**\n   * Returns value at given position within defined range.\n   *\n   * @override\n   * @param {number} t The position.\n   *\n   * @return {number} Number at given position.\n   */\n  getValueAt(t) {\n    if (this.ease !== null)\n      t = this.ease(t);\n\n    return this.min + t * (this.max - this.min);\n  }\n}\n","/**\n * A number scatter for defining a range in 2D space.\n *\n * @cat scatters\n * @extends Scatter\n */\n\nclass VectorScatter extends Scatter {\n  /**\n   * Creates new VectorScatter instance.\n   *\n   * @param {number} minX The min value along x-axis.\n   * @param {number} minY The min value along y-axis.\n   * @param {number} maxX The max value along x-axis.\n   * @param {number} maxY The max value along y-axis.\n   */\n  constructor(minX, minY, maxX, maxY) {\n    super();\n\n    // NOTE: dont make us @private @member\n    this.minX = minX;\n    this.minY = minY;\n    this.maxX = maxX;\n    this.maxY = maxY;\n  }\n\n  /**\n   * Returns a random Vector object at given position within a range specified\n   * in the constructor.\n   * @override\n   *\n   * @return {Vector} Vector object with random values withing defined range.\n   */\n  getValue() {\n    let outVector = new Vector();\n    outVector.x = Math.random() * (this.maxX - this.minX) + this.minX;\n    outVector.y = Math.random() * (this.maxY - this.minY) + this.minY;\n    return outVector;\n  }\n\n  /**\n   * Returns a Vector object at given position.\n   * @override\n   *\n   * @param {number} t The position.\n   *\n   * @return {Vector} Vector object representing values in a range at\n   * given position.\n   */\n  getValueAt(t) {\n    let outVector = new Vector();\n    outVector.x = this.minX + t * (this.maxX - this.minX);\n    outVector.y = this.minY + t * (this.maxY - this.minY);\n    return outVector;\n  }\n}\n","/**\n * A number scatter for defining a range in 2D space on a curve.\n *\n * @cat scatters\n * @extends Scatter\n */\n\nclass FloatCurveScatter extends Scatter {\n  /**\n   * Creates new FloatCurveScatter instance.\n   * @param {...number} points Coordinates: startX, startY, cpStartX, cpStartY, cpEndX, cpEndY, endX/start2X, endY/start2Y, cp2StartX, cp2StartX... 8 or 14 or 20...\n   */\n  constructor(...points) {\n    super();\n\n    /**\n     * @private\n     * @type {Curve}\n     */\n    this.mCurve = new Curve();\n    this.mCurve.baked = true;\n    this.mCurve.set(...points);\n\n    /**\n     * @private\n     * @type {Vector}\n     */\n    this.mCache = new Vector();\n  }\n\n  /**\n   * Returns a value on a curve at random position.\n   * @override\n   *\n   * @return {number} A random number value on a defined curve.\n   */\n  getValue() {\n    let t = Math.random();\n    this.mCurve.interpolate(t, this.mCache);\n    return this.mCache.y;\n  }\n\n  /**\n   * Returns a number at given position on a curve.\n   * @override\n   *\n   * @param {number} t The position.\n   *\n   * @return {number} A value on a curve at given position.\n   */\n  getValueAt(t) {\n    this.mCurve.interpolate(t, this.mCache);\n    return this.mCache.y;\n  }\n}\n","/**\n * A base class for particle system actions. Every frame each action executed over each particle.\n *\n * @cat particles.actions\n * @abstract\n * @class\n */\n\nclass Action {\n  /**\n   * Creates new Action instance.\n   */\n  constructor(){\n  }\n\n  /**\n   * Called for every particle before any update method called.\n   *\n   * @protected\n   * @param {number} dt Amount of seconds since the last update.\n   *\n   * @return {void} Description\n   */\n  preUpdate(dt) {}\n\n\n  /**\n   * Called for every particle.\n   *\n   * @protected\n   * @param {Emitter} emmiter   The owner of the particle.\n   * @param {Particle} particle The particle to execute update on.\n   * @param {number} dt         Amount of seconds since the last update.\n   *\n   * @return {void}\n   */\n  update(emmiter, particle, dt) {}\n\n\n  /**\n   * Called after all updates have been executed.\n   *\n   * @protected\n   * @param {number} dt Amount of seconds since the last update.\n   *\n   * @return {void}\n   */\n  postUpdate(dt) {}\n}\n","/**\n * Adds acceleration to particles along given direction.\n *\n * @cat particles.actions\n * @extends Action\n * @class\n */\n\nclass Acceleration extends Action {\n  /**\n   * Creates new Acceleration instance.\n   *\n   * @param {VectorScatter} vectorScatter An VectorScatter which defines acceleration direction.\n   */\n  constructor(vectorScatter) {\n    super();\n\n    /**\n     * @private\n     * @type {VectorScatter}\n     */\n    this.mScatter = vectorScatter;\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @param {Emitter} emmiter\n   * @param {Particle} particle\n   * @param {number} dt\n   *\n   * @return {void}\n   */\n  update(emmiter, particle, dt) {\n    let v = this.mScatter.getValue();\n\n    particle.ax += v.x;\n    particle.ay += v.y;\n  }\n\n\n  /**\n   * Returns VectorScatter object that defines acceleration direction.\n   * @member {VectorScatter}\n   * @return {VectorScatter}\n   */\n  get scatter() {\n    return this.mScatter;\n  }\n}\n","/**\n * Sets particle's alpha value according to its energy value.\n *\n * @cat particles.actions\n * @extends Action\n * @class\n */\n\nclass AlphaOverLife extends Action {\n  /**\n   * Creates new AlphaOverLife instance.\n   *\n   * @param {FloatScatter} floatScatter A starting and ending values of alpha property.\n   */\n  constructor(floatScatter) {\n    super();\n\n    /**\n     * @private\n     * @type {FloatScatter}\n     */\n    this.mScatter = floatScatter;\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @param {Emitter} emmiter\n   * @param {Particle} particle\n   * @param {number} dt\n   *\n   * @return {void}\n   */\n  update(emmiter, particle, dt) {\n    particle.alpha = this.mScatter.getValueAt(particle.energy);\n  }\n\n  /**\n   * Returns FloatScatter object that defines alpha value over particle life.\n   * @member {FloatScatter}\n   * @return {FloatScatter}\n   */\n  get scatter() {\n    return this.mScatter;\n  }\n}\n","/**\n * Sets particle's scale value according to its energy value.\n *\n * @cat particles.actions\n * @extends Action\n * @class\n */\n\nclass ScaleOverLife extends Action {\n  constructor(floatScatter) {\n    super();\n\n    /**\n     * @private\n     * @type {FloatScatter}\n     */\n    this.mScatter = floatScatter;\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @param {Emitter} emmiter\n   * @param {Particle} particle\n   * @param {number} dt\n   *\n   * @return {void}\n   */\n  update(emmiter, particle, dt) {\n    particle.scale = this.mScatter.getValueAt(particle.energy);\n  }\n\n  /**\n   * Returns FloatScatter object that defines scale value over particle life.\n   * @member {FloatScatter}\n   * @return {FloatScatter}\n   */\n  get scatter() {\n    return this.mScatter;\n  }\n}\n","/**\n * Sets particle's rotation value according to its energy value.\n *\n * @cat particles.actions\n * @extends Action\n * @class\n */\n\nclass RotationOverLife extends Action {\n  constructor(floatScatter) {\n    super();\n\n    /**\n     * @private\n     * @type {FloatScatter}\n     */\n    this.mScatter = floatScatter;\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @param {Emitter} emmiter\n   * @param {Particle} particle\n   * @param {number} dt\n   *\n   * @return {void}\n   */\n  update(emmiter, particle, dt) {\n    particle.r = this.mScatter.getValueAt(particle.energy);\n  }\n\n  /**\n   * Returns FloatScatter object that defines rotation value over particle life.\n   * @member {FloatScatter}\n   * @return {FloatScatter}\n   */\n  get scatter() {\n    return this.mScatter;\n  }\n}\n","/**\n * Sets particle's texture according to its energy value.\n *\n * @cat particles.actions\n * @extends Action\n * @class\n */\n\nclass TextureOverLife extends Action {\n  constructor(floatScatter) {\n    super();\n\n    /**\n     * @private\n     * @type {FloatScatter}\n     */\n    this.mScatter = floatScatter;\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @param {Emitter} emmiter\n   * @param {Particle} particle\n   * @param {number} dt\n   *\n   * @return {void}\n   */\n  update(emmiter, particle, dt) {\n    particle.textureIndex = ~~this.mScatter.getValueAt(particle.energy);\n  }\n\n  /**\n   * Returns FloatScatter object that defines texture value over particle life.\n   * @member {FloatScatter}\n   * @return {FloatScatter}\n   */\n  get scatter() {\n    return this.mScatter;\n  }\n}\n","/**\n * Base class for particle's initializators. Each initializer updates particle data once at start, eg when particle added to scene.\n *\n * @cat particles.initializers\n */\n\nclass Initializer {\n  /**\n   * Creates new Initializer instance.\n   */\n  constructor() {\n  }\n\n  /**\n   * @param {Particle} particle\n   *\n   * @return {void}\n   */\n  initialize(particle) {}\n}\n","/**\n * Sets starting particle's life.\n *\n * @cat particles.initializers\n * @extends Initializer\n */\n\nclass Life extends Initializer {\n  /**\n   * Creates new LIfe instance.\n   *\n   * @param {FloatScatter} floatScatter The min/max range.\n   */\n  constructor(floatScatter) {\n    super();\n\n    /**\n     * The min-max range.\n     * @type {FloatScatter}\n     */\n    this.scatter = floatScatter;\n  }\n\n  /**\n   * @inheritDoc\n   * @override\n   * @param {Particle} particle\n   *\n   * @return {void}\n   */\n  initialize(particle) {\n    particle.life = this.scatter.getValue();\n  }\n}\n","/**\n * Sets starting particle's mass.\n *\n * @cat particles.initializers\n * @extends Initializer\n * @class\n */\n\nclass Mass extends Initializer {\n  /**\n   * Creates new Mass instance.\n   *\n   * @param {number} mass The mass.\n   */\n  constructor(mass) {\n    super();\n\n    /**\n     * The mass value.\n     * @type {number}\n     */\n    this.mass = mass;\n  }\n\n  /**\n   * @inheritDoc\n   * @override\n   * @param {Particle} particle\n   *\n   * @return {void}\n   */\n  initialize(particle) {\n    particle.mass = this.mass;\n  }\n}\n","/**\n * Sets particle's starting scale.\n *\n * @cat particles.initializers\n * @extends Initializer\n * @class\n */\n\nclass Scale extends Initializer {\n  /**\n   * Creates new Scale instance.\n   *\n   * @param {FloatScatter} floatScatter The min-max range for starting scale.\n   */\n  constructor(floatScatter) {\n    super();\n\n    /**\n     * The min-max range for starting scale.\n     * @type {FloatScatter}\n     */\n    this.scatter = floatScatter;\n  }\n\n  /**\n   * @inheritDoc\n   * @override\n   * @param {Particle} particle\n   *\n   * @return {void}\n   */\n  initialize(particle) {\n    particle.scale = this.scatter.getValue();\n  }\n}\n","/**\n * Sets particle's starting velocity.\n *\n * @cat particles.initializers\n * @extends Initializer\n * @class\n */\n\nclass Velocity extends Initializer {\n  /**\n   * Creates new Velocity instance.\n   *\n   * @param {VectorScatter} vectorScatter The min-max range for starting velocity.\n   */\n  constructor(vectorScatter) {\n    super();\n\n    /**\n     * The min-max range for starting velocity.\n     * @type {VectorScatter}\n     */\n    this.scatter = vectorScatter;\n  }\n\n  /**\n   * @inheritDoc\n   * @override\n   * @param {Particle} particle\n   *\n   * @return {void}\n   */\n  initialize(particle) {\n    // TODO: optimize!\n    let v = this.scatter.getValue();\n    particle.vx = v.x;\n    particle.vy = v.y;\n  }\n}\n","/**\n * Sets starting particle's position.\n *\n * @cat particles.initializers\n * @extends Initializer\n * @class\n */\n\nclass Position extends Initializer {\n  /**\n   * Creates new Position instance.\n   *\n   * @param {VectorScatter} vectorScatter The min/max range.\n   */\n  constructor(vectorScatter) {\n    super();\n\n    /**\n     * The min-max range for position distribution.\n     * @type {VectorScatter}\n     */\n    this.scatter = vectorScatter;\n  }\n\n  /**\n   * @inheritDoc\n   * @override\n   * @param {Particle} particle\n   *\n   * @return {void}\n   */\n  initialize(particle) {\n    // TODO: optimize!\n    let v = this.scatter.getValue();\n    particle.x = v.x;\n    particle.y = v.y;\n  }\n}\n","/**\n * Sets particle's default rotation.\n *\n * @cat particles.initializers\n * @extends Initializer\n */\n\nclass Rotation extends Initializer {\n  /**\n   * Creates new Rotation instance.\n   *\n   * @param {FloatScatter} floatScatter The min-max range for starting rotation.\n   */\n  constructor(floatScatter) {\n    super();\n\n    /**\n     * The min-max range for starting rotation\n     * @type {FloatScatter}\n     */\n    this.scatter = floatScatter;\n  }\n\n  /**\n   * @inheritDoc\n   * @override\n   * @param {Particle} particle\n   *\n   * @return {void}\n   */\n  initialize(particle) {\n    particle.r = this.scatter.getValue();\n  }\n}\n","/**\n * Sets particle's texture.\n *\n * @cat particles.initializers\n * @extends Initializer\n * @class\n */\n\nclass RandomTexture extends Initializer {\n  /**\n   * Creates new RandomTexture instance.\n   *\n   * @param {FloatScatter} floatScatter\n   */\n  constructor(floatScatter) {\n    super();\n\n    /**\n     * The float scatter defines the index of the texture. All values will be\n     * rounded.\n     *\n     * @see {Particle.textureIndex}\n     * @type {FloatScatter}\n     */\n    this.scatter = floatScatter;\n  }\n\n  /**\n   * @inheritDoc\n   * @override\n   * @param {Particle} particle\n   *\n   * @return {void}\n   */\n  initialize(particle) {\n    particle.textureIndex = ~~this.scatter.getValue();\n  }\n}\n","/**\n * @enum {number}\n */\nvar EmitterState = {\n  PENDING: 0,\n  EMITTING: 1,\n  FINISHED: 2\n};\n","/**\n * The particle!\n *\n * @cat particles\n * @class\n */\n\nclass Particle {\n  constructor() {\n    this.reset();\n  }\n\n  /**\n   * Resets particle to default state.\n   *\n   * @returns {void}\n   */\n  reset() {\n    /**\n     * The index of a texture.\n     * @type {number}\n     */\n    this.textureIndex = 0;\n\n    /**\n     * The x/y scale of this particle.\n     * @type {number}\n     */\n    this.scale = 1;\n\n    /**\n     * Alpha value.\n     * @type {number}\n     */\n    this.alpha = 1;\n\n    /**\n     * The life of this particle.\n     * @type {number}\n     */\n    this.life = 1;\n\n    /**\n     * The age of this particle.\n     * @type {number}\n     */\n    this.age = 0;\n\n    /**\n     * Relation of life to age.\n     * @type {number}\n     */\n    this.energy = this.age / this.life;\n\n    /**\n     * The mass.\n     * @type {number}\n     */\n    this.mass = 0;\n\n    /**\n     * X-component.\n     * @type {number}\n     */\n    this.x = 0;\n\n    /**\n     * Y-component.\n     * @type {number}\n     */\n    this.y = 0;\n\n    /**\n     * Rotation of this particle.\n     * @type {number}\n     */\n    this.r = 0\n\n    /**\n     * Velocity by x.\n     * @type {number}\n     */\n    this.vx = 0;\n\n    /**\n     * Velocity by y.\n     * @type {number}\n     */\n    this.vy = 0;\n\n    /**\n     * Particle x-acceleration.\n     * @type {number}\n     */\n    this.ax = 0;\n\n    /**\n     * Particle y-acceleration.\n     * @type {number}\n     */\n    this.ay = 0;\n  }\n\n  /**\n   * Internal update method.\n   *\n   * @param {number} dt Time since last update.\n   *\n   * @return {void}\n   */\n  update(dt) {\n    if (this.life <= 0) {\n      this.life = 0;\n      return;\n    }\n\n    this.x += this.vx * dt;\n    this.y += this.vy * dt;\n\n    if (this.mass > 0) {\n      this.ax *= 1 / this.mass;\n      this.ay *= 1 / this.mass;\n    }\n\n    this.vx += this.ax * dt;\n    this.vy += this.ay * dt;\n\n    this.ax = 0;\n    this.ay = 0;\n\n    this.life -= dt;\n    this.age += dt;\n\n    this.energy = this.age / (this.age + this.life);\n  }\n}\n","/**\n * Particle emitter.\n *\n * @cat particles\n * @extends DisplayObject\n * @class\n */\n\nclass Emitter extends DisplayObject {\n  /**\n   * Creates new Emitter instance.\n   */\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {Array<Texture>}\n     */\n    this.mTextures = null;\n\n    /**\n     * @private\n     * @type {Array<Particle>}\n     */\n    this.mParticles = [];\n\n    /**\n     * @private\n     * @type {Array<Particle>}\n     */\n    this.mRecycled = [];\n\n    /**\n     * @private\n     * @type {Array<Initializer>}\n     */\n    this.mInitializers = [];\n\n    /**\n     * @private\n     * @type {Array<Action>}\n     */\n    this.mActions = [];\n\n    /**\n     * @private\n     * @type {GameObject}\n     */\n    this.mSpace = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mIsLocal = true;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mMaxParticles = 10000;\n\n    /**\n     * @private\n     * @type {FloatScatter}\n     */\n    this.mEmitCount = new FloatScatter(10);\n\n    /**\n     * @private\n     * @type {FloatScatter}\n     */\n    this.mEmitNumRepeats = new FloatScatter(Infinity);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mEmitNumRepeatsLeft = this.mEmitNumRepeats.getValue();\n\n    /**\n     * @private\n     * @type {FloatScatter}\n     */\n    this.mEmitDuration = new FloatScatter(1);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mEmitDurationLeft = this.mEmitDuration.getValue();\n\n    /**\n     * @private\n     * @type {FloatScatter}\n     */\n    this.mEmitInterval = new FloatScatter(0.1);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mEmitIntervalLeft = this.mEmitInterval.getValue();\n\n    /**\n     * @private\n     * @type {FloatScatter}\n     */\n    this.mEmitDelay = new FloatScatter(1);\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mEmitDelayLeft = this.mEmitDelay.getValue();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mNextUpdateAt = 0;\n\n    /**\n     * @private\n     * @type {EmitterState}\n     */\n    this.mState = EmitterState.PENDING;\n\n    /**\n     * @private\n     * @type {Matrix}\n     */\n    this.__tmpLocal = new Matrix();\n\n    /**\n     * @private\n     * @type {Matrix}\n     */\n    this.__tmpWorld = new Matrix();\n\n\n    // /** @type {function(a:Particle, b:Particle):number} */\n    // this.mComparer = null;\n  }\n\n  // reset() {\n  //   this.mState = 0;\n  //\n  //   // todo: reset simulation\n  //   // todo: clear all particles\n  //   this.updateNextTick(0);\n  // }\n\n  resetState() {\n    this.mState = EmitterState.PENDING;\n  }\n\n  /**\n   * updateNextTick - Updates delay, duration, interval. Use this function each time you change one of those values.\n   *\n   * @param {number} [dt=0]\n   *\n   * @return {void}\n   */\n  updateNextTick(dt = 0) {\n    let t = Black.instance.uptime;\n    let firstEmit = false;\n\n    if (this.mState === EmitterState.PENDING) {\n      this.mNextUpdateAt = t + this.mEmitDelayLeft;\n      this.mEmitDelayLeft -= dt;\n\n      if (this.mEmitDelayLeft <= 0) {\n        this.mEmitDelayLeft = this.mEmitDelay.getValue();\n        this.mState = EmitterState.EMITTING;\n        firstEmit = true;\n      }\n    }\n\n    if (this.mState === EmitterState.EMITTING) {\n      if (this.mEmitDurationLeft <= 0) {\n        this.mEmitDurationLeft = this.mEmitDuration.getValue();\n\n        this.mEmitNumRepeatsLeft--;\n\n        if (this.mEmitNumRepeatsLeft <= 0) {\n          this.mState = EmitterState.FINISHED;\n\n          this.post('complete');\n          return;\n        } else {\n          this.mState = EmitterState.PENDING;\n          return;\n        }\n      } else {\n        // we are getting value here each update to make sure we are up to date!\n        if (firstEmit) {\n          // for a first emit we do not want to add an extra delay. emit now!\n          this.mNextUpdateAt = t\n          this.mEmitIntervalLeft = this.mEmitInterval.getValue();\n        }\n        else {\n          this.mEmitIntervalLeft -= dt;\n          this.mNextUpdateAt = t + this.mEmitIntervalLeft;\n          //console.log(this.mEmitIntervalLeft);\n\n          // reset interval\n          if (this.mEmitIntervalLeft <= 0)\n            this.mEmitIntervalLeft = this.mEmitInterval.getValue();\n        }\n      }\n\n      this.mEmitDurationLeft -= dt;\n    }\n  }\n\n\n  /**\n   * addInitializer - Adds Initializer to the end of the list.\n   *\n   * @param {Initializer} initializer\n   *\n   * @return {Initializer}\n   */\n  addInitializer(initializer) {\n    this.mInitializers.push(initializer);\n    return initializer;\n  }\n\n\n  /**\n   * addAction - Adds action to the end of the list.\n   *\n   * @param {Action} action\n   *\n   * @return {Action}\n   */\n  addAction(action) {\n    this.mActions.push(action);\n    return action;\n  }\n\n  __render(video, time, parentAlpha, parentBlendMode) {\n    video.save(this);\n\n    // set blend mode\n    let tmpBlendMode = BlendMode.AUTO;\n    video.globalBlendMode = tmpBlendMode = this.blendMode === BlendMode.AUTO ? parentBlendMode : this.blendMode;\n\n    // tmp matrices\n    let localTransform = this.__tmpLocal;\n    let worldTransform = this.__tmpWorld;\n    localTransform.identity();\n\n    let texture = null;\n    let pbounds = new Rectangle();\n\n    if (this.mTextures.length > 0) {\n      let plength = this.mParticles.length;\n      let particle;\n      for (let i = 0; i < plength; i++) {\n      //for (let i = plength - 1; i > 0; i--) {\n        particle = this.mParticles[i];\n        texture = this.mTextures[particle.textureIndex];\n\n        let tw = texture.width * 0.5;\n        let th = texture.height * 0.5;\n\n        if (particle.r === 0) {\n          let tx = particle.x - tw * particle.scale;\n          let ty = particle.y - th * particle.scale;\n          localTransform.set(particle.scale, 0, 0, particle.scale, tx, ty);\n        } else {\n          let cos = Math.cos(particle.r);\n          let sin = Math.sin(particle.r);\n          let a = particle.scale * cos;\n          let b = particle.scale * sin;\n          let c = particle.scale * -sin;\n          let d = particle.scale * cos;\n\n          let tx = particle.x - tw * a - th * c;\n          let ty = particle.y - tw * b - th * d;\n          localTransform.set(a, b, c, d, tx, ty);\n        }\n\n        if (this.mIsLocal === true) {\n          worldTransform.identity();\n          worldTransform.copyFrom(localTransform);\n          worldTransform.prepend(this.worldTransformation);\n        } else {\n          this.mSpace.worldTransformation.copyTo(worldTransform);\n          worldTransform.append(localTransform);\n        }\n\n        video.setTransform(worldTransform);\n        video.globalAlpha = parentAlpha * this.mAlpha * particle.alpha;\n\n        pbounds.set(0, 0, texture.untrimmedRect.width, texture.untrimmedRect.height);\n        video.drawImage(texture, pbounds);\n      }\n    }\n\n    video.restore();\n    super.__render(video, time, parentAlpha, parentBlendMode);\n  }\n\n  onUpdate(dt) {\n    // rate logic\n    this.updateNextTick(dt);\n\n    if (Black.instance.uptime >= this.mNextUpdateAt && this.mState === EmitterState.EMITTING)\n      this.__create(this.mEmitCount.getValue());\n\n    // main update login\n    let alength = this.mActions.length;\n    let plength = this.mParticles.length;\n\n    for (let i = 0; i < alength; i++)\n      this.mActions[i].preUpdate(dt);\n\n    let particle;\n\n    let i = this.mParticles.length;\n    while (i--) {\n      particle = this.mParticles[i];\n\n      for (let k = 0; k < alength; k++)\n        this.mActions[k].update(this, particle, dt);\n\n      particle.update(dt);\n\n      if (particle.life === 0) {\n        this.mRecycled.push(particle);\n        this.mParticles.splice(i, 1);\n      }\n    }\n\n    for (let j = 0; j < alength; j++)\n      this.mActions[j].postUpdate(dt);\n  }\n\n  __create(amount) {\n    let matrix = this.worldTransformation.clone();\n    let minv = null;\n\n    if (this.mIsLocal === false) {\n      minv = this.mSpace.worldTransformationInversed.clone();\n      matrix.prepend(minv);\n    }\n\n    for (let i = 0; i < amount; i++) {\n      let p = null;\n\n      if (this.mRecycled.length > 0) {\n        p = this.mRecycled.pop();\n      } else {\n        if (this.mParticles.length >= this.mMaxParticles)\n          return;\n\n        p = new Particle();\n      }\n\n      p.reset();\n\n      for (let k = 0; k < this.mInitializers.length; k++) {\n        let initer = this.mInitializers[k];\n        initer.initialize(p);\n      }\n\n      if (this.mIsLocal === false) {\n        matrix.transformDirectionXY(p.ax, p.ay, Vector.__cache);\n        p.ax = Vector.__cache.x;\n        p.ay = Vector.__cache.y;\n\n        matrix.transformDirectionXY(p.vx, p.vy, Vector.__cache);\n        p.vx = Vector.__cache.x;\n        p.vy = Vector.__cache.y;\n\n        matrix.transformXY(p.x, p.y, Vector.__cache);\n        p.x = Vector.__cache.x;\n        p.y = Vector.__cache.y;\n      }\n\n      this.mParticles.push(p);\n    }\n  }\n\n\n  /**\n   * maxParticles\n   *\n   * @return {number}\n   */\n  get maxParticles() {\n    return this.mMaxParticles;\n  }\n\n\n  /**\n   * maxParticles\n   *\n   * @param {number} value\n   *\n   * @return {void}\n   */\n  set maxParticles(value) {\n    if (value < 0)\n      throw new Error('Bad argument error.');\n\n    this.mMaxParticles = value;\n  }\n\n\n  /**\n   * emitCount\n   *\n   * @return {FloatScatter}\n   */\n  get emitCount() {\n    return this.mEmitCount;\n  }\n\n\n  /**\n   * emitCount\n   *\n   * @param {FloatScatter} value\n   *\n   * @return {void}\n   */\n  set emitCount(value) {\n    this.mEmitCount = value;\n  }\n\n\n  /**\n   * emitNumRepeats\n   *\n   * @return {FloatScatter}\n   */\n  get emitNumRepeats() { return this.mEmitNumRepeats; }\n\n  /**\n   * emitNumRepeats\n   *\n   * @param {FloatScatter} value\n   *\n   * @return {void}\n   */\n  set emitNumRepeats(value) { this.mEmitNumRepeats = value; this.mEmitNumRepeatsLeft = this.mEmitNumRepeats.getValue(); }\n\n\n  /**\n   * emitDuration\n   *\n   * @return {FloatScatter}\n   */\n  get emitDuration() { return this.mEmitDuration; }\n\n  /**\n   * emitDuration\n   *\n   * @param {FloatScatter} value\n   *\n   * @return {void}\n   */\n  set emitDuration(value) { this.mEmitDuration = value; this.mEmitDurationLeft = this.mEmitDuration.getValue(); }\n\n\n  /**\n   * emitInterval\n   *\n   * @return {FloatScatter}\n   */\n  get emitInterval() { return this.mEmitInterval; }\n\n  /**\n   * emitInterval\n   *\n   * @param {FloatScatter} value\n   *\n   * @return {void}\n   */\n  set emitInterval(value) { this.mEmitInterval = value; this.mEmitIntervalLeft = this.mEmitInterval.getValue(); }\n\n\n  /**\n   * emitDelay\n   *\n   * @return {FloatScatter}\n   */\n  get emitDelay() { return this.mEmitDelay; }\n\n  /**\n   * emitDelay\n   *\n   * @param {FloatScatter} value\n   *\n   * @return {void}\n   */\n  set emitDelay(value) { this.mEmitDelay = value; this.mEmitDelayLeft = this.mEmitDelay.getValue(); }\n\n\n  /**\n   * space\n   *\n   * @return {GameObject}\n   */\n  get space() { return this.mSpace; }\n\n  /**\n   * space\n   *\n   * @param {GameObject} gameObject\n   *\n   * @return {void}\n   */\n  set space(gameObject) {\n    this.mSpace = gameObject;\n    this.mIsLocal = this.mSpace === null || this.mSpace === this;\n  }\n\n\n  /**\n   * textures\n   *\n   * @return {Array<Texture>}\n   */\n  get textures() {\n    return this.mTextures;\n  }\n\n\n  /**\n   * textures\n   *\n   * @param {Array<Texture>} value\n   *\n   * @return {void}\n   */\n  set textures(value) {\n    if (value.length === 0)\n      throw new Error('At least one texture must be provided.');\n\n    this.mTextures = value;\n  }\n}\n","// TODO: fix jsdoc to display this enum\n\n/**\n * @readonly\n * @enum {number}\n * @cat input\n */\n\nvar Key = {\n  /**\n   * @type {number}\n   */\n  A: 65,\n  /**\n   * @type {number}\n   */\n  B: 66,\n  /**\n   * @type {number}\n   */\n  C: 67,\n  /**\n   * @type {number}\n   */\n  D: 68,\n  /**\n   * @type {number}\n   */\n  E: 69,\n  /**\n   * @type {number}\n   */\n  F: 70,\n  /**\n   * @type {number}\n   */\n  G: 71,\n  /**\n   * @type {number}\n   */\n  H: 72,\n  /**\n   * @type {number}\n   */\n  I: 73,\n  /**\n   * @type {number}\n   */\n  J: 74,\n  /**\n   * @type {number}\n   */\n  K: 75,\n  /**\n   * @type {number}\n   */\n  L: 76,\n  /**\n   * @type {number}\n   */\n  M: 77,\n  /**\n   * @type {number}\n   */\n  N: 78,\n  /**\n   * @type {number}\n   */\n  O: 79,\n  /**\n   * @type {number}\n   */\n  P: 80,\n  /**\n   * @type {number}\n   */\n  Q: 81,\n  /**\n   * @type {number}\n   */\n  R: 82,\n  /**\n   * @type {number}\n   */\n  S: 83,\n  /**\n   * @type {number}\n   */\n  T: 84,\n  /**\n   * @type {number}\n   */\n  U: 85,\n  /**\n   * @type {number}\n   */\n  V: 86,\n  /**\n   * @type {number}\n   */\n  W: 87,\n  /**\n   * @type {number}\n   */\n  X: 88,\n  /**\n   * @type {number}\n   */\n  Y: 89,\n  /**\n   * @type {number}\n   */\n  Z: 90,\n  /**\n   * @type {number}\n   */\n  DIGIT_0: 48,\n  /**\n   * @type {number}\n   */\n  DIGIT_1: 49,\n  /**\n   * @type {number}\n   */\n  DIGIT_2: 50,\n  /**\n   * @type {number}\n   */\n  DIGIT_3: 51,\n  /**\n   * @type {number}\n   */\n  DIGIT_4: 52,\n  /**\n   * @type {number}\n   */\n  DIGIT_5: 53,\n  /**\n   * @type {number}\n   */\n  DIGIT_6: 54,\n  /**\n   * @type {number}\n   */\n  DIGIT_7: 55,\n  /**\n   * @type {number}\n   */\n  DIGIT_8: 56,\n  /**\n   * @type {number}\n   */\n  DIGIT_9: 57,\n  /**\n   * @type {number}\n   */\n  NUMPAD_0: 96,\n  /**\n   * @type {number}\n   */\n  NUMPAD_1: 97,\n  /**\n   * @type {number}\n   */\n  NUMPAD_2: 98,\n  /**\n   * @type {number}\n   */\n  NUMPAD_3: 99,\n  /**\n   * @type {number}\n   */\n  NUMPAD_4: 100,\n  /**\n   * @type {number}\n   */\n  NUMPAD_5: 101,\n  /**\n   * @type {number}\n   */\n  NUMPAD_6: 102,\n  /**\n   * @type {number}\n   */\n  NUMPAD_7: 103,\n  /**\n   * @type {number}\n   */\n  NUMPAD_8: 104,\n  /**\n   * @type {number}\n   */\n  NUMPAD_9: 105,\n  /**\n   * @type {number}\n   */\n  NUMPAD_MULTIPLY: 106,\n  /**\n   * @type {number}\n   */\n  NUMPAD_ADD: 107,\n  /**\n   * @type {number}\n   */\n  NUMPAD_SUBTRACT: 109,\n  /**\n   * @type {number}\n   */\n  NUMPAD_DECIMAL: 110,\n  /**\n   * @type {number}\n   */\n  NUMPAD_DIVIDE: 111,\n  /**\n   * @type {number}\n   */\n  LEFT_ARROW: 37,\n  /**\n   * @type {number}\n   */\n  UP_ARROW: 38,\n  /**\n   * @type {number}\n   */\n  RIGHT_ARROW: 39,\n  /**\n   * @type {number}\n   */\n  DOWN_ARROW: 40,\n  /**\n   * @type {number}\n   */\n  BACKSPACE: 8,\n  /**\n   * @type {number}\n   */\n  TAB: 9,\n  /**\n   * @type {number}\n   */\n  ENTER: 13,\n  /**\n   * @type {number}\n   */\n  SHIFT: 16,\n  /**\n   * @type {number}\n   */\n  CTRL: 17,\n  /**\n   * @type {number}\n   */\n  ALT: 18,\n  /**\n   * @type {number}\n   */\n  F1: 112,\n  /**\n   * @type {number}\n   */\n  F2: 113,\n  /**\n   * @type {number}\n   */\n  F3: 114,\n  /**\n   * @type {number}\n   */\n  F4: 115,\n  /**\n   * @type {number}\n   */\n  F5: 116,\n  /**\n   * @type {number}\n   */\n  F6: 117,\n  /**\n   * @type {number}\n   */\n  F7: 118,\n  /**\n   * @type {number}\n   */\n  F8: 119,\n  /**\n   * @type {number}\n   */\n  F9: 120,\n  /**\n   * @type {number}\n   */\n  F10: 121,\n  /**\n   * @type {number}\n   */\n  F11: 122,\n  /**\n   * @type {number}\n   */\n  F12: 123,\n  /**\n   * @type {number}\n   */\n  PAUSE_BREAK: 19,\n  /**\n   * @type {number}\n   */\n  CAPS_LOCK: 20,\n  /**\n   * @type {number}\n   */\n  ESCAPE: 27,\n  /**\n   * @type {number}\n   */\n  PAGE_UP: 33,\n  /**\n   * @type {number}\n   */\n  PAGE_DOWN: 34,\n  /**\n   * @type {number}\n   */\n  END: 35,\n  /**\n   * @type {number}\n   */\n  HOME: 36,\n  /**\n   * @type {number}\n   */\n  INSERT: 45,\n  /**\n   * @type {number}\n   */\n  DELETE: 46,\n  /**\n   * @type {number}\n   */\n  LEFT_WINDOW: 91,\n  /**\n   * @type {number}\n   */\n  RIGHT_WINDOW: 92,\n  /**\n   * @type {number}\n   */\n  CONTEXT_MENU: 93,\n  /**\n   * @type {number}\n   */\n  NUM_LOCK: 144,\n  /**\n   * @type {number}\n   */\n  SCROLL_LOCK: 145,\n  /**\n   * @type {number}\n   */\n  SEMI_COLON: 186,\n  /**\n   * @type {number}\n   */\n  EQUAL_SIGN: 187,\n  /**\n   * @type {number}\n   */\n  COMMA: 188,\n  /**\n   * @type {number}\n   */\n  DASH: 189,\n  /**\n   * @type {number}\n   */\n  PERIOD: 190,\n  /**\n   * @type {number}\n   */\n  FORWARD_SLASH: 191,\n  /**\n   * @type {number}\n   */\n  BACKQUOTE: 192,\n  /**\n   * @type {number}\n   */\n  BRAKET_LEFT: 219,\n  /**\n   * @type {number}\n   */\n  BACK_SLASH: 220,\n  /**\n   * @type {number}\n   */\n  BRAKET_RIGHT: 221,\n  /**\n   * @type {number}\n   */\n  SINGLE_QUOTE: 222,\n};\n","/**\n * Holds information about keyboard event.\n *\n * @cat input\n */\n\nclass KeyInfo {\n\n  /**\n   * constructor - Description\n   *\n   * @param {Event} nativeEvent Description\n   *\n   * @return {void} Description\n   */\n  constructor(nativeEvent) {\n    this.keyCode = nativeEvent.keyCode;\n    this.code = nativeEvent.code;\n    this.char = nativeEvent.key;\n    this.shiftKey = nativeEvent.shiftKey;\n    this.altKey = nativeEvent.altKey;\n    this.ctrlKey = nativeEvent.ctrlKey;\n  }\n}\n","/**\n * A input system class is reponsible for mouse, touch and keyboard input events.\n * Pointer events works for a single target only.\n * Global Input messages has higher priority.\n *\n * When GameObject gets a `pointerDown` message it gets target locked. Other\n * objects will not receive `pointerMove` or `pointerUp` messages. Target locked\n * object will receive `pointerUp` message even if pointer is outside of its\n * bounds.\n *\n * @cat input\n * @extends System\n */\n\nclass Input extends System {\n  /**\n   * Private constructor.\n   */\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {Input}\n     */\n    this.constructor.instance = this;\n\n    /**\n     * @private\n     * @type {Vector}\n     */\n    this.mPointerPosition = new Vector();\n\n    /**\n     * @private\n     * @type {Element}\n     */\n    this.mDom = Black.instance.containerElement;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.mEventList = null;\n\n    /**\n     * @private\n     * @type {Array<string>}\n     */\n    this.mKeyEventList = null;\n\n    this.__initListeners();\n\n    /**\n     * @private\n     * @type {Array<{e: Event, x: number, y:number}>}\n     */\n    this.mPointerQueue = [];\n\n    /**\n     * @private\n     * @type {Array<Event>}\n     */\n    this.mKeyQueue = [];\n\n    /**\n     * @private\n     * @type {Array<number>}\n     */\n    this.mPressedKeys = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mIsPointerDown = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mNeedUpEvent = false;\n\n    /**\n     * NOTE: we need guarantee that keys are not going to chage theirs order\n     * when iterating.\n     * @private\n     * @type {Map}\n     */\n    this.mInputListeners = new Map();\n\n    this.mTarget = null;\n    this.mTargetComponent = null;\n    this.mLockedTarget = null;\n\n    this.mLastInTargetComponent = null;\n  }\n\n  /**\n   * @private\n   *\n   * @returns {void}\n   */\n  __initListeners() {\n    this.mKeyEventList = Input.mKeyEventList;\n    //debugger;\n\n    if (window.PointerEvent)\n      this.mEventList = Input.mPointerEventList;\n    else if (Device.isTouch && Device.isMobile)\n      this.mEventList = Input.mTouchEventList;\n    else\n      this.mEventList = Input.mMouseEventList;\n\n    for (let i = 0; i < 6; i++)\n      this.mDom.addEventListener(this.mEventList[i], e => this.__onPointerEvent(e), false);\n\n    document.addEventListener(this.mEventList[Input.IX_POINTER_UP], e => this.__onPointerEventDoc(e), false);\n\n    for (let i = 0; i < this.mKeyEventList.length; i++)\n      document.addEventListener(this.mKeyEventList[i], e => this.__onKeyEvent(e), false);\n  }\n\n  /**\n   * @private\n   * @param {Event} e\n   *\n   * @return {boolean}\n   */\n  __onKeyEvent(e) {\n    if (Black.instance.isPaused === true)\n      return false;\n\n    this.mKeyQueue.push(e);\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {Event} e\n   *\n   * @returns {void}\n   */\n  __onPointerEventDoc(e) {\n    if (Black.instance.isPaused === true)\n      return;\n\n    // dirty check\n    let over = e.target == this.mDom || e.target.parentElement == this.mDom;\n\n    if (over === false && this.mNeedUpEvent === true) {\n      this.mNeedUpEvent = false;\n      this.__pushEvent(e);\n    }\n  }\n\n  /**\n   * @private\n   * @param {Event} e\n   *\n   * @return {boolean}\n   */\n  __onPointerEvent(e) {\n    if (Black.instance.isPaused === true)\n      return false;\n\n    e.preventDefault();\n\n    this.__pushEvent(e);\n\n    return true;\n  }\n\n  /**\n   * @private\n   * @param {Event} e\n   *\n   * @returns {void}\n   */\n  __pushEvent(e) {\n    let /** @type {Vector|null} */ p = null;\n    if (e.type.indexOf('touch') === 0)\n      p = this.__getTouchPos(this.mDom, /** @type {TouchEvent} */ (e));\n    else\n      p = this.__getPointerPos(this.mDom, e);\n\n    this.mPointerQueue.push({\n      e: e,\n      x: p.x,\n      y: p.y\n    });\n  }\n\n  /**\n   * @private\n   * @param {Element} canvas\n   * @param {Event} evt\n   *\n   * @return {Vector}\n   */\n  __getPointerPos(canvas, evt) {\n    let rect = canvas.getBoundingClientRect();\n    let scaleX = canvas.clientWidth / rect.width;\n    let scaleY = canvas.clientHeight / rect.height;\n    return new Vector((evt.clientX - rect.left) * scaleX, (evt.clientY - rect.top) * scaleY);\n  }\n\n  /**\n   * @private\n   * @param {Element} canvas\n   * @param {TouchEvent} evt\n   *\n   * @return {Vector}\n   */\n  __getTouchPos(canvas, evt) {\n    let rect = canvas.getBoundingClientRect();\n\n    /** @type {Touch} */\n    let touch = evt.changedTouches[0]; // ios? what about android?\n    let x = touch.clientX;\n    let y = touch.clientY;\n\n    let scaleX = canvas.clientWidth / rect.width;\n    let scaleY = canvas.clientHeight / rect.height;\n    return new Vector((x - rect.left) * scaleX, (y - rect.top) * scaleY);\n  }\n\n  /**\n   * @inheritDoc\n   * @override\n   * @param {number} dt\n   *\n   * @return {void}\n   */\n  onUpdate(dt) {\n    // omg, who gave you keyboard?\n    this.__updateKeyboard();\n\n    // we had no actual events but still we need to know if something were moved\n    if (this.mPointerQueue.length === 0) {\n      this.__findTarget(Input.pointerPosition);\n      this.__processInOut(Input.pointerPosition);\n    }\n\n    for (var i = 0; i < this.mPointerQueue.length; i++) {\n      let nativeEvent =  this.mPointerQueue[i];\n\n      // update to the lattest position\n      this.mPointerPosition.x = nativeEvent.x;\n      this.mPointerPosition.y = nativeEvent.y;\n\n      let pointerPos = new Vector(nativeEvent.x, nativeEvent.y);\n      let eventType = Input.mInputEventsLookup[this.mEventList.indexOf(nativeEvent.e.type)];\n\n      this.__findTarget(pointerPos);\n      this.__processInOut(Input.pointerPosition);\n      this.__processNativeEvent(nativeEvent, pointerPos, eventType);\n    }\n\n    // Erase the pointer queue\n    this.mPointerQueue.splice(0, this.mPointerQueue.length);\n    this.mKeyQueue.splice(0, this.mKeyQueue.length);\n  }\n\n  __findTarget(pos) {\n    let obj = GameObject.hits(Black.instance.root, pos);\n\n    if (obj === null) {\n      this.mTarget = null;\n      this.mTargetComponent = null;\n      return;\n    }\n\n    let c = obj.getComponent(InputComponent);\n    if (c === null) {\n      this.mTarget = null;\n      this.mTargetComponent = null;\n      return;\n    }\n\n    if (c.touchable === false) {\n      this.mTarget = null;\n      this.mTargetComponent = null;\n      return;\n    }\n\n    this.mTarget = obj;\n    this.mTargetComponent = c;\n  }\n\n  __processNativeEvent(nativeEvent, pos, type) {\n    if (type === Input.POINTER_DOWN) {\n      this.mIsPointerDown = true;\n      this.mNeedUpEvent = true;\n    }\n    else if (type === Input.POINTER_UP) {\n      this.mIsPointerDown = false;\n    }\n\n    this.post(type);\n\n    if (this.mTarget === null && this.mLockedTarget === null)\n      return;\n\n    let info = new PointerInfo(this.mTarget, pos.x, pos.y);\n\n    if (type === Input.POINTER_DOWN) {\n      this.mLockedTarget = this.mTarget;\n    }\n    else if (type === Input.POINTER_UP && this.mLockedTarget !== null) {\n      this.mLockedTarget.post('~pointerUp', info);\n      this.mLockedTarget = null;\n      return;\n    }\n\n    let sameTarget = this.mTarget === this.mLockedTarget;\n\n    if (this.mLockedTarget === null) {\n      if (this.mTarget !== null) {\n        // regular non locked post\n        //console.log('regular');\n        this.mTarget.post('~' + type, info);\n      }\n    } else {\n      if (sameTarget === true) {\n        // just bubble the event\n        this.mLockedTarget.post('~' + type, info);\n      }\n      else {\n        // send skipping this gameObject\n        if (this.mLockedTarget.mParent !== null && this.mTarget !== null) {\n          console.log('parent');\n          this.mLockedTarget.mParent.post('~' + type, info);\n        }\n      }\n    }\n  }\n\n  __postInMessage() {\n    if (this.mLockedTarget !== null) {\n      if (this.mLockedTarget !== this.mTargetComponent.gameObject && this.mTargetComponent.gameObject !== null)\n        return;\n    }\n\n    this.mTargetComponent.mPointerInDispatched = true;\n    this.mTargetComponent.gameObject.post('~pointerIn');\n    this.mLastInTargetComponent = this.mTargetComponent;\n  }\n\n  __postOutMessage() {\n    if (this.mLockedTarget !== null && this.mTargetComponent !== null) {\n      if (this.mLockedTarget !== this.mTargetComponent.gameObject)\n        return;\n    }\n\n    this.mLastInTargetComponent.mPointerInDispatched = false;\n    this.mLastInTargetComponent.gameObject.post('~pointerOut');\n    this.mLastInTargetComponent = null;\n  }\n\n  __processInOut(pos) {\n\n    if (this.mTargetComponent === null) {\n      if (this.mLastInTargetComponent !== null)\n        this.__postOutMessage();\n    } else {\n      if (this.mLastInTargetComponent !== null && this.mLastInTargetComponent !== this.mTargetComponent) {\n        this.__postOutMessage();\n        return;\n      }\n\n      if (this.mTargetComponent.mPointerInDispatched === false)\n        this.__postInMessage();\n    }\n  }\n\n  /**\n   * @private\n   *\n   * @returns {void}\n   */\n  __updateKeyboard() {\n    for (let i = 0; i < this.mKeyQueue.length; i++) {\n      let nativeEvent = this.mKeyQueue[i];\n\n      let ix = this.mKeyEventList.indexOf(nativeEvent.type);\n      let pIx = this.mPressedKeys.indexOf(nativeEvent.keyCode);\n      let fnName = Input.mKeyEventsLookup[ix];\n\n      if (fnName === 'keyUp' && pIx !== -1)\n        this.mPressedKeys.splice(pIx, 1);\n\n      else if (fnName === 'keyDown' && pIx === -1) {\n        this.mPressedKeys.push(nativeEvent.keyCode);\n        fnName = 'keyPress';\n      }\n\n      this.post(fnName, new KeyInfo(nativeEvent), nativeEvent);\n    }\n  }\n\n  /**\n   * Listens for global input event by given message name.\n   *\n   * @param {string} name            The name of the message to listen for.\n   * @param {Function} callback      The callback function that will be called when message received.\n   * @param {Object=} [context=null] Optional context.\n   *\n   * @return {void}\n   */\n  static on(name, callback, context = null) {\n    Input.instance.on(name, callback, context);\n  }\n\n  /**\n   * Indicates if mouse or touch in down at this moment.\n   *\n   * @return {boolean}\n   */\n  static get isPointerDown() {\n    return Input.instance.mIsPointerDown;\n  }\n\n  /**\n   * Returns mouse or touch pointer x-component.\n   * @return {number}\n   */\n  static get pointerX() {\n    return Input.instance.mPointerPosition.x;\n  }\n\n  /**\n   * Returns mouse or touch pointer x-component.\n   *\n   * @return {number} Description\n   */\n  static get pointerY() {\n    return Input.instance.mPointerPosition.y;\n  }\n\n  /**\n   * Returns mouse or touch pointer position.\n   *\n   * @return {Vector}\n   */\n  static get pointerPosition() {\n    return Input.instance.mPointerPosition;\n  }\n\n  /**\n   * Returns list of pressed keys.\n   *\n   * @returns {Array<number>}\n   */\n  static get pressedKeys() {\n    return Input.instance.mPressedKeys;\n  }\n}\n\nInput.POINTER_DOWN = 'pointerDown';\nInput.POINTER_MOVE = 'pointerMove';\nInput.POINTER_UP   = 'pointerUp';\nInput.POINTER_IN   = 'pointerIn';\nInput.POINTER_OUT  = 'pointerOut';\n\n/**\n * @type {Input}\n * @nocollapse\n */\nInput.instance = null;\n\n/**\n * @type {number}\n * @const\n */\nInput.IX_POINTER_MOVE = 0;\n\n/**\n * @type {number}\n * @const\n */\nInput.IX_POINTER_DOWN = 1;\n\n/**\n * @type {number}\n * @const\n */\nInput.IX_POINTER_UP = 2;\n\n// /**\n//  * @type {number}\n//  * @const\n//  */\n// Input.IX_POINTER_IN = 3;\n//\n// /**\n//  * @type {number}\n//  * @const\n//  */\n// Input.IX_POINTER_OUT = 4;\n\n/**\n * @private\n * @type {Array<string>}\n * @const\n */\nInput.mKeyEventList = ['keydown', 'keyup'];\n\n/**\n * @private\n * @type {Array<string>}\n * @const\n */\nInput.mKeyEventsLookup = ['keyDown', 'keyUp', 'keyPress'];\n\n/**\n * @private\n * @type {Array<string>}\n * @const\n */\nInput.mInputEventsLookup = ['pointerMove', 'pointerDown', 'pointerUp', 'pointerIn', 'pointerOut'];\n\n/**\n * @private\n * @type {Array<string>}\n * @const\n */\nInput.mPointerEventList = ['pointermove', 'pointerdown', 'pointerup', 'pointerenter', 'pointerleave'];\n\n/**\n * @private\n * @type {Array<string>}\n * @const\n */\nInput.mMouseEventList = ['mousemove', 'mousedown', 'mouseup', 'mouseenter', 'mouseleave'];\n\n/**\n * @private\n * @type {Array<string>}\n * @const\n */\nInput.mTouchEventList = ['touchmove', 'touchstart', 'touchend', 'touchenter', 'touchleave'];\n\n\n/**\n * Stores additional information about pointer events.\n *\n * @cat input\n */\n\nclass PointerInfo {\n  /**\n   * Creates new PointerInfo instance. For internal use only.\n   *\n   * @param {GameObject} activeObject\n   * @param {number} x\n   * @param {number} y\n   */\n  constructor(activeObject, x, y) {\n    /**\n     * @private\n     * @type {GameObject}\n     */\n    this.mActiveObject = activeObject;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mX = x;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mY = y;\n  }\n\n  /**\n   * Returns the object under cursor right now.\n   * @readonly\n   *\n   * @returns {GameObject}\n   */\n  get activeObject() {\n    return this.mActiveObject;\n  }\n\n  get x() {\n    return this.mX;\n  }\n\n  get y() {\n    return this.mY;\n  }\n}\n","/**\n * This component will allow you to subscribe for some input messages.\n *\n * @cat input\n * @extends Component\n */\n\nclass InputComponent extends Component {\n  /**\n   * @return {void}\n   */\n  constructor() {\n    super();\n\n    /** @type {boolean} */\n    this.touchable = true;\n\n    /* INTERNAL */\n    /** @type {boolean} */\n    this.mPointerInDispatched = false;\n  }\n}\n","/**\n * Basic FPS component. Shows frame rate.\n *\n * @cat components\n * @extends Component\n */\n\nclass FPSComponent extends Component  {\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {TextField}\n     */\n    this.txtFPS = null;\n  }\n\n  onAdded(){\n    this.txtFPS = new TextField('FPS: 0');\n    this.txtFPS.x = 0;\n    this.txtFPS.y = 0;\n    this.gameObject.addChild(this.txtFPS);\n  }\n\n  onRemoved(){\n  }\n\n  onUpdate(){\n    this.txtFPS.text = 'FPS: ' + Black.instance.FPS;\n  }\n}\n","/**\n * Basic mulri resolution utility component. Resizes an GameObject to match desired resolution.\n *\n * @cat components\n * @extends Component\n */\n\nclass MRComponent extends Component {\n  /**\n   * Creates new instance of MRComponent. Used to scale and position GameObject to a specified width and height.\n   * Simplified version of scale manager.\n   *\n   * @param {number} [width=960]  The width.\n   * @param {number} [height=640] The height.\n   */\n  constructor(width = 960, height = 640) {\n    super();\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mWidth = width;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mHeight = height;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mScale = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mInvScale = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mAspect = 0;\n\n    Black.instance.viewport.on('resize', this.__onResize, this);\n  }\n\n  __onResize(msg, rect) {\n    this.setSize(this.mWidth, this.mHeight);\n  }\n\n  /**\n   * Sets size of the latout.\n   *\n   * @param  {number} width = 960  The width.\n   * @param  {number} height = 640 The height.\n   * @return {void}\n   */\n  setSize(width = 960, height = 640){\n    this.mWidth = width;\n    this.mHeight = height;\n\n    this.updateLayout();\n  }\n\n  /**\n   * Updates layout to match specified settings.\n   *\n   * @return {void}\n   */\n  updateLayout() {\n    if (!this.gameObject)\n      return;\n\n    /** @type {Rectangle} */\n    let size = Black.instance.viewport.size;\n\n    /** @type {number} */\n    let scaleX = size.width / this.mWidth;\n\n    /** @type {number} */\n    let scaleY = size.height / this.mHeight;\n\n    this.mScale = Math.min(scaleX, scaleY);\n    this.mInvScale = 1 / this.mScale;\n\n    this.gameObject.scaleX = this.gameObject.scaleY = this.mScale;\n    this.gameObject.x = (size.width / 2) - (this.mWidth / 2) * this.mScale;\n    this.gameObject.y = (size.height / 2) - (this.mHeight / 2) * this.mScale;\n  }\n\n  onAdded() {\n    this.updateLayout();\n  }\n}\n","/**\n * A static class with many static easing functions.\n *\n * @cat animation\n * @static\n */\n\nclass Ease {\n  /**\n   * linear\n   * @param {number} k\n   * @return {number}\n   */\n  static linear(k) {\n    return k;\n  }\n\n  /**\n   * quadraticIn\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static quadraticIn(k) {\n    return k * k;\n  }\n\n  /**\n   * quadraticOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static quadraticOut(k) {\n    return k * (2 - k);\n  }\n\n  /**\n   * quadraticInOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static quadraticInOut(k) {\n    if ((k *= 2) < 1)\n      return 0.5 * k * k;\n\n    return -0.5 * (--k * (k - 2) - 1);\n  }\n\n  /**\n   * cubicIn\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static cubicIn(k) {\n    return k * k * k;\n  }\n\n  /**\n   * cubicOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static cubicOut(k) {\n    return --k * k * k + 1;\n  }\n\n  /**\n   * cubicInOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static cubicInOut(k) {\n    if ((k *= 2) < 1)\n      return 0.5 * k * k * k;\n\n    return 0.5 * ((k -= 2) * k * k + 2);\n  }\n\n  /**\n   * quarticIn\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static quarticIn(k) {\n    return k * k * k * k;\n  }\n\n  /**\n   * quarticOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static quarticOut(k) {\n    return 1 - (--k * k * k * k);\n  }\n\n  /**\n   * quarticInOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static quarticInOut(k) {\n    if ((k *= 2) < 1)\n      return 0.5 * k * k * k * k;\n\n    return -0.5 * ((k -= 2) * k * k * k - 2);\n  }\n\n  /**\n   * quinticIn\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static quinticIn(k) {\n    return k * k * k * k * k;\n  }\n\n  /**\n   * quinticOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static quinticOut(k) {\n    return --k * k * k * k * k + 1;\n  }\n\n  /**\n   * quinticInOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static quinticInOut(k) {\n    if ((k *= 2) < 1)\n      return 0.5 * k * k * k * k * k;\n\n    return 0.5 * ((k -= 2) * k * k * k * k + 2);\n  }\n\n  /**\n   * sinusoidalIn\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static sinusoidalIn(k) {\n    return 1 - Math.cos(k * Math.PI / 2);\n  }\n\n  /**\n   * sinusoidalOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static sinusoidalOut(k) {\n    return Math.sin(k * Math.PI / 2);\n  }\n\n  /**\n   * sinusoidalInOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static sinusoidalInOut(k) {\n    return 0.5 * (1 - Math.cos(Math.PI * k));\n  }\n\n  /**\n   * exponentialIn\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static exponentialIn(k) {\n    return k === 0 ? 0 : Math.pow(1024, k - 1);\n  }\n\n  /**\n   * exponentialOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static exponentialOut(k) {\n    return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n  }\n\n  /**\n   * exponentialInOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static exponentialInOut(k) {\n    if (k === 0)\n      return 0;\n\n    if (k === 1)\n      return 1;\n\n    if ((k *= 2) < 1)\n      return 0.5 * Math.pow(1024, k - 1);\n\n    return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n  }\n\n  /**\n   * circularIn\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static circularIn(k) {\n    return 1 - Math.sqrt(1 - k * k);\n  }\n\n  /**\n   * circularOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static circularOut(k) {\n    return Math.sqrt(1 - (--k * k));\n  }\n\n  /**\n   * circularInOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static circularInOut(k) {\n    if ((k *= 2) < 1)\n      return -0.5 * (Math.sqrt(1 - k * k) - 1);\n\n    return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n  }\n\n  /**\n   * elasticIn\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static elasticIn(k) {\n    if (k === 0)\n      return 0;\n\n    if (k === 1)\n      return 1;\n\n    return -Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n  }\n\n  /**\n   * elasticOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static elasticOut(k) {\n    if (k === 0)\n      return 0;\n\n    if (k === 1)\n      return 1;\n\n    return Math.pow(2, -10 * k) * Math.sin((k - 0.1) * 5 * Math.PI) + 1;\n  }\n\n  /**\n   * elasticInOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static elasticInOut(k) {\n    if (k === 0)\n      return 0;\n\n    if (k === 1)\n      return 1;\n\n    k *= 2;\n\n    if (k < 1)\n      return -0.5 * Math.pow(2, 10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI);\n\n    return 0.5 * Math.pow(2, -10 * (k - 1)) * Math.sin((k - 1.1) * 5 * Math.PI) + 1;\n\n  }\n\n  /**\n   * backIn\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static backIn(k) {\n    const s = 1.70158;\n    return k * k * ((s + 1) * k - s);\n  }\n\n  /**\n   * backOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static backOut(k) {\n    const s = 1.70158;\n    return --k * k * ((s + 1) * k + s) + 1;\n  }\n\n  /**\n   * backInOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static backInOut(k) {\n    const s = 1.70158 * 1.525;\n\n    if ((k *= 2) < 1)\n      return 0.5 * (k * k * ((s + 1) * k - s));\n\n    return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n  }\n\n  /**\n   * bounceIn\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static bounceIn(k) {\n    return 1 - Ease.bounceOut(1 - k);\n  }\n\n  /**\n   * bounceOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static bounceOut(k) {\n    if (k < (1 / 2.75))\n      return 7.5625 * k * k;\n    else if (k < (2 / 2.75))\n      return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n    else if (k < (2.5 / 2.75))\n      return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n\n    return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n  }\n\n  /**\n   * bounceInOut\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static bounceInOut(k) {\n    if (k < 0.5)\n      return Ease.bounceIn(k * 2) * 0.5;\n\n    return Ease.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n  }\n\n  /**\n   * smoothstep\n   *\n   * @param {number} k\n   *\n   * @return {number}\n   */\n  static smootherStep(k) {\n    return k * k * k * (k * (6.0 * k - 15.0) + 10.0);\n  }\n}\n","/**\n * Interpolation functions.\n *\n * @cat animation\n * @static\n */\n\nclass Interpolation {\n  /**\n   * Singleton.\n   */\n  constructor() {}\n\n  /**\n   * linear\n   *\n   * @param {Array}  v The input array of values to interpolate between.\n   * @param {number} k The percentage of interpolation, between 0 and 1.\n   * @return {number}  The interpolated value\n   */\n  static linear(v, k) {\n    let m = v.length - 1;\n    let f = m * k;\n    let i = Math.floor(f);\n\n    let fn = (p0, p1, t) => {\n      return (p1 - p0) * t + p0;\n    };\n\n    if (k < 0) {\n      return fn(v[0], v[1], f);\n    }\n\n    if (k > 1) {\n      return fn(v[m], v[m - 1], m - f);\n    }\n\n    return fn(v[i], v[i + 1 > m ? m : i + 1], f - i);\n  }\n\n  /**\n   * bezier\n   *\n   * @param {Array}  v The input array of values to interpolate between.\n   * @param {number} k The percentage of interpolation, between 0 and 1.\n   * @return {number}  The interpolated value\n   */\n  static bezier(v, k) {\n    let b = 0;\n    let n = v.length;\n    let pow = Math.pow;\n    // Bernstein basis polynomials\n    let bn = (n, i) => {\n      let fc = Interpolation.__factorial;\n      return fc(n) / fc(i) / fc(n - i);\n    };\n\n    for (let i = 0; i < n; i++) {\n      b += pow(1 - k, n - i) * pow(k, i) * v[i] * bn(n, i);\n    }\n\n    return b;\n  }\n\n  /**\n   * catmullRom\n   *\n   * @param {Array}  v The input array of values to interpolate between.\n   * @param {number} k The percentage of interpolation, between 0 and 1.\n   * @return {number}  The interpolated value\n   */\n  static catmullRom(v, k) {\n    let m = v.length - 1;\n    let f = m * k;\n    let i = Math.floor(f);\n    let fn = (p0, p1, p2, p3, t) => {\n      let v0 = (p2 - p0) * 0.5;\n      let v1 = (p3 - p1) * 0.5;\n      let t2 = t * t;\n      let t3 = t * t2;\n\n      return ((p1 - p2) * 2 + v0 + v1) * t3 + ((p2 - p1) * 3 - 2 * v0 - v1) * t2 + v0 * t + p1;\n    };\n\n    if (v[0] === v[m]) {\n      if (k < 0) {\n        i = Math.floor(f = m * (1 + k));\n      }\n\n      return fn(v[(i - 1 + m) % m], v[i], v[(i + 1) % m], v[(i + 2) % m], f - i);\n    } else {\n      if (k < 0) {\n        return v[0] - (fn(v[0], v[0], v[1], v[1], -f) - v[0]);\n      }\n\n      if (k > 1) {\n        return v[m] - (fn(v[m], v[m], v[m - 1], v[m - 1], f - m) - v[m]);\n      }\n\n      return fn(v[i ? i - 1 : 0], v[i], v[m < i + 1 ? m : i + 1], v[m < i + 2 ? m : i + 2], f - i);\n    }\n  }\n}\n\n/**\n * @private\n * @param {number} n\n *\n * @return {number}\n */\nInterpolation.__factorial = (function() {\n  let a = [1];\n\n  return function(n) {\n    if (a[n]) {\n      return a[n];\n    }\n\n    let s = n;\n\n    while (--n) {\n      s *= n;\n    }\n\n    a[n] = s;\n    return s;\n  };\n})();\n","/**\n * A tweening component.\n *\n * @cat animation\n * @unrestricted\n * @extends Component\n */\n\nclass Tween extends Component {\n  /**\n   * Creates new instance of Tween Component.\n   * @param {Object}        values            The values to tween.\n   * @param {number}        [duration=0.25]   Duraction in seconds.\n   * @param {Object|null}   [properties=null] Tween properties Object.\n   */\n  constructor(values, duration = 0.250, properties = null) {\n    super();\n\n    /**\n     * @private\n     * @dict\n     */\n    this.mValues = values;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mDuration = duration;\n\n    /**\n     * @private\n     * @dict\n     */\n    this.mProperties = properties;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mIsPlaying = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mIsPaused = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mStartTime = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mPausedTime = 0;\n\n    /**\n     * @private\n     * @dict\n     */\n    this.mValuesStart = {};\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mElapsed = 0;\n\n    /**\n     * @private\n     * @type {function (Array, number):number}\n     */\n    this.mInterpolation = Interpolation.linear;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mDelay = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mRepeatTimes = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mInitiated = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mStarted = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mReverse = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mRemoveOnComplete = true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mPlayOnAdded = true;\n\n   /**\n    * @private\n    * @type {function(number):number}\n    */\n    this.mEase = Ease.smootherStep;\n\n    // TODO: fix ESDOC issue\n    if (this.mProperties !== null) {\n      for (let f in this.mProperties) {\n        this[f] = /** @dict */ (this.mProperties[f]);\n      }\n    }\n  }\n\n  /**\n   * Returns active ease function.\n   *\n   * @return {function(number):number}\n   */\n  get ease() {\n    return this.mEase;\n  }\n\n  /**\n   * Sets easing function to use.\n   *\n   * @param {function(number):number} value The easing function.\n   * @return {void}\n   */\n  set ease(value) {\n    this.mEase = value;\n  }\n\n  /**\n   * Returns the interpolation algorithm.\n   *\n   * @return {function(Array, number):number}\n   */\n  get interpolation() {\n    return this.mInterpolation;\n  }\n\n  /**\n   * Sets the interpolation algorithm. Possible values Interpolation.linear, Interpolation.bezier, Interpolation.catmullRom or your custom function.\n   *\n   * @param {function(Array, number):number} value The interpolation function.\n   * @return {void}\n   */\n  set interpolation(value) {\n    this.mInterpolation = value;\n  }\n\n  /**\n   * Time elapsed since tween start in seconds.\n   *\n   * @return {number}\n   */\n  get elapsed() {\n    return this.mElapsed;\n  }\n\n  /**\n   * Returns amount of seconds to wait before tweening.\n   *\n   * @return {number}\n   */\n  get delay() {\n    return this.mDelay;\n  }\n\n  /**\n   * Set amount of seconds to wait before tweening.\n   *\n   * @param {number} value Seconds to wait.\n   * @return {void}\n   */\n  set delay(value) {\n    this.mDelay = value;\n  }\n\n  /**\n   * Returns if Tween Component should be automatically detached from owner GameObject after completation.\n   *\n   * @return {boolean}\n   */\n  get removeOnComplete() {\n    return this.mRemoveOnComplete;\n  }\n\n  /**\n   * Sets if Tween Component should be automatically detached from owner GameObject after completation.\n   *\n   * @param {boolean} value\n   * @return {void}\n   */\n  set removeOnComplete(value) {\n    this.mRemoveOnComplete = value;\n  }\n\n  /**\n   * Returns whether the tween should start playing automatically when added to the root.\n   * @return {boolean}\n   */\n  get playOnAdded() {\n    return this.mPlayOnAdded;\n  }\n\n  /**\n   * Sets whether the tween should start playing automatically when added to the root.\n   *\n   * @param {boolean} value\n   * @return {void}\n   */\n  set playOnAdded(value) {\n    this.mPlayOnAdded = value;\n  }\n\n  /**\n   * @private\n   * @param {number} t\n   *\n   * @return {void}\n   */\n  __start(t) {\n    this.mIsPlaying = true;\n    this.mStartTime = t + this.mDelay;\n  }\n\n  /**\n   * Starts tweening.\n   *\n   * @return {Tween} Returns this.\n   */\n  play() {\n    if (!this.mIsPaused) {\n      this.__start(Black.instance.uptime);\n    } else {\n      this.__resume();\n    }\n\n    return this;\n  }\n\n  /**\n   * Stops current tween.\n   *\n   * @return {Tween} Returns this.\n   */\n  stop() {\n    if (!this.mIsPlaying)\n      return this;\n\n    this.mIsPlaying = false;\n\n    return this;\n  }\n\n  /**\n   * Sets the values for tweening.\n   *\n   * @param {Object} values   Values to tween.\n   * @param {number} duration Duration in seconds.\n   *\n   * @return {Tween} Returns this.\n   */\n  to(values = {}, duration = 0.250) {\n    this.mValues = values;\n\n    this.mDuration = duration;\n\n    this.mInitiated = false;\n\n    return this;\n  }\n\n  /**\n   * Pauses current tween.\n   *\n   * @return {Tween} Returns this.\n   */\n  pause() {\n    if (!this.mIsPlaying)\n      return this;\n\n    this.mIsPaused = true;\n    this.mPausedTime = Black.instance.uptime;\n\n    return this;\n  }\n\n  /**\n   * @private\n   * @return {void} Description\n   */\n  __resume() {\n    if (!this.mIsPaused)\n      return;\n\n    this.mIsPaused = false;\n    this.mStartTime += Black.instance.uptime - this.mPausedTime;\n  }\n\n\n  /**\n   * @protected\n   * @return {void}\n   */\n  removeFromParent() {\n    if (this.mIsPlaying)\n      this.stop();\n\n    super.removeFromParent();\n  }\n\n  // /**\n  //  * @return {void}\n  //  */\n  // dispose() {\n  //   this.remove();\n  // }\n\n  /**\n   * Sets the number of times the tween wiil be repeated after first execution.\n   *\n   * @return {Tween} Returns this.\n   */\n  repeat(times) {\n    this.mRepeatTimes = times;\n\n    return this;\n  }\n\n  /**\n   * Sets if tween should be looped over.\n   *\n   * @return {Tween} Return this.\n   */\n  loop(value = true) {\n    this.mRepeatTimes = value ? Infinity : 0;\n    return this;\n  }\n\n   /**\n   * Enables/disables reversing of tween values.\n   *\n   * @return {Tween} Returns this.\n   */\n  reverse(value = true) {\n    this.mReverse = value;\n    return this;\n  }\n\n  /**\n   * Add specified tween object into the queue. The specified tween will be executed after completation of this tween,\n   *\n   * @return {Tween} Returns this.\n   */\n  chain(tween) {\n    if (!tween) {\n      return this;\n    }\n\n    this.mRemoveOnComplete = false;\n\n    this.on('complete', () => {\n      tween.play();\n    });\n\n    return this;\n  }\n\n  /**\n   * @override\n   * @protected\n   * @param  {GameObject} gameObject\n   * @return {void}\n   */\n  onAdded(gameObject) {\n    if (this.mPlayOnAdded) {\n      this.__start(Black.instance.uptime);\n    }\n  }\n\n  /**\n   * @private\n   * @param {number} t\n   *\n   * @return {void}\n   */\n  __update(t) {\n\n  }\n\n  /**\n   * Updates tween values.\n   *\n   * @param {Object} values The Object to get values from.\n   * @return {void}\n   */\n  set(values) {\n    this.mValues = values;\n\n    for (let f in this.mValues)\n      this.mValuesStart[f] = parseFloat(this.gameObject[f]);\n  }\n\n  /**\n   * @protected\n   * @override\n   * @param {number} dt\n   *\n   * @returns {void}\n   */\n  onPostUpdate(dt){\n    let t = Time.time;\n\n    if (t < this.mStartTime || !this.mIsPlaying || this.mIsPaused)\n      return;\n\n    // copy values only when starting tween...\n    // since values may change\n    if (this.mStarted === false) {\n      this.mStarted = true;\n      this.post('start', this.gameObject);\n\n      for (let f in this.mValues) {\n        if (!this.mInitiated && Array.isArray(this.mValues[f])) {\n          this.mValues[f] = [this.gameObject[f]].concat(this.mValues[f]);\n        }\n        this.mValuesStart[f] = parseFloat(this.gameObject[f]);\n      }\n\n      this.mInitiated = true;\n    }\n\n    this.mElapsed = (t - this.mStartTime) / this.mDuration;\n\n    if (this.mElapsed > 1)\n      this.mElapsed = 1;\n\n    let value = this.mEase(this.mElapsed);\n\n    for (let f in this.mValues) {\n      let start = /** @type {number} */ (this.mValuesStart[f]);\n      let end = /** @type {number|Array} */ (this.mValues[f]);\n\n      if (Array.isArray(end)) {\n        this.gameObject[f] = this.mInterpolation(end, value);\n      } else {\n        this.gameObject[f] = /** @type {number} */ (start + (end - start) * value);\n      }\n    }\n\n    this.post('update', this.gameObject);\n\n    if (this.mElapsed === 1) {\n      if (this.mRepeatTimes-- > 0) {\n        if (this.mReverse) {\n          for (let f in this.mValues) {\n            [this.mValues[f], this.mValuesStart[f]] = [this.mValuesStart[f], this.mValues[f]];\n          }\n        }\n\n        this.mStartTime = t + this.mDelay;\n\n        this.post('loop', this.gameObject);\n      } else {\n        this.mIsPlaying = false;\n        this.post('complete', this.gameObject);\n\n        if (this.mRemoveOnComplete) {\n          this.removeFromParent();\n        } else {\n          for (let f in this.mValues) {\n            this.mValuesStart[f] = this.mValues[f];\n          }\n\n          this.mStarted = false;\n        }\n      }\n    }\n  }\n}\n","/**\n * Holds details about sprite animation.\n *\n * @cat animation\n */\n\nclass AnimationInfo {\n  /**\n   * Creates an instance of Animation class\n   *\n   * @param {AnimationController}    controller  Animation controller\n   * @param {string}                 name        The name of animation\n   * @param {Array<Texture>}         frames      Array of Textures for this animation\n   * @param {number}                 [fps=14]    Frame rate\n   * @param {boolean}                [loop=true] Is animations should be looped\n   */\n  constructor(controller, name, frames, fps = 14, loop = true) {\n    Debug.assert(fps > 0, 'FPS must be greater than 0.');\n\n    /**\n     * @private\n     * @type {AnimationController}\n     */\n    this.mController = controller;\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.mName = name;\n\n    /**\n     * @private\n     * @type {Array<Texture>}\n     */\n    this.mFrames = frames;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mCurrentFrame = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mNextFrameAt = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mFPS = fps;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mFrameDuration = 1 / this.mFPS;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mLoop = loop;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mPaused = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mElapsed = 0;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mStopped = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mCompleted = false;\n  }\n\n  /**\n   * Plays animation. If Animation is completed, current frame is reset to 0.\n   *\n   * @return {Texture} Returns the current frame Texture.\n   */\n  play() {\n    if (this.mCompleted === true) {\n      this.mCurrentFrame = 0;\n      this.mElapsed = 0;\n    }\n\n    this.mPaused = false;\n    this.mStopped = false;\n    this.mCompleted = false;\n\n    this.mNextFrameAt = Black.instance.uptime + this.mFrameDuration - this.mElapsed;\n    this.mElapsed = 0;\n\n    return this.mFrames[this.mCurrentFrame];\n  }\n\n  /**\n   * Stops animation and resets the value of current frame.\n   *\n   * @return {void}\n   */\n  stop() {\n    this.mStopped = true;\n    this.mCurrentFrame = 0;\n  }\n\n  /**\n   * Pauses animation.\n   *\n   * @return {void}\n   */\n  pause() {\n    this.mPaused = true;\n    this.mElapsed = this.mNextFrameAt - Black.instance.uptime;\n  }\n\n  /**\n   * @private\n   * @param {number} dt\n   * @param {number} t\n   *\n   * @return {Texture|null}\n   */\n  __update(dt, t) {\n    if (t < this.mNextFrameAt || this.mPaused === true || this.mStopped === true || this.mCompleted === true)\n      return null;\n\n    this.mCurrentFrame++;\n\n    if (this.mCurrentFrame >= this.mFrames.length) {\n      if (this.mLoop === true) {\n        this.mCurrentFrame = 0;\n      } else {\n        this.mCurrentFrame = this.mFrames.length - 1;\n        this.mController.post('complete', this);\n        this.mCompleted = true;\n        return null;\n      }\n    }\n\n    this.mNextFrameAt = Black.instance.uptime + this.mFrameDuration;\n    let texture = this.mFrames[this.mCurrentFrame];\n    return texture;\n  }\n\n  /**\n   * Get/Set animation speed in frames per second.\n   *\n   * @return {number}\n   */\n  get fps() {\n    return this.mFPS;\n  }\n\n  /**\n   * @ignore\n   * @param {number} value\n   * @return {void}\n   */\n  set fps(value) {\n    Debug.assert(value > 0, 'FPS must be greater than 0.');\n\n    this.mFPS = value;\n    this.mFrameDuration = 1 / this.mFPS;\n\n    // update next frame start time\n    let diff = this.mNextFrameAt - Black.instance.uptime;\n    this.mNextFrameAt += diff;\n  }\n\n  /**\n   * Get/Set if animation should be looped.\n   * @return {boolean}\n   */\n  get loop() {\n    return this.mLoop;\n  }\n\n  /**\n   * @ignore\n   * @param {boolean} value\n   * @return {void}\n   */\n  set loop(value) {\n    this.mLoop = value;\n  }\n\n  /**\n   * Gets array of Texture.\n   *\n   * @return {Array<Texture>}\n   */\n  get frames() {\n    return this.mFrames;\n  }\n\n  /**\n   * Returns true if Animation is playing (neither stopped nor paused).\n   *\n   * @return {boolean}\n   */\n  get isPlaying() {\n    return this.mPaused === false && this.mStopped === false;\n  }\n\n  /**\n   * Returns true if animation is completed.\n   *\n   * @return {boolean}\n   */\n  get isComplete() {\n    return this.mCompleted;\n  }\n\n  /**\n   * Returns name of this animation.\n   *\n   * @return {string}\n   */\n  get name() {\n    return this.mName;\n  }\n}\n","/**\n * A Component which allows to play sprite animations.\n *\n * @cat animation\n * @extends Component\n */\n\nclass AnimationController extends Component {\n  /**\n   * Creates an instance of AnimationController\n   */\n  constructor() {\n    super();\n\n    /**\n     * @private\n     * @type {Object<string, AnimationInfo>}\n     */\n    this.mAnimations = {};\n\n    /**\n     * @private\n     * @type {AnimationInfo|null}\n     */\n    this.mCurrentAnim = null;\n  }\n\n  /**\n   * Returns the Animation object that exists with the specified name.\n   *\n   * @param {string} name The name of the child to return.\n   * @returns {AnimationInfo} Returns the Animation object that exists with the specified name.\n   */\n  getByName(name){\n    Debug.assert(name !== null, 'Animation must be set first.');\n    Debug.assert(this.mAnimations.hasOwnProperty(name), 'Animation must be set first.');\n\n    return this.mAnimations[name];\n  }\n\n  /**\n   * Removes Animation object that exists with the specified name. If animation is playing right now it will be stopped.\n   *\n   * @param {string} name The name of the animation to remove.\n   * @returns {void}\n   */\n  remove(name) {\n    Debug.assert(name !== null, 'Animation name shall not be null.');\n    Debug.assert(this.mAnimations.hasOwnProperty(name) === true, 'Unable to find animation.');\n\n    let anim = this.mAnimations[name];\n\n    if (this.mCurrentAnim !== null && this.mCurrentAnim === anim) {\n      this.stop();\n      delete this.mAnimations[name];\n    }\n\n    this.mCurrentAnim = null;\n  }\n\n  /**\n   * Add the Animation object into the list of animations. If animation with given name already exists exception will be thrown.\n   *\n   * @param {string}          name        The name of animation to update\n   * @param {Array<Texture>}  textures    Array of Textures\n   * @param {number}          [fps=14]    Frames Per Second\n   * @param {boolean}         [loop=true] Indicated if animation should be started over at the end.\n   *\n   * @return {AnimationInfo} The newly created Animation Object.\n   */\n  add(name, textures, fps = 14, loop = true) {\n    Debug.assert(textures.length > 0, 'Animation cannot be empty.');\n    Debug.assert(fps > 0, 'FPS must be greater than 0.');\n    Debug.assert(this.mAnimations.hasOwnProperty(name) == false, 'Animatation with same name alredy exists');\n\n    let anim = new AnimationInfo(this, name, textures, fps, loop);\n    this.mAnimations[name] = anim;\n\n    return anim;\n  }\n\n  /**\n   * Plays animation that exists with the specified name.\n   *\n   * @param {string} name The name of animation to play.\n   * @return {void}\n   */\n  play(name) {\n    Debug.assert(this.mAnimations.hasOwnProperty(name), 'Animation must be set first.');\n\n    this.mCurrentAnim = this.mAnimations[name];\n\n    let texture = this.mCurrentAnim.play();\n\n    let sprite = /** @type {Sprite} */ (this.gameObject);\n    if (sprite === null)\n      return;\n\n    if (texture !== null)\n      sprite.texture = texture;\n  }\n\n  /**\n   * Stops active animation. If no animations are playing at the moment nothing will happen.\n   *\n   * @return {void}\n   */\n  stop() {\n    if (this.mCurrentAnim === null)\n      return;\n\n    this.mCurrentAnim.stop();\n  }\n\n  /**\n   * Pauses active animation.\n   * @return {void}\n   */\n  pause() {\n    if (this.mCurrentAnim === null)\n      return;\n\n    this.mCurrentAnim.pause();\n  }\n\n  /**\n   * @ignore\n   * @override\n   * @protected\n   * @param  {number} dt\n   * @return {void}\n   */\n  onPostUpdate(dt) {\n    if (this.mCurrentAnim === null)\n      return;\n\n    // TODO: replace with time.time\n    let newTexture = this.mCurrentAnim.__update(dt, Black.instance.uptime);\n    if (newTexture === null)\n      return;\n\n    let sprite = /** @type {Sprite} */ (this.gameObject);\n    sprite.texture = newTexture;\n  }\n\n  /**\n   * Returns current active animation.\n   *\n   * @returns {AnimationInfo|null}\n   */\n  get currentAnimation() {\n    return this.mCurrentAnim;\n  }\n}\n","/**\n * THE BLACK ENGINE ITSELF.\n *\n * @extends MessageDispatcher\n */\n\nclass Black extends MessageDispatcher {\n\n  /**\n   * Creates a new Black instance.\n   * @param {string}                          containerElementId The id of an DOM element.\n   * @param {function(new: GameObject)}       rootClass          Type name of an GameObject to start execution from.\n   * @param {function(new: VideoNullDriver)}  [videoDriverClass] Type name of an VideoDriver (VideoNullDriver, DOMDriver or CanvasDriver)\n   */\n  constructor(containerElementId, rootClass, videoDriverClass) {\n    super();\n\n    // Dirty GCC workaround\n    window['Black'] = {};\n    window['Black']['instance'] = this;\n\n    console.log('%c                         >>> BLACK <<<                         ', 'background: #000; color: #fff;');\n\n    /**\n     * @private\n     * @type {string}\n     */\n    this.mContainerElementId = containerElementId;\n\n    /**\n     * @private\n     * @type {HTMLElement}\n     */\n    this.mContainerElement = /** @type {!HTMLElement} */ (document.getElementById(this.mContainerElementId));\n\n    if (!this.mContainerElement)\n      throw new Error('Container element was not found');\n\n    /**\n     * @private\n     * @type {function(new: VideoNullDriver)}\n     */\n    this.mVideoDriverClass = videoDriverClass;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mStageWidth = this.mContainerElement.clientWidth;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mStageHeight = this.mContainerElement.clientHeight;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mSimulationTimestep = 1000 / 60;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mUptime = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mFrameAccum = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mLastFrameTimeMs = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mCurrentTime = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mFPS = 60;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mLastFpsUpdate = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mFramesThisSecond = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mNumUpdateSteps = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mMinFrameDelay = 0;\n\n    /**\n     * @private\n     * @type {Array<System>}\n     */\n    this.mSystems = [];\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mIsRunning = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mIsStarted = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mIsPanic = false;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mLastFrameUpdateTime = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mLastFrameRenderTime = 0;\n\n    /**\n     * @private\n     * @type {number}\n     */\n    this.mRAFHandle = -1; // not sure\n\n    /**\n     * @private\n     * @type {Viewport}\n     */\n    this.mViewport = null;\n\n    /**\n     * @private\n     * @type {VideoNullDriver}\n     */\n    this.mVideo = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mPaused = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mUnpausing = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mPauseOnHide = true;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mPauseOnBlur = true;\n\n    /**\n     * @private\n     * @type {Object<string, Array>}\n     */\n    this.mTagCache = {};\n\n    /**\n     * @private\n     * @type {function(new: GameObject)|null}\n     */\n    this.mRootClass = rootClass;\n\n    /**\n     * @private\n     * @type {GameObject|null}\n     */\n    this.mRoot = null;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mEnableFixedTimeStep = false;\n\n    /**\n     * @private\n     * @type {boolean}\n     */\n    this.mWasStopped = false;\n  }\n\n  /**\n   * Pauses all engine update logic. Note: RAF is not going to be paused and will work in background.\n   *\n   * @return {void}\n   */\n  pause() {\n    this.mPaused = true;\n  }\n\n  /**\n   * Resumes update execution.\n   *\n   * @return {void}\n   */\n  resume() {\n    this.mUnpausing = true;\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  __bootViewport() {\n    this.mViewport = new Viewport(this.mContainerElement);\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  __bootSystems() {\n    this.addSystem(new Input());\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  __bootStage() {\n    window.onblur = event => this.__onVisbilityChange(event);\n    window.onfocus = event => this.__onVisbilityChange(event);\n    window.onpagehide = event => this.__onVisbilityChange(event);\n    window.onpageshow = event => this.__onVisbilityChange(event);\n\n    if (document.hidden && this.mPauseOnHide === true)\n      this.mPaused = true;\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  __onVisbilityChange(event) {\n    let type = event.type;\n\n    if (type === 'blur' && this.mPauseOnBlur === true)\n      this.mPaused = true;\n    else if (type === 'pagehide' && this.mPauseOnHide === true)\n      this.mPaused = true;\n    else if (type === 'focus' || type === 'pageshow') {\n      if (document.hidden === false)\n        this.mUnpausing = true;\n    }\n  }\n\n  /**\n   * Adds a given system to the execution list.\n   *\n   * @param  {System} system The System object you want to add.\n   * @return {System}\n   */\n  addSystem(system) {\n    this.mSystems.push(system);\n    return system;\n  }\n\n  /**\n   * Removes the given system from execution list.\n   *\n   * @param {System} system The System instance to remove.\n   * @return {System|null}\n   */\n  removeSystem(system) {\n    // TODO: remove system on next frame\n    var ix = this.mSystems.indexOf(system);\n    if (ix === -1)\n      return null;\n\n    this.mSystems.splice(ix, 1);\n    return system;\n  }\n\n  /**\n   * @private\n   * @returns {void}\n   */\n  __bootVideo() {\n    this.mVideo = new this.mVideoDriverClass(this.mContainerElement, this.mStageWidth, this.mStageHeight);\n  }\n\n  /**\n   * Boots up the engine!\n   *\n   * @return {void}\n   */\n  start() {\n    if (this.mWasStopped === true) {\n      Debug.error('Black engine cannot be re-started.');\n      return;\n    }\n\n    this.constructor.instance = this;\n\n    if (this.mIsStarted === true)\n      return;\n\n    this.__bootViewport();\n    this.__bootSystems();\n    this.__bootVideo();\n    this.__bootStage();\n\n    this.mRoot = new this.mRootClass();\n    this.mRoot.name = 'root';\n    this.mRoot.mAdded = true; // why are not added actually?\n    this.mRoot.onAdded();\n\n    const self = this;\n\n    this.mIsStarted = true;\n    this.mVideo.start();\n\n    this.mRAFHandle = requestAnimationFrame(function (timestamp) {\n      // TODO: do first update here\n      self.mIsRunning = true;\n\n      self.mLastFrameTimeMs = timestamp;\n      self.mLastFpsUpdate = timestamp;\n      self.mFramesThisSecond = 0;\n\n      // Start the main loop.\n      self.mRAFHandle = requestAnimationFrame((x) => {\n        self.__update(x);\n      });\n    });\n\n    // TODO: show only when needed, eg required by any system\n    if (this.mEnableFixedTimeStep === false)\n      Debug.info('Fixed time-step is disabled, some systems may not work.');\n  }\n\n  /**\n   * Stops any executions, destroys resources and scene.\n   *\n   * @return {void}\n   */\n  stop() {\n    this.mIsStarted = false;\n    this.mIsRunning = false;\n    cancelAnimationFrame(this.mRAFHandle);\n\n    console.log('%c                        <<< BUY BUY >>>                        ', 'background: #000; color: #fff;');\n  }\n\n  /**\n   * @private\n   * @param {number} timestamp\n   *\n   * @return {void}\n   */\n  __update(timestamp) {\n    // TODO: this method seems to be totaly broken. maxAllowedFPS is not working correctly\n    this.constructor.instance = this;\n\n    const self = this;\n\n    if (this.mPaused === true && this.mUnpausing === true) {\n      this.mUnpausing = this.mPaused = false;\n\n      this.mLastFrameTimeMs = 0;\n      this.mLastFpsUpdate = timestamp;\n      this.mLastFrameTimeMs = timestamp;\n      this.mCurrentTime = 0; // same as first update\n      this.mFrameAccum = 0;\n    }\n\n    if (timestamp < this.mLastFrameTimeMs + this.mMinFrameDelay) {\n      this.mRAFHandle = window.requestAnimationFrame(this.__update.bind(this));\n      return;\n    }\n\n    if (this.mPaused === false) {\n      this.mFrameAccum += (timestamp - this.mLastFrameTimeMs);\n      this.mLastFrameTimeMs = timestamp;\n\n      // BEGIN\n      if (timestamp > this.mLastFpsUpdate + 1000) {\n        this.mFPS = this.mFramesThisSecond;\n\n        this.mLastFpsUpdate = timestamp;\n        this.mFramesThisSecond = 0;\n      }\n      this.mFramesThisSecond++;\n\n      this.mNumUpdateSteps = 0;\n\n      // fix first update\n      if (this.mCurrentTime === 0)\n        this.mCurrentTime = timestamp - this.mMinFrameDelay;\n\n      const dt = Time.scale * ((timestamp - this.mCurrentTime) * 0.001);\n      this.mCurrentTime = timestamp;\n      Time.mDeltaTime = dt;\n\n      if (this.mEnableFixedTimeStep === true) {\n        while (this.mFrameAccum >= this.mSimulationTimestep) {\n          this.__internalFixedUpdate(this.mSimulationTimestep * 0.001);\n\n          this.mFrameAccum -= this.mSimulationTimestep;\n\n          if (++this.mNumUpdateSteps >= (60 * 3)) { // 3 seconds window\n            console.log('[BLACK]: Not enough time to calculate update logic.');\n            this.mIsPanic = true;\n            break;\n          }\n        }\n      }\n\n      this.__internalUpdate(dt);\n      this.__internalPostUpdate(dt);\n\n      this.mVideo.beginFrame();\n      this.mRoot.__render(this.mVideo, this.mUptime, 1, BlendMode.AUTO);\n      this.mVideo.endFrame();\n\n      // TODO: remove uptime\n      this.mUptime += dt;\n      Time.mTime = this.mUptime;\n\n      this.mIsPanic = false;\n    }\n\n    this.mRAFHandle = window.requestAnimationFrame(this.__update.bind(this));\n  }\n\n  /**\n   * @private\n   * @param {number} dt\n   * @return {void}\n   */\n  __internalFixedUpdate(dt) {\n    for (let i = 0; i < this.mSystems.length; i++)\n      this.mSystems[i].onFixedUpdate(dt);\n\n    this.mRoot.__fixedUpdate(dt);\n  }\n\n  /**\n   * @private\n   * @param {number} dt\n   * @return {void}\n   */\n  __internalUpdate(dt) {\n    for (let i = 0; i < this.mSystems.length; i++)\n      this.mSystems[i].onUpdate(dt, this.mUptime);\n\n    this.mRoot.__update(dt);\n  }\n\n  /**\n   * @private\n   * @param {number} dt\n   * @return {void}\n   */\n  __internalPostUpdate(dt) {\n    for (let i = 0; i < this.mSystems.length; i++)\n      this.mSystems[i].onPostUpdate(dt, this.mUptime);\n\n    this.mRoot.__postUpdate(dt);\n  }\n\n  /**\n   * Returns the root GameObject.\n   * @return {GameObject}\n   */\n  get root() {\n    return this.mRoot;\n  }\n\n  /**\n   * Returns current video driver instance.\n   * @return {VideoNullDriver}\n   */\n  get video() {\n    return this.mVideo;\n  }\n\n  /**\n   * If `enableFixedTimeStep` is set to `true` returns number of milliseconds fixed-time-step will run over.\n   * @return {number}\n   */\n  get simulationTimestep() {\n    return this.mSimulationTimestep;\n  }\n\n  /**\n   * Sets the number of milliseconds for fixed-time-step to run over.\n   *\n   * @param {number} timestep\n   * @return {void}\n   */\n  set simulationTimestep(timestep) {\n    this.mSimulationTimestep = timestep;\n  }\n\n  /**\n   * Returns current frame rate\n   * @return {number}\n   */\n  get FPS() {\n    return this.mFPS;\n  }\n\n  /**\n   * Returns max number of updates engine must do in a second.\n   * @return {number}\n   */\n  get maxAllowedFPS() {\n    return 1000 / this.mMinFrameDelay;\n  }\n\n  /**\n   * maxAllowedFPS - Sets the number of update engine must do per second.\n   * @param {number} fps The max allowed FPS. If less then zero engine will be stopped.\n   * @return {void}\n   */\n  set maxAllowedFPS(fps) {\n    if (fps <= 0)\n      this.stop();\n    else\n      this.mMinFrameDelay = 1000 / fps;\n  }\n\n  /**\n   * Returns the current viewport instance. Used to get size of a game screen, or listen for resize messages.\n   * @return {Viewport}\n   */\n  get viewport() {\n    return this.mViewport;\n  }\n\n  /**\n   * Retruns the DOM element the engine runs in.\n   * @return {Element}\n   */\n  get containerElement() {\n    return this.mContainerElement;\n  }\n\n  /**\n   * Returns amount of seconds since engine start.\n   * @return {number}\n   */\n  get uptime() {\n    return this.mUptime;\n  }\n\n  /**\n   * @protected\n   * @param {GameObject} child\n   * @param {string|null} oldTag\n   * @param {string|null} newTag\n   *\n   * @return {void}\n   */\n  onTagUpdated(child, oldTag, newTag) {\n    if (oldTag !== null) {\n      let arr = this.mTagCache[oldTag];\n      arr.splice(arr.indexOf(child), 1);\n\n      if (arr.length === 0)\n        delete this.mTagCache[oldTag];\n    }\n\n    if (newTag !== null) {\n      if (this.mTagCache.hasOwnProperty(newTag) === false)\n        this.mTagCache[newTag] = [];\n\n      this.mTagCache[newTag].push(child);\n    }\n  }\n\n  /**\n   * @protected\n   * @param  {GameObject} child\n   * @return {void}\n   */\n  onChildrenAdded(child) {\n    for (let i = 0; i < this.mSystems.length; i++)\n      this.mSystems[i].onChildrenAdded(child);\n\n    GameObject.forEach(child, (x) => {\n      if (x.mAdded === true)\n        return;\n\n      this.onTagUpdated(x, null, x.mTag);\n\n      x.mAdded = true;\n      x.onAdded();\n\n      for (let i = 0; i < x.mComponents.length; i++) {\n        let c = x.mComponents[i];\n\n        if (c.mAdded === true)\n          continue;\n\n        c.mAdded = true;\n        c.onAdded(x);\n      }\n    });\n  }\n\n  /**\n   * @protected\n   * @param  {GameObject} child\n   * @return {void}\n   */\n  onChildrenRemoved(child) {\n    for (let i = 0; i < this.mSystems.length; i++)\n      this.mSystems[i].onChildrenRemoved(child);\n\n    GameObject.forEach(child, (x) => {\n      if (x.mAdded === true) {\n        this.onTagUpdated(x, x.mTag, null);\n\n        x.mAdded = false;\n        x.onRemoved();\n\n        for (let i = 0; i < x.mComponents.length; i++) {\n          let c = x.mComponents[i];\n\n          if (c.mAdded === false)\n            continue;\n\n          c.mAdded = false;\n          c.onRemoved(x);\n        }\n      }\n    });\n  }\n\n  /**\n   * @protected\n   * @param  {GameObject} child\n   * @param  {Component} component\n   * @return {void}\n   */\n  onComponentAdded(child, component) {\n    for (let i = 0; i < this.mSystems.length; i++)\n      this.mSystems[i].onComponentAdded(child, component);\n\n    if (component.mAdded === true)\n      return;\n\n    component.mAdded = true;\n    component.onAdded(child);\n  }\n\n  /**\n   * @param  {GameObject} child\n   * @param  {Component} component\n   * @return {void}\n   */\n  onComponentRemoved(child, component) {\n    for (let i = 0; i < this.mSystems.length; i++)\n      this.mSystems[i].onComponentRemoved(child, component);\n\n    if (component.mAdded === false)\n      return;\n\n    component.mAdded = false;\n    component.onRemoved(child);\n  }\n\n  /**\n   * Returns if engine should be automatically paused when window is hidden.\n   * @return {boolean}\n   */\n  get pauseOnHide() {\n    return this.mPauseOnHide;\n  }\n\n  /**\n   * Sets if engine should be automatically paused when window is hidden.\n   * @param {boolean} value\n   * @return {void}\n   */\n  set pauseOnHide(value) {\n    this.mPauseOnHide = value;\n  }\n\n  /**\n   * Returns if engine should be automatically paused when container element is blured.\n   * @return {boolean}\n   */\n  get pauseOnBlur() {\n    return this.mPauseOnBlur;\n  }\n\n  /**\n   * Sets if engine should be automatically paused when container element is blured.\n   * @param {boolean} value\n   * @return {void}\n   */\n  set pauseOnBlur(value) {\n    this.mPauseOnBlur = value;\n  }\n\n\n  /**\n   * Returns if fixed-time-step update should happen. When disabled the physics system and other systems may not work.\n   * @return {boolean}\n   */\n  get enableFixedTimeStep() {\n    return this.mEnableFixedTimeStep;\n  }\n\n\n  /**\n   * Returns True if engine is paused.\n   *\n   * @returns {boolean}\n   */\n  get isPaused() {\n    return this.mPaused;\n  }\n\n  /**\n   * Sets if fixed-time-step update should happen. When disabled the physics system and other systems may not work.\n   *\n   * @param {boolean} value\n   * @return {void}\n   */\n  set enableFixedTimeStep(value) {\n    this.mEnableFixedTimeStep = value;\n  }\n\n  dispose() {\n    // todo: call dispose on eveyrthing!\n  }\n\n  get magic() {\n    return Math.random();\n  }\n}"]}